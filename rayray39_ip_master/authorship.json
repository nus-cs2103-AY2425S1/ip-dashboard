[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"    mainClass.set(\"janet.Launcher\")","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"    archiveBaseName \u003d \"janet\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rayray39":18,"-":39}},{"path":"src/main/java/janet/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":" * Represents the types of commands that the user has.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"public enum CommandType {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BYE, LIST, FIND, VIEW","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rayray39":8}},{"path":"src/main/java/janet/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":" * Represents a Deadline, with a description, symbol and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"public class Deadline extends ScheduledTask {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    Deadline(String inputLine) throws JanetException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        // inside the program this will be called","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        this(createDeadlineCommand(inputLine).getDescription(),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"                createDeadlineCommand(inputLine).getSymbol(),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"                createDeadlineCommand(inputLine).getDueDateInDateTime());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    Deadline(String description, String symbol, LocalDateTime dueDate) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"        // this is used inside the static method: createDeadlineCommand","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"        super(description, symbol, dueDate.toLocalDate());    // dueDate is the scheduledDate","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"     * Returns a String array based on user\u0027s commands.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"     * First element \u003d a String of janet.Deadline\u0027s description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"     * Second element \u003d a String of janet.Deadline\u0027s dueDate (MMM dd yyyy hh:mm a).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"     * input date and time format must be \"yyyy-mm-dd HH:MM\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"     * @return a String[], where first elem \u003d janet.Deadline.description, second elem \u003d janet.Deadline.dueDate.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"    public static String[] findDeadlineDetails(String[] commandDetails) throws JanetException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"        int indexOfBy \u003d 0;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"        // first word in commandDetails must be deadline, so start from the i\u003d1 word","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"        for (int i \u003d 1; i \u003c commandDetails.length; i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/by\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"                indexOfBy \u003d i;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"        if (indexOfBy \u003d\u003d 0) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"WHOOPS! Missing/Wrong keywords for creating deadline...\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"        // get description of janet.Deadline","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(commandDetails, 1, indexOfBy);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"        String dueDate \u003d null;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"            // converts due date from (yyyy-MM-dd) to (MM dd yyyy)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"            // converts time from (hh:mm) to (hh:mm a)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"            dueDate \u003d ScheduledTask.DateAndTimeFormatter(commandDetails[commandDetails.length - 2],","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"                    commandDetails[commandDetails.length - 1]);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"WHOOPS! Ensure that the due date is in the format: yyyy-MM-dd hh:mm (24hr)\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"        return new String[]{description, dueDate};","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"     * Returns a Deadline object that was created from the user\u0027s command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"     * Based on the description and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"     * @param inputLine User\u0027s command that was typed into the command line.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"     * @return new Deadline object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"    public static Deadline createDeadlineCommand(String inputLine) throws JanetException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"        String[] commandDetails \u003d inputLine.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"        String[] deadlineDetails \u003d findDeadlineDetails(commandDetails);     // (description, MMM dd yyyy hh:mm a)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"        String dateAndTimeString \u003d deadlineDetails[1];    // MMM dd yyyy hh:mm a","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"        DateTimeFormatter stringToDateTime \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"        LocalDateTime dateAndTime \u003d LocalDateTime.parse(dateAndTimeString, stringToDateTime);  // convert String to LocalDateTime","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"        return new Deadline(deadlineDetails[0], \"D\", dateAndTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s dueDate (deadline)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"    public String getDueDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"        String time \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"HH:mm a\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"        String date \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"        return date + \" \" + time;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"    public LocalDateTime getDueDateInDateTime() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"        return this.dueDate;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"        return super.toString() + \" \" + String.format(\"(by: %s)\", this.getDueDate());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":99}},{"path":"src/main/java/janet/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"    DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"    private void flip() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"        this.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"     * Returns a DialogBox, containing a string of text and an image,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"     * with a PAPAYAWHIP color background","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"     * @param s A string of text to display inside the DialogBox","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"     * @param i An image to be rendered inside the DialogBox","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"     * @return A DialogBox object","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"        // returns a new dialogBox with the String message and the image of the user","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"        DialogBox user \u003d new DialogBox(s, i);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"        user.setColor(Color.PAPAYAWHIP);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"        return user;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"     * Returns a flipped DialogBox, containing a string of text and an image,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"     * with a ALICEBLUE color background","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"     * @param s A string of text to display inside the DialogBox","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"     * @param i An image to be rendered inside the DialogBox","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"     * @return A DialogBox object","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"    public static DialogBox getJanetDialog(String s, Image i) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"        // returns a new FLIPPED dialogBox with the String message and the image of Duke","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"        var db \u003d new DialogBox(s, i);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"        db.setColor(Color.ALICEBLUE);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"        return db;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"     * Sets the background color of the dialogBox","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"     * @param color The background color chosen for the dialogBox","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"    public void setColor(Color color) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"        BackgroundFill bFill \u003d new BackgroundFill(color, CornerRadii.EMPTY, Insets.EMPTY);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"        Background background \u003d new Background(bFill);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"        this.setBackground(background);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"rayray39":92}},{"path":"src/main/java/janet/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":" * Represents an Event, with a description, symbol, start date and end date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"public class Event extends ScheduledTask {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    private final LocalDateTime endDate;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"    Event(String inputLine) throws JanetException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        // inside the program this will be called","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"        this(createEventCommand(inputLine).getDescription(),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"                createEventCommand(inputLine).getSymbol(),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"                createEventCommand(inputLine).getStartDateAndTime(),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"                createEventCommand(inputLine).getEndDateAndTime());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    Event(String description, String symbol, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"        // this is used inside the static method: createEventCommand","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"        super(description, symbol, startDate.toLocalDate());  // startDate is the scheduledDate.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"     * Returns a String array based on user\u0027s commands.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"     * First element \u003d a String of janet.Event\u0027s description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"     * Second element \u003d a String of janet.Event\u0027s startDate (MMM dd yyyy hh:mm a).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"     * Third element \u003d a String of janet.Event\u0027s endDate (MMM dd yyyy hh:mm a).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"     * input date and time format must be \"yyyy-mm-dd HH:MM\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"     * @return a String[], where first elem \u003d janet.Event.description, second elem \u003d janet.Event.startDate, third elem \u003d janet.Event.endDate.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"    public static String[] findEventDetails(String[] commandDetails) throws JanetException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"        int indexOfFrom \u003d 0;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"        int indexOfTo \u003d 0;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"        // first word in commandDetails must be event, so start from i\u003d1 word","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"        for (int i \u003d 1; i \u003c commandDetails.length; i++) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/from\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"                indexOfFrom \u003d i;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/to\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"                indexOfTo \u003d i;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"        if (indexOfFrom \u003d\u003d 0 || indexOfTo \u003d\u003d 0) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"WHOOPS! Missing/Wrong keywords for creating event...\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        // get the description","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"        String description \u003d null;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"        String startDateAndTime \u003d null;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"        String endDateAndTime \u003d null;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"            String[] descriptionArray \u003d Arrays.copyOfRange(commandDetails, 1, indexOfFrom);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"            description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"            // converts start date from (yyyy-MM-dd) to (MM dd yyyy)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"            // converts start time from (hh:mm) to (hh:mm a)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"            startDateAndTime \u003d ScheduledTask.DateAndTimeFormatter(commandDetails[indexOfFrom + 1],","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"                    commandDetails[indexOfFrom + 2]);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"            // converts end date from (yyyy-MM-dd) to (MM dd yyyy)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"            // converts end time from (hh:mm) to (hh:mm a)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"            endDateAndTime \u003d ScheduledTask.DateAndTimeFormatter(commandDetails[indexOfTo + 1],","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"                    commandDetails[indexOfTo + 2]);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"WHOOPS! Ensure that the start \u0026 end date are in the format: yyyy-MM-dd hh:mm (24hr)\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"        return new String[]{description, startDateAndTime, endDateAndTime};","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"     * Returns an Event object that was created from the user\u0027s command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"     * Based on the description, start date and end date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"     * @param inputLine User\u0027s command that was typed into the command line.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"     * @return new Event object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"    public static Event createEventCommand(String inputLine) throws JanetException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"        String[] commandDetails \u003d inputLine.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"        String[] eventDetails \u003d findEventDetails(commandDetails);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"        DateTimeFormatter stringToDateTime \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");    // format the date and time","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"        String startDateAndTimeString \u003d eventDetails[1];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"        LocalDateTime startDateAndTime \u003d LocalDateTime.parse(startDateAndTimeString, stringToDateTime); // convert String to LocalDateTime","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"        String endDateAndTimeString \u003d eventDetails[2];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"        LocalDateTime endDateAndTime \u003d LocalDateTime.parse(endDateAndTimeString, stringToDateTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"        return new Event(eventDetails[0], \"E\", startDateAndTime, endDateAndTime);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s startDate","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"    public String getStartDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"        String time \u003d this.startDate.format(DateTimeFormatter.ofPattern(\"HH:mm a\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"        String date \u003d this.startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"        return date + \" \" + time;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s endDate","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"    public String getEndDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"        String time \u003d this.endDate.format(DateTimeFormatter.ofPattern(\"HH:mm a\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"        String date \u003d this.endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"        return date + \" \" + time;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rayray39"},"content":"    public LocalDateTime getStartDateAndTime() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rayray39"},"content":"        return this.startDate;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rayray39"},"content":"    public LocalDateTime getEndDateAndTime() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rayray39"},"content":"        return this.endDate;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rayray39"},"content":"        return super.toString() + \" \" + String.format(\"(from: %s to: %s)\", this.getStartDate(), this.getEndDate());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":130}},{"path":"src/main/java/janet/Janet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":" * Represents the entry point of Janet.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"public class Janet {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    Janet(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"     * Returns the response based on the user input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"     * @param input A string input from the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * @return A string message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        return runProgram(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"     * Returns a string message to welcome the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"     * If \u0027janet.txt\u0027 does not exist yet, an additional loading error message will be appended.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"     * @return A string message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"    public String startMessage() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"        // if janet.txt cannot be found, ui.showLoadingError() is appended to the message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"        String message \u003d ui.showWelcome();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"            tasks \u003d new TaskList(storage.textFileToArrayList());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"        } catch (JanetException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"            message +\u003d ui.showLoadingError();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"        return message;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"     * Returns the appropriate string message based on the user\u0027s command.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"     * @param userCommand A string input from the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"     * @return A string response based on string input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"    public String runProgram(String userCommand) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        String[] commandDetails \u003d Parser.getCommandDetails(userCommand);    // converts user input into a String array","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"            Parser.userInputChecker(commandDetails, tasks.getNumberOfTasks());    // runs all the checks to verify user input","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"            CommandType commandType \u003d Parser.getCommand(commandDetails);    // get the CommandType","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"            switch (commandType) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"            case BYE:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.exitMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"            case LIST:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showTasks(tasks);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"            case MARK:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"                String markedResult \u003d tasks.markAsDone(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showMarkedMessage(markedResult, tasks.getTask(Integer.parseInt(commandDetails[1]) - 1));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"            case UNMARK:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"                String unmarkResult \u003d tasks.unmark(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showUnmarkedMessage(unmarkResult, tasks.getTask(Integer.parseInt(commandDetails[1]) - 1));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"            case DELETE:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showDeleteTaskMessage(tasks.getTask(Integer.parseInt(commandDetails[1]) - 1),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"                        tasks.getNumberOfTasks() - 1);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"                tasks.deleteTask(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"            case TODO:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"                Task todo \u003d new ToDo(userCommand);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"                tasks.addTaskToList(todo);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showSuccessfulTaskAddition(todo, tasks.getNumberOfTasks());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"            case DEADLINE:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"                Task deadline \u003d new Deadline(userCommand);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"                tasks.addTaskToList(deadline);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showSuccessfulTaskAddition(deadline, tasks.getNumberOfTasks());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"            case EVENT:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"                Task event \u003d new Event(userCommand);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"                tasks.addTaskToList(event);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showSuccessfulTaskAddition(event, tasks.getNumberOfTasks());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"            case FIND:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"                String[] keywords \u003d Arrays.copyOfRange(commandDetails, 1, commandDetails.length);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showFindMessage(tasks.findTasks(keywords));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"            case VIEW:","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"                String dateAndTime \u003d commandDetails[1];","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"                response \u003d ui.showScheduledTasksMessage(tasks.viewScheduledTasks(dateAndTime), dateAndTime);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"            default:","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"Huge glitch detected! Press the big red button to reset Janet!\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"        } catch (JanetException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"            response  \u003d e.getMessage();     // returns a message for any invalid user command","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"            storage.saveToJanetTextFile(tasks.getListOfTasks());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"        } catch (JanetException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"            response \u003d ui.showSavingError();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"        return response;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":117}},{"path":"src/main/java/janet/JanetException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":" * Represents an exception that has unique messages to Janet.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"public class JanetException extends Exception {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"    public JanetException(String errorMessage) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"        super(errorMessage);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rayray39":11}},{"path":"src/main/java/janet/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"public class Launcher {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"rayray39":9}},{"path":"src/main/java/janet/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    private Janet janet \u003d new Janet(\"janet.txt\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJanet(janet);  // inject the Janet instance","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"            stage.show();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"rayray39":30}},{"path":"src/main/java/janet/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    private Janet janet;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    // Images","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/suguru_geto.jpg\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"    private Image janetImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/janet.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"    /** Injects the Janet instance */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"    public void setJanet(Janet j) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"        janet \u003d j;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"                DialogBox.getJanetDialog(janet.startMessage(), janetImage)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"        );  // displays welcome message upon running the GUI","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Janet\u0027s reply and then appends them to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"        String input \u003d userInput.getText();             // user\u0027s input","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        String response \u003d janet.getResponse(input);     // response from janet","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"                DialogBox.getJanetDialog(response, janetImage)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"        );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"rayray39":54}},{"path":"src/main/java/janet/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":" * Represents the way Janet makes sense of user commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"     * Returns the corresponding CommandType based on the String value of commandDetails[0].","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"     * @return Enum CommandType value","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    public static CommandType getCommand(String[] commandDetails) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"        return CommandType.valueOf(commandDetails[0].toUpperCase());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * @param inputLine User\u0027s command that was typed into the command line.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     * @return A String array, where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"    public static String[] getCommandDetails(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"        return inputLine.split(\" \");   // an array containing each word of the command","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"     * Returns an ArrayList\u003cString\u003e, where each element corresponds","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"     * to the name of the CommandType enum value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"     * @return An ArrayList\u003cString\u003e, containing the String values of all the CommandType values.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    public static ArrayList\u003cString\u003e getCommandTypes() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"        ArrayList\u003cString\u003e acceptableCommands \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"        for (CommandType commandType : CommandType.values()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"            acceptableCommands.add(commandType.name());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"        return acceptableCommands;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"     * Runs all the checks to validate user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"     * If the user input is invalid, a JanetException will be thrown.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"     * @param numOfTasksInList Total number of tasks inside the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"     * @throws JanetException If user input is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"    public static void userInputChecker(String[] commandDetails, int numOfTasksInList) throws JanetException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        checkInaccurateCommand(commandDetails, numOfTasksInList);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"     * Throws janet.JanetException when,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"     * 1. command is empty (eg. \u0027 \u0027) OR command is an enum CommandType value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"     * 2. task description is not provided.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"     * 3. task number is not in proper format, not provided, is negative or equal to 0.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"     * 4. task number is larger than the number of tasks in the list.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"     * @throws JanetException If command is invalid, task number is not properly specified, task description omitted.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"    public static void checkInaccurateCommand(String[] commandDetails, int numOfTasksInlist) throws JanetException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"        if (emptyCommand(commandDetails) || unknownCommand(commandDetails)","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"                || notFoundCommand(commandDetails) || invalidViewCommand(commandDetails)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"            // when the command is gibberish, empty command, invalid Found command, invalid View command","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"WHOOPS! I\u0027m only a chatbot, so I don\u0027t know what that means...\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"        } else if (notByeOrListCommand(commandDetails)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"            if (taskDescriptionOmitted(commandDetails)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"                // task description is not provided","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! You can\u0027t leave out the task\u0027s description!\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"            } else if (taskNumberInvalidOrAbsent(commandDetails) || taskNumberNegativeOrZero(commandDetails)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"                // for marking (mark/unmark) and delete commands,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"                // task number is either invalid, absent, negative, or less than or equal to 0","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! Ensure task number is present and valid!\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"            } else if (taskNumberOutOfRange(commandDetails, numOfTasksInlist)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"                // for marking (mark/unmark) and delete commands, task number is larger than number of tasks in list","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! You don\u0027t have a task of this number!\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"     * Returns true if the command is a view command and,","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"     * 1. no date is provided OR more than one date is provided.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"     * 2. a single date is provided but cannot be parsed into a LocalDate object.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"     * False otherwise.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"     * @throws JanetException If the date (String) provided cannot be parsed into a LocalDate object.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"    private static boolean invalidViewCommand(String[] commandDetails) throws JanetException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"        boolean isViewCommand \u003d commandDetails[0].equals(\"view\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"        if (isViewCommand) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"            if (viewNoDateProvided(commandDetails) || viewMoreThanOneDateProvided(commandDetails)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"                return true;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"            } else {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"                try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"                    LocalDate.parse(commandDetails[1]);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"                    throw new JanetException(\"WHOOPS! Please ensure date is in yyyy-MM-dd format!\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"        return false;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rayray39"},"content":"     * Returns a true if there is no date provided for the view command (eg. \u0027view\u0027).","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rayray39"},"content":"     * False otherwise.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rayray39"},"content":"    private static boolean viewNoDateProvided(String[] commandDetails) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rayray39"},"content":"        return commandDetails.length \u003d\u003d 1;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rayray39"},"content":"     * Returns true if there is more than one date provided for the view command (eg. \u0027view 2024-09-10 ...\u0027),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rayray39"},"content":"     * where \u0027...\u0027 represents some text after the date provided.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rayray39"},"content":"     * False otherwise.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rayray39"},"content":"    private static boolean viewMoreThanOneDateProvided(String[] commandDetails) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rayray39"},"content":"        return commandDetails.length \u003e 2;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rayray39"},"content":"     * Returns true if command is \u0027find\u0027 and there is no keyword(s) specified,","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rayray39"},"content":"     * false otherwise.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rayray39"},"content":"    private static boolean notFoundCommand(String[] commandDetails) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rayray39"},"content":"        boolean isFoundCommand \u003d commandDetails[0].equals(\"find\");","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rayray39"},"content":"        boolean noKeywordSpecified \u003d commandDetails.length \u003d\u003d 1;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rayray39"},"content":"        return isFoundCommand \u0026\u0026 noKeywordSpecified;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rayray39"},"content":"     * Returns true if the command is empty, just whitespaces (eg. \u0027    \u0027).","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rayray39"},"content":"    private static boolean emptyCommand(String[] commandDetails) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rayray39"},"content":"        return commandDetails.length \u003d\u003d 0;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rayray39"},"content":"     * Returns true if it\u0027s a task command (todo, deadline or event),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rayray39"},"content":"     * and task description is not provided.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rayray39"},"content":"     * False otherwise.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rayray39"},"content":"    private static boolean taskDescriptionOmitted(String[] commandDetails) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rayray39"},"content":"        boolean noDescriptionProvided \u003d commandDetails.length \u003d\u003d 1;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rayray39"},"content":"        return noDescriptionProvided \u0026\u0026 isTaskCommand(commandDetails);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rayray39"},"content":"     * Returns true if command is,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rayray39"},"content":"     * 1. gibberish and not an enum CommandType value (eg. marker, blah blah, events).","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rayray39"},"content":"     * 2. \u0027bye ...\u0027 where \u0027...\u0027 represents additional texts behind the word bye (eg. bye bye).","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rayray39"},"content":"     * 3. \u0027list ...\u0027 where \u0027...\u0027 represents additional texts behind the word list (eg. list something).","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rayray39"},"content":"     * false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rayray39"},"content":"    private static boolean unknownCommand(String[] commandDetails) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rayray39"},"content":"        boolean notACommand \u003d !(getCommandTypes().contains(commandDetails[0].toUpperCase()));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rayray39"},"content":"        boolean byeWithAdditionalTexts \u003d (commandDetails.length \u003e 1) \u0026\u0026 (commandDetails[0].equals(\"bye\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rayray39"},"content":"        boolean listWithAdditionalTexts \u003d (commandDetails.length \u003e 1) \u0026\u0026 (commandDetails[0].equals(\"list\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rayray39"},"content":"        return notACommand || byeWithAdditionalTexts || listWithAdditionalTexts;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"rayray39"},"content":"     * Returns true if,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"rayray39"},"content":"     * 1. task number is not provided (eg. mark).","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"rayray39"},"content":"     * 2. task number is invalid, unable to parse into Integer (eg. unmark three).","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"rayray39"},"content":"     * 3. more than 1 task number is provided, separated by whitespace(s) (eg. delete 3 2).","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"rayray39"},"content":"    private static boolean taskNumberInvalidOrAbsent(String[] commandDetails) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"rayray39"},"content":"        boolean taskNumberAbsent \u003d (commandDetails.length \u003d\u003d 1);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"rayray39"},"content":"        boolean taskNumberInvalid \u003d false;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"rayray39"},"content":"        if (commandDetails.length \u003d\u003d 2 \u0026\u0026 isMarkingOrDeleteCommand(commandDetails)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"rayray39"},"content":"            // task number is present, check for validity","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"rayray39"},"content":"            try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"rayray39"},"content":"                Integer.parseInt(commandDetails[1]);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"rayray39"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"rayray39"},"content":"                taskNumberInvalid \u003d true;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"rayray39"},"content":"        } else if (commandDetails.length \u003e 2  \u0026\u0026 isMarkingOrDeleteCommand(commandDetails)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"rayray39"},"content":"            // more than 1 task number is provided, separated by white space(s).","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"rayray39"},"content":"            taskNumberInvalid \u003d true;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"rayray39"},"content":"        return taskNumberAbsent || taskNumberInvalid;  // false","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"rayray39"},"content":"     * Returns true if the command is neither \u0027bye\u0027 nor \u0027list\u0027.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"rayray39"},"content":"    private static boolean notByeOrListCommand(String[] commandDetails) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"rayray39"},"content":"        // returns true if the command is not \u0027bye\u0027 and \u0027list\u0027, false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"rayray39"},"content":"        return !(commandDetails[0].equals(\"bye\") || commandDetails[0].equals(\"list\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"rayray39"},"content":"     * Returns true if the task number provided is greater than the number of tasks in list,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"rayray39"},"content":"     * false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"rayray39"},"content":"     * @param numOfTasksInList The current total number of tasks in the list.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"rayray39"},"content":"    private static boolean taskNumberOutOfRange(String[] commandDetails, int numOfTasksInList) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"rayray39"},"content":"        // returns true if the task number provided is greater than the number of tasks in list, false otherwise","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"rayray39"},"content":"        return isMarkingOrDeleteCommand(commandDetails)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"rayray39"},"content":"                \u0026\u0026 Integer.parseInt(commandDetails[1]) \u003e numOfTasksInList;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"rayray39"},"content":"     * Returns true if the task number provided is less than or equal to 0,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"rayray39"},"content":"     * false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"rayray39"},"content":"    private static boolean taskNumberNegativeOrZero(String[] commandDetails) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"rayray39"},"content":"        // returns true if the task number provided is less than or equal to 0, false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"rayray39"},"content":"        return isMarkingOrDeleteCommand(commandDetails) \u0026\u0026 Integer.parseInt(commandDetails[1]) \u003c\u003d 0;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"rayray39"},"content":"     * Returns true if command is mark, unmark or delete,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"rayray39"},"content":"     * false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"rayray39"},"content":"    private static boolean isMarkingOrDeleteCommand(String[] commandDetails) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"rayray39"},"content":"        return commandDetails[0].equals(\"mark\")","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"rayray39"},"content":"                || commandDetails[0].equals(\"unmark\")","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"rayray39"},"content":"                || commandDetails[0].equals(\"delete\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"rayray39"},"content":"     * Returns true if command is todo, deadline or event,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"rayray39"},"content":"     * false otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails A String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"rayray39"},"content":"    private static boolean isTaskCommand(String[] commandDetails) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"rayray39"},"content":"        return commandDetails[0].equals(\"todo\")","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"rayray39"},"content":"                || commandDetails[0].equals(\"deadline\")","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"rayray39"},"content":"                || commandDetails[0].equals(\"event\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rayray39":291}},{"path":"src/main/java/janet/ScheduledTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":" * Represents a task that has a schedule (date and time)","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"public class ScheduledTask extends Task {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    private final LocalDate scheduledDate;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    public ScheduledTask(String description, String symbol, LocalDate scheduledDate) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        super(description, symbol);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        this.scheduledDate \u003d scheduledDate;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"     * Converts and returns the input date and time into appropriate formats","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"     * date -\u003e MM dd yyyy","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"     * time -\u003e hh:mm a","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * @param inputDate A string representing a date in the format, yyyy-MM-dd","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     * @param inputTime A string representing a time in the format, hh:mm","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"     * @return A string representing the time and date (MM dd yyyy hh:mm a)","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    public static String DateAndTimeFormatter(String inputDate, String inputTime) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"        LocalDate localDate \u003d LocalDate.parse(inputDate);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"        String date \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"        LocalTime localTime \u003d LocalTime.parse(inputTime);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"        String time \u003d localTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"        return date + \" \" + time;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    public LocalDate getScheduledDate() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"        return scheduledDate;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-09-09","isFullCredit":false}],"authorContributionMap":{"rayray39":41}},{"path":"src/main/java/janet/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":" * Represents the way Janet saves/read tasks into/from a text file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"    private final String filePath;  // \"./janet.txt\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"     * Saves the elements in Janet\u0027s listOfTasks into a text file (janet.txt).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"     * Each janet.Task object is saved in the format,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * symbol | isDone | description | startDate (if deadline/event)-endDate (if event)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"     * @param listOfTasks the list of tasks (ArrayList\u003cjanet.Task\u003e) that Janet has.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    public void saveToJanetTextFile(ArrayList\u003cTask\u003e listOfTasks) throws JanetException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"        // using FileWriter to write text into a text file (janet.txt).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"            for (Task task : listOfTasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"                String marked \u003d (task.isDone()) ? \"1\" : \"0\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"                String entry \u003d task.getSymbol() + \" | \" + marked + \" | \" + task.getDescription();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"                    entry \u003d entry + \" | \" + ((Deadline) task).getDueDate();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"                    entry \u003d entry + \" | \" + ((Event) task).getStartDate() + \"-\" + ((Event) task).getEndDate();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"                fileWriter.write(entry + \"\\n\");     // write the entry into the text file and save it","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"            fileWriter.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"     * Returns an ArrayList\u003cjanet.Task\u003e listOfTasks,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"     * each janet.Task object is created based on each line read from janet.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"     * @return an ArrayList\u003cjanet.Task\u003e listOfTasks, that contains janet.Task objects","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"    public ArrayList\u003cTask\u003e textFileToArrayList() throws JanetException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"            FileReader fileReader \u003d new FileReader(this.filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"            String line;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"                char taskSymbol \u003d line.charAt(0);   // get task symbol","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"                String done \u003d String.valueOf(line.charAt(4));   // get mark/unmark value","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"                boolean isDone \u003d (done.equals(\"1\"));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"                switch (taskSymbol) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"                case \u0027T\u0027 :","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"                    // todo object","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"                    task \u003d createToDoFromJanetTextFile(line, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"                case \u0027D\u0027 :","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"                    // deadline object","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"                    task \u003d createDeadlineFromJanetTextFile(line, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"                case \u0027E\u0027 :","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"                    // event object","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"                    task \u003d createEventFromJanetTextFile(line, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"                listOfTasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"            fileReader.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"            bufferedReader.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"            // exception will be thrown when fileReader cannot find the file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"        return listOfTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"     * Returns a janet.ToDo object,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"     * based on a line, containing information about a janet.ToDo, read from janet.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"     * @param line a line of text from the janet.txt file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"     * @param isDone isDone \u003d true if task has been marked else false.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"     * @return a new janet.ToDo object created using the parameters.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"    public ToDo createToDoFromJanetTextFile(String line, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"        // get description from text file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"        String toDoDescription \u003d line.substring(8);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"        ToDo task \u003d new ToDo(toDoDescription, \"T\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"        task.setDone(isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"        return task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"     * Returns a janet.Deadline object,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"     * based on a line, containing information about a janet.Deadline, read from janet.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"     * @param line a line of text from the janet.txt file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"     * @param isDone isDone \u003d true if task has been marked else false.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"     * @return a new janet.Deadline object created using the parameters.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rayray39"},"content":"    public Deadline createDeadlineFromJanetTextFile(String line, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rayray39"},"content":"        // get description from text file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rayray39"},"content":"        String deadlineDescription \u003d line.substring(8, line.indexOf(\"|\", 8) - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rayray39"},"content":"        // get the due date and convert into LocalDateTime","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rayray39"},"content":"        String dueDateAndTime \u003d line.substring(line.indexOf(\"|\", 8) + 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rayray39"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm a\");   // format String dueDateAndTime is in","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rayray39"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(dueDateAndTime, formatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rayray39"},"content":"        Deadline deadline \u003d new Deadline(deadlineDescription, \"D\", dueDate);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rayray39"},"content":"        deadline.setDone(isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rayray39"},"content":"        return deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rayray39"},"content":"     * Returns an janet.Event object,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rayray39"},"content":"     * based on a line, containing information about an janet.Event, read from janet.txt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rayray39"},"content":"     * @param line a line of text from the janet.txt file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rayray39"},"content":"     * @param isDone isDone \u003d true if task has been marked else false.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rayray39"},"content":"     * @return a new janet.Event object created using the parameters.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rayray39"},"content":"    public Event createEventFromJanetTextFile(String line, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rayray39"},"content":"        // get description from text file","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rayray39"},"content":"        String eventDescription \u003d line.substring(8, line.indexOf(\"|\", 8) - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rayray39"},"content":"        // get startDate and convert into LocalDateTime","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rayray39"},"content":"        String startDateAndTime \u003d line.substring(line.indexOf(\"|\", 8) + 2, line.indexOf(\"-\", line.indexOf(\"|\", 8)));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rayray39"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm a\");   // format String dueDateAndTime is in","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rayray39"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(startDateAndTime, formatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rayray39"},"content":"        // get the endDate and convert into LocalDateTime","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rayray39"},"content":"        String endDateAndTime \u003d line.substring(line.indexOf(\"-\", line.indexOf(\"|\", 8)) + 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rayray39"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(endDateAndTime, formatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rayray39"},"content":"        Event event \u003d new Event(eventDescription, \"E\", startDate, endDate);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rayray39"},"content":"        event.setDone(isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rayray39"},"content":"        return event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rayray39":160}},{"path":"src/main/java/janet/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":" * Represents a Task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"public class Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"    private final String description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    private final String symbol;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    private boolean done;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    public Task(String description, String symbol) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    public LocalDate getScheduledDate() {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"        return null;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s description","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        return this.description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"     * @return task\u0027s symbol","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"    public String getSymbol() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"        return this.symbol;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"     * @return the value of this.done, indicating whether the task is done (marked) or not done (unmarked)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"        return this.done;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"     * @param newStatus assign newStatus (true/false) to this.done","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"    public void setDone(boolean newStatus) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"        this.done \u003d newStatus;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"        if (this.done) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"            return String.format(\"[%s][X] %s\", this.symbol, this.description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        return String.format(\"[%s][ ] %s\", this.symbol, this.description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":58}},{"path":"src/main/java/janet/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":" * Represents the list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"public class TaskList {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    // replaces the ArrayList\u003cjanet.Task\u003e listOfTasks inside Janet","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"    TaskList() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"        listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"        // overloaded constructor to load the tasks created from janet.txt","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"        this.listOfTasks \u003d tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        return this.listOfTasks.size();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"     * Returns true if the list of tasks is empty, false otherwise.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value indicating whether the list is empty.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"        return this.listOfTasks.isEmpty();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"        return this.listOfTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        return this.listOfTasks.get(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"     * Adds the task into the current list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"     * @param task A janet.Task object that is to be added into the listOfTasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"    public void addTaskToList(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"        this.listOfTasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"     * Returns a String message to indicate task is marked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"     * If task has already been marked, returns a different String message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum The task that the user specified.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"     * @return A String message to indicate successful marking of desired task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"    public String markAsDone(int desiredTaskNum) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"        if (desiredTask.isDone()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"            // the desired task is already marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"            return \"already marked\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"        desiredTask.setDone(true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"        return \"marked\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"     * Returns a String message to indicate task is unmarked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"     * If task has already been unmarked, returns a different String message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum The task that the user specified.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"     * @return A String message to indicate successful unmarking of desired task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"    public String unmark(int desiredTaskNum) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be unmarked","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"        if (!desiredTask.isDone()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"            // desired task is already marked as NOT done (unmarked)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"            return \"already unmarked\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"        desiredTask.setDone(false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"        return \"unmarked\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"     * Removes the task from the list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum The task that the user specified.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"    public void deleteTask(int desiredTaskNum) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"        listOfTasks.remove(desiredTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"     * Returns a TaskList with tasks\u0027 description containing the keyword(s).","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"     * @param keyword The desired keyword to be matched to.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"     * @return A TaskList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"    public TaskList findTasks(String... keyword) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"        // returns a TaskList, where tasks have the keyword in their descriptions.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rayray39"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rayray39"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rayray39"},"content":"            for (String word : keyword) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rayray39"},"content":"                if (task.getDescription().contains(word)) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rayray39"},"content":"                    taskList.addTaskToList(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rayray39"},"content":"        return taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rayray39"},"content":"     * Returns true if the task\u0027s scheduledDate is equal to the schedule.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rayray39"},"content":"     * 1. if task is a deadline, its scheduledDate will be the dueDate.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rayray39"},"content":"     * 2. if task is an event, its scheduledDate will be the startDate.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rayray39"},"content":"     * Returns false otherwise.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rayray39"},"content":"     * @param task A Task object.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rayray39"},"content":"     * @param schedule A LocalDate, representing the date the user inputs.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rayray39"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rayray39"},"content":"    private boolean isScheduledTask(Task task, LocalDate schedule) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rayray39"},"content":"        return task.getScheduledDate().equals(schedule);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rayray39"},"content":"     * Returns a TaskList, where each task in the TaskList is","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rayray39"},"content":"     * either a deadline or an event,","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rayray39"},"content":"     * and has a dueDate/startDate equals to the schedule.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rayray39"},"content":"     * @param dateAndTime A String, representing the date the user inputs (yyyy-MM-dd).","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rayray39"},"content":"     * @return A TaskList.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rayray39"},"content":"    public TaskList viewScheduledTasks(String dateAndTime) throws JanetException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rayray39"},"content":"        LocalDate schedule \u003d LocalDate.parse(dateAndTime);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rayray39"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rayray39"},"content":"        for (Task task : listOfTasks) {     // go through all the tasks in the list","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rayray39"},"content":"            if (task.getScheduledDate() !\u003d null \u0026\u0026 isScheduledTask(task, schedule)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rayray39"},"content":"                // if the task is a ScheduledTask and has the same schedule, add to tasks","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rayray39"},"content":"                tasks.addTaskToList(task);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rayray39"},"content":"        return tasks;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rayray39":165}},{"path":"src/main/java/janet/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":" * Represents a ToDo, with a description and symbol.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    ToDo(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"        // inside the program this will be called","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"        this(createToDo(inputLine).getDescription(),","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"                createToDo(inputLine).getSymbol());","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"    ToDo(String description, String symbol) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"        // this is used inside the static method: createToDo","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"        super(description, symbol);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"     * Returns a ToDo object that was created from the user\u0027s command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * Based on the description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"     * @param inputLine User\u0027s command that was typed into the command line.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"     * @return A new ToDo object","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"    public static ToDo createToDo(String inputLine) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"        // get the todo description and create a new Todo object","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"        String[] commandDetails \u003d inputLine.split(\" \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"        String[] todoItem \u003d Arrays.copyOfRange(commandDetails, 1, commandDetails.length);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"        String todoDescription \u003d String.join(\" \", todoItem);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"        return new ToDo(todoDescription, \"T\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":36}},{"path":"src/main/java/janet/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":" * Represents the UI of Janet.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"public class Ui {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    // handles the interaction with the user","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"    // receives inputs (readline) and printing outputs to the command line","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"     * Prints the welcome message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        return \"\\nHello! I\u0027m Janet\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"     * Prints the exit message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    public String exitMessage() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"     * Prints message if janet.txt is not found in the user\u0027s directory.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"    public String showLoadingError() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"        return \"janet.txt not found! Creating janet.txt for you...\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"     * Prints message if unable to write list of tasks into .txt file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    public String showSavingError() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"        return \"WHOOPS! Having problems with saving your tasks...\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"     * Prints message when task is successfully added into the list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"     * @param task The task that the user specified.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"     * @param numberOfTasks The number of tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"    public String showSuccessfulTaskAddition(Task task, int numberOfTasks) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"        // when janet.TaskList.addTaskToList is called (addition of task into listOfTasks)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"        // task \u003d newly added janet.Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        return \"\\nGot it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"                + \"  \" + task + \"\\n\" + String.format(\"Now you have %d tasks in the list\\n\", numberOfTasks);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"     * Prints the tasks into the terminal.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"    public String showTasks(TaskList taskList) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"        // show all tasks inside the list (when user types in \u0027list\u0027)","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"        String currentList \u003d \"\\nHere are the tasks in your list:\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"            // empty listOfTasks","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"            return currentList + \"*** Current list is empty ***\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"            currentList +\u003d displayTasksInList(taskList) + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"            return currentList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"     * Prints message when task is marked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"     * @param markResult Whether the task has already been marked or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"     * @param task The task that is specified by the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"    public String showMarkedMessage(String markResult, Task task) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"        // task \u003d newly marked janet.Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"        if (markResult.equals(\"already marked\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"            // the desired task is already marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"            return \"\\nThis task is already marked!\\n\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"            return \"\\nNice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"                    + String.format(\"  %s\", task + \"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"     * Prints message when task is unmarked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"     * @param markResult Whether the task has already been unmarked or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"     * @param task The task that is specified by the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"    public String showUnmarkedMessage(String markResult, Task task) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be unmarked","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"        // task \u003d newly unmarked janet.Task object","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"        if (markResult.equals(\"already unmarked\")) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"            // the desired task is already marked as done","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"            return \"\\nThis task is already unmarked!\\n\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"            return \"\\nOK, I\u0027ve unmarked this task:\\n\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"                    + String.format(\"  %s\", task + \"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"     * Prints message to show tasks that matched keyword.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rayray39"},"content":"    public String showFindMessage(TaskList taskList) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rayray39"},"content":"        // taskList is a subset of the current total taskList","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rayray39"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rayray39"},"content":"            return \"\\nHere are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rayray39"},"content":"                    + \"OOPS! No tasks match what you were looking for!\" + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rayray39"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rayray39"},"content":"            return \"\\nHere are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rayray39"},"content":"                    + displayTasksInList(taskList) + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rayray39"},"content":"     * Returns a String, containing the list of tasks in numbered order.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rayray39"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rayray39"},"content":"     * @return A string message showing the list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rayray39"},"content":"    public static String displayTasksInList(TaskList taskList) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rayray39"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rayray39"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rayray39"},"content":"            if (i \u003d\u003d taskList.getNumberOfTasks() - 1) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rayray39"},"content":"                // reached last element in the list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rayray39"},"content":"                tasks +\u003d (i+1) + \". \" + taskList.getTask(i);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rayray39"},"content":"            tasks +\u003d (i+1) + \". \" + taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rayray39"},"content":"        return tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rayray39"},"content":"     * Prints the message when task is deleted from the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rayray39"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rayray39"},"content":"     * @param deletedTask The task that the user specified.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rayray39"},"content":"     * @param numberOfTasks The number of tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rayray39"},"content":"    public String showDeleteTaskMessage(Task deletedTask, int numberOfTasks) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rayray39"},"content":"        return \"\\nNoted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rayray39"},"content":"                + String.format(\"    %s\\nNow you have %d tasks in your list\\n\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rayray39"},"content":"                deletedTask, numberOfTasks);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rayray39"},"content":"    public String showScheduledTasksMessage(TaskList scheduledTaskList, String date) {","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rayray39"},"content":"        return \"\\nHere are your tasks on \" + date + \":\\n\"","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rayray39"},"content":"                + displayTasksInList(scheduledTaskList) + \"\\n\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"rayray39":167}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"            \u003cfont\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"                \u003cFont size\u003d\"14\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"            \u003c/font\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"rayray39":31}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"\u003c?import janet.DialogBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"            fx:controller\u003d\"janet.MainWindow\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"                        \u003cFont size\u003d\"14\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"        \u003c/TextField\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"                text\u003d\"Send\" \u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"                \u003cfont\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"                    \u003cFont size\u003d\"14\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"                \u003c/font\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"rayray39":55}},{"path":"src/test/java/janet/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"rayray39":4}},{"path":"src/test/java/janet/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"public class EventTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    public void eventCreation_success() throws Exception {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        assertEquals(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"                new Event(\"project meeting\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"                        \"E\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"                        LocalDateTime.of(2024, 8, 30, 18, 0),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"                        LocalDateTime.of(2024, 9, 30, 18, 0)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"                ).getDescription(),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"                new Event(\"event project meeting /from 2024-08-30 18:00 /to 2024-09-30 18:00\").getDescription()","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"        assertEquals(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"                new Event(\"event project meeting /from 2024-08-30 18:00 /to 2024-09-30 18:00\").getStartDate(),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"                LocalDateTime.of(2024, 8, 30, 18, 0).format(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"                        DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm a\")","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"                )","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"        assertEquals(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"                new Event(\"event project meeting /from 2024-08-30 18:00 /to 2024-09-30 18:00\").getEndDate(),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"                LocalDateTime.of(2024, 9, 30, 18, 0).format(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"                        DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm a\")","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"                )","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rayray39":37}},{"path":"src/test/java/janet/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"package janet;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    public void unknownInputTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"        JanetException exception \u003d assertThrows(JanetException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"                () -\u003e Parser.checkInaccurateCommand(new String[]{\"blah\"}));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"        assertEquals(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"                exception.getMessage(), \"WHOOPS! I\u0027m only a chatbot, so I don\u0027t know what that means...\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    public void noTaskSpecifiedTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"        JanetException exception \u003d assertThrows(JanetException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"                () -\u003e Parser.checkInaccurateCommand(new String[]{\"mark\"}));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"        assertEquals(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"                exception.getMessage(), \"WHOOPS! I don\u0027t know which task you are referring to...\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"    public void cannotParseTaskNumberTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"        JanetException exception \u003d assertThrows(JanetException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"                () -\u003e Parser.validateCommand(new String[]{\"mark\", \"SOMETHING\"}, 3));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        assertEquals(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"                exception.getMessage(), \"WHOOPS! Please provide an integer value task number!\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"    public void taskNumberOutOfRangeTest() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"        JanetException exception \u003d assertThrows(JanetException.class,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"                () -\u003e Parser.validateCommand(new String[]{\"mark\", \"4\"}, 3));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"        assertEquals(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"                exception.getMessage(), \"WHOOPS! You don\u0027t have a task of this number!\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"rayray39":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"todo go for a run","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"mark 1","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"mark 2","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"blah blah","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"mark 7","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"delete 0","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"bye","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rayray39":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rayray39":1,"-":20}}]
