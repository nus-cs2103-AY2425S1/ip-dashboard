[{"path":"src/main/java/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"public enum CommandType {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"    TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"rayray39":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"    private final String dueDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"    Deadline(String description, String symbol, String dueDate) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"        super(description, symbol);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"        return super.toString() + \" \" + String.format(\"(by: %s)\", this.dueDate);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"    private final String startDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"    private final String endDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"    Event(String description, String symbol, String startDate, String endDate) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"        super(description, symbol);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"        return super.toString() + \" \" + String.format(\"(from: %s to: %s)\", startDate, endDate);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":15}},{"path":"src/main/java/Janet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"public class Janet {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"    private static final String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"    private final ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"    private int taskIndex;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"    Janet() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"        this.listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"        this.taskIndex \u003d 0;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"     * Level 0 - greets the user","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"     * @return a String message to greet the user.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"    public String greet() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"        return horizontalLine + \"\\nHello! I\u0027m Janet\\n\" + \"What can I do for you?\\n\" + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"     * Level 0 - say bye to user","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * @return a String message to say bye to the user and exit the program.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    public String exit() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        return \"Bye. Hope to see you again soon!\\n\" + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"     * Level 1 - echoes the message","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"     * @param message a String message to capture what the user typed into the command line.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"     * @return the exact same String provided by the user","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"    public String echo(String message) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"        return horizontalLine + \"\\n\" + message + \"\\n\" + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"     * @return the latest value of taskIndex","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"        return taskIndex;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"     * Level 2 - Add, list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"     * @param task a String representation of the task that is to be added into the listOfTasks.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"     * @param taskSymbol a String representation of the task\u0027s symbol (T, D, E).","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"     * @return a String message to indicate successful addition of task into listOfTasks.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"    public String addTaskToList(String task, String taskSymbol) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"        Task newTask \u003d new Task(task, taskSymbol);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"        this.listOfTasks.add(newTask);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"        this.taskIndex++;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"        return horizontalLine + \"\\n\" + String.format(\"added: %s\\n\", task) + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"     * @param task a Task object that is to be added into the listOfTasks","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"     * @return a String message to indicate successful addition of task into listOfTasks.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"    public String addTaskToList(Task task) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"        this.listOfTasks.add(task);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"        this.taskIndex++;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"        return horizontalLine + \"\\nGot it. I\u0027ve added this task:\\n\" + \"  \" + task + \"\\n\" + String.format(\"Now you have %d tasks in the list\\n\", taskIndex) + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"     * Level 2 - Add, list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"     * @return a String representation (in numbered list format) of the current tasks inside the listOfTasks","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"    public String showList() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"        String currentList \u003d horizontalLine + \"\\nHere are the tasks in your list:\\n\";","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"        if (taskIndex \u003d\u003d 0) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"            // empty listOfTasks","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"            return currentList + \"*** Current list is empty ***\\n\" + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"        for (int i \u003d 0; i \u003c taskIndex; i++) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"            if (i \u003d\u003d taskIndex - 1) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"                currentList +\u003d (i+1) + \". \" + listOfTasks.get(i) + \"\\n\" + horizontalLine;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"            currentList +\u003d (i+1) + \". \" + listOfTasks.get(i) + \"\\n\";","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"        return currentList;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"     * Level 3 - mark as done","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"     * marks the desired task as done, by setting the boolean value of Task.done \u003d true.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum specifies the index of the task, inside listOfTasks, + 1.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"     * @return a String message to indicate successful marking of desired task as done (done \u003d true).","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"    public String markAsDone(int desiredTaskNum) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be marked as done","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"        if (desiredTask.isDone()) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"            // the desired task is already marked as done","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"            return horizontalLine + \"\\nThis task is already done!\\n\" + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"        desiredTask.setDone(true);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"        return horizontalLine + \"\\nNice! I\u0027ve marked this task as done:\\n\" + String.format(\"  %s\", desiredTask) + \"\\n\" + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"     * Level 3 - mark as done (unmark)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"     * marks the desired task as NOT done, by setting the boolean value of Task.done \u003d false.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum specifies the index of the task, inside listOfTasks, + 1.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"     * @return a String message to indicate successful unmarking of desired task (done \u003d false).","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rayray39"},"content":"    public String unmark(int desiredTaskNum) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rayray39"},"content":"        // (desiredTaskNum - 1) is the index of the task, inside listOfTasks, that needs to be unmarked","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rayray39"},"content":"        if (!desiredTask.isDone()) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rayray39"},"content":"            // desired task is already marked as NOT done (unmarked)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rayray39"},"content":"            return horizontalLine + \"\\nThis task is not already done!\\n\" + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rayray39"},"content":"        desiredTask.setDone(false);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rayray39"},"content":"        return horizontalLine + \"\\nOK, I\u0027ve marked this task as not done yet:\\n\" + String.format(\"  %s\", desiredTask) + \"\\n\" + horizontalLine;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rayray39"},"content":"     * Level 6 - delete task","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rayray39"},"content":"     * @param desiredTaskNum specifies the index of the task, inside listOfTasks, + 1.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rayray39"},"content":"     * @return a String message to indicate successful deletion of the desired task from listOfTasks.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rayray39"},"content":"    public String deleteTask(int desiredTaskNum) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rayray39"},"content":"        taskIndex--;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rayray39"},"content":"        Task desiredTask \u003d listOfTasks.get(desiredTaskNum - 1);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rayray39"},"content":"        listOfTasks.remove(desiredTask);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rayray39"},"content":"        return horizontalLine + \"\\nNoted. I\u0027ve removed this task:\\n\" + String.format(\"    %s\\nNow you have %d tasks in your list\\n\", desiredTask, taskIndex) + horizontalLine;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rayray39"},"content":"     * @return true if the list has no elements","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rayray39"},"content":"    public boolean listIsEmpty() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rayray39"},"content":"        return listOfTasks.isEmpty();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":149}},{"path":"src/main/java/JanetException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"public class JanetException extends Exception {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"    public JanetException(String errorMessage) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"        super(errorMessage);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rayray39":6}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"public class Main {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"     * @return a String[], where first elem \u003d Deadline.description, second elem \u003d Deadline.dueDate.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"    public static String[] findDeadlineDetails(String[] commandDetails) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"        int indexOfBy \u003d 0;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"        // first word in commandDetails must be deadline, so start from the i\u003d1 word","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"        for (int i \u003d 1; i \u003c commandDetails.length; i++) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/by\")) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"                indexOfBy \u003d i;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"        // get description of Deadline","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(commandDetails, 1, indexOfBy);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"        // get due date","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"        String[] dueDateArray \u003d Arrays.copyOfRange(commandDetails, indexOfBy + 1, commandDetails.length);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"        String dueDate \u003d String.join(\" \", dueDateArray);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"        return new String[]{description, dueDate};","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"     * @return a String[], where first elem \u003d Event.description, second elem \u003d Event.startDate, third elem \u003d Event.endDate.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"    public static String[] findEventDetails(String[] commandDetails) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"        int indexOfFrom \u003d 0;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"        int indexOfTo \u003d 0;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        // first word in commandDetails must be event, so start from i\u003d1 word","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"        for (int i \u003d 1; i \u003c commandDetails.length; i++) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/from\")) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rayray39"},"content":"                indexOfFrom \u003d i;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[i].equals(\"/to\")) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rayray39"},"content":"                indexOfTo \u003d i;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rayray39"},"content":"        // get the description","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rayray39"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(commandDetails, 1, indexOfFrom);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rayray39"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rayray39"},"content":"        // get the start date","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rayray39"},"content":"        String[] startDateArray \u003d Arrays.copyOfRange(commandDetails, indexOfFrom + 1, indexOfTo);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rayray39"},"content":"        String startDate \u003d String.join(\" \", startDateArray);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rayray39"},"content":"        // get the end date","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rayray39"},"content":"        String[] endDateArray \u003d Arrays.copyOfRange(commandDetails, indexOfTo + 1, commandDetails.length);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rayray39"},"content":"        String endDate \u003d String.join(\" \", endDateArray);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rayray39"},"content":"        return new String[]{description, startDate, endDate};","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rayray39"},"content":"     * @throws JanetException a custom exception class specific to Janet","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rayray39"},"content":"    public static void validateCommand(String[] commandDetails, int numOfTasksInList) throws JanetException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rayray39"},"content":"        // when mark/unmark/delete X, where X is too big (out or bounds) OR \u003c\u003d 0 OR when the list is empty.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rayray39"},"content":"        if ((commandDetails[0].equals(\"mark\") || commandDetails[0].equals(\"unmark\") || commandDetails[0].equals(\"delete\")) \u0026\u0026 commandDetails.length \u003e 1) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rayray39"},"content":"            // when the command is mark/unmark X OR delete, where X is an invalid num (too big or \u003c\u003d 0)","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rayray39"},"content":"            int taskNumber;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rayray39"},"content":"            try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rayray39"},"content":"                taskNumber \u003d Integer.parseInt(commandDetails[1]);   // commandDetails[1] could be a string","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rayray39"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rayray39"},"content":"                System.out.println(\"WHOOPS! Please provide an integer value task number!\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rayray39"},"content":"                return;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rayray39"},"content":"            if (taskNumber \u003c\u003d 0) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rayray39"},"content":"                // still need to handle case when taskNumber \u003e\u003d taskIndex + 1 (unable to access janet.getTaskIndex())","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! Your task number cannot be negative or 0!\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rayray39"},"content":"            } else if (taskNumber \u003e numOfTasksInList) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! You don\u0027t have a task of this number!\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rayray39"},"content":"     * @param commandDetails a String[], where each element corresponds to a word of the user input.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rayray39"},"content":"     * @throws JanetException a custom exception class specific to Janet","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rayray39"},"content":"    public static void checkInaccurateCommand(String[] commandDetails) throws JanetException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rayray39"},"content":"        // checks for inaccurate commands 1. rubbish, 2. without any task description, 3. no number for mark/unmark/delete.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rayray39"},"content":"        if (!(commandDetails[0].equals(\"todo\") || commandDetails[0].equals(\"deadline\") || commandDetails[0].equals(\"event\") || commandDetails[0].equals(\"mark\") || commandDetails[0].equals(\"unmark\") || commandDetails[0].equals(\"delete\"))) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rayray39"},"content":"            // when the command is gibberish and NOT one of the commands (todo, deadline, event, mark, unmark, delete)","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rayray39"},"content":"            throw new JanetException(\"WHOOPS! I\u0027m only a chatbot, so I don\u0027t know what that means...\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rayray39"},"content":"        } else if (commandDetails.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rayray39"},"content":"            if (commandDetails[0].equals(\"mark\") || commandDetails[0].equals(\"unmark\") || commandDetails[0].equals(\"delete\")) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rayray39"},"content":"                // when the command is either (mark, unmark, delete), BUT there is no task specified","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! I don\u0027t know which task you are referring to...\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rayray39"},"content":"            } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rayray39"},"content":"                // when the command is either (todo, deadline, todo), BUT there is no task description","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rayray39"},"content":"                throw new JanetException(\"WHOOPS! You can\u0027t leave out the task\u0027s description!\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rayray39"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rayray39"},"content":"        Janet janet \u003d new Janet();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rayray39"},"content":"        System.out.println(janet.greet());","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rayray39"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rayray39"},"content":"        while (input.hasNext()) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rayray39"},"content":"            String command \u003d input.nextLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rayray39"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rayray39"},"content":"                // say bye and exit the program","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rayray39"},"content":"                String exitMessage \u003d janet.exit();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rayray39"},"content":"                System.out.println(exitMessage);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rayray39"},"content":"                break;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rayray39"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rayray39"},"content":"                // show all the tasks inside the list of task","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rayray39"},"content":"                String currentListOfTasks \u003d janet.showList();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rayray39"},"content":"                System.out.println(currentListOfTasks);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rayray39"},"content":"            } else {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rayray39"},"content":"                String[] commandDetails \u003d command.split(\" \");   // an array containing each word of the command","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rayray39"},"content":"                // handle exceptions","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rayray39"},"content":"                try {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rayray39"},"content":"                    // validateCommand and checkInaccurateCommand will throw out a JanetException","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rayray39"},"content":"                    validateCommand(commandDetails, janet.getTaskIndex());","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rayray39"},"content":"                    checkInaccurateCommand(commandDetails);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rayray39"},"content":"                } catch (JanetException e) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rayray39"},"content":"                    // print the error message and allow the program to continue (don\u0027t exit the program)","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rayray39"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rayray39"},"content":"                    continue;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rayray39"},"content":"                CommandType commandType \u003d CommandType.valueOf(commandDetails[0].toUpperCase());  // pass user input to be CommandType enum","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rayray39"},"content":"                switch (commandType) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rayray39"},"content":"                    case MARK -\u003e {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rayray39"},"content":"                        // mark the task as done","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rayray39"},"content":"                        String markSuccess \u003d janet.markAsDone(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rayray39"},"content":"                        System.out.println(markSuccess);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rayray39"},"content":"                                  }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rayray39"},"content":"                    case UNMARK -\u003e {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rayray39"},"content":"                        // unmark the task","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rayray39"},"content":"                        String unmarkSuccess \u003d janet.unmark(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rayray39"},"content":"                        System.out.println(unmarkSuccess);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rayray39"},"content":"                    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rayray39"},"content":"                    case DELETE -\u003e {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rayray39"},"content":"                        // delete specified task","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rayray39"},"content":"                        String deleteSuccess \u003d janet.deleteTask(Integer.parseInt(commandDetails[1]));","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rayray39"},"content":"                        System.out.println(deleteSuccess);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rayray39"},"content":"                    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rayray39"},"content":"                    case TODO -\u003e {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rayray39"},"content":"                        // get the todo description and create a new Todo object","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rayray39"},"content":"                        String[] todoItem \u003d Arrays.copyOfRange(commandDetails, 1, commandDetails.length);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rayray39"},"content":"                        String todoDescription \u003d String.join(\" \", todoItem);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rayray39"},"content":"                        Task todo \u003d new ToDo(todoDescription, \"T\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rayray39"},"content":"                        String addTaskSuccess \u003d janet.addTaskToList(todo);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rayray39"},"content":"                        System.out.println(addTaskSuccess);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rayray39"},"content":"                    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rayray39"},"content":"                    case DEADLINE -\u003e {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rayray39"},"content":"                        // get the details of the deadline task and create a new Deadline object","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rayray39"},"content":"                        String[] deadlineDetails \u003d findDeadlineDetails(commandDetails);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rayray39"},"content":"                        Task deadline \u003d new Deadline(deadlineDetails[0], \"D\", deadlineDetails[1]);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rayray39"},"content":"                        String addTaskSuccess \u003d janet.addTaskToList(deadline);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rayray39"},"content":"                        System.out.println(addTaskSuccess);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rayray39"},"content":"                    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rayray39"},"content":"                    case EVENT -\u003e {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rayray39"},"content":"                        // get the details of the event task and create a new Event object","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rayray39"},"content":"                        String[] eventDetails \u003d findEventDetails(commandDetails);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rayray39"},"content":"                        Task event \u003d new Event(eventDetails[0], \"E\", eventDetails[1], eventDetails[2]);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rayray39"},"content":"                        String addTaskSuccess \u003d janet.addTaskToList(event);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rayray39"},"content":"                        System.out.println(addTaskSuccess);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rayray39"},"content":"                    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rayray39"},"content":"                }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rayray39"},"content":"            }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":174}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"public class Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"    private final String description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"    private final String symbol;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"    private boolean done;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"    public Task(String description, String symbol) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"        this.symbol \u003d symbol;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rayray39"},"content":"        return this.description;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rayray39"},"content":"     * @return the value of this.done, indicating whether the task is done or not done","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rayray39"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rayray39"},"content":"        return this.done;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rayray39"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rayray39"},"content":"     * @param newStatus assign newStatus (true/false) to this.done","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rayray39"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rayray39"},"content":"    public void setDone(boolean newStatus) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rayray39"},"content":"        this.done \u003d newStatus;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rayray39"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rayray39"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rayray39"},"content":"        if (this.done) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rayray39"},"content":"            return String.format(\"[%s][X] %s\", this.symbol, this.description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rayray39"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rayray39"},"content":"        return String.format(\"[%s][ ] %s\", this.symbol, this.description);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":37}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"    ToDo(String description, String symbol) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"        super(description, symbol);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"rayray39":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rayray39"},"content":"todo go for a run","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rayray39"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rayray39"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rayray39"},"content":"mark 1","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rayray39"},"content":"mark 2","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rayray39"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rayray39"},"content":"blah blah","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rayray39"},"content":"mark 7","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rayray39"},"content":"delete 0","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rayray39"},"content":"bye","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"rayray39":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rayray39"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rayray39":1,"-":20}}]
