{"authorDailyContributionsMap":{"LiHaixin000":[{"date":"2024-08-21","commitResults":[{"hash":"966397c21b77efd654cbf9a3ed6d6148276b48ee","isMergeCommit":false,"messageTitle":"Rename, Greet, Exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":10}}},{"hash":"17c99b5debedac4e42b9a0b206d18a3d0c602d3f","isMergeCommit":false,"messageTitle":"Improve the skeletal version of Duke so that it echos commands entered by the user, and exits when the user types the command bye","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":4}}},{"hash":"7454d140683a0415cc8e9d32ae608e7ec0030b19","isMergeCommit":false,"messageTitle":"Add the ability to store whatever text entered by the user and display them back to the user when requested","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":3}}},{"hash":"b895579cec481c86c67fcc5b6007e3f9c21719c5","isMergeCommit":false,"messageTitle":"Added task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}}]},{"date":"2024-08-22","commitResults":[{"hash":"471f6af9b1cf62f7fa89ee9ba2b8262b79c1d9f4","isMergeCommit":false,"messageTitle":"Add the ability to mark tasks as done and undone","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":5}}},{"hash":"ccf8e008521fbc9c85cfa7a64ec4a27441327959","isMergeCommit":false,"messageTitle":"Added Deadline, Event and Todo classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"685eedd16fcf936653c34ebf029fbb755226cbc1","isMergeCommit":false,"messageTitle":"Implemented behaviours for ToDos, Events, Deadlines in Arts class","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":5}}},{"hash":"26ea3d8b5b6168a67ec6b30e6fd564c5cdfa0d85","isMergeCommit":false,"messageTitle":"implemented automated text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":2,"deletions":2}}},{"hash":"df785d6df16408f6daab34e1112e1ea8e728a8ff","isMergeCommit":false,"messageTitle":"Added trim to inputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"3898a13639f6ac1727cc82018b6e1800bbe309c5","isMergeCommit":false,"messageTitle":"Added ArtsException class and added try-catch error handling to Arts","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":47}}},{"hash":"d223852abcfedc0c2264d88ec580e23603160bf2","isMergeCommit":false,"messageTitle":"Add support for deleting tasks from the list","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":13}}},{"hash":"6e79f4a1d7fed1267db7f00cf87dfc86f9e22694","isMergeCommit":false,"messageTitle":"Added enum Command class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"2416f469e7217debce41d174b31c0336f86d6f80","isMergeCommit":false,"messageTitle":"Use enums in Arts class","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":56}}},{"hash":"3cc9c6e7e5ec797974a25c7eddae06bd4265764e","isMergeCommit":false,"messageTitle":"Updated input and expected for text UI test to include new features","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"java":{"insertions":1,"deletions":0}}}]},{"date":"2024-08-28","commitResults":[{"hash":"4806641f90668f65914b44a006b6228d71505cb8","isMergeCommit":false,"messageTitle":"Implement task saving and loading functionality","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":90,"deletions":5}}},{"hash":"13c08f2b7f4aed04d164f3ae4c9bfc8eb85eefea","isMergeCommit":true,"messageTitle":"Merge branch-Level-7 implementing Level 7","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"24a658256d682d1a0f52295a35dd4822b97e1c4a","isMergeCommit":false,"messageTitle":"Implement save tasks to file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"7e593b0a1d87d620ef96fa6338ea7a7621d4859b","isMergeCommit":false,"messageTitle":"Replace string with dates and times","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":62,"deletions":21}}},{"hash":"4439d79b5af1d3eb7b897b703347df68556ed680","isMergeCommit":true,"messageTitle":"Merge branch-Level-8 implementing Level 8","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"7144ccfcae92193ad006c3540d84bca88115b1eb","isMergeCommit":false,"messageTitle":"Implement OOP to extract out closely related code as classes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":2},"java":{"insertions":421,"deletions":181}}},{"hash":"0f3203fbc780387ab550a5a13a64c0d557ad241a","isMergeCommit":true,"messageTitle":"Merge A-MoreOOP implement More OOP","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"0e9d4ac87b0e6f96c457abcc422dfac87f9e0a9f","isMergeCommit":false,"messageTitle":"Divide classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":93,"deletions":20}}}]},{"date":"2024-08-29","commitResults":[{"hash":"919b9fd35bb3484936933ad2983576da8808b8ce","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"587c7eab745b39df4ec60ac5ae1992f2650c3dad","isMergeCommit":false,"messageTitle":"Add JUnit support","messageBody":"","tags":["v0.1","A-JUnit"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":805,"deletions":0}}},{"hash":"bee424dbb5157a35824f046c90c186537251cc01","isMergeCommit":false,"messageTitle":"Modify build.gradle","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":2}}},{"hash":"b70d36d536bb3910616e4079d3c4f03e2bbc2a51","isMergeCommit":false,"messageTitle":"Implement JavaDoc comments","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":753,"deletions":27}}},{"hash":"47292152101eb5857d90e0b9330b0de7cddb6372","isMergeCommit":false,"messageTitle":"Apply coding standards","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}},{"hash":"9c7ab688a172e1e21ebce5e52f4a5e92b0cfa962","isMergeCommit":false,"messageTitle":"Implement find function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":1}}},{"hash":"748e94d94595aff99b9734f35483efd4191abe0d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027 to apply coding standards updates.","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2bf3f3c24eb82813201d24cd417c2b61c8ebc5a9","isMergeCommit":true,"messageTitle":"Resolve conflicts from merging","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-03","commitResults":[{"hash":"b9621a8425fbdbaacff840baaa2af42448d16f09","isMergeCommit":false,"messageTitle":"Add A-CheckStyle increment","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":235,"deletions":205}}},{"hash":"fc6d0f6c92cb2dcef1b4ffe6af2b1d0673db14e9","isMergeCommit":false,"messageTitle":"Implement basic GUI interface","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":2},"fxml":{"insertions":66,"deletions":0},"java":{"insertions":160,"deletions":0}}}]},{"date":"2024-09-04","commitResults":[{"hash":"23cff9825a88a92ee770ba404f6810332cab1139","isMergeCommit":false,"messageTitle":"Improve GUI implementation","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":2},"java":{"insertions":81,"deletions":81}}},{"hash":"118b6a5bf5e8c591e437f99bc69946df392082fd","isMergeCommit":false,"messageTitle":"Test arts functionalities","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":10}}},{"hash":"4b080c319e4c4afe4cc9130fa3cfaeba124a2736","isMergeCommit":false,"messageTitle":"Add varargs to my code","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2024-09-10","commitResults":[{"hash":"d5acebbff933d0e3be52310af4e00f363cc72f39","isMergeCommit":false,"messageTitle":"Add assertions to check critical assumptions","messageBody":"- Added assertions to ensure input parameters are not null.\n- Checked collection sizes to prevent index errors.\n- Verified important variables after complex calculations.\n- Validated state transitions in stateful components.\n\nThese assertions help catch unexpected states during development.\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":140,"deletions":18}}},{"hash":"22c2f824121053958798527b6c68a26c99366740","isMergeCommit":false,"messageTitle":"Refactor AddDeadlineCommand to Improve Code Quality","messageBody":"- Minimized the scope of the `date` variable in the `parseDate` method by removing its declaration outside the loop. The variable is now declared within the `try` block, where it is used.\n- Extracted the error message in `parseDate` into a constant `DATE_FORMAT_ERROR_MESSAGE` to improve readability and maintainability by avoiding magic strings.\n- Added a comment in the empty catch block of `parseDate` to clarify its purpose, which is to continue trying the next formatter if a `DateTimeParseException` occurs.\n- Ensured that the happy path is prominent by structuring the code for clarity and handling exceptions as deviations.\n\nThese changes enhance the readability, maintainability, and overall quality of the code without altering its logic or functionality.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":3,"deletions":7}}},{"hash":"284b5238328d3d375a9bec4032fc4289066bfdf1","isMergeCommit":false,"messageTitle":"Refactor AddEventCommand to improve code quality","messageBody":"- Extracted error messages into constants for better readability and maintainability. This helps avoid magic strings and makes it easier to update messages in the future.\n- Simplified the date parsing logic by removing the unnecessary variable declaration and directly returning the parsed date. This minimizes variable scope and improves code clarity.\n- Used String.format for constructing the return message, which simplifies the string concatenation process and enhances readability.\n- Added a comment in the empty catch block to clarify its purpose, ensuring future developers understand why it is intentionally left blank.\n- Maintained the same logic and functionality while making the happy path more prominent and improving overall code readability.\n\nThese changes aim to enhance the maintainability and clarity of the AddEventCommand class without altering its behavior.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":15,"deletions":11}}},{"hash":"bfb0b16e1798e916e5917aa931781b5d45cdaab6","isMergeCommit":false,"messageTitle":"Refactor code to improve code quality","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":3},"java":{"insertions":81,"deletions":57}}}]},{"date":"2024-09-11","commitResults":[{"hash":"923f0f0503a44318593abcf92b076d144c0247a5","isMergeCommit":false,"messageTitle":"feat: Refactor date parsing using Java Streams in AddDeadlineCommand and AddEventCommand","messageBody":"- Refactored the parseDate method in both AddDeadlineCommand and AddEventCommand to utilize Java Streams.\n- Used Streams to iterate over DateTimeFormatter array for more concise and readable code.\n- Implemented map, filter, and findFirst operations to attempt parsing dates with multiple formatters.\n- Enhanced error handling by throwing ArtsException if no formatter successfully parses the date.\n\nThis change improves the code\u0027s readability and leverages Java\u0027s functional programming capabilities for processing collections.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":24,"deletions":26}}},{"hash":"85b68835ca1c9ca807102b2374e16b56f305a4da","isMergeCommit":true,"messageTitle":"Merge pull request #1 from LiHaixin000/branch-A-Assertions","messageBody":"Add assertions to check critical assumptions","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"1504b5405a7fae66dfb544ac2e8f72f77ed39571","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"4a3177701ec71f2f1af01efb2e351f6d5f43b556","isMergeCommit":true,"messageTitle":"Merge pull request from branch-A-CodeQuality to master","messageBody":"Enhancements:\r\n- Improved code assertions for better error handling and validation.\r\n- Refactored string formatting to use `String.format` for consistency and readability.\r\n- Ensured consistent use of `DateTimeFormatter` for date parsing and formatting.\r\n- Added detailed JavaDoc comments for better code documentation and understanding.","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"3339862e2534a3e08c100a14b048d3cfb627fbd4","isMergeCommit":false,"messageTitle":"Resolve merge conflict between master and branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":3},"java":{"insertions":91,"deletions":71}}},{"hash":"9745c21053bd91a21b37f16079cf45b0f25c94a3","isMergeCommit":true,"messageTitle":"Resolve merge conflicts","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"fd9faa328839e168de5a2eec222d0e58b797dd56","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"651e4406621dbd9033117685a186430280ef8805","isMergeCommit":true,"messageTitle":"Merge pull request from branch-A-Streams to master","messageBody":"feat: Refactor date parsing using Java Streams in AddDeadlineCommand …","fileTypesAndContributionMap":{}},{"hash":"11622185810c717c7c126477ef1717cd23ee6e9b","isMergeCommit":false,"messageTitle":"Resolve conflicts in merging","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":20}}},{"hash":"1e13e285ec1d74eb7d532a5c61a9c73a397ecaae","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/LiHaixin000/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"60a84b4c98a622fcbf6ead14d11000bfd9707d7b","isMergeCommit":false,"messageTitle":"Resolve bug on application cannot run","messageBody":"","tags":["A-Streams"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":13,"deletions":13}}},{"hash":"5a0d92c3e30697c762da17e4ef13592484c6ed2b","isMergeCommit":false,"messageTitle":"Use GitHub Actions to set up Continuous Integration","messageBody":"","tags":["A-CI"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2}}},{"hash":"738e1bff562b83981e490ce910bfbd69929305e6","isMergeCommit":false,"messageTitle":"Add extension to allow sorting by deadline and event start date","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":5},"java":{"insertions":179,"deletions":2}}},{"hash":"8998c9168556e499f620c2c2afada1d5337d4526","isMergeCommit":false,"messageTitle":"Improve UI for application interface","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"fxml":{"insertions":13,"deletions":38},"java":{"insertions":35,"deletions":2}}},{"hash":"07357bafb65e0aec7eff739450211379ff9fed9d","isMergeCommit":false,"messageTitle":"Introduce personality-styles to commands","messageBody":"","tags":["A-Personality"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":8},"java":{"insertions":49,"deletions":15}}},{"hash":"ea751e727edaae535dfe0702615533e37d51b4ea","isMergeCommit":false,"messageTitle":"Add more error handling for AddDeadlineCommand, AddEventCommand, AddTodoCommand","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":101,"deletions":36}}},{"hash":"39ccf98403ad0fbba85b4a8c03a1f94bd0890a4a","isMergeCommit":false,"messageTitle":"Add more error handling for DeleteCommand and FindCommand","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":31,"deletions":22}}},{"hash":"5ad24b2675cb546e9aad28d58b70d8521d75c90f","isMergeCommit":false,"messageTitle":"Add more error handling for MarkCommand and UnmarkCommand","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":51,"deletions":33}}},{"hash":"8b72019b605d289f9e26e00b4e7f58b86f9dd2c6","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreErrorHandling\u0027","messageBody":"","tags":["A-MoreErrorHandling"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"LiHaixin000":{"java":2945,"md":0,"fxml":41,"sh":2,"bat":1,"gradle":25,"txt":33}},"authorContributionVariance":{"LiHaixin000":160728.6},"authorDisplayNameMap":{"LiHaixin000":"CS2103T-F09-1 LI H..IXIN"}}
