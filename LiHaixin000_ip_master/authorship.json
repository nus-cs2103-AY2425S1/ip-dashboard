[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"checkstyle {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"java {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_17","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"    mainClass.set(\"arts.Launcher\")","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"    archiveBaseName \u003d \"Main\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":41,"LiHaixin000":25}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"D | 0 | test | 2000-10-22 1600","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"D | 0 | test | 2000-10-22 1640","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"D | 0 | test | 2000-10-22 1640","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"D | 0 | test | 2000-10-22 1640","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"D | 0 | test | 2000-10-22 1640","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"D | 0 | test | 2000-10-22 1700","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"D | 0 | return book | 2019-12-02 1800","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"E | 1 | add homework | 2000-10-22 1600 | 2000-10-22 1700","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"E | 1 | birthday | 2000-10-22 1600 | 2000-10-22 1700","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"E | 1 | jog | 2019-10-15 1600 | 2019-10-15 1700","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"E | 0 | birthday | 2000-10-22 1600 | 2000-10-22 1700","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"E | 0 | birthday | 2000-10-22 1600 | 2000-10-22 1700","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"E | 0 | birthday | 2000-10-22 1600 | 2000-10-22 1700","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"E | 0 | birthday | 2000-10-22 1600 | 2000-10-22 1700","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"D | 0 | test | 2000-10-22 1640","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":15}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"# Arts User Guide","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"![Product Screenshot](./Ui.png) \u003cbr\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"Welcome to the **Arts** User Guide. This guide will help you navigate and utilize all the features of the Arts product efficiently.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"## Adding Deadlines","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"To add a deadline, use the following command format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"Example: `deadline \u003cdeadline-name\u003e /by \u003cdate\u003e`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"- **Date Format**: The date must be in one of the following formats:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"    - `yyyy-MM-dd HHmm` (e.g., `2023-12-31 2359`)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    - `d/M/yyyy HHmm` (e.g., `31/12/2023 2359`)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will create a new deadline with the specified name and date, provided that the date is valid and the task does not already exist in the task list.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"  Yatta! 🎉 I\u0027ve successfully added this task to your list:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"  ✨ \u003cdeadline-name\u003e (by: \u003cformatted-date\u003e) ✨","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"  Now your quest has \u003cnumber-of-tasks\u003e task(s) to conquer! Ganbatte! 💪","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"- Ensure that the task description and deadline are separated by `/by`.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"- The task description cannot be empty.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"- If the task already exists with the same description and deadline, an error will be raised.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"- If the date format is incorrect, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"  Invalid date format. Please use yyyy-MM-dd HHmm or d/M/yyyy HHmm.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"## Adding Events","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"To add an event, use the following command format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"Example: `event \u003cevent-name\u003e /from \u003cstart-date\u003e /to \u003cend-date\u003e`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"- **Date Format**: Both the start and end dates must be in one of the following formats:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"    - `yyyy-MM-dd HHmm` (e.g., `2023-12-31 1400`)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    - `d/M/yyyy HHmm` (e.g., `31/12/2023 1400`)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will create a new event with the specified name and date range, provided that the dates are valid, the start date is before the end date, and the event does not already exist in the task list.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"  Sugoi! 🌟 I\u0027ve added this epic event to your adventure:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"  🎉 \u003cevent-name\u003e (from: \u003cformatted-start-date\u003e to: \u003cformatted-end-date\u003e) 🎉","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"  Now your journey includes \u003cnumber-of-tasks\u003e task(s) to tackle! Keep up the great work, hero! 💪","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"- Ensure that the event description, start date, and end date are separated by `/from` and `/to`.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"- The event description cannot be empty.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"- If the event already exists with the same description and date range, an error will be raised.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"- If the start date is not before the end date, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"  Event start date must be before end date.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"- If the date format is incorrect, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"  Invalid date format. Please use yyyy-MM-dd HHmm or d/M/yyyy HHmm.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"- If the event details are incomplete or incorrectly formatted, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"  The event must have /from and /to times.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"## Adding Todo Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"To add a todo task, use the following command format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"Example: `add-todo \u003ctodo-description\u003e`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"- **Description**: The description of the todo task must not be empty and should clearly specify the task to be added.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will create a new todo task with the specified description, provided that the description is valid and the task does not already exist in the task list.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"  Hooray! 🎊 A new adventure awaits with this task:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"  ✨ \u003ctodo-description\u003e ✨","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"  Your quest now has \u003cnumber-of-tasks\u003e task(s) to conquer! Keep shining, champion! 🌟","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"- The todo description cannot be empty. If it is, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"  The description of a todo cannot be empty.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"- If the todo task already exists with the same description, an error will be raised:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"  A todo with the same description already exists.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"- If any other input parameter is invalid, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"  Invalid input parameters","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"## Deleting Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"To delete a task, use the following command format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"Example: `delete \u003ctask-index\u003e`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"- **Task Index**: The index of the task to be deleted must be a valid number corresponding to the task\u0027s position in the task list (starting from 1).","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will remove the specified task from the task list, update the storage, and display a confirmation message.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"  Farewell, brave task! 🌸 You\u0027ve been removed from the quest:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"  💔 \u003ctask-description\u003e 💔","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"  The journey continues with \u003cnumber-of-tasks\u003e task(s) left. Keep going, warrior! 🗡️","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LiHaixin000"},"content":"- The task index must be a number. If it is not, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LiHaixin000"},"content":"  Task index must be a number.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LiHaixin000"},"content":"- The task index must be within the bounds of the task list. If it is not, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LiHaixin000"},"content":"  Task index is out of bounds.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LiHaixin000"},"content":"- If there is an error saving the updated task list to storage, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LiHaixin000"},"content":"  Failed to save tasks to storage.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LiHaixin000"},"content":"## Finding Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LiHaixin000"},"content":"To find tasks containing a specific keyword, use the following command format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LiHaixin000"},"content":"Example: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LiHaixin000"},"content":"- **Keyword**: The keyword to search for in the task descriptions. It must not be null, empty, or consist solely of special characters.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will search through the task list and return tasks that contain the specified keyword in their descriptions.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LiHaixin000"},"content":"    - If tasks are found:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LiHaixin000"},"content":"      ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LiHaixin000"},"content":"      Eureka! 🎉 Here are the tasks that matched your quest for \u0027\u003ckeyword\u003e\u0027:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LiHaixin000"},"content":"      1. \u003ctask-description-1\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LiHaixin000"},"content":"      2. \u003ctask-description-2\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LiHaixin000"},"content":"      ...","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LiHaixin000"},"content":"      Keep up the great work, hero! 💪✨","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LiHaixin000"},"content":"      ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LiHaixin000"},"content":"    - If no tasks are found:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LiHaixin000"},"content":"      ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LiHaixin000"},"content":"      Oh no! 😱 No tasks matched your search. Keep your spirits high, the right task will appear! 🌈","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LiHaixin000"},"content":"      ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LiHaixin000"},"content":"- The keyword must contain at least one alphanumeric character. If it doesn\u0027t, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LiHaixin000"},"content":"  Keyword cannot be null, empty, or contain only special characters.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LiHaixin000"},"content":"## Marking Tasks as Done","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"LiHaixin000"},"content":"To mark a task as done, use the following command format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"LiHaixin000"},"content":"Example: `mark \u003ctask-index\u003e`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"LiHaixin000"},"content":"- **Task Index**: The index of the task to be marked as done must be a valid number corresponding to the task\u0027s position in the task list (starting from 1).","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will mark the specified task as done, update the storage, and display a confirmation message.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"LiHaixin000"},"content":"  Victory! 🌟 I\u0027ve marked this task as complete:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"LiHaixin000"},"content":"  🎉 \u003ctask-description\u003e 🎉","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"LiHaixin000"},"content":"  You\u0027ve leveled up, champion! Keep conquering those tasks! 🚀","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"LiHaixin000"},"content":"- The task index must be a number. If it is not, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"LiHaixin000"},"content":"  Task index must be a number.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"LiHaixin000"},"content":"- The task index must be within the bounds of the task list. If it is not, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"LiHaixin000"},"content":"  Task index is out of bounds.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"LiHaixin000"},"content":"- If there is an error saving the updated task list to storage, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"LiHaixin000"},"content":"  Failed to save tasks to storage.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"LiHaixin000"},"content":"- If the task at the given index does not exist, an error will be thrown:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"LiHaixin000"},"content":"  Task at the given index does not exist.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"LiHaixin000"},"content":"## Unmarking Tasks as Not Done","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"LiHaixin000"},"content":"To unmark a task (mark it as not done), use the following command format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"LiHaixin000"},"content":"Example: `unmark \u003ctask-index\u003e`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"LiHaixin000"},"content":"- **Task Index**: The index of the task to be marked as not done must be a valid number corresponding to the task\u0027s position in the task list (starting from 1).","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will mark the specified task as not done, update the storage, and display a confirmation message.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"LiHaixin000"},"content":"  🎌 Fear not, for this task has been unmarked! 🗒️","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"LiHaixin000"},"content":"  Continue your quest with renewed vigor, valiant warrior! 🌟","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"LiHaixin000"},"content":"  \u003ctask-description\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"LiHaixin000"},"content":"- The task index must be a number. If it is not, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"LiHaixin000"},"content":"  Task index must be a number.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"LiHaixin000"},"content":"- The task index must be within the bounds of the task list. If it is not, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"LiHaixin000"},"content":"  Task index is out of bounds.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"LiHaixin000"},"content":"- If there is an error saving the updated task list to storage, the following error message will be displayed:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"LiHaixin000"},"content":"  Failed to save tasks to storage.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"LiHaixin000"},"content":"- If the task at the given index does not exist, an error will be thrown:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"LiHaixin000"},"content":"  Task at the given index does not exist.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"LiHaixin000"},"content":"## Sorting Deadline Tasks Chronologically","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"LiHaixin000"},"content":"To sort deadline tasks chronologically, use the following command:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"LiHaixin000"},"content":"Example: `sort_deadlines`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will sort all tasks of type `Deadline` in chronological order based on their due dates. The sorted list will then be saved to storage, and a confirmation message will be displayed.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"LiHaixin000"},"content":"  ✨ Behold! The deadlines have been aligned in perfect harmony! 📅✨","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"LiHaixin000"},"content":"  Your journey through time is now clearer, brave adventurer! 🌟","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"LiHaixin000"},"content":"- The command will only affect tasks of type `Deadline`. Other tasks will remain in their original order.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"LiHaixin000"},"content":"- The sorted deadlines will be placed at the beginning of the task list, followed by other types of tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"LiHaixin000"},"content":"- If there is an error saving the sorted task list to storage, an `ArtsException` will be thrown with an appropriate error message.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"LiHaixin000"},"content":"## Sorting Event Tasks by Start Date","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"LiHaixin000"},"content":"To sort event tasks by their start date, use the following command:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"LiHaixin000"},"content":"Example: `sort_events`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"LiHaixin000"},"content":"- **Outcome**: This action will sort all tasks of type `Event` by their start date. The sorted list will then be saved to storage, and a confirmation message will be displayed.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"LiHaixin000"},"content":"- **Expected Output**:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"LiHaixin000"},"content":"  ✨ The stars have aligned, and your events are now sorted by time! ⏰✨","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"LiHaixin000"},"content":"  Embark on your epic journey with clarity and purpose, noble hero! 🌟","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"LiHaixin000"},"content":"  ```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"LiHaixin000"},"content":"### Notes","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"LiHaixin000"},"content":"- The command will only affect tasks of type `Event`. Other tasks will remain in their original order.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"LiHaixin000"},"content":"- The sorted events will be placed at the beginning of the task list, followed by other types of tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"LiHaixin000"},"content":"- If there is an error saving the sorted task list to storage, an `ArtsException` will be thrown with an appropriate error message.","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"-":21,"LiHaixin000":248}},{"path":"src/main/java/arts/Arts.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.AddDeadlineCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.AddEventCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.AddTodoCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.DeleteCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.FindCommand;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.MarkCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.SortDeadlinesCommand;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.SortEventsCommand;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import arts.command.UnmarkCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import arts.enums.CommandType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Parser;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":" * The Arts class is the main entry point for the Arts application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":" * It manages the initialization and execution of the application, handling user commands","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":" * and coordinating between different components like storage, UI, and task management.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"public class Arts {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private static final DateTimeFormatter[] INPUT_FORMATTERS \u003d new DateTimeFormatter[]{","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    };","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"    private static final String NO_TASKS_MESSAGE \u003d \"No tasks yet! Why not add some?\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    private static final String TASK_LIST_HEADER \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    private static final String UNKNOWN_COMMAND_MESSAGE \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"    private static final String UNEXPECTED_ERROR_MESSAGE \u003d \"An unexpected error occurred: \";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    // New field to store the command type","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    private String commandType;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs an Arts object with the specified file path for task storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the UI, storage, parser, and loads existing tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"    public Arts(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"        TaskList tempTasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"            tempTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        } catch (ArtsException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"            tempTasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"        tasks \u003d tempTasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"     * Generates a response based on user input.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"     * @param input The user input.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"     * @return A response string.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"            CommandType command \u003d parser.parseCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"            commandType \u003d command.name();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"            String[] parts \u003d parser.parseArguments(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"            switch (command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"            case BYE:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"                return GOODBYE_MESSAGE;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"            case LIST:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"                return listTasks();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"            case MARK:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"                assert parts.length \u003e 1 : \"MARK command requires additional arguments\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"                return new MarkCommand(tasks, storage, ui, parts[1]).execute();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"            case UNMARK:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"                assert parts.length \u003e 1 : \"UNMARK command requires additional arguments\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"                return new UnmarkCommand(tasks, storage, ui, parts[1]).execute();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"            case DELETE:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"                assert parts.length \u003e 1 : \"DELETE command requires additional arguments\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"                return new DeleteCommand(tasks, storage, ui, parts[1]).execute();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"            case TODO:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"                assert parts.length \u003e 1 : \"TODO command requires additional arguments\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"                return new AddTodoCommand(tasks, storage, ui, parts[1]).execute();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"            case DEADLINE:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"                assert parts.length \u003e 1 : \"DEADLINE command requires additional arguments\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"                return new AddDeadlineCommand(tasks, storage, ui, parts[1], INPUT_FORMATTERS).execute();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"            case EVENT:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"                assert parts.length \u003e 1 : \"EVENT command requires additional arguments\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"                return new AddEventCommand(tasks, storage, ui, parts[1], INPUT_FORMATTERS).execute();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"            case FIND:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"                assert parts.length \u003e 1 : \"FIND command requires additional arguments\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"                return new FindCommand(tasks, parts[1]).execute();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"            case SORT_DEADLINES:","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"                return new SortDeadlinesCommand(tasks, storage, ui).execute();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"            case SORT_EVENTS:","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"                return new SortEventsCommand(tasks, storage, ui).execute();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"            default:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"                throw new ArtsException(UNKNOWN_COMMAND_MESSAGE);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"        } catch (ArtsException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"            return \"OOPS!!! \" + e.getMessage();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"            return UNEXPECTED_ERROR_MESSAGE + e.getMessage();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LiHaixin000"},"content":"     * Returns the type of the last command executed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LiHaixin000"},"content":"     * @return The command type as a string.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LiHaixin000"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LiHaixin000"},"content":"        return commandType;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LiHaixin000"},"content":"     * Lists all tasks currently in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string representation of all tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LiHaixin000"},"content":"    private String listTasks() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LiHaixin000"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LiHaixin000"},"content":"            return NO_TASKS_MESSAGE;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LiHaixin000"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LiHaixin000"},"content":"            StringBuilder sb \u003d new StringBuilder(TASK_LIST_HEADER);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LiHaixin000"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LiHaixin000"},"content":"                sb.append((i + 1)).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LiHaixin000"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LiHaixin000"},"content":"            return sb.toString();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LiHaixin000"},"content":"     * Main method to start the Arts application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LiHaixin000"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LiHaixin000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LiHaixin000"},"content":"        new Arts(\"./data/tasks.txt\").run();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LiHaixin000"},"content":"     * Runs the Arts application, processing user commands in a loop until exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LiHaixin000"},"content":"    public void run() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LiHaixin000"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LiHaixin000"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LiHaixin000"},"content":"        while (!isExit) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LiHaixin000"},"content":"            try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LiHaixin000"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"LiHaixin000"},"content":"                assert input !\u003d null : \"Input from UI cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"LiHaixin000"},"content":"                String response \u003d getResponse(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"LiHaixin000"},"content":"                ui.showMessage(response);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"LiHaixin000"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"LiHaixin000"},"content":"                    isExit \u003d true;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"LiHaixin000"},"content":"                }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"LiHaixin000"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"LiHaixin000"},"content":"                ui.showError(UNEXPECTED_ERROR_MESSAGE + e.getMessage());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"LiHaixin000"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":175}},{"path":"src/main/java/arts/ArtsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":" * The ArtsException class represents custom exceptions specific to the Arts application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":" * It extends the standard Exception class to provide application-specific error handling.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"public class ArtsException extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a new ArtsException with the specified detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"     * @param message The detail message, which is saved for later retrieval by the getMessage() method.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    public ArtsException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":17}},{"path":"src/main/java/arts/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"    private void flip() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    private void changeDialogStyle(String commandType) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        switch(commandType) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        case \"LIST\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"            dialog.getStyleClass().add(\"list-label\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"            break;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"        case \"MARK\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"            dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"            break;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        case \"DELETE\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"            break;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        default:","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"            // Do nothing","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"    public static DialogBox getArtsDialog(String text, Image img, String commandType) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"        db.flip();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"        return db;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":78}},{"path":"src/main/java/arts/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"public class Launcher {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":12}},{"path":"src/main/java/arts/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":" * A GUI for Arts using FXML.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    private Arts arts \u003d new Arts(\"./data/tasks.txt\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"            stage.setTitle(\"Arts\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setArts(arts);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"            stage.show();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":35}},{"path":"src/main/java/arts/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"    private Arts arts;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private Image artsImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaArts.png\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    /** Injects the Arts instance */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"    public void setArts(Arts a) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        arts \u003d a;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Arts\u0027 reply and then appends them to","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"        String response \u003d arts.getResponse(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        String commandType \u003d arts.getCommandType();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"                DialogBox.getArtsDialog(response, artsImage, commandType)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        );","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":54}},{"path":"src/main/java/arts/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    private static final String DATE_FORMAT_ERROR_MESSAGE \u003d \"Invalid date format. \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"            + \"Please use yyyy-MM-dd HHmm or d/M/yyyy HHmm.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    private final String details;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    private final DateTimeFormatter[] inputFormatters;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs an AddDeadlineCommand with the specified task list, storage, UI, task details,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     * and date formatters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * @param storage The storage used to save tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     * @param details The details of the task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * @param inputFormatters An array of date formatters for parsing the deadline date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"    public AddDeadlineCommand(TaskList tasks, Storage storage, Ui ui, String details,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"                              DateTimeFormatter... inputFormatters) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"        assert details !\u003d null \u0026\u0026 !details.trim().isEmpty() : \"Details cannot be null or empty\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        assert inputFormatters !\u003d null \u0026\u0026 inputFormatters.length \u003e 0 : \"At least one DateTimeFormatter \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"                + \"must be provided\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        this.details \u003d details.trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        this.inputFormatters \u003d inputFormatters;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command to add a deadline task. Parses the task details and adds the task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"     * to the task list. Saves the updated task list to storage and displays a confirmation message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the task details are invalid or if the date format is incorrect.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        String[] deadlineParts \u003d details.split(\" /by \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"        if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Details must contain a \u0027/by\u0027 to separate task description and deadline\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        String taskDescription \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Task description cannot be empty.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"        LocalDateTime deadlineDate \u003d parseDate(deadlineParts[1].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"        if (tasks.contains(new Deadline(taskDescription, deadlineDate))) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"A task with the same description and deadline already exists.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"        tasks.addTask(new Deadline(taskDescription, deadlineDate));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks.size() \u003e 0 : \"Task was not added to the task list\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"        return \"Yatta! 🎉 I\u0027ve successfully added this task to your list:\\n✨ \" + tasks.getTask(tasks.size() - 1)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"                + \" ✨\\nNow your quest has \" + tasks.size() + \" \" + (tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"                + \" to conquer! Ganbatte! 💪\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"     * Parses a date string using the provided date formatters. Attempts to parse the date string","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"     * with each formatter until successful. Throws an exception if all formatters fail.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"     * @param dateString The date string to parse.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the date string cannot be parsed with any of the provided formatters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"    private LocalDateTime parseDate(String dateString) throws ArtsException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"        assert dateString !\u003d null \u0026\u0026 !dateString.isEmpty() : \"Date string cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"        for (DateTimeFormatter formatter : inputFormatters) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"            try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"                return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"                // Continue trying with the next formatter","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"        throw new ArtsException(DATE_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":107}},{"path":"src/main/java/arts/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    private static final String DATE_FORMAT_ERROR_MESSAGE \u003d","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"            \"Invalid date format. Please use yyyy-MM-dd HHmm or d/M/yyyy HHmm.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private static final String EVENT_PARTS_ERROR_MESSAGE \u003d","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"            \"The event must have /from and /to times.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    private static final String INVALID_EVENT_TIMES_MESSAGE \u003d","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"            \"Event start date must be before end date.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    private static final String DUPLICATE_EVENT_MESSAGE \u003d","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"            \"An event with the same details already exists.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    private final String details;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    private final DateTimeFormatter[] inputFormatters;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs an AddEventCommand with the specified task list, storage, UI, task details,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * and date formatters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"     * @param storage The storage used to save tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"     * @param details The details of the task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"     * @param inputFormatters An array of date formatters for parsing the event dates.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    public AddEventCommand(TaskList tasks, Storage storage, Ui ui, String details,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"                           DateTimeFormatter... inputFormatters) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        assert details !\u003d null \u0026\u0026 !details.isEmpty() : \"Details cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        assert inputFormatters !\u003d null \u0026\u0026 inputFormatters.length \u003e 0","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"                : \"At least one DateTimeFormatter must be provided\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        this.details \u003d details.trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"        this.inputFormatters \u003d inputFormatters;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command to add an event task. Parses the task details and adds the task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"     * to the task list. Saves the updated task list to storage and displays a confirmation message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the task details are invalid or if the date format is incorrect.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"        // Normalize spaces","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        String normalizedDetails \u003d normalizeSpaces(details);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        // Split the details by /from and /to","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"        String[] eventParts \u003d normalizedDetails.split(\" /from | /to \");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"        if (eventParts.length !\u003d 3) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(EVENT_PARTS_ERROR_MESSAGE);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"        String description \u003d eventParts[0].trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"        LocalDateTime eventFromDate \u003d parseDate(eventParts[1].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"        LocalDateTime eventToDate \u003d parseDate(eventParts[2].trim());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"        if (!eventFromDate.isBefore(eventToDate)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(INVALID_EVENT_TIMES_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"        Event newEvent \u003d new Event(description, eventFromDate, eventToDate);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"        if (tasks.contains(newEvent)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(DUPLICATE_EVENT_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"Sugoi! 🌟 I\u0027ve added this epic event to your adventure:\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"                        + \"\\n🎉 %s 🎉\\nNow your journey includes %d %s to tackle! Keep up the great work, hero! 💪\",","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"                tasks.getTask(tasks.size() - 1),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"                tasks.size(),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"                tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"     * Parses a date string using the provided date formatters. Attempts to parse the date string","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"     * with each formatter until successful. Throws an exception if all formatters fail.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"     * @param dateString The date string to parse.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the date string cannot be parsed with any of the provided formatters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"    private LocalDateTime parseDate(String dateString) throws ArtsException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"        assert dateString !\u003d null \u0026\u0026 !dateString.isEmpty() : \"Date string cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"        return java.util.Arrays.stream(inputFormatters)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"                .map(formatter -\u003e {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"                    try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"                        return LocalDateTime.parse(dateString, formatter);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LiHaixin000"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LiHaixin000"},"content":"                        return null;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LiHaixin000"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LiHaixin000"},"content":"                })","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LiHaixin000"},"content":"                .filter(date -\u003e date !\u003d null)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LiHaixin000"},"content":"                .findFirst()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LiHaixin000"},"content":"                .orElseThrow(() -\u003e new ArtsException(DATE_FORMAT_ERROR_MESSAGE));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LiHaixin000"},"content":"     * Normalize spaces in a string by replacing multiple spaces with a single space.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LiHaixin000"},"content":"     * @param input The input string.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LiHaixin000"},"content":"     * @return The normalized string.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LiHaixin000"},"content":"    private String normalizeSpaces(String input) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LiHaixin000"},"content":"        return input.replaceAll(\"\\\\s+\", \" \").trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":137}},{"path":"src/main/java/arts/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Todo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"public class AddTodoCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"    private static final String EMPTY_DESCRIPTION_ERROR_MESSAGE \u003d \"The description of a todo cannot be empty.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    private static final String DUPLICATE_TODO_MESSAGE \u003d \"A todo with the same description already exists.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private final String description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs an AddTodoCommand with the specified task list, storage, UI, and task description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     * @param storage The storage used to save tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * @param description The description of the todo task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    public AddTodoCommand(TaskList tasks, Storage storage, Ui ui, String description) throws ArtsException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        if (tasks \u003d\u003d null || storage \u003d\u003d null || ui \u003d\u003d null || description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Invalid input parameters\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        this.description \u003d normalizeSpaces(description);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command to add a todo task. Checks the task description for validity,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     * adds the task to the task list, saves the updated task list to storage, and returns","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * a confirmation message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the task description is empty or invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"        if (tasks.contains(newTodo)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(DUPLICATE_TODO_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        tasks.addTask(newTodo);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Failed to save tasks: \" + e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"Hooray! 🎊 A new adventure awaits with this task:\\n✨ %s ✨\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"                        + \"Your quest now has %d %s to conquer! Keep shining, champion! 🌟\",","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"                tasks.getTask(tasks.size() - 1),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"                tasks.size(),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"                tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"     * Normalize spaces in a string by replacing multiple spaces with a single space.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"     * @param input The input string.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"     * @return The normalized string.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"    private String normalizeSpaces(String input) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"        return input.replaceAll(\"\\\\s+\", \" \").trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":84}},{"path":"src/main/java/arts/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command that can be executed, potentially throwing an ArtsException.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":" * This interface is intended to be implemented by classes that encapsulate specific","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":" * commands or actions within the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"public interface Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command. Implementations of this method should define the specific","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"     * actions that occur when the command is run. This method may throw an ArtsException","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"     * if the command cannot be executed successfully.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If an error occurs during the execution of the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    String execute() throws ArtsException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":21}},{"path":"src/main/java/arts/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"    private static final String TASK_INDEX_NOT_A_NUMBER_ERROR_MESSAGE \u003d \"Task index must be a number.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    private static final String TASK_INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE \u003d \"Task index is out of bounds.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    private static final String FILE_SAVE_ERROR_MESSAGE \u003d \"Failed to save tasks to storage.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    private final String taskIndex;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a DeleteCommand with the specified task list, storage, UI, and task index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     * @param storage The storage used to save tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    public DeleteCommand(TaskList tasks, Storage storage, Ui ui, String taskIndex) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"        assert taskIndex !\u003d null \u0026\u0026 !taskIndex.trim().isEmpty() : \"Task index cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        this.taskIndex \u003d taskIndex.trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command to delete a task. Parses the task index, removes the task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * from the task list, saves the updated task list to storage, and displays a","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * confirmation message. Throws an exception if the task index is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the task index is invalid or cannot be parsed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        int index;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"            index \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(TASK_INDEX_NOT_A_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(TASK_INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"        Task task \u003d tasks.removeTask(index);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        assert task !\u003d null : \"Task removal should return a non-null task\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(FILE_SAVE_ERROR_MESSAGE + \" \" + e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"Farewell, brave task! 🌸 You\u0027ve been removed from the quest:\\n💔 %s 💔\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"                        + \"The journey continues with %d %s left. Keep going, warrior! 🗡️\",","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"                task, tasks.size(), tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":75}},{"path":"src/main/java/arts/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"    private static final String INVALID_KEYWORD_ERROR_MESSAGE \u003d \"Keyword cannot be null, \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"            + \"empty, or contain only special characters.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    private final String keyword;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a FindCommand with the specified task list and keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks   The list of tasks to search within.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     * @param keyword The keyword to search for in tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    public FindCommand(TaskList tasks, String keyword) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"        if (keyword \u003d\u003d null || keyword.trim().isEmpty() || !keyword.matches(\".*\\\\w.*\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"            throw new IllegalArgumentException(INVALID_KEYWORD_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        this.keyword \u003d keyword.trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the find command, searching for tasks that contain the keyword","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"     * and returning them as a string.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If an error occurs during execution.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        if (keyword \u003d\u003d null || keyword.trim().isEmpty()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(INVALID_KEYWORD_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"            String taskString \u003d task.toString();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"            assert taskString !\u003d null : \"Task string representation should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"            if (taskString.contains(keyword)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"                sb.append(++count).append(\". \").append(taskString).append(\"\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        assert count \u003e\u003d 0 : \"Count of matching tasks should not be negative\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"            return \"Oh no! 😱 No tasks matched your search. Keep your spirits high, the right task will appear! 🌈\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"            return String.format(\"Eureka! 🎉 Here are the tasks that matched your quest for \u0027%s\u0027:\\n%s\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"                            + \"Keep up the great work, hero! 💪✨\",","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"                    keyword, sb.toString());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":69}},{"path":"src/main/java/arts/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"    private static final String TASK_INDEX_NOT_A_NUMBER_ERROR_MESSAGE \u003d \"Task index must be a number.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    private static final String TASK_INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE \u003d \"Task index is out of bounds.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    private static final String FILE_SAVE_ERROR_MESSAGE \u003d \"Failed to save tasks to storage.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    private final String taskIndex;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a MarkCommand with the specified task list, storage, UI, and task index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     * @param storage The storage used to save tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    public MarkCommand(TaskList tasks, Storage storage, Ui ui, String taskIndex) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"        assert taskIndex !\u003d null \u0026\u0026 !taskIndex.trim().isEmpty() : \"Task index cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        this.taskIndex \u003d taskIndex.trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command to mark a task as done. Parses the task index, marks the task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * as done, saves the updated task list to storage, and displays a confirmation message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * Throws an exception if the task index is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the task index is invalid or cannot be parsed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        int index;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"            index \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(TASK_INDEX_NOT_A_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(TASK_INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Task at the given index does not exist.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        task.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(FILE_SAVE_ERROR_MESSAGE + \" \" + e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"Victory! 🌟 I\u0027ve marked this task as complete:\\n🎉 %s 🎉\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"                + \"You\u0027ve leveled up, champion! Keep conquering those tasks! 🚀\", task);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":78}},{"path":"src/main/java/arts/command/SortDeadlinesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Deadline;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import java.util.List;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to sort deadline tasks chronologically.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"public class SortDeadlinesCommand implements Command {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a SortDeadlinesCommand with the specified task list, storage, and UI.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     * @param storage The storage used to save tasks.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    public SortDeadlinesCommand(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command to sort deadline tasks chronologically.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If any error occurs during sorting or saving.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d tasks.getTasks();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        List\u003cDeadline\u003e sortedDeadlines \u003d allTasks.stream()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"                .filter(task -\u003e task instanceof Deadline)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"                .map(task -\u003e (Deadline) task)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"                .sorted((d1, d2) -\u003e d1.getBy().compareTo(d2.getBy()))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        // Collect other types of tasks that are not deadlines","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"        List\u003cTask\u003e otherTasks \u003d allTasks.stream()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"                .filter(task -\u003e !(task instanceof Deadline))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        // Combine the sorted deadlines with the other tasks","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        ArrayList\u003cTask\u003e combinedTasks \u003d new ArrayList\u003c\u003e(sortedDeadlines);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"        combinedTasks.addAll(otherTasks);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        tasks.getTasks().clear();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"        tasks.getTasks().addAll(combinedTasks);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"        return \"✨ Behold! The deadlines have been aligned in perfect harmony! 📅✨\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"                + \"Your journey through time is now clearer, brave adventurer! 🌟\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":72}},{"path":"src/main/java/arts/command/SortEventsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import java.util.List;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Event;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to sort event tasks by their start date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"public class SortEventsCommand implements Command {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a SortEventsCommand with the specified task list, storage, and UI.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     * @param storage The storage used to save tasks.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"    public SortEventsCommand(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command to sort event tasks by their start date.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If any error occurs during sorting or saving.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d tasks.getTasks();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"        List\u003cEvent\u003e sortedEvents \u003d allTasks.stream()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"                .filter(task -\u003e task instanceof Event)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"                .map(task -\u003e (Event) task)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"                .sorted((e1, e2) -\u003e e1.getFrom().compareTo(e2.getFrom()))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        // Collect other types of tasks that are not events","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"        List\u003cTask\u003e otherTasks \u003d allTasks.stream()","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"                .filter(task -\u003e !(task instanceof Event))","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"        // Combine the sorted events with the other tasks","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"        ArrayList\u003cTask\u003e combinedTasks \u003d new ArrayList\u003c\u003e(sortedEvents);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        combinedTasks.addAll(otherTasks);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        tasks.getTasks().clear();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"        tasks.getTasks().addAll(combinedTasks);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"        return \"✨ The stars have aligned, and your events are now sorted by time! ⏰✨\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"                + \"Embark on your epic journey with clarity and purpose, noble hero! 🌟\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":74}},{"path":"src/main/java/arts/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":" * Represents a command to unmark a task, marking it as not done in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"    private static final String TASK_INDEX_NOT_A_NUMBER_ERROR_MESSAGE \u003d \"Task index must be a number.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    private static final String TASK_INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE \u003d \"Task index is out of bounds.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    private static final String FILE_SAVE_ERROR_MESSAGE \u003d \"Failed to save tasks to storage.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    private final String taskIndex;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs an UnmarkCommand with the specified task list, storage, UI, and task index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     * @param storage The storage used to save tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * @param ui The user interface for displaying messages.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     * @param taskIndex The index of the task to be marked as not done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    public UnmarkCommand(TaskList tasks, Storage storage, Ui ui, String taskIndex) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"TaskList cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        assert storage !\u003d null : \"Storage cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        assert ui !\u003d null : \"Ui cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"        assert taskIndex !\u003d null \u0026\u0026 !taskIndex.trim().isEmpty() : \"Task index cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        this.taskIndex \u003d taskIndex.trim();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Executes the command to unmark a task, marking it as not done. Parses the task index,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * marks the task as not done, saves the updated task list to storage, and displays a","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * confirmation message. Throws an exception if the task index is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the task index is invalid or cannot be parsed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    public String execute() throws ArtsException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        int index;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"            index \u003d Integer.parseInt(taskIndex) - 1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(TASK_INDEX_NOT_A_NUMBER_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(TASK_INDEX_OUT_OF_BOUNDS_ERROR_MESSAGE);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Task at the given index does not exist.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(FILE_SAVE_ERROR_MESSAGE + \" \" + e.getMessage());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"        // Anime-like response","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"🎌 Fear not, for this task has been unmarked! 🗒️\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"                + \"Continue your quest with renewed vigor, valiant warrior! 🌟\\n %s\", task);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":79}},{"path":"src/main/java/arts/enums/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.enums;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":" * Represents the different types of commands that can be executed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":" * These commands correspond to various actions that can be performed","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":" * within the application, such as exiting the program, listing tasks,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":" * marking tasks as done or not done, deleting tasks, and adding different","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":" * types of tasks like todo, deadline, and event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"public enum CommandType {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"    BYE,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"    LIST,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"    MARK,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    UNMARK,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    DELETE,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"    TODO,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    DEADLINE,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    EVENT,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    FIND,","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    SORT_DEADLINES,","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    SORT_EVENTS","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":22}},{"path":"src/main/java/arts/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":" * Represents a task that has a deadline. Inherits from the Task class and includes","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":" * additional information about the due date and time for the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"    private static final DateTimeFormatter FILE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a Deadline task with the specified description and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"     * @param by The due date and time for the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"        assert by !\u003d null : \"Due date cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * Returns the due date and time for the deadline task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     * @return The LocalDateTime representing the due date and time.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        return by;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"     * Returns a string representation of the deadline task, including its type,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     * description, and formatted due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string representing the deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        assert by !\u003d null : \"Due date should not be null when formatting\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(DISPLAY_FORMATTER));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"     * Returns a string representation of the deadline task formatted for file storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"     * This includes the task type, completion status, description, and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string formatted for storing the deadline task in a file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        assert by !\u003d null : \"Due date should not be null when formatting for file\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"D | %s | %s | %s\", isDone ? \"1\" : \"0\", description, by.format(FILE_FORMATTER));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":62}},{"path":"src/main/java/arts/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":" * Represents an event task that occurs within a specified time frame.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":" * Inherits from the Task class and includes additional information","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" * about the start and end times of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"    private static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"    private static final DateTimeFormatter FILE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     * @param from The start date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     * @param to The end date and time of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"        assert from !\u003d null : \"Start time cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"        assert to !\u003d null : \"End time cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        assert !from.isAfter(to) : \"Start time must be before end time\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"     * Returns the start date and time of the event.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"     * @return The start date and time of the event.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        return from;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     * Returns a string representation of the event task, including its type,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * description, and formatted start and end times.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string representing the event task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        assert from !\u003d null : \"Start time should not be null when formatting\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        assert to !\u003d null : \"End time should not be null when formatting\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"                super.toString(),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"                from.format(DISPLAY_FORMATTER),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"                to.format(DISPLAY_FORMATTER));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     * Returns a string representation of the event task formatted for file storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     * This includes the task type, completion status, description, start time, and end time.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string formatted for storing the event task in a file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        assert from !\u003d null : \"Start time should not be null when formatting for file\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"        assert to !\u003d null : \"End time should not be null when formatting for file\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"E | %s | %s | %s | %s\",","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"                isDone ? \"1\" : \"0\",","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"                description,","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"                from.format(FILE_FORMATTER),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"                to.format(FILE_FORMATTER));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":77}},{"path":"src/main/java/arts/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" * Represents an abstract task with a description and completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":" * Provides basic functionalities for marking tasks as done or not done,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":" * and converting tasks to and from file storage formats.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    protected String description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        return description;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"     * Returns the status icon of the task, indicating whether it is done or not.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     * @return \"X\" if the task is done, otherwise \" \".","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"     * @return true if the task is done, otherwise false.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        return isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"     * Abstract method to convert the task to a string format suitable for file storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string representing the task in file format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"     * Creates a Task object from a string formatted for file storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"     * This method parses the string, determines the task type, and initializes","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"     * the appropriate Task subclass.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"     * @param data The string data representing the task in file format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"     * @return A Task object corresponding to the given data.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the task type is unknown or data is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"    public static Task fromFileFormat(String data) throws ArtsException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"        assert data !\u003d null \u0026\u0026 !data.trim().isEmpty() : \"Data cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"        String[] parts \u003d data.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"        assert parts.length \u003e\u003d 3 : \"Data must contain at least three parts\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"        switch (type) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"        case \"T\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"            return createTask(new Todo(description), isDone);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"        case \"D\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"            assert parts.length \u003d\u003d 4 : \"Deadline task data must contain four parts\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"            return createTask(new Deadline(description, by), isDone);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"        case \"E\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"            assert parts.length \u003d\u003d 5 : \"Event task data must contain five parts\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(parts[3], formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(parts[4], formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"            return createTask(new Event(description, from, to), isDone);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"        default:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Unknown task type.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"    private static Task createTask(Task task, boolean isDone) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"        if (isDone) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"            task.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LiHaixin000"},"content":"        return task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LiHaixin000"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LiHaixin000"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LiHaixin000"},"content":"        assert description !\u003d null : \"Description should not be null when converting to string\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LiHaixin000"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":132}},{"path":"src/main/java/arts/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":" * Represents a list of tasks, providing functionalities to manage","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":" * tasks such as adding, retrieving, removing, and checking the list\u0027s size.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks to initialize the TaskList with.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        assert task !\u003d null : \"Task to be added cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"     * Retrieves a task at the specified index from the TaskList.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"     * Removes and returns the task at the specified index from the TaskList.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"     * @return The task that was removed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index out of bounds\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"    public int size() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"     * @return true if the TaskList is empty, otherwise false.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"     * @return An ArrayList of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"Tasks list should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"        return tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"     * Checks if the TaskList contains an equivalent task.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"     * @param task The task to check for.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"     * @return true if the task exists in the list, false otherwise.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"        assert task !\u003d null : \"Task to check cannot be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"        return tasks.stream().anyMatch(t -\u003e t.equals(task));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":99}},{"path":"src/main/java/arts/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":" * Represents a Todo task, a specific type of Task with no additional","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":" * attributes beyond its description and completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"        assert description !\u003d null \u0026\u0026 !description.trim().isEmpty() : \"Description cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"     * Returns a string representation of the todo task, including its type and description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string representing the todo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"        assert description !\u003d null : \"Description should not be null when converting to string\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * Returns a string representation of the todo task formatted for file storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     * This includes the task type, completion status, and description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * @return A string formatted for storing the todo task in a file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        assert description !\u003d null : \"Description should not be null when converting to file format\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":41}},{"path":"src/main/java/arts/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.util;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import arts.enums.CommandType;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":" * The Parser class is responsible for interpreting user input and","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":" * converting it into executable commands and arguments.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"     * Parses the command from the user input and determines the corresponding CommandType.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"     * @param input The user input string containing the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"     * @return The CommandType corresponding to the command word in the input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If the command word is not recognized.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    public CommandType parseCommand(String input) throws ArtsException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"        String trimmedInput \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"        // Check for specific multi-word commands first","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"        if (trimmedInput.equals(\"sort deadlines\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"            return CommandType.SORT_DEADLINES;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"        } else if (trimmedInput.equals(\"sort events\")) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"            return CommandType.SORT_EVENTS;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        // Split the input by space to get the first word","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        String[] parts \u003d trimmedInput.split(\" \", 2);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        assert parts.length \u003e 0 : \"Input must contain at least one word\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        String commandWord \u003d parts[0].toUpperCase();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"            return CommandType.valueOf(commandWord);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Parses the arguments from the user input, separating the command from its parameters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * @param input The user input string containing the command and arguments.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     * @return An array where the first element is the command and the second is the arguments.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"    public String[] parseArguments(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"        return input.trim().split(\" \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":52}},{"path":"src/main/java/arts/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.util;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":" * The Storage class handles the loading and saving of tasks to and from a file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":" * It manages the persistence of task data, allowing tasks to be stored and retrieved.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private static final String NO_TASK_FILE_MESSAGE \u003d \"No existing task file found. Starting fresh.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    private final String filePath;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a Storage object with the specified file path for storing tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.trim().isEmpty() : \"File path cannot be null or empty\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * Loads tasks from the file specified by the filePath.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     * If the file does not exist, it initializes an empty task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If there is an error reading the file or parsing tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    public ArrayList\u003cTask\u003e load() throws ArtsException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"            System.out.println(NO_TASK_FILE_MESSAGE);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"            return tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"            String line;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"                assert line !\u003d null : \"Line read from file should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"                Task task \u003d Task.fromFileFormat(line);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"                tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        } catch (IOException | ArtsException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"            throw new ArtsException(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        return tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     * Saves the provided list of tasks to the file specified by the filePath.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException If there is an error writing to the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        assert tasks !\u003d null : \"Tasks list cannot be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"                assert task !\u003d null : \"Task to be saved should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"                writer.write(task.toFileFormat());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"                writer.newLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"            // Suppress the exception and do nothing","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":80}},{"path":"src/main/java/arts/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.util;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":" * The Ui class handles interactions with the user, including displaying messages,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":" * reading user input, and showing error messages. It provides a simple interface","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":" * for user communication.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"     * Constructs a Ui object with a new Scanner for reading user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"    public Ui() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     * Displays the welcome message and logo to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"        String logo \u003d \"     _    _____  _______  _____  \\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"                + \"    / \\\\  |  __ \\\\|__   __|/ ____| \\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"                + \"   / _ \\\\ | |__) |  | |  | (___   \\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"                + \"  / ___ \\\\|  _  /   | |   \\\\___ \\\\  \\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"                + \" /_/   \\\\_\\\\_| \\\\_\\\\   |_|   |_____/ \\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\" Hello! I\u0027m Arts, your go-to Chatbot.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\" What can I do for you today?\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     * @return A trimmed string representing the user\u0027s command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     * Displays a line separator to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"    public void showLine() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        showLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(\" OOPS!!! \" + message);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        showLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"     * Displays a message to the user, enclosed by line separators.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"        showLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"        System.out.println(message);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"        showLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":82}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"655.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"arts.MainWindow\"\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":19}},{"path":"src/test/java/arts/ArtsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":" * Test class for the Arts application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":" * This class contains integration tests for the Arts class, verifying the application\u0027s command processing and output.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"public class ArtsTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    private final String filePath \u003d \"test_tasks.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     * Redirects System.out to capture output and ensures the test file is deleted to start fresh.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"        System.setOut(new PrintStream(outputStreamCaptor, true, StandardCharsets.UTF_8));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        new File(filePath).delete(); // Ensure the file is clean before each test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the run() method of the Arts class by adding a todo task and listing tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task is added and displayed correctly in the output.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"    public void testRun_addTodoAndList() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        String input \u003d \"todo Test Task\\nlist\\nbye\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes(StandardCharsets.UTF_8)));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        Arts arts \u003d new Arts(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"        arts.run();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"        String output \u003d outputStreamCaptor.toString(StandardCharsets.UTF_8);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"        assertTrue(output.contains(\"Got it. I\u0027ve added this task:\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"        assertTrue(output.contains(\"Test Task\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        assertTrue(output.contains(\"Here are the tasks in your list:\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        assertTrue(output.contains(\"1. [T][ ] Test Task\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the run() method of the Arts class with an invalid command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the application responds with an appropriate error message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"    public void testRun_invalidCommand() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        String input \u003d \"invalidcommand\\nbye\\n\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes(StandardCharsets.UTF_8)));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"        Arts arts \u003d new Arts(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"        arts.run();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"        String output \u003d outputStreamCaptor.toString(StandardCharsets.UTF_8);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        assertTrue(output.contains(\"I\u0027m sorry, but I don\u0027t know what that means.\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":67}},{"path":"src/test/java/arts/command/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":" * The AddDeadlineCommandTest class contains unit tests for the AddDeadlineCommand class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":" * It tests the functionality of adding deadlines to a task list and ensures that exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":" * are correctly thrown for invalid inputs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private StubStorage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private StubUi ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"    private DateTimeFormatter[] formatters;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test method is executed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the task list, storage, UI stubs, and date formatters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        storage \u003d new StubStorage(\"dummy/path/to/storage.txt\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        ui \u003d new StubUi();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        formatters \u003d new DateTimeFormatter[]{","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the successful addition of a deadline task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task list contains the new task and the UI shows the correct message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if an error occurs during command execution.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    public void testAddDeadlineSuccessfully() throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        String details \u003d \"Finish report /by 2024-08-29 1800\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        AddDeadlineCommand command \u003d new AddDeadlineCommand(tasks, storage, ui, details, formatters);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        String result \u003d command.execute();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(1, tasks.size(), \"Task list should have one task.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Yatta! 🎉 I\u0027ve successfully added this task to your list:\\n✨ \" + tasks.getTask(0)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"                + \" ✨\\nNow your quest has 1 task to conquer! Ganbatte! 💪\", result);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when the deadline command is missing a /by date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the missing /by date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"    public void testMissingByDateThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        String details \u003d \"Finish report\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"        AddDeadlineCommand command \u003d new AddDeadlineCommand(tasks, storage, ui, details, formatters);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Details must contain a \u0027/by\u0027 to separate task description and deadline\",","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"                exception.getMessage(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate missing /by date.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown for an invalid date format in the deadline command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the invalid date format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"    public void testInvalidDateFormatThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"        String details \u003d \"Finish report /by 29-08-2024 1800\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"        AddDeadlineCommand command \u003d new AddDeadlineCommand(tasks, storage, ui, details, formatters);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Invalid date format. Please use yyyy-MM-dd HHmm or d/M/yyyy HHmm.\",","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"                exception.getMessage(), \"Exception message should indicate invalid date format.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Storage used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"     * Overrides the save method to do nothing, simulating a storage component without actual file operations.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubStorage extends Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"        public StubStorage(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"            super(filePath);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"        public void save(ArrayList\u003cTask\u003e tasks) throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"            // Do nothing","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Ui used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"     * Captures the last message shown by the UI for verification in tests.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubUi extends Ui {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"        private String lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"        public void showMessage(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"            this.lastMessage \u003d message;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LiHaixin000"},"content":"        public String getLastMessage() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LiHaixin000"},"content":"            return lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":123}},{"path":"src/test/java/arts/command/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":" * The AddEventCommandTest class contains unit tests for the AddEventCommand class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":" * It tests the functionality of adding events to a task list and ensures that exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":" * are correctly thrown for invalid inputs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private StubStorage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private StubUi ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"    private DateTimeFormatter[] formatters;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test method is executed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the task list, storage, UI stubs, and date formatters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        storage \u003d new StubStorage(\"dummy/path/to/storage.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        ui \u003d new StubUi();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        formatters \u003d new DateTimeFormatter[]{","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"                DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the successful addition of an event task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task list contains the new task and the UI shows the correct message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if an error occurs during command execution.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    public void testAddEventSuccessfully() throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        String details \u003d \"Conference /from 2024-08-29 0900 /to 2024-08-29 1700\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        AddEventCommand command \u003d new AddEventCommand(tasks, storage, ui, details, formatters);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        String result \u003d command.execute();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(1, tasks.size(), \"Task list should have one task.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Sugoi! 🌟 I\u0027ve added this epic event to your adventure:\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"                        + \"\\n🎉 \" + tasks.getTask(0)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"                        + \" 🎉\\nNow your journey includes 1 task to tackle! Keep up the great work, hero! 💪\",","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"                result);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when the event command is missing /from or /to times.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the missing /from or /to times.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"    public void testMissingFromOrToThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"        String details \u003d \"Conference /from 2024-08-29 0900\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"        AddEventCommand command \u003d new AddEventCommand(tasks, storage, ui, details, formatters);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"The event must have /from and /to times.\", exception.getMessage(),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate missing /from or /to times.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown for an invalid date format in the event command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the invalid date format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"    public void testInvalidDateFormatThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"        String details \u003d \"Conference /from 29-08-2024 0900 /to 29-08-2024 1700\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"        AddEventCommand command \u003d new AddEventCommand(tasks, storage, ui, details, formatters);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Invalid date format. Please use yyyy-MM-dd HHmm or d/M/yyyy HHmm.\",","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"                exception.getMessage(), \"Exception message should indicate invalid date format.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when the event start date is not before the end date.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the invalid event times.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"    public void testInvalidEventTimesThrowsException() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"        String details \u003d \"Conference /from 2024-08-29 1700 /to 2024-08-29 0900\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"        AddEventCommand command \u003d new AddEventCommand(tasks, storage, ui, details, formatters);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Event start date must be before end date.\", exception.getMessage(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate invalid event times.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Storage used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"     * Overrides the save method to do nothing, simulating a storage component without actual file operations.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubStorage extends Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"        public StubStorage(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"            super(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"        public void save(ArrayList\u003cTask\u003e tasks) throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"            // Do nothing","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Ui used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LiHaixin000"},"content":"     * Captures the last message shown by the UI for verification in tests.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubUi extends Ui {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LiHaixin000"},"content":"        private String lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LiHaixin000"},"content":"        public void showMessage(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LiHaixin000"},"content":"            this.lastMessage \u003d message;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LiHaixin000"},"content":"        public String getLastMessage() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LiHaixin000"},"content":"            return lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":138}},{"path":"src/test/java/arts/command/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Todo;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":" * The AddTodoCommandTest class contains unit tests for the AddTodoCommand class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":" * It tests the functionality of adding todo tasks to a task list and ensures that exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":" * are correctly thrown for invalid inputs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private StubStorage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private StubUi ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test method is executed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the task list, and sets up storage and UI stubs.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        storage \u003d new StubStorage(\"dummy/path/to/storage.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        ui \u003d new StubUi();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the successful addition of a todo task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task list is updated correctly and the UI shows the correct message.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if an error occurs during command execution.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    public void execute_addValidTodo_success() throws ArtsException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        String description \u003d \"Read a book\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        AddTodoCommand command \u003d new AddTodoCommand(tasks, storage, ui, description);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        String result \u003d command.execute();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(1, tasks.size(), \"Task list should have one task after addition.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Hooray! 🎊 A new adventure awaits with this task:\\n✨ [T][ ] Read a book ✨\\n\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"                + \"Your quest now has 1 task to conquer! Keep shining, champion! 🌟\", result);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that spaces in the description are normalized.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task description is trimmed and spaces are normalized.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if an error occurs during command execution.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"    public void execute_normalizeSpacesInDescription() throws ArtsException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        String description \u003d \"   Read   a   book   \";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"        AddTodoCommand command \u003d new AddTodoCommand(tasks, storage, ui, description);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        command.execute();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Read a book\", tasks.getTask(0).getDescription(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"                \"Task description should be normalized.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Storage used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"     * Overrides the save method to do nothing, simulating a storage component without actual file operations.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubStorage extends Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"        public StubStorage(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"            super(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"        public void save(ArrayList\u003cTask\u003e tasks) throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"            // Do nothing, or add logic to verify save calls","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Ui used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"     * Captures the last message shown by the UI for verification in tests.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubUi extends Ui {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"        private String lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"        public void showMessage(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"            this.lastMessage \u003d message;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"        public String getLastMessage() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"            return lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":106}},{"path":"src/test/java/arts/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Todo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":" * The DeleteCommandTest class contains unit tests for the DeleteCommand class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":" * It tests the functionality of deleting tasks from a task list and ensures that exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":" * are correctly thrown for invalid inputs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private StubStorage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private StubUi ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test method is executed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the task list with sample tasks, and sets up storage and UI stubs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        tasks.addTask(new Todo(\"Read a book\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        tasks.addTask(new Todo(\"Write a report\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        storage \u003d new StubStorage(\"dummy/path/to/storage.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        ui \u003d new StubUi();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the successful deletion of a task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task list is updated correctly and the UI shows the correct message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if an error occurs during command execution.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"    public void testDeleteTaskSuccessfully() throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"1\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        DeleteCommand command \u003d new DeleteCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        String result \u003d command.execute();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(1, tasks.size(), \"Task list should have one task after deletion.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Farewell, brave task! 🌸 You\u0027ve been removed from the quest:\\n💔 [T][ ] Read a book 💔\\n\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"                + \"The journey continues with 1 task left. Keep going, warrior! 🗡️\", result);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when an invalid task index is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the invalid task index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"    public void testInvalidTaskIndexThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"3\"; // Out of bounds","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        DeleteCommand command \u003d new DeleteCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Task index is out of bounds.\", exception.getMessage(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate task index is out of bounds.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when a non-numeric task index is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the task index is not a number.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"    public void testNonNumericTaskIndexThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"a\"; // Non-numeric","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"        DeleteCommand command \u003d new DeleteCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Task index must be a number.\", exception.getMessage(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate task index is not a number.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Storage used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"     * Overrides the save method to do nothing, simulating a storage component without actual file operations.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubStorage extends Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"        public StubStorage(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"            super(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"        public void save(ArrayList\u003cTask\u003e tasks) throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"            // Do nothing","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Ui used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"     * Captures the last message shown by the UI for verification in tests.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubUi extends Ui {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"        private String lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"        public void showMessage(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"            this.lastMessage \u003d message;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"        public String getLastMessage() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"            return lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":119}},{"path":"src/test/java/arts/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Todo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":" * The MarkCommandTest class contains unit tests for the MarkCommand class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":" * It tests the functionality of marking tasks as done in a task list and ensures that exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":" * are correctly thrown for invalid inputs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private StubStorage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private StubUi ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test method is executed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the task list with sample tasks, and sets up storage and UI stubs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        tasks.addTask(new Todo(\"Read a book\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        storage \u003d new StubStorage(\"dummy/path/to/storage.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        ui \u003d new StubUi();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the successful marking of a task as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task\u0027s status is updated correctly and the UI shows the correct message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if an error occurs during command execution.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"    public void testMarkTaskSuccessfully() throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"1\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"        MarkCommand command \u003d new MarkCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        String result \u003d command.execute();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(true, tasks.getTask(0).isDone(), \"Task should be marked as done.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Victory! 🌟 I\u0027ve marked this task as complete:\\n🎉 [T][X] Read a book 🎉\\n\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"                + \"You\u0027ve leveled up, champion! Keep conquering those tasks! 🚀\", result);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when an invalid task index is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the task index is out of bounds.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"    public void testInvalidTaskIndexThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"2\"; // Out of bounds","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"        MarkCommand command \u003d new MarkCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Task index is out of bounds.\", exception.getMessage(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate task index is out of bounds.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when a non-numeric task index is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the task index is not a number.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"    public void testNonNumericTaskIndexThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"a\"; // Non-numeric","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"        MarkCommand command \u003d new MarkCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Task index must be a number.\", exception.getMessage(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate task index is not a number.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Storage used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"     * Overrides the save method to do nothing, simulating a storage component without actual file operations.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubStorage extends Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"        public StubStorage(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"            super(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"        public void save(ArrayList\u003cTask\u003e tasks) throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"            // Do nothing","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Ui used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"     * Captures the last message shown by the UI for verification in tests.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubUi extends Ui {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"        private String lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"        public void showMessage(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"            this.lastMessage \u003d message;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"        public String getLastMessage() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"            return lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":118}},{"path":"src/test/java/arts/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Todo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Storage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"import arts.util.Ui;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":" * The UnmarkCommandTest class contains unit tests for the UnmarkCommand class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":" * It tests the functionality of unmarking tasks as not done in a task list and ensures that exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":" * are correctly thrown for invalid inputs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    private StubStorage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    private StubUi ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test method is executed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the task list with a sample task marked as done, and sets up storage and UI stubs.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"        Todo task \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"        task.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        storage \u003d new StubStorage(\"dummy/path/to/storage.txt\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"        ui \u003d new StubUi();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the successful unmarking of a task as not done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task\u0027s status is updated correctly and the UI shows the correct message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if an error occurs during command execution.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    public void testUnmarkTaskSuccessfully() throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"1\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"        String result \u003d command.execute();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(false, tasks.getTask(0).isDone(), \"Task should be unmarked as not done.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"🎌 Fear not, for this task has been unmarked! 🗒️\\n\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"                + \"Continue your quest with renewed vigor, valiant warrior! 🌟\\n [T][ ] Read a book\", result);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when an invalid task index is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the task index is out of bounds.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"    public void testInvalidTaskIndexThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"2\"; // Out of bounds","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LiHaixin000"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Task index is out of bounds.\", exception.getMessage(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate task index is out of bounds.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LiHaixin000"},"content":"     * Tests that an ArtsException is thrown when a non-numeric task index is provided.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the exception message indicates the task index is not a number.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LiHaixin000"},"content":"    public void testNonNumericTaskIndexThrowsException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LiHaixin000"},"content":"        String taskIndex \u003d \"a\"; // Non-numeric","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LiHaixin000"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(tasks, storage, ui, taskIndex);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LiHaixin000"},"content":"        ArtsException exception \u003d assertThrows(ArtsException.class, command::execute);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"Task index must be a number.\", exception.getMessage(),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LiHaixin000"},"content":"                \"Exception message should indicate task index is not a number.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Storage used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LiHaixin000"},"content":"     * Overrides the save method to do nothing, simulating a storage component without actual file operations.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubStorage extends Storage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LiHaixin000"},"content":"        public StubStorage(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LiHaixin000"},"content":"            super(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LiHaixin000"},"content":"        public void save(ArrayList\u003cTask\u003e tasks) throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LiHaixin000"},"content":"            // Do nothing","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LiHaixin000"},"content":"     * A stub class for Ui used in testing.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LiHaixin000"},"content":"     * Captures the last message shown by the UI for verification in tests.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LiHaixin000"},"content":"    private static class StubUi extends Ui {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LiHaixin000"},"content":"        private String lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LiHaixin000"},"content":"        @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LiHaixin000"},"content":"        public void showMessage(String message) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LiHaixin000"},"content":"            this.lastMessage \u003d message;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LiHaixin000"},"content":"        public String getLastMessage() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LiHaixin000"},"content":"            return lastMessage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LiHaixin000"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":120}},{"path":"src/test/java/arts/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":" * The DeadlineTest class contains unit tests for the Deadline class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":" * It verifies the correct behavior of the Deadline class, including string representation,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":" * file format conversion, and marking tasks as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test method is executed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes a Deadline instance with a specified task description and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"        dateTime \u003d LocalDateTime.parse(\"2024-08-29 1200\", formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"        deadline \u003d new Deadline(\"Submit assignment\", dateTime);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the string representation of the Deadline instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the toString method returns the correct format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"[D][ ] Submit assignment (by: Aug 29 2024, 12:00 PM)\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, deadline.toString(), \"The string representation of the deadline is incorrect.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the file format conversion of the Deadline instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the toFileFormat method returns the correct format for file storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"D | 0 | Submit assignment | 2024-08-29 1200\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, deadline.toFileFormat(), \"The file format of the deadline is incorrect.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the functionality of marking a Deadline instance as done.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the task is marked correctly and the string representation is updated.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        deadline.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"[D][X] Submit assignment (by: Aug 29 2024, 12:00 PM)\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, deadline.toString(), \"The deadline should be marked as done.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":62}},{"path":"src/test/java/arts/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":" * Test class for the Event class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":" * This class contains unit tests for various methods in the Event class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"public class EventTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"    private Event event;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the \u0027from\u0027 and \u0027to\u0027 LocalDateTime objects and creates a new Event instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"        from \u003d LocalDateTime.parse(\"2024-08-29 1000\", formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"        to \u003d LocalDateTime.parse(\"2024-08-29 1200\", formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        event \u003d new Event(\"Team meeting\", from, to);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the toString() method of the Event class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the string representation of the event matches the expected format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"[E][ ] Team meeting (from: Aug 29 2024, 10:00 AM to: Aug 29 2024, 12:00 PM)\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, event.toString(), \"The string representation of the event is incorrect.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the toFileFormat() method of the Event class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the file format of the event matches the expected format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"E | 0 | Team meeting | 2024-08-29 1000 | 2024-08-29 1200\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, event.toFileFormat(), \"The file format of the event is incorrect.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the markAsDone() method of the Event class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     * Ensures that the event is marked as done and its string representation is updated accordingly.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        event.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"[E][X] Team meeting (from: Aug 29 2024, 10:00 AM to: Aug 29 2024, 12:00 PM)\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, event.toString(), \"The event should be marked as done.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":63}},{"path":"src/test/java/arts/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":" * Test class for the Todo class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":" * This class contains unit tests for various methods in the Todo class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"public class TodoTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"    private Todo todo;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the \u0027todo\u0027 instance with a sample task description.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"        todo \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the toString() method of the Todo class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the string representation of the todo matches the expected format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"[T][ ] Buy groceries\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, todo.toString(), \"The string representation of the todo is incorrect.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the toFileFormat() method of the Todo class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the file format of the todo matches the expected format.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"T | 0 | Buy groceries\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, todo.toFileFormat(), \"The file format of the todo is incorrect.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the markAsDone() method of the Todo class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"     * Ensures that the todo is marked as done and its string representation is updated accordingly.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"        String expected \u003d \"[T][X] Buy groceries\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(expected, todo.toString(), \"The todo should be marked as done.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":55}},{"path":"src/test/java/arts/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.util;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import arts.enums.CommandType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":" * Test class for the Parser class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":" * This class contains unit tests for methods in the Parser class, verifying command parsing functionality.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the parseCommand() method with a valid command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the command string is correctly parsed into a CommandType.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if the command cannot be parsed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"    public void testParseCommand_validCommand() throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(CommandType.TODO, parser.parseCommand(\"todo task\"),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"                \"The command should be parsed as TODO.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the parseCommand() method with an invalid command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * Ensures that an ArtsException is thrown when an unknown command is parsed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    public void testParseCommand_invalidCommand() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"        assertThrows(ArtsException.class, () -\u003e parser.parseCommand(\"unknown\"),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"                \"An unknown command should throw an ArtsException.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the parseArguments() method.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the input string is correctly split into an array of arguments.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    public void testParseArguments() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"        String[] expected \u003d {\"todo\", \"task\"};","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        assertArrayEquals(expected, parser.parseArguments(\"todo task\"),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"                \"The arguments should be split correctly.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":52}},{"path":"src/test/java/arts/util/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.util;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"import arts.ArtsException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"import arts.task.Todo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":" * Test class for the Storage class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":" * This class contains unit tests for the methods in the Storage class,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":" * verifying file storage and retrieval functionality.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"    private final String filePath \u003d \"test_tasks.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"     * Initializes the Storage instance and ensures the test file is deleted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"        new File(filePath).delete();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the load() method when no file exists.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that loading from a non-existent file returns an empty task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if there is an error loading the tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"    public void testLoad_noFile() throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"        assertTrue(tasks.isEmpty(), \"Loading from a non-existent file should return an empty task list.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the save() and load() methods.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that a task can be saved to a file and then correctly loaded back.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"     * @throws ArtsException if there is an error saving or loading the tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"    public void testSaveAndLoad() throws ArtsException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"        Task task \u003d new Todo(\"Test Task\"); // Use the Todo subclass","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(1, loadedTasks.size(), \"There should be one task loaded.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(task.toFileFormat(), loadedTasks.get(0).toFileFormat(),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LiHaixin000"},"content":"                \"The loaded task should match the saved task.\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":67}},{"path":"src/test/java/arts/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"package arts.util;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":" * Test class for the Ui class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":" * This class contains unit tests for methods in the Ui class, verifying user input and output functionality.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"public class UiTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"     * Sets up the test environment before each test.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"     * Redirects System.in to provide predefined input for testing and initializes the Ui instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LiHaixin000"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LiHaixin000"},"content":"    public void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LiHaixin000"},"content":"        InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LiHaixin000"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"test command\\n\".getBytes());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LiHaixin000"},"content":"        System.setIn(in);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LiHaixin000"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the readCommand() method of the Ui class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LiHaixin000"},"content":"     * Verifies that the command read from input matches the expected predefined input.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LiHaixin000"},"content":"    public void testReadCommand() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LiHaixin000"},"content":"        assertEquals(\"test command\", ui.readCommand(), \"The command read should match the input.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the showWelcome() method of the Ui class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LiHaixin000"},"content":"     * This test ensures that the welcome message is displayed correctly.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LiHaixin000"},"content":"     * Note: This test does not have assertions as it is typically visual.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LiHaixin000"},"content":"    public void testShowWelcome() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LiHaixin000"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LiHaixin000"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LiHaixin000"},"content":"     * Tests the showGoodbye() method of the Ui class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LiHaixin000"},"content":"     * This test ensures that the goodbye message is displayed correctly.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LiHaixin000"},"content":"     * Note: This test does not have assertions as it is typically visual.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LiHaixin000"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LiHaixin000"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LiHaixin000"},"content":"    public void testShowGoodbye() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LiHaixin000"},"content":"        ui.showGoodbye();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LiHaixin000"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LiHaixin000"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":61}},{"path":"test_tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"T | 0 | Test Task","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LiHaixin000"},"content":"todo Read book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LiHaixin000"},"content":"todo Write report","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LiHaixin000"},"content":"todo Go shopping","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LiHaixin000"},"content":"deadline Submit assignment /by 2023-12-01","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LiHaixin000"},"content":"deadline Pay bills /by 2023-12-05","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LiHaixin000"},"content":"event Meeting /from 2023-12-01 10:00 /to 2023-12-01 12:00","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LiHaixin000"},"content":"event Conference /from 2023-12-02 09:00 /to 2023-12-02 17:00","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LiHaixin000"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LiHaixin000"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LiHaixin000"},"content":"mark 7","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LiHaixin000"},"content":"unmark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LiHaixin000"},"content":"unmark 7","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LiHaixin000"},"content":"delete 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LiHaixin000"},"content":"delete 6","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LiHaixin000"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LiHaixin000"},"content":"mark 10","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LiHaixin000"},"content":"delete 10","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"todo","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LiHaixin000"},"content":"deadline /by","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LiHaixin000"},"content":"event /from /to","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LiHaixin000"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LiHaixin000"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"LiHaixin000":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LiHaixin000"},"content":"java -classpath ..\\bin Arts \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"LiHaixin000":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LiHaixin000"},"content":"java -classpath ../bin Arts \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LiHaixin000"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":36,"LiHaixin000":2}}]
