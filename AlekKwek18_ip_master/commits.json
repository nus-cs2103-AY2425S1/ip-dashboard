{"authorDailyContributionsMap":{"AlekKwek18":[{"date":"2024-08-20","commitResults":[{"hash":"1ea91ae0d44eb4ba623b8369978c7f784d2da567","isMergeCommit":false,"messageTitle":"Rename the file, added greet and exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10},"bat":{"insertions":1,"deletions":1},"md":{"insertions":3,"deletions":3}}},{"hash":"16cd4d890a925d0700737118fb2d781b63df5c25","isMergeCommit":false,"messageTitle":"added echo commands and will end the program if user types the command bye","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":5}}},{"hash":"548acb370bbfffc89c9184cc8d2b96ea5359a844","isMergeCommit":false,"messageTitle":"added the ability to read and store user input and print them as list. in addition, logo is added","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":7}}},{"hash":"cd4ad8fffed22b192c17446db84141b914356d25","isMergeCommit":false,"messageTitle":"created the Task class and refactored the code to use Task instead of String","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":5}}},{"hash":"4ea20b15522a68ad62fccd03bfac2ab44a45236e","isMergeCommit":false,"messageTitle":"added the ability to mark tasks as done and the ability to change the status back to not done.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":10}}},{"hash":"84202e9781633025dd78596f9f688177bbc2b785","isMergeCommit":false,"messageTitle":"Added ToDo as a subclass to Task and refactored the code base to use ToDo class over Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":16}}}]},{"date":"2024-08-21","commitResults":[{"hash":"7e231e42f925fa933ce9dbedd64431eb34a17793","isMergeCommit":false,"messageTitle":"added Deadline class which is a subclass for Todo class. Added type behaviour to every class. Added todo as a command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":4}}},{"hash":"a39eb394d270e52fefca2a5fe9bb7f137938f744","isMergeCommit":false,"messageTitle":"rebranded with new icon and new end text","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":7}}},{"hash":"75be1acb93a170600e281da260e781b15ce28408","isMergeCommit":false,"messageTitle":"changed the output for mark, unmarked and list so that it shows the type of task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"4645ab52a6cb1e0870c2ceb9e2355f7ae56f2aee","isMergeCommit":false,"messageTitle":"added toString to Task and its subclass to enable polymorphism. refactored the main code based to take advantage of polymorphism. Fixed minor formatting issues. Lastly, added the deadline functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":11}}},{"hash":"931af11ba7ddf1784a002365aefb8a148e260d3c","isMergeCommit":false,"messageTitle":"added the functionality where users can add events now","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":10}}},{"hash":"512dee50539e66820bb96208cd7975e4dd12e84c","isMergeCommit":false,"messageTitle":"refactored text-ui-test","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":1,"deletions":0},"sh":{"insertions":1,"deletions":1}}},{"hash":"c2c433b53a50a5f95f3e61945b10b296fcc99dba","isMergeCommit":false,"messageTitle":"added a few more testcases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}},{"hash":"0349956dfabf43cb738c91071ed0e9e7d18cca08","isMergeCommit":false,"messageTitle":"refactored the inputs to have its own methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":55}}},{"hash":"dc07f43ea2194cb7a6b061247bd7a7bc786bd725","isMergeCommit":false,"messageTitle":"added exceptions to handle errors","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":58}}},{"hash":"ab63fed06b18ec78eacddac5bc9d9a0324f03e01","isMergeCommit":false,"messageTitle":"added delete feature and updated the testcase","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":19,"deletions":5}}},{"hash":"6064d8371ee4f790d82e488cfacca3e33be5a5b6","isMergeCommit":false,"messageTitle":"changed task to abstract class and added enums","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":24}}},{"hash":"ed8cb5d42196c70f60af33d1a01189fa138b27f9","isMergeCommit":false,"messageTitle":"refactored the code such that event, deadline, and todo is a subclass of task which will conform to LSP.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":37}}}]},{"date":"2024-08-22","commitResults":[{"hash":"95420f83d72e2f82ef223b8beb785d948924751c","isMergeCommit":false,"messageTitle":"added descriptive header for classes and methods","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":243,"deletions":11}}}]},{"date":"2024-08-26","commitResults":[{"hash":"214c3d722d67f55bee49c92f5eca6b3fd15a5b98","isMergeCommit":false,"messageTitle":"Add new toFileString method for file format","messageBody":"The code lacks a method for converting task data into a format suitable\nfor file storage. This absence hinders future development for persisting\ntasks to a file.\n\nTo support file read and write operations, a method is required to\nconsistently represent tasks as strings that can be easily saved\nand retrieved.\n\nIntroduce a new `toFileString` method that formats task data as\n\"TaskType | StatusIcon | Description | From-To\" depending on the\nTask type.\nThis format will be used for file storage.\n\nThis structure ensures that all relevant task details are included\nin a consistent format, paving the way for reliable file I/O\noperations in future development.\n\nThis is an initial step toward implementing task persistence,\nand further changes will involve handling file read/write operations.\n","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":2}}}]},{"date":"2024-08-27","commitResults":[{"hash":"28043d385f007e28a4c30d054b754ecec2ef8a93","isMergeCommit":false,"messageTitle":"Add file read and write functionality","messageBody":"Currently, tasks are not saved or loaded from a file.\n\nImplement file reading and writing to persist task data.\n\nThis ensures tasks are saved and restored between sessions.\n","fileTypesAndContributionMap":{"java":{"insertions":198,"deletions":14}}},{"hash":"ca3be767203e63fdececb427791606daef570c85","isMergeCommit":false,"messageTitle":"Add empty file content check in parseTask method","messageBody":"Currently, the chatbot will throw an exception if the file is\nempty.\n\nUpdated `parseTask` method to handle empty file cases gracefully.\n\nImproved robustness by ensuring tasks are\nonly parsed if file content is present.\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":33}}},{"hash":"f113b7d7af14c0287bda45de6b8ed9702642c22b","isMergeCommit":false,"messageTitle":"Add parseDateTime for date format validation","messageBody":"The chatbot currently cannot correctly interpret date formats\nand simply accepts any input without validation.\n\nThis behavior can lead to errors and confusion\nwhen users input dates in various formats,\nexpecting the chatbot to understand them.\n\nImplement the parseDateTime method, which attempts to parse the input\nagainst a list of predefined date and time formats.\nIf none of the formats match, it throws a SilverWolfException,\nprompting the user to check their input.\n\nBy validating and parsing date formats, the chatbot becomes more robust\nand user-friendly, preventing incorrect inputs and\nproviding clear feedback when issues arise.\n\nThe change improves overall functionality and ensures that\ndate inputs are handled consistently across the application. In\naddition, test cases has been updated to take into account of the\nnew date format.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":3},"java":{"insertions":65,"deletions":4},"sh":{"insertions":4,"deletions":1}}},{"hash":"c1aab7e04baacf829957c778d1670de7f5900c3c","isMergeCommit":false,"messageTitle":"Remove unused LocalTime import","messageBody":"Currently, the java.time.LocalTime import is included\nin the codebase, but it is not being used anywhere.\n\nThis import needs to be removed to clean up the code\nand avoid confusion about unnecessary dependencies.\n\nRemove the LocalTime import to maintain a clean and efficient codebase.\n\nThis is done to follow best practices of only including relevant\nimports, improving code readability and maintainability.\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2024-08-28","commitResults":[{"hash":"ba16d32c418fe136b8903adb162076ae4a488c35","isMergeCommit":false,"messageTitle":"Refactor chatbot for improved OOP design","messageBody":"The chatbot does not fully adhere to Object-Oriented\nProgramming principles.\n\nThe current code structure may be difficult to maintain,\nextend, and understand.\n\nRefactor the code to better utilize OOP concepts\nsuch as encapsulation, inheritance, and polymorphism.\n\nAdhering to OOP principles makes the codebase more modular,\nscalable, and easier to manage.\n\nImproved code structure facilitates future enhancements and debugging.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":789,"deletions":468},"sh":{"insertions":2,"deletions":0}}}]},{"date":"2024-08-29","commitResults":[{"hash":"1a4aa0ae99217fccd9502ef99015fbf540f9cc0c","isMergeCommit":false,"messageTitle":"Refactor codebase into packages for improved organization","messageBody":"The codebase has all classes in a single package,\nmaking it difficult to navigate and maintain.\n\nOrganizing classes into packages improves code readability and\nmaintainability. It also simplifies the management of\nrelated functionalities and dependencies.\n\nAction taken:\n- Create `silverwolf.command` package and move command-related classes\n(AddCommand, DeleteCommand, UnmarkCommand) into it.\n- Create `silverwolf.parser` package and move parsing classes (\nParser, DateTimeParser) into it.\n- Create `silverwolf.ui` package for UI-related classes\nand `silverwolf.storage`\n package for storage-related classes.\n- Introduce `silverwolf.task` package for task management classes\n (Task, TaskList).\n- Create `silverwolf.exception` package and move any custom\nexceptions into the package\n\nThis organization clarifies the project structure and helps in scaling\nthe project as more functionalities are added.\nEach package now contains related classes,\nenhancing modularity and reducing potential for code conflicts.\n\nNo changes to class functionality,\nonly restructuring for better code management.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":3},"sh":{"insertions":1,"deletions":1}}},{"hash":"ab6bfdbb3e695c594c51fb844c17a093ea4406c0","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027 of https://github.com/AlekKwek18/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3145a80b53ee3b56dfe3a6cdeb0d5ab60ac7c760","isMergeCommit":false,"messageTitle":"Set up Gradle for project build automation","messageBody":"Currently, the SilverWolf project is built and run\nmanually without an automated build system.\n\nIntegrate Gradle into the project by merging the `add-gradle-support`\nbranch into `master`. Configure the `build.gradle` file to support\nbuilding and running the SilverWolf project using Gradle.\n\nGradle is a powerful and flexible build automation tool that\nsimplifies dependency management, compilation, and execution processes.\nSetting it up early in the project helps streamline development.\n\nThis setup enables automated builds and prepares the project for\nfuture enhancements, such as automated testing and\ndeployment processes using Gradle.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}},{"hash":"3b73a3282529d0c7558fda6d5218804872131198","isMergeCommit":false,"messageTitle":"Add JUnit tests for TaskList and Storage classes","messageBody":"The `Todo`,`TaskList` and `Storage` classes lack\ncomprehensive unit tests.\n\nEnsuring the functionality of these classes through tests\nis crucial for maintaining reliability and catching bugs early.\n\nImplement unit tests for `TaskList` to verify task management operations\nsuch as addition, retrieval, and size management.\nAdd tests for `Storage` to check saving and loading functionality,\nhandle empty files, and manage invalid paths.\n\nTesting edge cases and typical use cases ensures that the classes\nperform as expected under various conditions.\nImproving comments provides clarity and facilitates easier maintenance.\n\nTests are designed to cover a broad range of scenarios,\nincluding error handling and boundary conditions.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":256,"deletions":2}}},{"hash":"4a78858aa5ca7a962fe9faf9f25572929959e032","isMergeCommit":false,"messageTitle":"Package the application as an executable JAR file","messageBody":"The application is not yet distributed as an executable JAR file,\nmaking it less convenient for users to run the application.\n\nPackaging the application as a JAR file simplifies\n distribution and execution for end-users, providing a single,\neasily runnable file.\n\nPackage the app into an executable JAR file following the provided\nguidelines. Ensure that the JAR file can be run from a command line\nwith `java -jar \"{filename}.jar\"`. Make necessary adjustments to\nthe project setup to support JAR packaging.\n\nCreating an executable JAR file streamlines deployment and\nexecution processes, making it easier for users to run the\napplication without additional setup.\n\nThe JAR file will not be committed to the Git repository.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":0}}},{"hash":"0cc6400a11b206a4ebce2da9fba3164a19c8e716","isMergeCommit":false,"messageTitle":"Add find command to search tasks by keyword","messageBody":"Currently, the task management system lacks a feature for\nsearching tasks based on keywords.\nThis limits the ability to quickly locate specific\n tasks within a large list.\n\nImplement the `execute` method in the `FindCommand` class to\nenable users to search for tasks by a specified keyword.\nThe method retrieves tasks matching the keyword from the\n`TaskList` and displays them using the `Ui`. The `Storage` parameter\n is included for method signature consistency\nbut is not used in this implementation.\n\nThis change provides a way for users to efficiently\nfind tasks by their descriptions, improving\noverall task management and usability.\n\nNo changes to the `Storage` class were necessary for this functionality.\n","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":1}}},{"hash":"d886012d29b5bb1d4586384e55cfbd65e7e3785a","isMergeCommit":false,"messageTitle":"Add JavaDoc comments for code documentation","messageBody":"Enhance the code documentation by updating JavaDoc comments.\n\nProvide comprehensive comments for most non-private classes and\nmethods, and for\n non-trivial private methods. This update improves code clarity\nand maintainability by ensuring that the purpose and functionality\n of various components are clearly documented.\n\nNo changes to code functionality were made; only updates to\ndocumentation were performed to facilitate better understanding\n and future maintenance.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"8796be515a16f81a3f486494c03a6d763bf925dd","isMergeCommit":false,"messageTitle":"Fix codebase to comply with Checkstyle rules","messageBody":"The codebase contains multiple Checkstyle violations,\nincluding issues with import order, missing newlines,\ninconsistent formatting, and other style-related problems.\n\nThese violations cause build failures and reduce code readability,\nmaking it harder to maintain and collaborate on the project.\n\nAddress and fix all Checkstyle violations,\nincluding reordering imports,\nadding missing newlines, correcting formatting issues,\nand ensuring code adheres to the project\u0027s style guidelines.\n\nEnsures compliance with Checkstyle rules,\nleading to successful builds, improved code consistency,\nand easier maintenance.\n","fileTypesAndContributionMap":{"gradle":{"insertions":13,"deletions":0},"java":{"insertions":166,"deletions":151}}},{"hash":"48424b70f6861c6ada064799de3925e4e5c99277","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}}]},{"date":"2024-08-30","commitResults":[{"hash":"45b5593fd0f8d86ab324a81378609d58da74964b","isMergeCommit":false,"messageTitle":"Add tests for `findTasks` method in `TaskList`","messageBody":"The `findTasks` method in the `TaskList` class\nlacks adequate testing for finding list.\n\nTo ensure the method correctly searches for tasks\nbased on keywords and handles edge cases properly.\n\n- Verify search results when tasks match the keyword.\n- Confirm behavior when no tasks match the keyword.\n- Test partial keyword matches.\n- Check functionality with an empty keyword.\n\nAdding comprehensive tests will validate the correctness\nof the search functionality and improve reliability.\n\nThe tests will help in identifying issues early and maintaining\nthe robustness of the search feature as the codebase evolves.\n","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":1},"java":{"insertions":63,"deletions":1}}},{"hash":"43657eade92c485fe7a5418e7dbc1dd8bd6ae181","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027 into branch-Level-9","messageBody":"# Conflicts:\n#\tbuild.gradle\n#\tsrc/main/java/silverwolf/task/TaskList.java\n#\tsrc/main/java/silverwolf/ui/Ui.java\n","fileTypesAndContributionMap":{}},{"hash":"4f8f5a3c06675524f202fbd934ad01492ade4352","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"86437b4dc0af2bbd2c659f686f09710af923ce47","isMergeCommit":false,"messageTitle":"Minor bug fixes","messageBody":"Currently, the Ui class is missing the List util which is\nneeded to search list.\n\nAdd import java.util.List\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"12cd3516cb82315142031e58e5a4fb92fedf524a","isMergeCommit":false,"messageTitle":"Update chat bot guide","messageBody":"Currently, the guide is not updated to the latest version. This may\ncause confusion of users using the chat bot.\n\nUpdate the guide with the full list of commands.\n\nIn this way, users will understand how to use the chat bot.\n\nFix minor bugs\n","tags":["Level-9"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":4,"deletions":3},"sh":{"insertions":1,"deletions":1},"md":{"insertions":111,"deletions":13}}}]},{"date":"2024-09-05","commitResults":[{"hash":"38172a7f534415570d34e138ba44c57173a4251e","isMergeCommit":false,"messageTitle":"Resolve Checkstyle violations","messageBody":"Checkstyle errors are present due to improper formatting,\nvariable naming inconsistencies, and other style violations.\n\nThese violations prevent successful builds and reduce code readability,\nmaking it harder to maintain and collaborate.\n\nCorrect formatting, apply consistent naming conventions,\nand adhere to Checkstyle rules across the codebase.\n\nFollowing Checkstyle ensures consistency in code quality,\nimproves maintainability, and aligns with project standards.\n\nNo functionality changes are introduced; this commit solely\naddresses code style compliance.\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}}]},{"date":"2024-09-06","commitResults":[{"hash":"7b6fdcb237c9a48de11abc1abdafea757cd58866","isMergeCommit":false,"messageTitle":"Migrate from CLI to JavaFX GUI","messageBody":"Currently, the application relies on a command-line interface,\nlimiting user interaction and usability.\n\nThis needs to change to improve the user experience and provide a\nmore intuitive, graphical way to interact with the app.\n\nRefactor the application by replacing the command-line interface with a\nJavaFX-based GUI. Implement FXML to manage layout and\nevent handling for user input.\n\nJavaFX is chosen for its flexibility and ease of integration with\nthe existing codebase. FXML allows for better\nseparation of concerns between UI and logic.\n\nAlso ensure resource paths for FXML are correctly resolved,\nand adjust controller methods to handle GUI events.\n","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":3},"fxml":{"insertions":41,"deletions":0},"java":{"insertions":254,"deletions":114}}},{"hash":"c26259152d3db4fdec7f6e495473fbb5b92cf711","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gui\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-13","commitResults":[{"hash":"6f066d27cb4ff6ca4d85d7cfee78a97419b3ad9e","isMergeCommit":false,"messageTitle":"Add Assertions To Validate Inputs","messageBody":"The command parsing currently does not enforce input validation\nthrough assertions, which could lead to unexpected behaviour when\nhandling invalid or missing arguments.\n\nAssertions have been added to ensure that key values like the command\nword, task descriptions, and date/time information are not null or\nempty.\n\nThis change improves error detection early in the process and helps\nto prevent the program from executing invalid commands.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"ecfcac76fc7ae9d41aeb640fa16d4095b924935f","isMergeCommit":true,"messageTitle":"Merge pull request #1 from AlekKwek18/branch-A-Assertions","messageBody":"Add Assertions To Validate Inputs","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"50bbc5f1e4e1788053f5dd3f0394bf0702ac88d1","isMergeCommit":false,"messageTitle":"Improve Code Quality","messageBody":"Enhance the code base by adding input validation in the parser\nclass. Fixed a type in the variable name.\n\nThis ensure the best coding practises are met.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":3}}},{"hash":"3390a80dd9db0f793220ad3baa983257865a6e8f","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"890be5e54c76ccda72e11b1ae2a7f2d759ebdfb6","isMergeCommit":true,"messageTitle":"Merge pull request #2 from AlekKwek18/branch-A-CodeQuality","messageBody":"Branch a code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"1e6f32fbd15111e31ee80a122352e3c9c1ab4a21","isMergeCommit":false,"messageTitle":"Implement flexible command syntax and aliases","messageBody":"Enhance the command parsing functionality to\nsupport friendlier and more flexible syntax.\n\nKey changes include:\n- Added support for shorter aliases for commands (e.g., \"t\" for \"todo\").\n- Introduced user-defined aliases for greater customization.\n- Allowed commands to be less rigid in their syntax and order.\n\nThese improvements aim to make the chatbot interface more intuitive\nand user-friendly, allowing users to interact with the\nsystem in a more natural and flexible manner.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"b3e9a36055a53e60e9c7767d5b5d618827d661ce","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-friendlier-syntax\u0027","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-19","commitResults":[{"hash":"2cb8a532668c4fb1d4b6ba3059446ba696d6f186","isMergeCommit":false,"messageTitle":"Enhance User Guide With Image And Task Features","messageBody":"The current user guide lacks a visual component and detailed\ndescriptions of key features, which can make it harder\nfor users to follow.\n\nAdd a picture and enhance the guide with descriptions,\nincluding an introduction to the Silver Wolf bot for task tracking.\nExpand on task types, main functions, and friendly\nsyntax for commands like deadline (d), event (e), and todo (t).\n\nThis improves user engagement and makes the guide more accessible and\neasier to understand for users with short-term memory challenges.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"md":{"insertions":29,"deletions":15}}},{"hash":"7360d3ae24c09c31ced0512dba83a048c3ef8a52","isMergeCommit":true,"messageTitle":"Merge branch \u0027improve-user-guide\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"4a9992a73ec7ff5a8c48a1820b462f554d9b5bf5","isMergeCommit":false,"messageTitle":"Resolve minor issues in the user guide","messageBody":"The user guide currently contains minor typos, unclear instructions,\nand outdated information, which could confuse users.\n\nThese issues need to be addressed to ensure users can easily\nunderstand the guide and follow instructions without confusion.\n\nCorrect typos, rephrase unclear sections, and update outdated\ninformation to reflect the current state of the product.\n\nThis approach improves readability and\nmaintains up-to-date content for users.\n\nNo major changes to the structure were needed,\nso the guide retains its original format\nwhile improving the overall quality.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":9},"md":{"insertions":10,"deletions":8}}},{"hash":"b52029a13e94b2b366b000a65cc76dee7e2bd4d2","isMergeCommit":true,"messageTitle":"Merge branch \u0027fix-user-guide\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"a2dd810b12227cfc96463861a81c4de03cb675d3","isMergeCommit":false,"messageTitle":"Fix exception message and checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":10}}},{"hash":"a201a3e80f497f94ef7a6b36c79dbce913e6e212","isMergeCommit":true,"messageTitle":"Merge branch \u0027minor-bug-fix\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"34becce6270edd4b8fed05b24dfacc21d9c98bc8","isMergeCommit":false,"messageTitle":"Fix mistake in exception message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"c2443c4b775f06cc6975663c2ddb31077c9fd2be","isMergeCommit":true,"messageTitle":"Merge branch \u0027minor-bug-fix\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"2547a580efe40a14d1a20741c5232b45dcae7882","isMergeCommit":false,"messageTitle":"Fix friendlier syntax","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1},"md":{"insertions":1,"deletions":1}}},{"hash":"c0a032771f6c7fc98a6f30f24febdabf41de6a2a","isMergeCommit":true,"messageTitle":"Merge branch \u0027minor-bug-fix\u0027","messageBody":"","tags":["A-UserGuide","A-Release"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"AlekKwek18":{"java":1885,"md":124,"fxml":41,"sh":7,"bat":1,"gradle":35,"txt":14}},"authorContributionVariance":{"AlekKwek18":73593.77},"authorDisplayNameMap":{"AlekKwek18":"CS2103-F13-4 ALEK..KWEK"}}
