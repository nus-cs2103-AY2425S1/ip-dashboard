{"authorDailyContributionsMap":{"RezwanAhmed123":[{"date":"2024-08-17","commitResults":[{"hash":"86e83e94918d445ac27755a0ac384a0882f25538","isMergeCommit":false,"messageTitle":"Completed Level-0. Renamed the chatbot to Mortal Reminder.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":10}}},{"hash":"feb90ae27836c1051e3e0f575a046bcad93529cb","isMergeCommit":false,"messageTitle":"Updated the README to remove template information and replace it with my own placeholders.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":23}}},{"hash":"74f43b7d0d66fce461b1925875a038abc54de9a9","isMergeCommit":false,"messageTitle":"Updated Level-0. Changed all non-main methods from static to non-static types.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":8}}},{"hash":"886c1badf542c9db34642201d99295e07683263a","isMergeCommit":false,"messageTitle":"Updated MortalReminder.java with completed Level-1.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":8}}},{"hash":"3270b8d107cb14abfb73571ef4aaf4849bceca41","isMergeCommit":false,"messageTitle":"Added List.java.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"2ed2d68660ff11fbe07bb7cb8e8915364c9bd58d","isMergeCommit":false,"messageTitle":"Updated ToDoList.java.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":3}}},{"hash":"51edb77e96d3ed99266c34a857f4ac125553b386","isMergeCommit":false,"messageTitle":"Updated MortalReminder.java and completed Level-2.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"0df9ba1a7bcc2de7291233a41fa1b79db9b54e41","isMergeCommit":false,"messageTitle":"Added Task.Java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"b0fcce2cb06f27696265d768bdf5fb09c73b03c8","isMergeCommit":false,"messageTitle":"Renamed ToDoList.java to Storage.java in occurrences and files.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"a69c8d4a7040042b7cdee84de3028983d68465fd","isMergeCommit":false,"messageTitle":"Updated Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":2}}},{"hash":"c2efdc02c51bb3fed684f7a6bceb311a0544cb13","isMergeCommit":false,"messageTitle":"Added a new line at the end of Task.java file.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"9342af6dbb1ea8dc41a8bc6dbd7741dd05d72131","isMergeCommit":false,"messageTitle":"Updated Storage.java","messageBody":"The list inside storage only stores Strings which are primitive structures.\n\nPrimitive Structures does not allow for complex representation of data which is what we eventually want to achieve with the Todos, Events and Deadlines in this project.\n\nThus, the list structure in the storage class needs to be modified and the accompanying methods also need to be fixed accordingly to allow a more complex data structure,  the Task class, to be stored in the list.\n\nThis allows each item inside the list to be packaged with both the task name and the mark status together in one object, and eventually we can extend this to other information we want to store together instead of separately.\n","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":8}}},{"hash":"3b48e7ef1dd9cca4479aa5cb080d8cc2b23d6e70","isMergeCommit":false,"messageTitle":"Renamed Storage.java to TaskList.java","messageBody":"The name storage should be reserved for dealing with loading and saving tasks in the file.\n\nThe current structure inside the file TaskList.java contains the task list itself and has operations to add/delete tasks in the list.\n\nI will eventually separate the two but since this file already contains the tasklist itself, i will proceed to keep rename it as TaskList.java.\n\nThis will prevent further confusion in future and is more intuitive for the reader of this code to follow.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":13}}},{"hash":"d76c9705b316c23233f24d5133e64e4af0906efa","isMergeCommit":false,"messageTitle":"Enabled small scale regression testing.","messageBody":"Regression testing manually is time consuming and laborious. This problem will only become more difficult to solve as the codebase increases in size.\n\nI automated test scripts, expected input, expected output txt files were modified with relevant regression testing cases. I also updated the .sh file with the new name of the main file to allow the testing.\n\nThis will automate the testing process and save time.\n","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":4,"deletions":4},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2024-08-18","commitResults":[{"hash":"be73a7adc4321b287360b38c4bedc90bfecf309a","isMergeCommit":false,"messageTitle":"Added AI.md","messageBody":"I forsee the use of AI to autocomplete quite alot of methods which are similar to each other.\n\nMany of the methods which I forsee creating are kind of repetitive and time consuming in the next few levels.\n\nAs such I have created AI.md to explain my rationale for using AI tools in a widespread manner and the explanations behind each use.\n\nThis will allow me to document my AI tools used concurrently with the progress of the project, to ensure adherence to the rules of the use of AI in the project.\n","fileTypesAndContributionMap":{"md":{"insertions":34,"deletions":0}}},{"hash":"17f008a2a3c317ddb150b82a53cb3b555a414417","isMergeCommit":false,"messageTitle":"Added Parser.java","messageBody":"There is many different parts of the code dealing with making sense of the user input.\n\nThis makes the debugging process and the code itself very messy.\n\nIn order to modulate the code better, I have created Parser.java to only handle all of the user input and change it to a state that the program can understand.\n\nThis will allow centralised handling of user inputs and better management of commands by the program.\n","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":13}}},{"hash":"657512a152e5e583750ae991e467bc900add3cf8","isMergeCommit":false,"messageTitle":"Added Command.java and CommandExecutor.java","messageBody":"I noticed the commands starting to become more and more complex.\n\nMore complex commands need to be represented by their own classes\nto ensure the data is well modulated and communicated within the program\nmore efficiently.\n\nLets create a class to package command information together for easier storage\nand communication and another class CommandExecutor to help execute such\ncommands instead of doing everything within the Parser class.\n\nThis ensures a cleaner code base, with all information referring to\ncommands and their executions within these files while the parser only handles\nparsing user input. This will help with easier debugging due to better modularity.\n","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0},"md":{"insertions":21,"deletions":3}}},{"hash":"5763468d27a4b90e8882a083103d859ee718c331","isMergeCommit":false,"messageTitle":"Added Command.java and CommandExecutor.java","messageBody":"I noticed the commands starting to become more and more complex.\n\nMore complex commands need to be represented by their own classes\nto ensure the data is well modulated and communicated within the program\nmore efficiently.\n\nLets create a class to package command information together for easier storage\nand communication and another class CommandExecutor to help execute such\ncommands instead of doing everything within the Parser class.\n\nThis ensures a cleaner code base, with all information referring to\ncommands and their executions within these files while the parser only handles\nparsing user input. This will help with easier debugging due to better modularity.\n","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":0},"md":{"insertions":21,"deletions":3}}},{"hash":"2a6614b39e6c29f7be957c2708a2e8d9dcb9d835","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/RezwanAhmed123/ip","messageBody":"# Conflicts:\n#\tsrc/main/java/Command.java\n#\tsrc/main/java/CommandExecutor.java\n","fileTypesAndContributionMap":{}},{"hash":"bd67000f046c1372340d25467416eab78580c055","isMergeCommit":false,"messageTitle":"Added FormattedPrinting.java","messageBody":"There is too many printing instances in many different files.\n\nThe formatting of the output is not always consistent and the handling of the printing is very messy for the coder.\n\nLets create a new printing class to handle all of the outputs from the chatbot. Ensure that the class is static so\nthat new instances will not have to be called and the printing can be done by invoking the class name only.\n\nUsing a static class to handle all the printing ensures that there is only one operation of printing\nand multiple instances of printing does not occur within the program, leading to messy outputs.\nIt also makes it easier to use the printer anywhere without having to instantiate it leading to\ncleaner code and debugging.\n","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"6cf5c17c1d9f357fcc5f3bcdd1ed5d1a9030e620","isMergeCommit":false,"messageTitle":"Updated all files with new Format Print.","messageBody":"All these files had some printing involved and were inconsistent in formatting.\n\nLets modify them to ensure consistent output generated by the chatbot by incorporating\nthe FormattedPrinting class.\n","fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":128}}},{"hash":"fc74a7370b5daa21f1564f1c9b03655f51a117a1","isMergeCommit":false,"messageTitle":"Add Deadline.java, Events.java, ToDo.java","messageBody":"The Task class has the common behaviour for all the different types\nof items that can be found inside of the TaskList inside the chatbot.\n\nHowever, it cannot capture all possible types of behaviours of the\nmany different types of tasks such as ToDos, Deadlines and Events\nwhich all need to be configured differently.\n\nLet\u0027s use polymorphism to extend the task class to these 3 different\nclasses. Let\u0027s change Task class to an abstract class with an abstract\nmethod \"getDesctiption\" which is to be implemented differently by\neach different type of Task. The constructor will also be shortened\nto allow each type of Task to store the description differently.\nLastly, lets change the CommandExecutor file to call these different\ntypes of tasks under each different types of commands.\n\nUsing polymorphism allows for the 3 different classes to have common\nbehaviours that do not need to be recoded at any minor change while\nalso be called using a common object type (Task) especially when we\nare not sure what type of object will be returned. This also gives\nus flexibility to change the behaviour of each class independently\nfrom one another.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":13}}},{"hash":"22888e759a414e65eaa6c79adb96eed64264c17b","isMergeCommit":false,"messageTitle":"Minor Commit: modified ToDo.java","messageBody":"Changed the Constructor to include the description during\ninitialisation.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"a01c02ee6cb565c8f91efb4d7b72a0d06c77e6b7","isMergeCommit":false,"messageTitle":"Add CommandTypes.java","messageBody":"Long switch statement inside of Parser.java is not ideal.\n\nIt needs to be manually modified every time a new comment is added.\nThis means we are repeating the change every time we were to add a\nnew command both to the Enum List inside the CommandExecutor file\nand the Parser file.\n\nLets create a separate Enum file to abstract out all the possible\ncommands and create a method inside Parser.java to search for the\ncommand inside this Enum class.\n\nUsing enum\u0027s is preferable than a bunch of switch statements as it\nreduces the amount of recoding necessary when new commands are\nimplemented and it also makes the code look cleaner to readers.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":30}}},{"hash":"c39dee0652aebc842952b9c4a1b7b5f0ac3c2c7f","isMergeCommit":false,"messageTitle":"Add Error Handling","messageBody":"The program is not built to handle errors correctly.\n\nThis causes the program to crash if there is an input error by the\nuser, thus the program is not able to provide feedback to the user\nabout their input.\n\nLet\u0027s add the following error handling functionality to the chatbot:\n- marking/unmarking error: when the user tries to mark something\n  that has already been marked/unmarked\n- trying to view or mark items in an empty list\n- adding a task without anything\n- adding incorrect number of inputs for todo, deadline and events\n  respectively.\n- entering non-integers after mark/unmark\n- marking/unmarking items out of the bounds of the list.\n\nWith the following error handling, the chatbot becomes more robust\nand is able to provide useful feedback to the user about their input\nso that the user is able to self correct their mistakes.\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":72}}},{"hash":"c4ea80a2e439e2bb83cf21cca5088c319f8157f3","isMergeCommit":false,"messageTitle":"Add delete task functionality","messageBody":"There is no way to delete tasks after you are done with them.\n\nThis makes the list look very messy after a few tasks have been\ncompleted.\n\nLet\u0027s create a delete functionality to allow users to delete tasks.\n\nThis will make the list easier to organise for the user, especially\nif they have completed a task or added the task wrongly.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":2}}},{"hash":"7a4d18cd7e227858f0d82b75020ac12c597c8f73","isMergeCommit":false,"messageTitle":"Add Semi-Automated Text UI Testing","messageBody":"The amount of things to test per new function added is increasing.\n\nThis makes regression testing very laborious and time consuming.\n\nLets set-up semi automated testing using expected and input text\nfiles to speed up the testing process.\n\nThis will make future testing quicker and less labour intensive.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":1}}}]},{"date":"2024-08-23","commitResults":[{"hash":"06f7f71ca2c07272725aea55f98b4f10776e9117","isMergeCommit":false,"messageTitle":"Reformat Code","messageBody":"Reformatted code to follow the code style required for CS2103 module\nguidelines.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":52},"md":{"insertions":7,"deletions":7}}}]},{"date":"2024-08-24","commitResults":[{"hash":"40575a75748b263ce639dc9c96ecdadf295ec896","isMergeCommit":false,"messageTitle":"Allowed Long-term Storage","messageBody":"The list created inside of the CLI is only able to keep track of one\nsession and the list is destroyed after the session ends.\n\nThis makes the app useless unless the user keeps it open all the\ntime and if the app is deleted, the user loses all access to what\nhe/she has done.\n\nLets create a Storage class to enable long term storage and give the\nuser the power to decide when to delete tasks even after closing the\nsession.\n\nLong term storage makes the app more robust in case of accidental\nclosing of the CLI app and eventually the real app.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":145,"deletions":69}}},{"hash":"94ca5a573c62fa64d21be0c4b049d8e0bda3c9e0","isMergeCommit":false,"messageTitle":"Add load and modify delete functionality","messageBody":"The implementation of the long-term storage is incomplete due to\ninability to load and delete properly from the long term storage\nfile.\n\nThis makes the app unable to access the information it has stored\nand essentially be the same as before the long term storage.\n\nLets add load and delete from file functionality. Lets also add a\nclear functionality to aid with the delete functionality.\n\nThe long term storage will now be completely accessible by the app\nand be able to support memory between sessions.\n","fileTypesAndContributionMap":{"java":{"insertions":140,"deletions":31},"bat":{"insertions":1,"deletions":0}}},{"hash":"efe9f1246140b542b06f3e22b5881fca3c25e4ed","isMergeCommit":false,"messageTitle":"Add Check if Storage Directory exists","messageBody":"The program only checked if the file existed not the directory.\n\nIf the directory did not exist, the program would have thrown an\nerror on the first opening of the app itself.\n\nLets add a check to see if the directory exists when loading the app\nat the start of every session.\n\nThis makes the system more robust on initial opening and even if the\ndirectory was deleted by accident.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":2},"java":{"insertions":3,"deletions":7}}},{"hash":"8f18975ea7c033f60ec32979497c773f59d7863e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"32aec177a486c85bb5d20ad0a5ea671282de275d","isMergeCommit":false,"messageTitle":"Fix runtest files","messageBody":"Minor fix to ensure runtest files working as intended after\nimplementing the check and create directory on top of file.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1},"java":{"insertions":2,"deletions":1}}},{"hash":"ce3aeb290d2a5c4202ac0d09dc23c57db17e5e85","isMergeCommit":false,"messageTitle":"Add time readability","messageBody":"Deadlines and Event times are stored as string.\n\nProgram is unable to verify or use the time inputs from user in any\nmeaningful way.\n\nLets add time functionality to these two classes by using the\nLocalDateTime package from java.\n\nBy storing times as LocalDateTime objects, these objects can be used\nfor more meaningful interactions with the user in future commands\nsuch as looking up upcoming deadlines or events. This also serves as\na check for valid dates and times for events.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":96,"deletions":26}}},{"hash":"00acefdfdcd1a9c15efe35f7ed259888db56c3d0","isMergeCommit":false,"messageTitle":"Completed Level-8","messageBody":"Time was merely stored and output in terms of LocalDateTime objects.\n\nThere is potential for more uses of said objects as per last commit.\n\nLets implement a more meaningful use of said data by printing all\nupcoming deadlines and events only if they are unmarked.\n\nWith this, users will be able to check all upcoming tasks which they\nhave not done in the event that the list is very huge.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":3}}},{"hash":"e2d96183c3558b78e2013ae7a2829bac9a36b006","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8","A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"77c03686293c7202da04b7dc7c67a79e3d51d886","isMergeCommit":false,"messageTitle":"Minor code formatting commit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"151bfeb5a88c8e37780ef17128a88e76320c00c9","isMergeCommit":false,"messageTitle":"Separate into packages","messageBody":"The files are not divided into proper packages.\n\nThis makes it difficult for any reader to understand which types are\nrelated, where to find which type of classes. It also can cause\nnamespace conflicts if the number of classes were to increase and\ndoes not encapsulate data well within certain types of files.\n\nLets separate the files into packages, with the main package being\nmortal_reminder, and inside that package we will have 4 subpackages,\nnamely backend, commands, io and tasks. The main method will remain\ninside of the main package as a standalone file.\n\nWith these changes, the backend, the tasks, command types and the\nuser interaction files will all be separated within their own\npackage folders and the programmer can easily find and change files\nthey need to in an intuitive manner.\n","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":5}}},{"hash":"c13c7d1d6403da20e694e5d64ad181cf6f96e367","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"311960e4a7e165c6b4d411d073afd10f1926bd1d","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"f57a667cc2c7346d03d9dfa2b7c429290046bd9e","isMergeCommit":false,"messageTitle":"Add gradle support","messageBody":"The app needs to be built and tested manually right now.\n\nTesting and building are two of the things which can be automated\nin a project to lighten the load of a programmer as well as ensure\nbuild consistency.\n\nLets add gradle support for the project.\n\nWith gradle support, right now, we can build the project automatically\nand run it automatically.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"txt":{"insertions":8,"deletions":8},"bat":{"insertions":1,"deletions":1}}},{"hash":"deb175c3398214530af4879ebce2eb7ed4eea756","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Gradle\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-08-25","commitResults":[{"hash":"4481c550422e4b9148e93903539a2fca934176a9","isMergeCommit":false,"messageTitle":"Add JUnit Test for TaskList getTask method","messageBody":"We have been testing the entire application in entirety so far, and\nnot specific methods to ensure it is not buggy.\n\nThis makes it difficult to pinpoint sources of error in the code and\nincreases the overall debugging time.\n\nLets create JUnit tests to test the getTask method inside of\nTaskList.java. This method is integral to the application because\nit is a key part of data storing and manipulation. If this method is\nbuggy, it may be easy to notice in the results but time-consuming to\ncheck.\n\nThus, lets create an automated method to test this method to save\ndebugging time in future.\n","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":2}}},{"hash":"9473b8b8b827d62f70c538323acfc22c019c998d","isMergeCommit":false,"messageTitle":"Add Storage.java test for loadTaskListFromFile","messageBody":"We have been testing the entire application in entirety so far, and\nnot specific methods to ensure it is not buggy.\n\nThis makes it difficult to pinpoint sources of error in the code and\nincreases the overall debugging time.\n\nLets create JUnit tests to test the loadTaskListFromFile method\ninside of Storage.java.\n\nThis method is integral to the application because it is ensures the\nlong-term memory of the app. If this method is buggy, it may not be\nvery obvious at first glance, unless tested further in depth.\n\nThus, an automated method to test this method was created to save\ndebugging time in future.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2},"java":{"insertions":40,"deletions":3}}},{"hash":"f27b0a417da998936ab42a7b967ba75c5a94ead8","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"8c3a768c2a1d59637da3c31b41f1164220b5218f","isMergeCommit":false,"messageTitle":"Create JAR file","messageBody":"Completed gradle automation of building a JAR file with each build.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"txt":{"insertions":0,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"aa278b3f953297a05e1de25e551ec3291a3706df","isMergeCommit":false,"messageTitle":"Add Javadocs","messageBody":"All methods were not explained adequately inside the code.\n\nThis can lead to future programmers being unable to understand how\nto modify the existing code making the code difficult to be improved\non.\n\nLets add javadocs to as many methods and classed as possible\nexplaining their functionality succinctly.\n\nThis will allow other programmers reading the code to understand and\nwork with the code or even create tests for the code more easily.\n","fileTypesAndContributionMap":{"java":{"insertions":456,"deletions":18}}},{"hash":"a55914b400c8174e7c6d9f670531750e5982912c","isMergeCommit":false,"messageTitle":"Formatted code to follow a consistent code style","messageBody":"There is some inconsistency in the import lines and the code style\nfor some of the files.\n\nThis makes the code slightly unreadable to the user.\n\nLets reformat the code using the IDE automation and follow the\nrecommended coding style in the CS2103 coding style recommendations.\n\nThis will make the code alot more readable to the user.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"ab8dfe85dc34d2f397638298ff1dd203e980e517","isMergeCommit":false,"messageTitle":"Add find functionality","messageBody":"The list of tasks an actual user will work with is usually rather\nlarge.\n\nThis makes it sometimes difficult to find specific task that you have\nadded in before.\n\nLets add search functionality for users to be able to use to find\nall tasks with similar description to what they have searched for.\n\nThis will make the app more easy for users to use in a real\napplication.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":36,"deletions":6}}},{"hash":"53bfbd22b7e6b00810cd2b1c544d679b1e373498","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"de465a6c8a140f9bbbd2f04ca963094894dcc038","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"6a74b8e84015216ad0c62f836b54cbfc4df0bfa9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/mortal_reminder/backend/TaskList.java\n","tags":["Level-9"],"fileTypesAndContributionMap":{}},{"hash":"f2f06b32183c00424be70708982fb960178a1c9d","isMergeCommit":false,"messageTitle":"Modified mark and unmark","messageBody":"Marking and Unmarking tasks are not captured in the storage.\n\nIf a user were to mark the task and close the app, the change would\nnot be captured inside of the storage file and would not be reflected\nin the app the next time it is turned on.\n\nLets add the refreshStorage method to the mark and unmark methods to\nensure the changes are kept each time the app is closed.\n\nThat should fix any long term memory loss issues with the mark and\nunmark methods.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}}]},{"date":"2024-08-31","commitResults":[{"hash":"46ccdba299d6db1346ff3610c8c5e37c4d889312","isMergeCommit":false,"messageTitle":"Format changes","messageBody":"Minor format changes before starting on new weeks work\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2},"java":{"insertions":1,"deletions":2}}},{"hash":"64d5bd20e12afbb33e07cf8f5333d86accf9acad","isMergeCommit":false,"messageTitle":"Integrate checkstyle","messageBody":"Add checkstyle to the project to track objective style issues to\nautomatically be ironed out.\n\nSome of the current java coding standard violations may not be\neasily caught by the developer.\n\nThese coding violations may go unnoticed and cause inconsistency\ndown the line.\n\nLet\u0027s integrate CheckStyle to automatically check and help the\ndeveloper to rectify any coding violations real time, saving a lot\nof time down the line.\n","fileTypesAndContributionMap":{"java":{"insertions":183,"deletions":96}}},{"hash":"8505da6ce7966eb273139460603237b45c976c2d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-CodingStandard","A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"8631b0947f26b8d0daaaac122dbaf2234b60e37c","isMergeCommit":false,"messageTitle":"Add GUI","messageBody":"Command Line App is not appealing to many people who may not use the\napp just because the user interface (command line is difficult to use)\n\nThe command line also makes it difficult to see history of the chat\nwith the bot because it does not provide a good text field for the user\nto use.\n\nLets add a GUI using JavaFX to our app to allow better interaction\nwith the user. Build just the basic app (interaction with the user\nonly, no welcome message) first.\n\nThis will make the app more appealing to potential users and make\ninteraction much easier.\n","fileTypesAndContributionMap":{"gradle":{"insertions":22,"deletions":1},"fxml":{"insertions":65,"deletions":0},"java":{"insertions":309,"deletions":157}}},{"hash":"a0b9f5947791fb2037699ab4f0d68dfc3db78cf3","isMergeCommit":false,"messageTitle":"Complete GUI","messageBody":"The GUI did not have a welcome message, so it seemed very abrupt\nwhen the application started.\n\nThis may seem confusing to the reader when they use it for the first\ntime and be unable to understand what to do next.\n\nLet\u0027s add some formatting and a welcome message to the app.\n\nThis allows the user to have some form of understanding of what the\napp is about to do and have a more intuitive start to the application.\n","fileTypesAndContributionMap":{"fxml":{"insertions":17,"deletions":37},"java":{"insertions":45,"deletions":33}}},{"hash":"e1f4a61d6df5411ea0261ce8986754c567452cb8","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{}},{"hash":"5c29fa38888d162236fa0c9e541395e20fcf9c4d","isMergeCommit":false,"messageTitle":"Modify JavaFX version to match runtime version","messageBody":"There is a mismatch between the javafx versions in the .xml files\nand the build.gradle file.\n\nThis causes error messages to show up and may cause issues in\ncode behaviour down the road.\n\nLets modify both javafx versions to be \u002717.0.7\u0027.\n\nThis will ensure consistency in javafx versions being used.\n","fileTypesAndContributionMap":{"fxml":{"insertions":2,"deletions":2}}},{"hash":"7ab2406e2cc984fd06ec644c2037c2cad335d84c","isMergeCommit":false,"messageTitle":"Add Data folder to Resources","messageBody":"List Storage file is left as a standalone file inside of the\nresources folder.\n\nThis is messy for code organisation and readability and reduces\nany improvement potential by other developers in future.\n\nLets create a folder \u0027data\u0027 to keep the storage list file for better\norganisation.\n\nThis will make the code more readable and intuitive for future\ndevelopers.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"a475b5ef219f7d8fdd9c6dd461167bb66abfb58a","isMergeCommit":false,"messageTitle":"Format code according to code style","messageBody":"There is some error in the order of imports and missing spaces.\n\nThis makes the code unreadable to future developers.\n\nLets reformat the order of imports to make it look more readable.\n\nThis will make the code base more consistent and usable for future\ndevelopers.\n","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":19}}},{"hash":"9861262fb0b056b50d5524d77c3416bde7a5c732","isMergeCommit":false,"messageTitle":"Add Varargs to find functionality","messageBody":"Find is restricted to only one search phrase.\n\nThis makes it inflexible to search for things that may be related\nbut not with the same phrases. For example, read book and write\nreport are both within similar domains of study but do not share\nsimilar phrases. As such, there needs to be a way to quick search\nthem.\n\nLets add Varargs to the find function, and allow different search\nterms to be separated with a comma.\n\nThis allows similar types of things to be searched together.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":5}}},{"hash":"758b1e64aa5d4fdaac8c3d5731c94e4c959c4a69","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Varargs\u0027","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-01","commitResults":[{"hash":"285b63d9bb65106c7475fc2c3ad0693e1c0d34e0","isMergeCommit":false,"messageTitle":"Add dynamic background colour for DialogBox","messageBody":"The background colours for the DialogBox are pretty uninteresting as\nthey are all green with black text.\n\nThe user is unable to immediately tell if the command they sent was\nindeed recorded correctly or not as there is no visual feedback.\n\nLets add dynamic colouring to the dialogbox so that there is visual\nfeedback on the type of command that was just processed by the user.\n\nThis will give the user a better user experience and ability to\ninstantly recognise if they had made an error in passing a command\npreviously just by the colour of the dialogbox.\n","fileTypesAndContributionMap":{"fxml":{"insertions":46,"deletions":5},"java":{"insertions":33,"deletions":8}}},{"hash":"3a574cd81a78688e08a9b7be469af8d7b9b7b79a","isMergeCommit":false,"messageTitle":"Modify JavaDocs","messageBody":"Some methods\u0027 Javadocs were not updated after the GUI was added.\n\nThese methods changed from being void (due to the use of System.out.\nprintln) but changed to returning a string which then is printed on\nthe GUI.\n\nThis makes the Javadoc outdated and difficult for future developers\nto refer to.\n\nLets update the Javadocs to make the code more readable and\nunderstandable.\n\nThis would then allow future developers to understand the use of the\nmodified methods with no confusion.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":25}}}]},{"date":"2024-09-05","commitResults":[{"hash":"0b521733178963f0d3be511c717bc7a3cb66c51c","isMergeCommit":false,"messageTitle":"Add MortalReminderException class","messageBody":"The exception handling is not consistent throughout the entire file.\n\nThis prevents specific debugging methods to each specific problems\nand also makes the code more difficult to follow.\n\nLet\u0027s add a new Exception class to handle all the exceptions in the\ncurrent iteration of the project.\n\nThis makes the code more readable and future exceptions easier\nto add.\n","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"txt":{"insertions":3,"deletions":0},"java":{"insertions":150,"deletions":157}}},{"hash":"0d7b94d50b0baa81f3a70815c8bda7f770dbe5aa","isMergeCommit":false,"messageTitle":"Continue reformating exceptions","messageBody":"Not all exceptions have been reformatted with the new class.\n\nThis makes the previous commit incomplete.\n\nLets complete reformatting all the exceptions into the new exception class.\n\nThis will complete the exception handling thus far.\n","tags":["A-ExceptionHandling"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":3},"java":{"insertions":22,"deletions":34}}}]}]},"authorFileTypeContributionMap":{"RezwanAhmed123":{"java":1606,"md":54,"fxml":86,"sh":1,"bat":3,"gradle":24,"txt":18}},"authorContributionVariance":{"RezwanAhmed123":108756.93},"authorDisplayNameMap":{"RezwanAhmed123":"CS2103-F12-1 REZW..HMED"}}
