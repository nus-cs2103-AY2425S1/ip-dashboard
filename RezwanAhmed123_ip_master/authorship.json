[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"# Documenting the use of AI tools in this project","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"## Introduction","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"I have done quite an extensive bit of coding myself in many languages and while I have a decent amount of experience","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"in writing code, I mostly worked in iterative depth first approaches or sequential approaches. I also rarely was","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"involved in automated testing. As such I am trying my best to keep the use of AI tools to a minimum. However, I do","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"recognise that it is an important tool for reducing repeated tasks such as creating similar code mainly for formatting","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"and parsing inputs in the UI. As such, I have created this file to document all of my uses of AI that are more","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"widespread such as auto-completing methods. The following is an example of how I plan to document each use:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"---","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"## Example.file","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"### Methods involved:","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"* Method 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"* Method 2","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"* Method 3","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"* Source Method","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"### What and how AI tool was used","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"explanation","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"### What worked and what did not","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"### Estimated Time saved: xx minutes/hrs","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"This will be the format that this file will adhere to. Any local changes (for smaller uses), will be documented in","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"comments above the method itself inside the code file.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"---","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"## Commands.java","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"### Methods involved:","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"* Commands initialise(String command, int commandCode)","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"* Get and Set methods","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"### Parser.java","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"* Commands parseInputFromUser(String command)","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"### What and how AI tool was used","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"Chatgpt was used to create the initialise, get and set methods with reference to the initial variables already declared","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"inside the Commands.java file and the shell of the parseInputFromUser method inside Parser.java. Subsequently, the","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"parseInputFromUser method was changed accordingly to match the command initialise method. These method templates were","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"entirely generated by Chatgpt with some minor edits on my end.","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"### What worked and what did not","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"Making the prompt specific to what I am doing, with some examples of my task, tasklist and parser files helped the ","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"generated code be very close to what I am looking to create and it saved a lot of time too. I think my prompts were too ","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"specific in some cases so the AI started hard coding values in, which I corrected myself.","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"### Estimated Time saved: 20 minutes","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":52}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"# Mortal Reminder Chatbot Project!","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"I will be updating this as the project progresses!","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":2,"-":1}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"    mainClass.set(\"mortal_reminder.MortalReminder\")","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"    archiveBaseName \u003d \"MortalReminder\"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    archiveFileName \u003d \"MortalReminder.jar\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":3,"-":39}},{"path":"src/main/java/mortalreminder/MortalReminder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.Processor;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.Command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedPrinting;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.Parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" * Main class of the MortalReminder App.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"public class MortalReminder {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * Starts the MortalReminder App.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the full app with its dependent classes is not available, the app will not start.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param args Command Line parameters passed into the program (not used)","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"        MortalReminder mortalReminder \u003d new MortalReminder();","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"        mortalReminder.welcome();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        mortalReminder.processInputs();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        mortalReminder.goodbye();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    private void processInputs() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        Processor processor \u003d new Processor();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"        boolean shouldContinue \u003d true;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"        while (shouldContinue) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"            String input \u003d inputScanner.nextLine();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"            Command command \u003d Parser.parseInputFromUser(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"            shouldContinue \u003d processor.handleCommand(command, this.taskList, shouldContinue);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    private void welcome() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"        this.taskList \u003d Storage.loadTaskListFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"        FormattedPrinting.welcome();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"    private void goodbye() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"        FormattedPrinting.goodbye();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":52}},{"path":"src/main/java/mortalreminder/backend/Processor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Objects;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.Command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandTypes;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedPrinting;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Events;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.TimedTask;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"// javadocs was generated using ChatGPT with minor edits.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":" * Handles the processing of commands related to task management.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Processor} class is responsible for interpreting and executing commands","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":" * related to tasks, such as creating tasks, marking them as done, deleting them, and","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":" * listing upcoming tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"public class Processor {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * Processes the given command and modifies the {@link TaskList} accordingly.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     * Depending on the command type, this method can print the task list, create a new task,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"     * mark or unmark a task as done, delete a task, clear all tasks, or list upcoming tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the command is of type {@code BYE}, it will stop further processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param command         the {@link Command} to process.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList        the {@link TaskList} to modify based on the command.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param shouldContinue a boolean indicating whether to continue processing commands.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return {@code false} if the {@code BYE} command is issued, otherwise {@code true}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"    public boolean handleCommand(Command command, TaskList taskList, boolean shouldContinue) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        CommandTypes commandType \u003d command.commandType();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        String commandDetails \u003d Arrays.stream(command.commandDetails())","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"                .reduce((accumulator, element) -\u003e accumulator + \" \" + element)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"                .orElse(\"\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"        switch (commandType) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"        case LIST:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.printList(taskList);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"        case FIND:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskList foundTasks \u003d taskList.findTasks(commandDetails);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.printSimilarTasks(foundTasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"        case MARK:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"        case UNMARK:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"        case DELETE:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"            markUnmarkOrDelete(commandDetails, taskList, commandType);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"        case TODO:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"        case DEADLINE:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"        case EVENT:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"            createTask(commandDetails, taskList, commandType);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"        case CLEAR_TASKS:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"            taskList.clearList();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"            Storage.clearListFile();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"        case UPCOMING_TASKS:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"            upcomingTasks(taskList);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"        case BYE:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"            shouldContinue \u003d false;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"        default:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.unknownCommand();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"        return shouldContinue;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"     * Marks, unmarks, or deletes a task based on the given command type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method attempts to parse the task index from the command details and then","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"     * performs the appropriate action (mark as done, unmark, or delete) on the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method was optimised using ChatGPT.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandDetails the details of the command, typically the task index.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList       the {@link TaskList} containing the tasks to modify.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandType    the {@link CommandTypes} indicating the action to perform.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    public void markUnmarkOrDelete(String commandDetails, TaskList taskList, CommandTypes commandType) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"            int index \u003d Integer.parseInt(commandDetails) - 1;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"            Task newTask \u003d taskList.getTask(index);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"            if (newTask !\u003d null) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"                if (commandType \u003d\u003d CommandTypes.MARK) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"                    newTask.markDone();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"                    Storage.refreshStorageFile(taskList);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"                } else if (commandType \u003d\u003d CommandTypes.UNMARK) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"                    newTask.markUndone();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"                    Storage.refreshStorageFile(taskList);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"                } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"                    taskList.deleteTask(newTask);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.unknownNumber();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"     * Creates a new task based on the command type and adds it to the task list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method interprets the command details to create the appropriate type of task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RezwanAhmed123"},"content":"     * (ToDo, Deadline, or Event) and adds it to the task list. It handles potential errors","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RezwanAhmed123"},"content":"     * such as an incorrect number of details or an invalid date format. This method is also","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RezwanAhmed123"},"content":"     * optimised using ChatGPT.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandDetails the details of the command, typically the task description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList       the {@link TaskList} to add the new task to.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandType    the {@link CommandTypes} indicating the type of task to create.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RezwanAhmed123"},"content":"    public void createTask(String commandDetails, TaskList taskList, CommandTypes commandType) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"RezwanAhmed123"},"content":"            Task newTask;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"RezwanAhmed123"},"content":"            if (commandType \u003d\u003d CommandTypes.TODO) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"RezwanAhmed123"},"content":"                newTask \u003d new ToDo(commandDetails);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"RezwanAhmed123"},"content":"            } else if (commandType \u003d\u003d CommandTypes.DEADLINE) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"RezwanAhmed123"},"content":"                newTask \u003d new Deadline(commandDetails);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"RezwanAhmed123"},"content":"            } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"RezwanAhmed123"},"content":"                newTask \u003d new Events(commandDetails);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"RezwanAhmed123"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.invalidNumberOfDetails();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.invalidDate();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"RezwanAhmed123"},"content":"     * Lists all upcoming tasks that have a due date in the future.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method filters the tasks in the task list to find those that are either deadlines or events,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"RezwanAhmed123"},"content":"     * have a due date in the future, and are not yet marked as done. The upcoming tasks are then printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the {@link TaskList} containing the tasks to check for upcoming due dates.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"RezwanAhmed123"},"content":"    public void upcomingTasks(TaskList taskList) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"RezwanAhmed123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"RezwanAhmed123"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"RezwanAhmed123"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"RezwanAhmed123"},"content":"            if (Objects.equals(task.getType(), \"D\")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"RezwanAhmed123"},"content":"                    || Objects.equals(task.getType(), \"E\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"RezwanAhmed123"},"content":"                TimedTask timedTask \u003d (TimedTask) task;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"RezwanAhmed123"},"content":"                if (LocalDateTime.now().isBefore(timedTask.getDueDate()) \u0026\u0026 !task.getIsDone()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"RezwanAhmed123"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"RezwanAhmed123"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"RezwanAhmed123"},"content":"        FormattedPrinting.upcomingDeadlinesEvents(tasks);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":174}},{"path":"src/main/java/mortalreminder/backend/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.File;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedPrinting;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.Parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"// The javadocs were autogenerated using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" * Handles the manipulation of data to and from a specified storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Storage} class provides methods to append tasks to a file, clear the file,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":" * delete specific tasks, and load tasks from the file. It interacts with the file system","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":" * and ensures that tasks are stored and retrieved correctly.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"public class Storage {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    protected static final String STORAGE_LIST_FILE_PATH \u003d \"src/main/resources/listStorage.txt\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * Appends a task to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method opens the storage file in append mode and writes the task in its file format","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     * to the file. If an {@link IOException} occurs, an error message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task the {@link Task} to append to the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void appendToListFile(Task task) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_LIST_FILE_PATH, true);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            String textToAdd \u003d task.convertToFileFormat();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.write(textToAdd + System.lineSeparator());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.close();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.taskUnableToBeStoredInFile();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     * Clears the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method deletes all content from the storage file by opening it in write mode","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * and writing an empty string. If an {@link IOException} occurs, an error message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void clearListFile() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_LIST_FILE_PATH);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.write(\"\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.close();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.formatPrint(\"File does not exist\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"     * Deletes all tasks from the storage file and re-appends tasks from the given {@link TaskList}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method refreshes the file after mark, unmark or delete operations by first clearing the file","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"     * and adding all the tasks back into the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     * back to the file. This effectively updates the file to reflect the current state of the task list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     * The method was inspired from the","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003ca href\u003d\"https://stackoverflow.com/questions/5800603/delete-specific-line-from-java-text-file\"\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"     *     following post.\u003c/a\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the {@link TaskList} containing tasks to re-append to the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void refreshStorageFile(TaskList taskList) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"        clearListFile();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"            appendToListFile(taskList.getTask(i));","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"     * Loads tasks from the storage file into a {@link TaskList}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method reads each line from the storage file, converts it into a {@link Task},","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"     * and loads it into a new {@link TaskList} object. If the file does not exist or cannot be created,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"     * an error message is printed, and a new, empty {@link TaskList} is returned.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a {@link TaskList} containing tasks loaded from the file, or an empty {@link TaskList} if loading fails.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"    public static TaskList loadTaskListFromFile() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"            File f \u003d new File(STORAGE_LIST_FILE_PATH);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"            // Check if the file/folder already exists and create if it is not,","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"            // send warning if unable to create either if file still does not exist.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"            if ((!f.getParentFile().mkdirs() || !f.createNewFile()) \u0026\u0026 !f.exists()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"                FormattedPrinting.fileCorrupted();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"                Task task \u003d Parser.parseInputFromFile(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"                taskList.loadTask(task);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"            s.close();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"            return taskList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (RuntimeException | IOException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"            return new TaskList();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":109}},{"path":"src/main/java/mortalreminder/backend/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Objects;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedPrinting;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"// The JavaDocs were generated using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" * Manages a list of tasks and provides operations to add, delete, retrieve, and clear tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code TaskList} class encapsulates an {@link ArrayList} of {@link Task} objects and","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" * offers methods to manipulate the list, such as adding new tasks, deleting existing ones,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":" * and retrieving tasks by index. It also handles the interaction with storage to add the task to","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":" * long term storage and formatted printing for printing list to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskList {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    protected final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     * Retrieves the task at the specified index from the list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the index is out of bounds or the list is empty, an appropriate message is printed","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * and {@code null} is returned.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param index the index of the task to retrieve.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the {@link Task} at the specified index, or {@code null} if the index is invalid.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            return this.taskList.get(index);","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            if (this.taskList.isEmpty()) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"                FormattedPrinting.emptyList();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"                return null;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.outOfListBounds(this);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"            return null;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * Adds a task to the list and updates the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task\u0027s description is not empty, the task is added to the list,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     * appended to the storage file, and a confirmation message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     * Otherwise, an error message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task the {@link Task} to add.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"        if (!Objects.equals(task.getDescription().trim(), \"\")) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"            Storage.appendToListFile(task);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"            this.taskList.add(task);","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.addTask(task, this);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.descriptionEmptyError();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     * Loads a task directly into the list from the storage file. Thus, in this method, the task is not added","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     * back into the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is typically used during the initial loading of tasks from a file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task the {@link Task} to load into the list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"    public void loadTask(Task task) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"     * Deletes a task from the list and updates the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task\u0027s description is not empty, the task is removed from the list,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"     * deleted from the storage file, and a confirmation message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"     * Otherwise, an error message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task the {@link Task} to delete.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"        if (!Objects.equals(task.getDescription().trim(), \"\")) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"            this.taskList.remove(task);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"            Storage.refreshStorageFile(this);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.deleteTask(task, this);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.descriptionEmptyError();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"     * Finds and returns the task based on descriptions matching the descriptions passed in.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description string we are looking for in all matching tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return TaskList of matching tasks that contain the description string passed into the method call.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    public TaskList findTasks(String description) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList similarTasks \u003d new TaskList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"            if (task.getDescription().contains(description.trim())) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"                similarTasks.loadTask(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"        return similarTasks;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the size of the task list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"    public int getSize() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"     * Clears all tasks from the list and prints a confirmation message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"    public void clearList() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RezwanAhmed123"},"content":"        this.taskList.clear();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RezwanAhmed123"},"content":"        FormattedPrinting.clearList();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns a string representation of the task list in a format suitable for saving to a file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RezwanAhmed123"},"content":"     * Each task is converted to its file format and appended to the output string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a string representation of the task list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"RezwanAhmed123"},"content":"    public String toString() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"RezwanAhmed123"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"RezwanAhmed123"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"RezwanAhmed123"},"content":"            output.append(task.convertToFileFormat()).append(\"\\n\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"RezwanAhmed123"},"content":"        return output.toString();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":143}},{"path":"src/main/java/mortalreminder/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a command input by the user, encapsulating the command type and any associated details.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":" *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":" * @param commandType   The type of command provided by the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":" * @param commandDetails An array of strings containing the details associated with the command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"public record Command(CommandTypes commandType, String[] commandDetails) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"     * Creates a new {@code Command} instance with the specified command type and details.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method serves as a factory method for creating a {@code Command} object.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandType The type of command to be executed, as specified by the {@link CommandTypes} enum.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param input       An array of strings containing the details associated with the command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return A new {@code Command} object initialized with the given command type and details.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    // Initialise method","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    public static Command initialise(CommandTypes commandType, String[] input) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"        // Return a new Commands object with commandType and commandDetails","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"        return new Command(commandType, input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":23}},{"path":"src/main/java/mortalreminder/commands/CommandTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":" * Contains all types of commands in an Enum list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"public enum CommandTypes {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"    BYE,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"    CLEAR_TASKS,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"    DEADLINE,","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"    DELETE,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"    EVENT,","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    FIND,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"    LIST,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"    MARK,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    TODO,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"    UNKNOWN,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    UNMARK,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    UPCOMING_TASKS","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":20}},{"path":"src/main/java/mortalreminder/io/FormattedPrinting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.io;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandTypes;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * This class is just the UI controller to format and ensure consistency of all output messages.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"public class FormattedPrinting {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints out the formatted output of the chatbot to the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     * An indentation is added to each line and the separator lines are added at the top and bottom of each","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     * line in the message.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param message output message from chatbot to be printed out to the user","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void formatPrint(String message) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"        String indentation \u003d \"   \";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"        String separatorLine \u003d indentation + \"______________________________________________________\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"        StringBuilder outputMessage \u003d new StringBuilder(separatorLine);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] messageLines \u003d message.split(\"\\n\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"        for (String line : messageLines) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"            outputMessage.append(\"\\n\")","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"                    .append(indentation)","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"                    .append(line);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        outputMessage.append(\"\\n\")","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"                .append(separatorLine);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints the welcome message to the user upon program startup.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void welcome() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        String welcomeMessage \u003d \"Hello I\u0027m Mortal Reminder!\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(welcomeMessage);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints the goodbye message to the user when the user types bye into the command-line.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void goodbye() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints all current tasks inside the list when the LIST {@link CommandTypes} is used.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the current total list of tasks to be printed out","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void printList(TaskList taskList) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"            emptyList();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"            StringBuilder currentList \u003d new StringBuilder();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"            currentList.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"            addListItems(taskList, currentList);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints all the similar types of tasks queried by the user when the FIND {@link CommandTypes} is used.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the list of similar tasks to be printed out.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void printSimilarTasks(TaskList taskList) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"            formatPrint(\"No matching tasks!\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"            StringBuilder currentList \u003d new StringBuilder();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"            currentList.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"            addListItems(taskList, currentList);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"    private static void addListItems(TaskList taskList, StringBuilder currentList) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"        for (int i \u003d 1; i \u003c taskList.getSize() + 1; i++) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"            currentList.append(i).append(\".\").append(printTask(taskList.getTask(i - 1)));","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"            if (i \u003c taskList.getSize()) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"                currentList.append(\"\\n\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(currentList.toString());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns a formatted string representing the task passed into the method call.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"     * Takes the task description, type and icon and formats it properly into a string to be printed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the formatted version of the task in string format.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String printTask(Task task) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"[\" + task.getType() + \"]\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"                + task.getDescription();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints a confirmation message when the user adds a new task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task {@link Task} that has been added to the {@link TaskList}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList The current list of all tasks tracked by the backend.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void addTask(Task task, TaskList taskList) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"                + printTask(task)","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"                + taskList.getSize()","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(message);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints a confirmation message when the user deletes a task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task {@link Task} that has been deleted from the {@link TaskList}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList taskList The current list of all tasks tracked by the backend.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void deleteTask(Task task, TaskList taskList) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RezwanAhmed123"},"content":"        String message \u003d \"Got it. I\u0027ve deleted this task:\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RezwanAhmed123"},"content":"                + printTask(task)","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"RezwanAhmed123"},"content":"                + taskList.getSize()","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"RezwanAhmed123"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(message);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void clearList() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"List has been cleared.\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void printMarked(Task task) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"Nice!  I\u0027ve marked this task as done:\\n\" + printTask(task));","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void printUnmarked(Task task) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"OK, I\u0027ve marked this task as not done yet:\\n\" + printTask(task));","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void descriptionEmptyError() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"You have an empty description. Please try again.\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void markError() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"This task has already been marked as done.\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void unmarkError() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"This task has already been marked as not done.\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints the output message when an unknown command is passed in by the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void unknownCommand() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"RezwanAhmed123"},"content":"        String outputMessage \u003d \"I do not recognise this command, please check again!\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Available commands are:\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"RezwanAhmed123"},"content":"                + Arrays.toString(CommandTypes.class.getEnumConstants()).toLowerCase();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(outputMessage);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void unknownNumber() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"Please enter a valid number after the command!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void emptyList() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"You have no tasks in your list.\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList The current list of all tasks tracked by the backend.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void outOfListBounds(TaskList taskList) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"Invalid task number!\\n\"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Please input a number between 1 and \"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"RezwanAhmed123"},"content":"                + taskList.getSize());","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void invalidNumberOfDetails() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"Please give the correct amount of information for the command!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void taskUnableToBeStoredInFile() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"There was an error in adding the task to the storage file!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints an error message when the file cannot be loaded properly due to a corrupted text file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void fileCorrupted() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"The storage file has been corrupted.\\n\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Use the clear_tasks command to get rid of this!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void invalidDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"RezwanAhmed123"},"content":"        formatPrint(\"Please enter a valid date in dd-MM-yyy HHmm (24hr format)!.\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints a list of all upcoming tasks from today.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"RezwanAhmed123"},"content":"     * These tasks must be {@link mortalreminder.tasks.TimedTask} and not have been marked as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param tasks The list of all tasks that are upcoming from today and is tracked by the backend.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void upcomingDeadlinesEvents(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"RezwanAhmed123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"RezwanAhmed123"},"content":"            formatPrint(\"There are no upcoming tasks.\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"RezwanAhmed123"},"content":"            StringBuilder output \u003d new StringBuilder(\"The following tasks are due soon:\\n\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"RezwanAhmed123"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"RezwanAhmed123"},"content":"                output.append(printTask(task)).append(\"\\n\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"RezwanAhmed123"},"content":"            formatPrint(output.toString());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":228}},{"path":"src/main/java/mortalreminder/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.io;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.Command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandTypes;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Events;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"// All javadocs were autogenerated using ChatGPT","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" * Provides utility methods for parsing input strings into command and task objects.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Parser} class includes methods to interpret user input from the console","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":" * and parse data from files to create appropriate task objects.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"public class Parser {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     * Parses the user\u0027s input from the console and returns a corresponding {@code Command} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method trims the input, splits it into parts, identifies the command word,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * and determines the corresponding {@link CommandTypes}. If the command is not recognized,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * it defaults to an unknown command type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param input the user\u0027s input string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a {@code Command} object corresponding to the parsed input.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    public static Command parseInputFromUser(String input) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        // Trim and split the input into designated parts","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] splitInput \u003d input.trim().replaceAll(\"\\\\s+\", \" \").split(\" \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"        String commandWord \u003d splitInput[0];","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        // return the rest of the input as an array of string","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"        int splitInputLength \u003d splitInput.length;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"        splitInput \u003d Arrays.copyOfRange(splitInput, 1, splitInputLength);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"        /*","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"          the following part was inspired by:","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"          https://stackoverflow.com/questions/2290262/search-for-a-string-in-enum-and-return-the-enum","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"          and minor syntax errors were debugged using ChatGPT","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"         */","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"        CommandTypes commandType;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"            commandType \u003d CommandTypes.valueOf(commandWord.toUpperCase());","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"            commandType \u003d CommandTypes.UNKNOWN;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        // Use the initialise method to create and return a Commands object","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        return Command.initialise(commandType, splitInput);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    // The following code was generated with ChatGPT with minor edits.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"     * Parses a string input from a file and returns a corresponding {@code Task} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method splits the input string by the \"|\" delimiter, extracts the task type,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     * completion status, and description, and creates a specific {@code Task} object","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"     * (e.g., {@link ToDo}, {@link Deadline}, {@link Events}) based on the task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param input the input string read from a file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the corresponding {@code Task} object, or {@code null} if the input is invalid.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"    public static Task parseInputFromFile(String input) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] parts \u003d input.split(\"\\\\|\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"        String taskType \u003d parts[0]; // The first letter indicating the task type","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        boolean isDone \u003d Boolean.parseBoolean(parts[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"        // Create task object based on taskType","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"        switch (taskType) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"        case \"T\":","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"        case \"D\":","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"            String deadline \u003d parts[3].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"            return new Deadline(description, deadline, isDone);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"        case \"E\":","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"            String fromTime \u003d parts[3].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"            String toTime \u003d parts[4].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"            return new Events(description, fromTime, toTime, isDone);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"        default:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.fileCorrupted();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"            return null;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":95}},{"path":"src/main/java/mortalreminder/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"// Class and constructor JavaDocs was autocompleted using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a task that has a deadline. A {@code Deadline} is an object that stores the deadline in","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":" * {@link LocalDateTime} format to show the date by which the task needs to be completed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Deadline} class extends the {@code Task} class and implements the {@code TimedTask} interface.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"public class Deadline extends Task implements TimedTask {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Deadline} task with the specified description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description should include the task details followed by the deadline,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * separated by the \"/by\" keyword. For example, \"Submit report /by 12-09-2024 1700\".","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task and its deadline.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws IllegalArgumentException if the description is improperly formatted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    public Deadline(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] descriptionString \u003d description.split(\"/by\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        checkInitialisationDetails(descriptionString);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d descriptionString[0].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        this.deadline \u003d getTime(descriptionString[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following constructor and javadoc was created using ChatGPT autocomplete with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Deadline} task with the specified description, deadline, and completion status.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     * The deadline should be provided as a string in a parsable {@link LocalDateTime} format.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is only called when loading from a file. This method also assumes the values","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     * are always valid as it has already been checked during the adding to file process.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param deadline    the deadline of the task as a {@link String}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param isDone      whether the task is marked as done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * Method to get the description factor of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description is not always the same as the description value passed into the this.description variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"     * especially for the deadline and event classes. This method assumes that the variables have been properly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"     * initialised in the constructor.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of the description after processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"        String deadlineString \u003d convertTimeToString(this.deadline);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.description + \" (by: \" + deadlineString + \")\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts the class into a string to be added to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts all the variables from their respective object types to a string format which can be stored","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"     * inside the storage file and later be recognised by the parser to convert back into a task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of object summary to be placed into the storage text file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.type + \"|\" + this.isDone + \"|\" + this.description + \"|\" + this.deadline;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following function was optimised using chatGPT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     * Checks for invalid data and parameter numbers passed into the constructor of this class.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"     * If there are less or more than 2 objects (description and deadline) in description string, that means","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     * there is too much or too little information provided to create the class.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"     * As such the ArrayIndexOutOfBoundsException() is thrown to prevent the creation of the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"     * The getTime() methods help check if the parsing of the dates and times are correct.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param descriptionString A list of string values passed in from the constructor which are to be checked","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"     *                          for data validation purposes. An error will be thrown if one of the values are","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"     *                          invalid and this will stop the creation of the object inside the app.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws DateTimeParseException The string passed in as the date or time is incorrect and unable to be parsed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"    public void checkInitialisationDetails(String[] descriptionString)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"        if (descriptionString.length !\u003d 2) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"        getTime(descriptionString[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"     * Retrieves the due date of this task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the due date as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.deadline;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":113}},{"path":"src/main/java/mortalreminder/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"// Class and constructor JavaDocs was autocompleted using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a task that spans a period of time. It stores the start and end time of the event using","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":" * {@link LocalDateTime} format to show the duration of the event and when it will be held.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Events} class extends the {@code Task} class and implements the {@code TimedTask} interface.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"public class Events extends Task implements TimedTask {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"    private final LocalDateTime fromTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    private final LocalDateTime toTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Events} task with the specified description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description should include the task details followed by the start and end times,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * separated by the \"/from\" and \"/to\" keywords. For example,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     * \"Team meeting /from 12-09-2024 1000 /to 12-09-2024 1100\".","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the event, including start and end times.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws IllegalArgumentException if the description is improperly formatted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    public Events(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] descriptionString \u003d description.split(\"/from|/to\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"        checkInitialisationDetails(descriptionString);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d descriptionString[0];","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        this.fromTime \u003d getTime(descriptionString[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        this.toTime \u003d getTime(descriptionString[2].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following constructor and javadoc was created using ChatGPT autocomplete with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Events} task with the specified description, start time, end time, and completion status.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * The start and end times should be provided as strings in a parsable {@link LocalDateTime} format.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is only called when loading from a file. This method also assumes the values","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     * are always valid as it has already been checked during the adding to file process.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the event.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param fromTime    the start time of the event as a {@link String}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param toTime      the end time of the event as a {@link String}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param isDone      whether the event is marked as done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"    public Events(String description, String fromTime, String toTime, boolean isDone) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"        this.fromTime \u003d LocalDateTime.parse(fromTime);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        this.toTime \u003d LocalDateTime.parse(toTime);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"     * Method to get the description factor of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description is not always the same as the description value passed into the this.description variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"     * especially for the deadline and event classes. This method assumes that the variables have been properly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"     * initialised in the constructor.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of the description after processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"        String fromTimeString \u003d convertTimeToString(fromTime);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"        String toTimeString \u003d convertTimeToString(toTime);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.description","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"                + \" (from: \" + fromTimeString + \", to: \" + toTimeString + \")\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts the class into a string to be added to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts all the variables from their respective object types to a string format which can be stored","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"     * inside the storage file and later be recognised by the parser to convert back into a task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of object summary to be placed into the storage text file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.type + \"|\" + this.isDone + \"|\" + this.description + \"|\" + this.fromTime + \"|\" + this.toTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"     * Checks for invalid data and parameter numbers passed into the constructor of this class.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"     * If there are less or more than 3 objects in description string, that means there is too much","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"     * or too little information provided to create the class. As such the ArrayIndexOutOfBoundsException()","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"     * is thrown to prevent the creation of the file. The getTime() methods help check if the parsing of the","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"     * dates and times are correct.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param descriptionString A list of string values passed in from the constructor which are to be checked","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"     *                          for data validation purposes. An error will be thrown if one of the values are","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"     *                          invalid and this will stop the creation of the object inside the app.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws DateTimeParseException The string passed in as the date or time is incorrect and unable to be parsed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following function was optimised using chatGPT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    public void checkInitialisationDetails(String[] descriptionString)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"            throws DateTimeParseException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"        if (descriptionString.length !\u003d 3) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"        getTime(descriptionString[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"        getTime(descriptionString[2].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"     * Retrieves the due date of this task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the due date as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.fromTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":119}},{"path":"src/main/java/mortalreminder/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedPrinting;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"// solution is adapted from the Course Level 3 extension","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"// class and constructor Javadocs were autocompleted using ChatGPT","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a general task with a description, completion status, and type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Task} class is an abstract base class for specific types of tasks such as","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * {@code Deadline}, {@code Events}, and {@code ToDo}. It provides common properties","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" * and methods for handling tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    protected String description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    protected String type;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Task} with the specified description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getType() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        return type;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     * Method to get the description factor of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description is not always the same as the description value passed into the this.description variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * especially for the deadline and event classes. This method assumes that the variables have been properly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     * initialised in the constructor.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of the description after processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"    public abstract String getDescription();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts the class into a string to be added to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts all the variables from their respective object types to a string format which can be stored","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * inside the storage file and later be recognised by the parser to convert back into a task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of object summary to be placed into the storage text file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"    public abstract String convertToFileFormat();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"    // note that the rest of the methods\u0027 JavaDoc was autogenerated by ChatGPT.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"     * Marks this task as done if it has not been marked already.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task is successfully marked as done, it calls the {@code printMarked} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"     * from {@code FormattedPrinting} to print a confirmation message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task is already marked as done, it calls the {@code markError} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     * from {@code FormattedPrinting} to print an error message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"        if (!this.isDone) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.printMarked(this);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.markError();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"     * Marks this task as not done if it is currently marked as done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task is successfully marked as undone, it calls the {@code printUnmarked} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"     * from {@code FormattedPrinting} to print a confirmation message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task is already marked as not done, it calls the {@code unmarkError} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"     * from {@code FormattedPrinting} to print an error message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"    public void markUndone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.printUnmarked(this);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"            FormattedPrinting.unmarkError();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns the current status of this task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return {@code true} if this task is marked as done; {@code false} otherwise.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"        return isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":102}},{"path":"src/main/java/mortalreminder/tasks/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"// the JavaDocs for this class and its methods were autogenerated by ChatGPT","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a task that is associated with a specific time or due date.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":" * This interface provides methods to retrieve the due date of the task,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * parse a time from a string, and convert a {@link LocalDateTime} object","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" * to a formatted string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"public interface TimedTask {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     * Retrieves the due date of this task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the due date as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"    LocalDateTime getDueDate();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * Parses a string to obtain the {@link LocalDateTime} of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * The string should follow the format \"dd-MM-yyyy HHmm\", where:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003edd: day of the month\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eMM: month of the year\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eyyyy: year\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eHHmm: time in 24-hour format\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param descriptionString the string containing the date and time information.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the corresponding {@link LocalDateTime} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    default LocalDateTime getTime(String descriptionString) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"        return LocalDateTime.parse(descriptionString, inputFormatter);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts a {@link LocalDateTime} object to a formatted string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * The returned string will be in the format \"dd MMM yyyy h:mm a\", where:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003edd: day of the month\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eMMM: abbreviated month name\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eyyyy: year\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eh:mm a: time in 12-hour format with AM/PM\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param time the {@link LocalDateTime} object to be formatted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the formatted date and time string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"    default String convertTimeToString(LocalDateTime time) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"        return time.format(outputFormatter);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":61}},{"path":"src/main/java/mortalreminder/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"// Class and constructor JavaDocs was autocompleted using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a simple task without any specific time constraints.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code ToDo} class extends the {@code Task} class.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":" * It represents tasks that need to be done, but without a specific deadline or time frame.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code ToDo} task with the specified description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following constructor and javadoc was created using ChatGPT autocomplete with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code ToDo} task with the specified description and completion status.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is only called when loading from a file. This method also assumes the values","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * are always valid as it has already been checked during the adding to file process.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param isDone      whether the task is marked as done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     * Method to get the description factor of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description is not always the same as the description value passed into the this.description variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     * especially for the deadline and event classes. This method assumes that the variables have been properly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     * initialised in the constructor.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of the description after processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts the class into a string to be added to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts all the variables from their respective object types to a string format which can be stored","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"     * inside the storage file and later be recognised by the parser to convert back into a task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of object summary to be placed into the storage text file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.type + \"|\" + this.isDone + \"|\" + this.description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":64}},{"path":"src/test/java/mortalreminder/backend/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDoStub;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    public void loadTaskListFromFile_emptyFile() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList taskList \u003d Storage.loadTaskListFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"        Storage.clearListFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    public void loadTaskListFromFile_IOExceptionThrown_exceptionHandled() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"        Storage.appendToListFile(new ToDoStub(\"Fake Task\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList taskList \u003d Storage.loadTaskListFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"        Storage.clearListFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    public void loadTaskListFromFile_success() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        Storage.appendToListFile(new ToDo(\"Fake task\", true));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        Storage.appendToListFile(new ToDo(\"Fake task 2\", true));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList taskList \u003d Storage.loadTaskListFromFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        Storage.clearListFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":35}},{"path":"src/test/java/mortalreminder/backend/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"    public TaskListStub() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"        super();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":14}},{"path":"src/test/java/mortalreminder/backend/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDoStub;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"    public void getTask_emptyList_exceptionHandled() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"        assertNull(taskList.getTask(0));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"        taskList.clearList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    public void getTask_negativeIndex_exceptionHandled() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"        assertNull(taskList.getTask(-1));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"        taskList.clearList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    public void getTask_success() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList taskList \u003d new TaskListStub();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        Task testingTask \u003d new ToDoStub(\"This is a task.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"        taskList.addTask(testingTask);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        assertEquals(testingTask, taskList.getTask(0));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        taskList.clearList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":34}},{"path":"src/test/java/mortalreminder/tasks/ToDoStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"public class ToDoStub extends ToDo {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"    public ToDoStub(String description) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"        return description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"hi","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"clear_tasks","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"todo","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"todo read book","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"deadline return book /by 12-09-2024 1300","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"event project meeting /from 12-09-2024 1600 /to 12-09-2024 1800","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"deadline project meeting /from 12-09-2024 1600 /to 12-09-2024 1800","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"event project meeting /from 12-09-2024 1800","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"list","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"unmark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"mark 1","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"mark 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"unmark 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"mark 2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"list","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"delete 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"list","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"bye","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\**\\*.java","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"java -classpath ..\\bin MortalReminder \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"java -classpath ../bin MortalReminder \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":1,"-":37}}]
