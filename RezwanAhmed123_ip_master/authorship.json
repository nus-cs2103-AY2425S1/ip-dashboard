[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"# Documenting the use of AI tools in this project","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"## Introduction","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"I have done quite an extensive bit of coding myself in many languages and while I have a decent amount of experience","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"in writing code, I mostly worked in iterative depth first approaches or sequential approaches. I also rarely was","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"involved in automated testing. As such I am trying my best to keep the use of AI tools to a minimum. However, I do","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"recognise that it is an important tool for reducing repeated tasks such as creating similar code mainly for formatting","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"and parsing inputs in the UI. As such, I have created this file to document all of my uses of AI that are more","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"widespread.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"## What was AI Used for?","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"Mainly AI was used in the debugging of longer methods in the initial coding process.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"Some non-trivial methods were also auto-completed with minor edits in my earlier iterations (of course the logic was","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"thought of by myself).","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"Then as I refactored everything, I started to use AI to simplify logic that I already had in the code, while of course","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"trying to update the things I could easily see from the course details by myself.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"A great chunk of time was saved by using ChatGPT for creating JavaDocs and planning JUnit Test Cases.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"## How was the experience?","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"There was some level of difficulty of understanding how to \"game\" the AI into giving me code consistent with the logic","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"I have in mind. As I used AI more, I noticed there were some inconsistencies and \"bullying\" the AI does not always work","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"(even if it mostly does). Sometimes giving old code as example helps provide the AI with a lot more context to actually","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"do the work.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"For Javadocs and JUnit tests, the AI provides a solid template to work with saving a huge chunk of time.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"## Conclusion","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"Overall, I think I learnt a lot of shortcuts as well when using AI, since it sometimes uses functions I would have never","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"thought of and this exposure makes my coding knowledge stronger (even if the method spit out by the AI is not always","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"correct, the debugging helps a lot).","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":32}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"# Mortal Reminder User Guide","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"![Screenshot of Ui](docs/Ui.png)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"Mortal Reminder is a funny little app used to manage your **todos, deadlines and upcoming events** in a pretty graphical user interface which makes everything easier to see.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"## Table of contents","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"2. [Features](#features-and-their-examples)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"   1. [Todo](#adding-todo-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"   2. [Deadlines](#adding-tasks-with-deadline-deadlines)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"   3. [Events](#adding-events)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"   4. [List](#list)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"   5. [Find](#finding-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"   6. [Upcoming tasks](#upcoming-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"   7. [Mark/Unmark](#marking-or-unmarking)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"   8. [Deletion](#deletion-of-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"   9. [Clearing all tasks](#clearing-all-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"   10. [Adding alternative command words](#adding-alternative-command-words)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"   11. [Clearing alternative command words](#clearing-all-alternative-commands)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"3. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"## Quick Start","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"2. Download the latest .jar file from [MortalReminder.jar](https://github.com/RezwanAhmed123/ip/releases/download/A-Release/MortalReminder.jar).","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"3. Double click to open the app, it should immediately open the app for you to use.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"## Features and their examples","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"### Adding Todo tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"Example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"```html","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"todo read book","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"A confirmation message should be output and the todo should be added to the list of tracked tasks. The confirmation message example is below:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"You know what? Your life’s already hell so I am gonna leave you be. I\u0027ve added this task:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"[T][] read book","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"Now you have [however many task(s)] in your list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"### Adding tasks with deadline (Deadlines)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"A deadline is a time-constrained task which must be done by a specific date and time. Make sure the date and time follows the exact format as shown below and that you have included the `/by` keyword. This should add a deadline to the list and output a message as shown in the examples below:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"deadline return book /by 19-09-2024 1800","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"Example output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"You know what? Your life’s already hell so I am gonna leave you be. I\u0027ve added this task:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"[D][] return book (by: 19 Sep 2024 6:00pm)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"Now you have [however many task(s)] in your list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"### Adding Events","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"An Event is a type of task which happens specifically within a constrained duration. Make sure that the date and time specified for the start and end follow exactly as seen in the Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"event project meeting /from 19-09-2024 1400 /to 19-09-2024 1500","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"Example Output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"You know what? Your life’s already hell so I am gonna leave you be. I\u0027ve added this task:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"[E][] project meeting (from: 19 Sep 2024 2:00pm to: 19 Sep 2024 3:00pm)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"Now you have [however many task(s)] in your list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"### List","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"You can get a list of all tracked tasks by calling `list` to the program.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"Example output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"1. [T][X] Read Book","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"2. [D][ ] Return Book (by: 19 Sep 2024 4pm)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"### Finding tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"You can quickly search for tasks using the find function. You can search for different tasks using either, one keyword at a time, or many keywords at once using a comma to separate the search terms. An example is shown below:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"#### One keyword only","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"Input Example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"find book","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"Output example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"Here are the tasks matching your search terms:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"1. [similar 1st task would be printed here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"2. [similar 2nd task would be printed here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"#### Multiple search terms","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"Input Example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"find book, project","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"Output example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"Here are the tasks matching your search terms:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"1. [similar 1st task would be printed here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"2. [similar 2nd task would be printed here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"### Upcoming tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"You can search for all upcoming tasks that have not been marked by calling the `upcoming_tasks` command. This will give you a list of all upcoming tasks as the output.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"### Marking or Unmarking","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"You can mark or unmark items to show if they have been completed or not. Simply do the following with the item index shown in the list:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"#### Mark","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"Marking Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"mark 1","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RezwanAhmed123"},"content":"Marking Example Output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RezwanAhmed123"},"content":"I\u0027ve marked this task as done:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RezwanAhmed123"},"content":"[specified task based on the item number]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RezwanAhmed123"},"content":"But are you really Ok?","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"RezwanAhmed123"},"content":"#### Unmark","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"RezwanAhmed123"},"content":"Unmarking Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"RezwanAhmed123"},"content":"unmark 1","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"RezwanAhmed123"},"content":"Unmarking Example Output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"RezwanAhmed123"},"content":"Seems like your effort was in Vayne. This task has been unmarked:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"RezwanAhmed123"},"content":"[specified task here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"RezwanAhmed123"},"content":"### Deletion of tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"RezwanAhmed123"},"content":"You can delete tasks you no longer want to track using the following:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"RezwanAhmed123"},"content":"Example input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"RezwanAhmed123"},"content":"delete 1","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"RezwanAhmed123"},"content":"Example output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"RezwanAhmed123"},"content":"\"A futile act. Why do you persist? I\u0027ve deleted this task:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"RezwanAhmed123"},"content":"[deleted task]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"RezwanAhmed123"},"content":"Now, you have [X] task(s) left in your list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"RezwanAhmed123"},"content":"### Clearing all tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"RezwanAhmed123"},"content":"You can delete all tracked tasks using the `clear_tasks` command. This should clear everything that is currently being tracked.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"RezwanAhmed123"},"content":"### Adding alternative command words","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"RezwanAhmed123"},"content":"You can use this command to add alternative commands to the commands in the program. For example, you can change `todo` to just `t`.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"RezwanAhmed123"},"content":"How to use this command:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"RezwanAhmed123"},"content":"add_command_alternative [new alternative you want] [a version of the command already recognised by the program]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"RezwanAhmed123"},"content":"Example input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"RezwanAhmed123"},"content":"add_command_alternative aca add_command_alternative","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"RezwanAhmed123"},"content":"Example output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"RezwanAhmed123"},"content":"aca has been added to the command alternatives for add_command_alternative","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"RezwanAhmed123"},"content":"And you can even use `aca` to map other forms of alternatives now as well such as:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"RezwanAhmed123"},"content":"aca a aca","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"RezwanAhmed123"},"content":"which will output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"RezwanAhmed123"},"content":"a has been added to the command alternatives for add_command_alternative","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"RezwanAhmed123"},"content":"### Clearing all alternative commands","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"RezwanAhmed123"},"content":"Using `clear_alternatives` will clear all alternative commands from memory.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"RezwanAhmed123"},"content":"## Acknowledgements","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"RezwanAhmed123"},"content":"I would like to credit [@Solomon0519](https://github.com/Solomon0519) as I referenced his idea of using an Error Class to flag all my errors in the program instead of dealing with many error types at once.","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":192,"-":1}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.1.0\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"javafx {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"    mainClass.set(\"mortalreminder.io.Launcher\")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"    archiveBaseName \u003d \"MortalReminder\"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"    archiveFileName \u003d \"MortalReminder.jar\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":25,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"# Mortal Reminder User Guide","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"![Screenshot of Ui](Ui.png)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"Mortal Reminder is a funny little app used to manage your **todos, deadlines and upcoming events** in a pretty graphical user interface which makes everything easier to see.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"## Table of contents","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"2. [Features](#features-and-their-examples)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"   1. [Todo](#adding-todo-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"   2. [Deadlines](#adding-tasks-with-deadline-deadlines)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"   3. [Events](#adding-events)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"   4. [List](#list)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"   5. [Find](#finding-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"   6. [Upcoming tasks](#upcoming-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"   7. [Mark/Unmark](#marking-or-unmarking)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"   8. [Deletion](#deletion-of-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"   9. [Clearing all tasks](#clearing-all-tasks)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"   10. [Adding alternative command words](#adding-alternative-command-words)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"   11. [Clearing alternative command words](#clearing-all-alternative-commands)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"3. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"## Quick Start","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"1. Ensure you have Java 17 or above installed in your Computer. ","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"2. Download the latest .jar file from [MortalReminder.jar](https://github.com/RezwanAhmed123/ip/releases/download/A-Release/MortalReminder.jar).","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"3. Double click to open the app, it should immediately open the app for you to use.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"## Features and their examples","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"### Adding Todo tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"Example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"```html","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"todo read book","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"A confirmation message should be output and the todo should be added to the list of tracked tasks. The confirmation message example is below:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"You know what? Your life’s already hell so I am gonna leave you be. I\u0027ve added this task:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"[T][] read book","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"Now you have [however many task(s)] in your list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"### Adding tasks with deadline (Deadlines)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"A deadline is a time-constrained task which must be done by a specific date and time. Make sure the date and time follows the exact format as shown below and that you have included the `/by` keyword. This should add a deadline to the list and output a message as shown in the examples below:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"deadline return book /by 19-09-2024 1800","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"Example output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"You know what? Your life’s already hell so I am gonna leave you be. I\u0027ve added this task:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"[D][] return book (by: 19 Sep 2024 6:00pm)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"Now you have [however many task(s)] in your list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"### Adding Events","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"An Event is a type of task which happens specifically within a constrained duration. Make sure that the date and time specified for the start and end follow exactly as seen in the Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"event project meeting /from 19-09-2024 1400 /to 19-09-2024 1500","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"Example Output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"You know what? Your life’s already hell so I am gonna leave you be. I\u0027ve added this task:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"[E][] project meeting (from: 19 Sep 2024 2:00pm to: 19 Sep 2024 3:00pm)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"Now you have [however many task(s)] in your list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"### List","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"You can get a list of all tracked tasks by calling `list` to the program.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"Example output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"1. [T][X] Read Book","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"2. [D][ ] Return Book (by: 19 Sep 2024 4pm)","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"### Finding tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"You can quickly search for tasks using the find function. You can search for different tasks using either, one keyword at a time, or many keywords at once using a comma to separate the search terms. An example is shown below:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"#### One keyword only","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"Input Example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"find book","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"Output example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"Here are the tasks matching your search terms:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"1. [similar 1st task would be printed here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"2. [similar 2nd task would be printed here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"#### Multiple search terms","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"Input Example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"find book, project","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"Output example:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"Here are the tasks matching your search terms:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"1. [similar 1st task would be printed here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"2. [similar 2nd task would be printed here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"### Upcoming tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"You can search for all upcoming tasks that have not been marked by calling the `upcoming_tasks` command. This will give you a list of all upcoming tasks as the output.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"### Marking or Unmarking","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"You can mark or unmark items to show if they have been completed or not. Simply do the following with the item index shown in the list:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"#### Mark","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"Marking Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"mark 1","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RezwanAhmed123"},"content":"Marking Example Output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RezwanAhmed123"},"content":"I\u0027ve marked this task as done:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RezwanAhmed123"},"content":"[specified task based on the item number]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RezwanAhmed123"},"content":"But are you really Ok?","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"RezwanAhmed123"},"content":"#### Unmark","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"RezwanAhmed123"},"content":"Unmarking Example Input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"RezwanAhmed123"},"content":"unmark 1","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"RezwanAhmed123"},"content":"Unmarking Example Output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"RezwanAhmed123"},"content":"Seems like your effort was in Vayne. This task has been unmarked:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"RezwanAhmed123"},"content":"[specified task here]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"RezwanAhmed123"},"content":"### Deletion of tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"RezwanAhmed123"},"content":"You can delete tasks you no longer want to track using the following:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"RezwanAhmed123"},"content":"Example input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"RezwanAhmed123"},"content":"delete 1","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"RezwanAhmed123"},"content":"Example output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"RezwanAhmed123"},"content":"\"A futile act. Why do you persist? I\u0027ve deleted this task:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"RezwanAhmed123"},"content":"[deleted task]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"RezwanAhmed123"},"content":"Now, you have [X] task(s) left in your list.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"RezwanAhmed123"},"content":"### Clearing all tasks","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"RezwanAhmed123"},"content":"You can delete all tracked tasks using the `clear_tasks` command. This should clear everything that is currently being tracked.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"RezwanAhmed123"},"content":"### Adding alternative command words","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"RezwanAhmed123"},"content":"You can use this command to add alternative commands to the commands in the program. For example, you can change `todo` to just `t`.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"RezwanAhmed123"},"content":"How to use this command:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"RezwanAhmed123"},"content":"add_command_alternative [new alternative you want] [a version of the command already recognised by the program]","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"RezwanAhmed123"},"content":"Example input:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"RezwanAhmed123"},"content":"add_command_alternative aca add_command_alternative","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"RezwanAhmed123"},"content":"Example output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"RezwanAhmed123"},"content":"aca has been added to the command alternatives for add_command_alternative","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"RezwanAhmed123"},"content":"And you can even use `aca` to map other forms of alternatives now as well such as:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"RezwanAhmed123"},"content":"aca a aca","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"RezwanAhmed123"},"content":"which will output:","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"RezwanAhmed123"},"content":"a has been added to the command alternatives for add_command_alternative","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"RezwanAhmed123"},"content":"```","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"RezwanAhmed123"},"content":"### Clearing all alternative commands","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"RezwanAhmed123"},"content":"Using `clear_alternatives` will clear all alternative commands from memory.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"RezwanAhmed123"},"content":"## Acknowledgements","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"RezwanAhmed123"},"content":"I would like to credit [@Solomon0519](https://github.com/Solomon0519) as I referenced his idea of using an Error Class to flag all my errors in the program instead of dealing with many error types at once.","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":176,"-":17}},{"path":"src/main/java/mortalreminder/MortalReminder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.CommandAlternativesStorage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.Processor;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.TaskListStorage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.Command;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandAlternatives;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedOutput;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" * Main class of the MortalReminder App.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"public class MortalReminder {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    private final Processor processor \u003d new Processor();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"    private CommandAlternatives commandAlternatives;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method loads all tasks from storage and greets the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of welcome message with initial greeting to the user.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    public String welcome() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"            this.taskList \u003d TaskListStorage.loadTaskListFromFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"            this.commandAlternatives \u003d CommandAlternativesStorage.loadCommandsFromFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        return FormattedOutput.welcome();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     * Initialises the execution of a command and returns the feedback message from the processor.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param command command created using the parser.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the string response from the chatbot after command has been executed.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    public String executeCommand(Command command) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"            return processor.handleCommand(command, taskList);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":51}},{"path":"src/main/java/mortalreminder/backend/CommandAlternativesStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.File;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandAlternatives;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedOutput;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" * Handles all long term storage for command alternatives.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"public class CommandAlternativesStorage {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    protected static final String STORAGE_ALTERNATIVE_COMMAND_PATH \u003d \"src/main/resources/data/alternativeCommands.txt\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * Initialises the alternatives file on first start of the App.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    private static void initialise() throws MortalReminderException {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"            File f \u003d new File(STORAGE_ALTERNATIVE_COMMAND_PATH);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"            f.createNewFile();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"            f.exists();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getFileCannotBeCreatedErrorMessage());","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"     * Appends a new command alternative to the storage for {@link CommandType}.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandAlternative String that we want to represent a command using.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandType the commandType we want the string to represent.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the file cannot be found.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void appendToAlternativeCommandFile(String commandAlternative, CommandType commandType)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"            throws MortalReminderException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"            initialise();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_ALTERNATIVE_COMMAND_PATH, true);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"            String commandString \u003d commandType.toString().toLowerCase();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.write(commandAlternative + \" \" + commandString + System.lineSeparator());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.close();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(\"Corrupted storage file! Please refresh using refresh commands.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * Loads all saved command alternatives to the command alternatives hashmap.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return Hashmap of all saved commands","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the file is corrupted and cannot be created","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"    public static CommandAlternatives loadCommandsFromFile() throws MortalReminderException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"            initialise();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"            File f \u003d new File(STORAGE_ALTERNATIVE_COMMAND_PATH);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"            HashMap\u003cString, CommandType\u003e stringCommandTypeHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"                String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"                String commandString \u003d inputSplit[0];","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"                CommandType commandType \u003d CommandType.valueOf(inputSplit[1].toUpperCase());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"                stringCommandTypeHashMap.put(commandString, commandType);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"            s.close();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"            return new CommandAlternatives(stringCommandTypeHashMap);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (RuntimeException | IOException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getCorruptedAlternativeCommandFileErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     * Clears the storage file for all alternatives.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String clearAlternativesFile() throws MortalReminderException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"            initialise();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_ALTERNATIVE_COMMAND_PATH);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.write(\"\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.close();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"            return FormattedOutput.alternativesCleared();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getCorruptedAlternativeCommandFileErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":99}},{"path":"src/main/java/mortalreminder/backend/Processor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskCreator;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskEditor;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskRetriever;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.Command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandAlternatives;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedOutput;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"// javadocs were generated using ChatGPT with minor edits.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":" * Handles the processing of commands related to task management.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Processor} class is responsible for interpreting and executing commands","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":" * related to tasks, such as creating tasks, marking them as done, deleting them, and","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":" * listing upcoming tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"public class Processor {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * Processes the given command and modifies the {@link TaskList} accordingly.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * Depending on the command type, this method can print the task list, create a new task,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     * mark or unmark a task as done, delete a task, clear all tasks, or list upcoming tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param command  the {@link Command} to process.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the {@link TaskList} to modify based on the command.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return response string which is the output message of the entire command.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException based on different input or command errors found in the given command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    public String handleCommand(Command command, TaskList taskList) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        CommandType commandType \u003d command.commandType();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"        String commandDetails \u003d Arrays.stream(command.commandDetails())","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"                .reduce((accumulator, element) -\u003e accumulator + \" \" + element)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"                .orElse(\"\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"        switch (commandType) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"        case LIST:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"            return FormattedOutput.printList(taskList);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"        case FIND:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"            return TaskRetriever.findTasks(taskList, commandDetails);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        case MARK:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"            // Fallthrough","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        case UNMARK:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"            return TaskEditor.executeMarkOrUnmark(commandDetails, taskList, commandType);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        case DELETE:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"            return TaskEditor.executeDeletion(commandDetails, taskList);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"        case TODO:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"            // Fallthrough","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"        case DEADLINE:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"            // Fallthrough","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"        case EVENT:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"            return TaskCreator.createTask(commandDetails, taskList, commandType);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"        case CLEAR_TASKS:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"            return taskList.clearList();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"        case UPCOMING_TASKS:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"            return TaskRetriever.getUpcomingTasks(taskList);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"        case ADD_COMMAND_ALTERNATIVE:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"            CommandAlternatives commandAlternatives \u003d CommandAlternativesStorage.loadCommandsFromFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"            return commandAlternatives.addCommandAlternative(commandDetails);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        case CLEAR_ALTERNATIVES:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"            return CommandAlternativesStorage.clearAlternativesFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"        default:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"            return feedbackUnrecognisedCommand();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns feedback message if the command passed by the user is unrecognisable.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"     * A list of all recognisable commands are also provided.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"    public String feedbackUnrecognisedCommand() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"        StringBuilder message \u003d new StringBuilder(\"\"\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"                I do not recognise this command, please check again!","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"                Available commands are:","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"                \"\"\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"        for (CommandType type : CommandType.values()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"            if (type \u003d\u003d CommandType.UNKNOWN) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"                continue;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"            message.append(type.name().toLowerCase()).append(\"\\n\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"        return message.toString();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":100}},{"path":"src/main/java/mortalreminder/backend/TaskListStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.File;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.Parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"// The javadocs were autogenerated using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":" * Handles the manipulation of data to and from a specified storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Storage} class provides methods to append tasks to a file, clear the file,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":" * delete specific tasks, and load tasks from the file. It interacts with the file system","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":" * and ensures that tasks are stored and retrieved correctly.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskListStorage {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    protected static final String STORAGE_LIST_FILE_PATH \u003d \"src/main/resources/data/listStorage.txt\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * Initialises the storage on first start of the App.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    private static void initialise() throws MortalReminderException {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"            File f \u003d new File(STORAGE_LIST_FILE_PATH);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"            f.createNewFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            f.exists();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getFileCannotBeCreatedErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     * Appends a task to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method opens the storage file in append mode and writes the task in its file format","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     * to the file. If an {@link IOException} occurs, an error message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task the {@link Task} to append to the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the file cannot be found.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void appendToListFile(Task task) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"            initialise();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_LIST_FILE_PATH, true);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"            String textToAdd \u003d task.convertToFileFormat();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.write(textToAdd + System.lineSeparator());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.close();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getStorageFileCorruptedErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"     * Clears the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method deletes all content from the storage file by opening it in write mode","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"     * and writing an empty string. If an {@link IOException} occurs, an error message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the file cannot be found from the hardcoded path.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void clearListFile() throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"            initialise();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_LIST_FILE_PATH);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.write(\"\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"            fw.close();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getFileNotFoundErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     * Deletes all tasks from the storage file and re-appends tasks from the given {@link TaskList}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method refreshes the file after mark, unmark or delete operations by first clearing the file","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"     * and adding all the tasks back into the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"     * This effectively updates the file to reflect the current state of the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"     * The method was inspired from the","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003ca href\u003d\"https://stackoverflow.com/questions/5800603/delete-specific-line-from-java-text-file\"\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"     * following post.\u003c/a\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the {@link TaskList} containing tasks to re-append to the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if there is an error inside the clearListFile() method.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void refreshStorageFile(TaskList taskList) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"        clearListFile();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"            appendToListFile(taskList.getTask(i));","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"     * Loads tasks from the storage file into a {@link TaskList}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method reads each line from the storage file, converts it into a {@link Task},","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"     * and loads it into a new {@link TaskList} object. If the file does not exist or cannot be created,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"     * an error message is printed, and a new, empty {@link TaskList} is returned.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a {@link TaskList} containing tasks loaded from the file, or an empty {@link TaskList} if loading fails.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if file is unreadable or cannot be created.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"    public static TaskList loadTaskListFromFile() throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"            initialise();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"            File f \u003d new File(STORAGE_LIST_FILE_PATH);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"                Task task \u003d Parser.parseInputFromFile(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RezwanAhmed123"},"content":"                taskList.loadTask(task);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RezwanAhmed123"},"content":"            s.close();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RezwanAhmed123"},"content":"            return taskList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (RuntimeException | IOException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getStorageFileCorruptedErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":133}},{"path":"src/main/java/mortalreminder/backend/tasklistmanager/TaskCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend.tasklistmanager;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Deadline;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Event;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDo;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * Handles creation of different types of tasks simultaneously.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskCreator {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"     * Creates a new task based on the command type and adds it to the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method interprets the command details to create the appropriate type of task","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     * (ToDo, Deadline, or Event) and adds it to the task list. It handles potential errors","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * such as an incorrect number of details or an invalid date format. This method is also","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * optimised using ChatGPT.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandDetails the details of the command, typically the task description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList       the {@link TaskList} to add the new task to.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandType    the {@link CommandType} indicating the type of task to create.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return returns a confirmation message of type of task created or the reason why the task could not be created.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if there is an error in the initialisation in the new {@link Task} to be created.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String createTask(String commandDetails, TaskList taskList, CommandType commandType)","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"            throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        Task newTask;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        if (commandType \u003d\u003d CommandType.TODO) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"            newTask \u003d new ToDo(commandDetails);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        } else if (commandType \u003d\u003d CommandType.DEADLINE) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"            newTask \u003d new Deadline(commandDetails);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"        } else if (commandType \u003d\u003d CommandType.EVENT) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"            newTask \u003d new Event(commandDetails);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getUnreachableCodeErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        return taskList.addTask(newTask);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":45}},{"path":"src/main/java/mortalreminder/backend/tasklistmanager/TaskEditor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend.tasklistmanager;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.TaskListStorage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":" * Handles marking, unmarking or deleting tasks that have already been created.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskEditor {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"     * Marks, or unmarks a task based on the given command type.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method attempts to parse the task index from the command details and then","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"     * performs the appropriate action (mark as done, unmark) on the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method was optimised using ChatGPT.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandDetails the details of the command, typically the task index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList       the {@link TaskList} containing the tasks to modify.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandType    the {@link CommandType} indicating the action to perform.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return returns a confirmation message of the corresponding type of command done.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the index given is invalid (does not exist in the {@link TaskList}).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String executeMarkOrUnmark(String commandDetails, TaskList taskList, CommandType commandType)","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"            throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"            Task newTask \u003d retrieveTask(commandDetails, taskList);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"            String feedback;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"            if (commandType \u003d\u003d CommandType.MARK) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"                feedback \u003d newTask.markDone();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            } else if (commandType \u003d\u003d CommandType.UNMARK) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"                feedback \u003d newTask.markUndone();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            } else {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"                throw new MortalReminderException(MortalReminderException.getUnreachableCodeErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskListStorage.refreshStorageFile(taskList);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"            return feedback;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getInvalidNumberFormatErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * Deletes a task from the app.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandDetails the unparsed integer string passed in by user.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList       the current list of tasks being tracked.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return confirmation feedback about the deletion process","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if there was an error in the deletion process.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String executeDeletion(String commandDetails, TaskList taskList) throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        Task taskToDelete \u003d retrieveTask(commandDetails, taskList);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        return taskList.deleteTask(taskToDelete);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    private static Task retrieveTask(String commandDetails, TaskList taskList) throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        int index \u003d Integer.parseInt(commandDetails) - 1;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"        return taskList.getTask(index);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":63}},{"path":"src/main/java/mortalreminder/backend/tasklistmanager/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend.tasklistmanager;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Objects;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.TaskListStorage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedOutput;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"// The JavaDocs were generated using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" * Manages a list of tasks and provides operations to add, delete, retrieve, and clear tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code TaskList} class encapsulates an {@link ArrayList} of {@link Task} objects and","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":" * offers methods to manipulate the list, such as adding new tasks, deleting existing ones,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":" * and retrieving tasks by index. It also handles the interaction with storage to add the task to","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":" * long term storage and formatted printing for printing list to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskList {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    protected ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * Retrieves the task at the specified index from the list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the index is out of bounds or the list is empty, an appropriate message is printed","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     * and {@code null} is returned.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param index the index of the task to retrieve.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the {@link Task} at the specified index, or {@code null} if the index is invalid.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the index is invalid in the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    public Task getTask(int index) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        if (this.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getQueryOnEmptyListErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"            return this.taskList.get(index);","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getOutOfTaskListBoundsErrorMessage(this));","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.taskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     * Adds a task to the list and updates the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task\u0027s description is not empty, the task is added to the list,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"     * appended to the storage file, and a confirmation message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"     * Otherwise, an error message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task the {@link Task} to add.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of confirmation message if adding was successful and an error message if not.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the description of the task to be added is empty.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"    public String addTask(Task task) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"        if (!Objects.equals(task.getDescription().trim(), \"\")) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskListStorage.appendToListFile(task);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"            this.taskList.add(task);","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"            return FormattedOutput.addTask(task, this);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getInvalidEventDescriptionErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"     * Loads a task directly into the list from the storage file. Thus, in this method, the task is not added","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"     * back into the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is typically used only internally when the task has already been added to the app","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"     * before such as when loading tasks from a file or creating a {@link TaskList} of upcoming tasks.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task the {@link Task} to load into the list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"    public void loadTask(Task task) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     * Deletes a task from the list and updates the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task\u0027s description is not empty, the task is removed from the list,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"     * deleted from the storage file, and a confirmation message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"     * Otherwise, an error message is printed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task the {@link Task} to delete.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a string of confirmation or error message if the task cannot be deleted.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the task does not exist.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"    public String deleteTask(Task task) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"        assert !task.getDescription().trim().isEmpty();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"        // We are deleting a task, the task should have gone through this check when it was created.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"        this.taskList.remove(task);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.refreshStorageFile(this);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"        return FormattedOutput.deleteTask(task, this);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the size of the task list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"    public int getSize() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"     * Clears all tasks from the list and storage and prints a confirmation message.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return A string of the confirmation message of the tasks being cleared.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException from inner method.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"    public String clearList() throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"        this.taskList.clear();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.clearListFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"        return FormattedOutput.clearList();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":123}},{"path":"src/main/java/mortalreminder/backend/tasklistmanager/TaskRetriever.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend.tasklistmanager;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedOutput;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.TimedTask;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" * Retrieves a list of tasks based on different criteria.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskRetriever {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     * Lists all upcoming tasks that have a due date in the future.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method filters the tasks in the task list to find those that are either deadlines or events,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     * have a due date in the future, and are not yet marked as done. The upcoming tasks are then printed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the {@link TaskList} containing the tasks to check for upcoming due dates.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a string message containing list of upcoming tasks that have not been marked yet.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getUpcomingTasks(TaskList taskList) throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"            /* stops the current iteration if the task is not a TimedTask or already done. */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            if (Objects.equals(task.getType(), \"T\") || task.getIsDone()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"                continue;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"            assert task.getType().equals(\"D\") || task.getType().equals(\"E\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"            /* Add the task only if the task deadline or duration falls before the given deadline. */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"            TimedTask timedTask \u003d (TimedTask) task;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"            if (LocalDateTime.now().isBefore(timedTask.getDueDate())) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"                tasks.add(task);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"        return FormattedOutput.printUpcomingDeadlinesEvents(tasks);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     * Finds and returns the task based on descriptions matching the descriptions passed in.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method was created using ChatGPT with major edits.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param descriptions string argument(s) we are looking for in all matching tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return String representation of {@link TaskList} of matching tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if there is no matching tasks to any of the given query terms.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String findTasks(TaskList taskList, String... descriptions) throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        ArrayList\u003cTask\u003e similarTasks \u003d taskList.getTaskList().stream()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"                .filter(x -\u003e filterTask(x, descriptions))","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        if (similarTasks.isEmpty()) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getNoSimilarTasksFoundMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"        return FormattedOutput.printSimilarTasks(taskList);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"    private static boolean filterTask(Task task, String... descriptions) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"        for (String description : descriptions) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"                return true;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"        return false;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":74}},{"path":"src/main/java/mortalreminder/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a command input by the user, encapsulating the command type and any associated details.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":" *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":" * @param commandType    The type of command provided by the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":" * @param commandDetails An array of strings containing the details associated with the command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"public record Command(CommandType commandType, String[] commandDetails) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"     * Creates a new {@code Command} instance with the specified command type and details.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method serves as a factory method for creating a {@code Command} object.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandType The type of command to be executed, as specified by the {@link CommandType} enum.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param input       An array of strings containing the details associated with the command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return A new {@code Command} object initialized with the given command type and details.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    // Initialise method","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    public static Command initialise(CommandType commandType, String[] input) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"        // Return a new Commands object with commandType and commandDetails","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"        return new Command(commandType, input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":23}},{"path":"src/main/java/mortalreminder/commands/CommandAlternatives.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.commands;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.CommandAlternativesStorage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedOutput;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.Parser;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * Helps map user input to commands more easily to ensure more flexibility.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"public class CommandAlternatives {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"    private final HashMap\u003cString, CommandType\u003e alternativeCommands;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     * Creates a new CommandAlternatives Object with all basic commands.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    public CommandAlternatives() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"        this.alternativeCommands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"        for (CommandType type : CommandType.values()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"            this.alternativeCommands.put(type.name().toLowerCase(), type);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is used when creating the hashmap using long term storage.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param alternativeCommands list of saved alternative commands from previous sessions.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"    public CommandAlternatives(HashMap\u003cString, CommandType\u003e alternativeCommands) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        this.alternativeCommands \u003d alternativeCommands;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        for (CommandType type : CommandType.values()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"            this.alternativeCommands.put(type.name().toLowerCase(), type);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     * Adds a new alternative to call on the specified command type.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param commandDetails commandString and types to be mapped.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the command type specified is unknown.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    public String addCommandAlternative(String commandDetails) throws MortalReminderException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] splitInput \u003d commandDetails.split(\" \");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"        if (splitInput.length !\u003d 2) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getExtraSpaceInAlternativeCommandErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"        String commandAlternative \u003d splitInput[0];","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        CommandType commandType \u003d Parser.parseCommandWord(splitInput[1]);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        if (commandType \u003d\u003d CommandType.UNKNOWN) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getUnknownCommandWordErrorMessage(splitInput[1]));","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"        this.alternativeCommands.put(commandAlternative.toLowerCase(), commandType);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"        CommandAlternativesStorage.appendToAlternativeCommandFile(commandAlternative.toLowerCase(), commandType);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        return FormattedOutput.printNewAlternativeAdded(commandAlternative.toLowerCase(), commandType);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"    public CommandType getCommandType(String commandString) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.alternativeCommands.get(commandString.toLowerCase());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":66}},{"path":"src/main/java/mortalreminder/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":" * Contains all types of commands in an Enum list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"public enum CommandType {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"    TODO,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"    DEADLINE,","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"    EVENT,","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"    LIST,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"    FIND,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    MARK,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"    UNMARK,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"    DELETE,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    UNKNOWN,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"    UPCOMING_TASKS,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    CLEAR_TASKS,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    ADD_COMMAND_ALTERNATIVE,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    CLEAR_ALTERNATIVES,","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":20}},{"path":"src/main/java/mortalreminder/errorhandling/MortalReminderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.errorhandling;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskList;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":" * Creates a throwable exception class that is specific to this project.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"public class MortalReminderException extends Exception {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"    public MortalReminderException(String message) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"        super(message);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getUnreachableCodeErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"This statement should be unreachable, code has an error!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getInvalidNumberFormatErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Please enter a valid number after the command!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getInvalidDateFormatErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Please enter a valid date in dd-MM-yyy HHmm (24hr format)!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getInvalidDescriptionErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Description cannot be empty!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getInvalidDeadlineDescriptionErrorMessage() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Please input the correct number of details for deadlines!\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"                + \" Remember that you need to include \u0027/by\u0027 in the command.\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getInvalidEventDescriptionErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Please input the correct number of details for deadlines! \"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Remember that you need to include /from and /to in the command.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getAlreadyMarkedErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"This task has already been marked as done.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getAlreadyNotMarkedErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"This task has already been marked as NOT done.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getOutOfTaskListBoundsErrorMessage(TaskList taskList) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Invalid task number!\\n\"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Please input a number between 1 and \"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"                + taskList.getSize();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getQueryOnEmptyListErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"List is empty!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getStorageFileCorruptedErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"File might be corrupted! Please use clear_tasks to restart the file.\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getFileCannotBeCreatedErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"File could not be created!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getFileNotFoundErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"File not found!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getExtraSpaceInAlternativeCommandErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Please specify a command word followed by a space\"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"and a current saved version of the command word\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getCorruptedAlternativeCommandFileErrorMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Alternative command file does not exist!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getNoSimilarTasksFoundMessage() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"No similar tasks found!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getUnknownCommandWordErrorMessage(String commandWord) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"Unknown command word: \"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"                + commandWord","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"                + \". Please put in a known recognised command as the second word in the command\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":87}},{"path":"src/main/java/mortalreminder/io/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.io;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Collections;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    @FXML","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    private Label dialog;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    @FXML","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MortalReminderWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"    public static DialogBox getMortalReminderDialog(String text, Image img, CommandType commandType) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"        db.flip();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"        return db;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"    private void flip() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"    private void changeDialogStyle(CommandType commandType) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"        switch (commandType) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"        case TODO:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"            // Fallthrough","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"        case DEADLINE:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"            // Fallthrough","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"        case EVENT:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"            dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"        case MARK:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"            // Fallthrough","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        case UNMARK:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"            dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"        case DELETE:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"            dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"            break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"        default:","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"            dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":88}},{"path":"src/main/java/mortalreminder/io/FormattedOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.io;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * This class is just the UI controller to format and ensure consistency of all output messages.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" * A lot of the starting quips are from League of Legends.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"public class FormattedOutput {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints out the formatted output of the chatbot to the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     * An indentation is added to each line and the separator lines are added at the top and bottom of each","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     * line in the message.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param message output message from chatbot to be printed out to the user","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a version of confirmation message with specific modifications.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String getResponse(String message) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"        return message;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns the welcome message to the user upon program startup.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String welcome() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(\"Oh! HELLO! \\n\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns all current tasks inside the list when the LIST {@link CommandType} is used.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the current total list of tasks to be printed out","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a string of the list of all tasks currently tracked.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException from an inner method.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String printList(TaskList taskList) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"            return getResponse(\"You can be so much more! Alas, you have no tasks in your list.\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"            StringBuilder currentList \u003d new StringBuilder();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"            currentList.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"            return listPrintingHelperFunction(taskList, currentList);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns all the similar types of tasks queried by the user when the FIND {@link CommandType} is used.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList the list of similar tasks to be printed out.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a string of all similar tasks to the search term(s) queried by user.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException from an inner method.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String printSimilarTasks(TaskList taskList) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"            return getResponse(\"No matching tasks!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"            StringBuilder currentList \u003d new StringBuilder();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"            currentList.append(\"Here are the tasks matching your search terms:\\n\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"            return listPrintingHelperFunction(taskList, currentList);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"    private static String listPrintingHelperFunction(TaskList taskList, StringBuilder currentList)","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"            throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"        for (int i \u003d 1; i \u003c taskList.getSize() + 1; i++) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"            currentList.append(i).append(\".\").append(printTask(taskList.getTask(i - 1)));","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"            if (i \u003c taskList.getSize()) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"                currentList.append(\"\\n\");","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(currentList.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns a formatted string representing the task passed into the method call.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"     * Takes the task description, type and icon and formats it properly into a string to be printed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the formatted version of the task in string format.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String printTask(Task task) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"[\" + task.getType() + \"]\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"                + task.getDescription();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns a confirmation message when the user adds a new task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task     {@link Task} that has been added to the {@link TaskList}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList The current list of all tasks tracked by the backend.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of confirmation message.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String addTask(Task task, TaskList taskList) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"        String message \u003d \"You know what? Your life\u0027s already hell so I am gonna leave you be. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"                + printTask(task)","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"                + taskList.getSize()","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(message);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns a confirmation message when the user deletes a task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param task     {@link Task} that has been deleted from the {@link TaskList}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param taskList taskList The current list of all tasks tracked by the backend.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string confirmation message of a successful deletion of task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String deleteTask(Task task, TaskList taskList) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"        String message \u003d \"A futile act. Why do you persist? I\u0027ve deleted this task:\\n\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"                + printTask(task)","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"\\n\"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"Now you have \"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"                + taskList.getSize()","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RezwanAhmed123"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(message);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String clearList() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(\"Beauty fades, that\u0027s why it is beautiful. List has been cleared.\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String printMarked(Task task) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(\"I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"RezwanAhmed123"},"content":"                + printTask(task)) + \"\\n\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"But are you really Ok?\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String printUnmarked(Task task) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(\"Seems like your effort was in Vayne.\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"RezwanAhmed123"},"content":"                + \"This task has been unmarked:\\n\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"RezwanAhmed123"},"content":"                + printTask(task));","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns a list of all upcoming tasks from today.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"RezwanAhmed123"},"content":"     * These tasks must be {@link mortalreminder.tasks.TimedTask} and not have been marked as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param tasks The list of all tasks that are upcoming from today and is tracked by the backend.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a string formatted version of all upcoming tasks from now that have not been marked as done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the {@link TaskList} is empty.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String printUpcomingDeadlinesEvents(ArrayList\u003cTask\u003e tasks) throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"RezwanAhmed123"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(\"You can be so much more! Alas, there are no upcoming tasks.\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"RezwanAhmed123"},"content":"        } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"RezwanAhmed123"},"content":"            StringBuilder output \u003d new StringBuilder(\"The following tasks are due soon:\\n\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"RezwanAhmed123"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"RezwanAhmed123"},"content":"                output.append(printTask(task)).append(\"\\n\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"RezwanAhmed123"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"RezwanAhmed123"},"content":"            return getResponse(output.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"RezwanAhmed123"},"content":"     * Prints a feedback message when a new alternative has been added.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String printNewAlternativeAdded(String commandAlternative, CommandType commandType) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(commandAlternative","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"RezwanAhmed123"},"content":"                + \" has been added to the command alternatives for \"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"RezwanAhmed123"},"content":"                + commandType.toString().toLowerCase());","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"RezwanAhmed123"},"content":"    public static String alternativesCleared() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"RezwanAhmed123"},"content":"        return getResponse(\"The command alternatives have been cleared.\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":176}},{"path":"src/main/java/mortalreminder/io/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.io;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"public class Launcher {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":12}},{"path":"src/main/java/mortalreminder/io/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.io;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.MortalReminder;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" * A GUI for Mortal Reminder using FXML.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"public class Main extends Application {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    private final MortalReminder mortalReminder \u003d new MortalReminder();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    // this method was slightly modified using chatGPT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MortalReminderWindow.fxml\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"            stage.setTitle(\"Mortal Reminder\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"            MortalReminderWindow controller \u003d fxmlLoader.\u003cMortalReminderWindow\u003egetController();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            controller.setMortalReminder(mortalReminder);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"            controller.onStartUp();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            // divided for better readability.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"            stage.show();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":41}},{"path":"src/main/java/mortalreminder/io/MortalReminderWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.io;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.MortalReminder;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.Command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"public class MortalReminderWindow extends AnchorPane {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"    @FXML","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    @FXML","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    @FXML","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    private TextField userInput;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    @FXML","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    private Button sendButton;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"    private MortalReminder mortalReminder;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            .getResourceAsStream(\"/images/Darius.png\")));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    private final Image mortalReminderImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            .getResourceAsStream(\"/images/MortalReminder.png\")));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    @FXML","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"    public void initialize() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     * Injects the MortalReminder instance","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    public void setMortalReminder(MortalReminder mortalReminder) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"        this.mortalReminder \u003d mortalReminder;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Mortal Reminder\u0027s reply and then","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"    @FXML","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        String response;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"            Command command \u003d Parser.parseInputFromUser(input);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"            response \u003d mortalReminder.executeCommand(command);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"            dialogContainer.getChildren()","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"                    .add(DialogBox.getMortalReminderDialog(response, mortalReminderImage, command.commandType()));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"            dialogContainer.getChildren()","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"                    .add(DialogBox.getMortalReminderDialog(response, mortalReminderImage, CommandType.UNKNOWN));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"        userInput.clear();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"     * Displays the startup message to be used by the chatbot.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"    public void onStartUp() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        String welcome \u003d mortalReminder.welcome();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"                .add(DialogBox.getMortalReminderDialog(welcome, mortalReminderImage, CommandType.UNKNOWN));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":80}},{"path":"src/main/java/mortalreminder/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.io;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.CommandAlternativesStorage;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.Command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandAlternatives;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Event;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"// All javadocs in this class were autogenerated using ChatGPT","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":" * Provides utility methods for parsing input strings into command and task objects.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Parser} class includes methods to interpret user input from the console","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":" * and parse data from files to create appropriate task objects.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"public class Parser {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * Parses the user\u0027s input from the console and returns a corresponding {@code Command} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method trims the input, splits it into parts, identifies the command word,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * and determines the corresponding {@link CommandType}. If the command is not recognized,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     * it defaults to an unknown command type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param input the user\u0027s input string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return a {@code Command} object corresponding to the parsed input.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"    public static Command parseInputFromUser(String input) throws MortalReminderException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"        // Trim and split the input into designated parts","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] splitInput \u003d input.trim().replaceAll(\"\\\\s+\", \" \").split(\" \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        String commandWord \u003d splitInput[0];","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"        int splitInputLength \u003d splitInput.length;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        splitInput \u003d Arrays.copyOfRange(splitInput, 1, splitInputLength);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        CommandType commandType \u003d parseCommandWord(commandWord);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"        return Command.initialise(commandType, splitInput);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     * Parses a user input into a {@link CommandType}.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"    public static CommandType parseCommandWord(String commandWord) throws MortalReminderException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        CommandAlternatives allMappedCommands \u003d CommandAlternativesStorage.loadCommandsFromFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        if (allMappedCommands.getCommandType(commandWord) \u003d\u003d null) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"        return allMappedCommands.getCommandType(commandWord);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     * Parses a string input from a file and returns a corresponding {@code Task} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method splits the input string by the \"|\" delimiter, extracts the task type,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     * completion status, and description, and creates a specific {@code Task} object","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     * (e.g., {@link ToDo}, {@link Deadline}, {@link Event}) based on the task type. This code","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"     * was generated using ChatGPT with some edits.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param input the input string read from a file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the corresponding {@code Task} object, or {@code null} if the input is invalid.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws MortalReminderException if the file contains unrecognisable text.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"    public static Task parseInputFromFile(String input) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] parts \u003d input.split(\"\\\\|\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        String taskType \u003d parts[0]; // The first letter indicating the task type","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"        boolean isDone \u003d Boolean.parseBoolean(parts[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"        // Create task object based on taskType","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"        switch (taskType) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"        case \"T\":","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"        case \"D\":","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"            String deadline \u003d parts[3].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"            return new Deadline(description, deadline, isDone);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"        case \"E\":","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"            String fromTime \u003d parts[3].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"            String toTime \u003d parts[4].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"            return new Event(description, fromTime, toTime, isDone);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"        default:","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getStorageFileCorruptedErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":95}},{"path":"src/main/java/mortalreminder/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"// Class and constructor JavaDocs was autocompleted using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a task that has a deadline. A {@code Deadline} is an object that stores the deadline in","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" * {@link LocalDateTime} format to show the date by which the task needs to be completed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Deadline} class extends the {@code Task} class and implements the {@code TimedTask} interface.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"public class Deadline extends Task implements TimedTask {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Deadline} task with the specified description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description should include the task details followed by the deadline,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     * separated by the \"/by\" keyword. For example, \"Submit report /by 12-09-2024 1700\".","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task and its deadline.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws IllegalArgumentException if the description is improperly formatted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    public Deadline(String description) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] descriptionString \u003d description.split(\"/by\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        checkInitialisationDetails(descriptionString);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d descriptionString[0].trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        this.deadline \u003d getTime(descriptionString[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"D\"; // short for Deadline","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following constructor and javadoc was created using ChatGPT autocomplete with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Deadline} task with the specified description, deadline, and completion status.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"     * The deadline should be provided as a string in a parsable {@link LocalDateTime} format.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is only called when loading from a file. This method also assumes the values","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     * are always valid as it has already been checked during the adding to file process.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param deadline    the deadline of the task as a {@link String}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param isDone      whether the task is marked as done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"    public Deadline(String description, String deadline, boolean isDone) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"     * Method to get the description factor of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description is not always the same as the description value passed into the this.description variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     * especially for the deadline and event classes. This method assumes that the variables have been properly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"     * initialised in the constructor.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of the description after processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"        String deadlineString \u003d convertTimeToString(this.deadline);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.description + \" (by: \" + deadlineString + \")\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts the class into a string to be added to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts all the variables from their respective object types to a string format which can be stored","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"     * inside the storage file and later be recognised by the parser to convert back into a task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of object summary to be placed into the storage text file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.type + \"|\" + this.isDone + \"|\" + this.description + \"|\" + this.deadline;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"     * Checks for invalid data and parameter numbers passed into the constructor of this class.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     * If there are less or more than 2 objects (description and deadline) in description string, that means","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"     * there is too much or too little information provided to create the class.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"     * As such the ArrayIndexOutOfBoundsException() is thrown to prevent the creation of the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"     * The getTime() methods help check if the parsing of the dates and times are correct. This function was optimised","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"     * using chatGPT.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param descriptionString A list of string values passed in from the constructor which are to be checked","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"     *                          for data validation purposes. An error will be thrown if one of the values are","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"     *                          invalid and this will stop the creation of the object inside the app.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws DateTimeParseException The string passed in as the date or time is incorrect and unable to be parsed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"    public void checkInitialisationDetails(String[] descriptionString)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"            throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"        if (descriptionString.length !\u003d 2) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getInvalidDeadlineDescriptionErrorMessage());","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"            getTime(descriptionString[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getInvalidDateFormatErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"     * Retrieves the due date of this task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the due date as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.deadline;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":119}},{"path":"src/main/java/mortalreminder/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"// Class and constructor JavaDocs was autocompleted using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a task that spans a period of time. It stores the start and end time of the event using","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" * {@link LocalDateTime} format to show the duration of the event and when it will be held.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Events} class extends the {@code Task} class and implements the {@code TimedTask} interface.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"public class Event extends Task implements TimedTask {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    private final LocalDateTime fromTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    private final LocalDateTime toTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Events} task with the specified description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description should include the task details followed by the start and end times,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * separated by the \"/from\" and \"/to\" keywords. For example,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * \"Team meeting /from 12-09-2024 1000 /to 12-09-2024 1100\".","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the event, including start and end times.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws IllegalArgumentException if the description is improperly formatted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"    public Event(String description) throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"        String[] descriptionString \u003d description.split(\"/from|/to\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        checkInitialisationDetails(descriptionString);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d descriptionString[0].trim();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        this.fromTime \u003d getTime(descriptionString[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"        this.toTime \u003d getTime(descriptionString[2].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"E\"; // short for Event","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following constructor and javadoc was created using ChatGPT autocomplete with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Events} task with the specified description, start time, end time, and completion status.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * The start and end times should be provided as strings in a parsable {@link LocalDateTime} format.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is only called when loading from a file. This method also assumes the values","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * are always valid as it has already been checked during the adding to file process.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the event.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param fromTime    the start time of the event as a {@link String}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param toTime      the end time of the event as a {@link String}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param isDone      whether the event is marked as done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"    public Event(String description, String fromTime, String toTime, boolean isDone) throws MortalReminderException {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"        this.fromTime \u003d LocalDateTime.parse(fromTime);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"        this.toTime \u003d LocalDateTime.parse(toTime);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"     * Method to get the description factor of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description is not always the same as the description value passed into the this.description variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"     * especially for the deadline and event classes. This method assumes that the variables have been properly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"     * initialised in the constructor.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of the description after processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"        String fromTimeString \u003d convertTimeToString(fromTime);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"        String toTimeString \u003d convertTimeToString(toTime);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.description","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"                + \" (from: \" + fromTimeString + \", to: \" + toTimeString + \")\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts the class into a string to be added to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts all the variables from their respective object types to a string format which can be stored","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"     * inside the storage file and later be recognised by the parser to convert back into a task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of object summary to be placed into the storage text file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.type + \"|\" + this.isDone + \"|\" + this.description + \"|\" + this.fromTime + \"|\" + this.toTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"     * Checks for invalid data and parameter numbers passed into the constructor of this class.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"     * If there are less or more than 3 objects in description string, that means there is too much","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"     * or too little information provided to create the class. As such the ArrayIndexOutOfBoundsException()","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     * is thrown to prevent the creation of the file. The getTime() methods help check if the parsing of the","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"     * dates and times are correct.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param descriptionString A list of string values passed in from the constructor which are to be checked","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"     *                          for data validation purposes. An error will be thrown if one of the values are","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"     *                          invalid and this will stop the creation of the object inside the app.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"     * @throws DateTimeParseException The string passed in as the date or time is incorrect and unable to be parsed.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following function was optimised using chatGPT","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"    public void checkInitialisationDetails(String[] descriptionString)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"            throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"        if (descriptionString.length !\u003d 3) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getInvalidEventDescriptionErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"            getTime(descriptionString[1].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"            getTime(descriptionString[2].trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getInvalidDateFormatErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"RezwanAhmed123"},"content":"     * Retrieves the due date of this task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the due date as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"RezwanAhmed123"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.fromTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":127}},{"path":"src/main/java/mortalreminder/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.io.FormattedOutput;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"// solution is adapted from the Course Level 3 extension","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"// class and constructor Javadocs were autocompleted using ChatGPT","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a general task with a description, completion status, and type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code Task} class is an abstract base class for specific types of tasks such as","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" * {@code Deadline}, {@code Events}, and {@code ToDo}. It provides common properties","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":" * and methods for handling tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    protected String description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    protected String type;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code Task} with the specified description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * By default, the task is marked as not done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"    public Task(String description) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"        if (Objects.equals(description, \"\")) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getInvalidDescriptionErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getType() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"        return type;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * Method to get the description factor of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description is not always the same as the description value passed into the this.description variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     * especially for the deadline and event classes. This method assumes that the variables have been properly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     * initialised in the constructor.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of the description after processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"    public abstract String getDescription();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts the class into a string to be added to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts all the variables from their respective object types to a string format which can be stored","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     * inside the storage file and later be recognised by the parser to convert back into a task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of object summary to be placed into the storage text file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"    public abstract String convertToFileFormat();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"    // note that the rest of the methods\u0027 JavaDoc was autogenerated by ChatGPT.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"     * Marks this task as done if it has not been marked already.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task is successfully marked as done, it calls the {@code printMarked} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"     * from {@code FormattedPrinting} to print a confirmation message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task is already marked as done, it calls the {@code markError} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"     * from {@code FormattedPrinting} to print an error message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the confirmation if the task was marked successfully or an error if the task has already been marked.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"    public String markDone() throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getAlreadyMarkedErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"        return FormattedOutput.printMarked(this);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"     * Marks this task as not done if it is currently marked as done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task is successfully marked as undone, it calls the {@code printUnmarked} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"     * from {@code FormattedPrinting} to print a confirmation message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"     * If the task is already marked as not done, it calls the {@code unmarkError} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"     * from {@code FormattedPrinting} to print an error message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the confirmation if the task was unmarked successfully or an error if the task has already been unmarked.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"    public String markUndone() throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"        if (!this.isDone) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(MortalReminderException.getAlreadyNotMarkedErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"        return FormattedOutput.printUnmarked(this);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"     * Returns the current status of this task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return {@code true} if this task is marked as done; {@code false} otherwise.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"        return isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":112}},{"path":"src/main/java/mortalreminder/tasks/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import java.util.Locale;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"// the JavaDocs for this class and its methods were autogenerated by ChatGPT","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a task that is associated with a specific time or due date.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" * This interface provides methods to retrieve the due date of the task,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":" * parse a time from a string, and convert a {@link LocalDateTime} object","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":" * to a formatted string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"public interface TimedTask {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     * Retrieves the due date of this task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the due date as a {@link LocalDateTime} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    LocalDateTime getDueDate();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"     * Parses a string to obtain the {@link LocalDateTime} of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"     * The string should follow the format \"dd-MM-yyyy HHmm\", where:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003edd: day of the month\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eMM: month of the year\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eyyyy: year\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eHHmm: time in 24-hour format\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param descriptionString the string containing the date and time information.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the corresponding {@link LocalDateTime} object.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"    default LocalDateTime getTime(String descriptionString) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        return LocalDateTime.parse(descriptionString, inputFormatter);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts a {@link LocalDateTime} object to a formatted string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * The returned string will be in the format \"dd MMM yyyy h:mm a\", where:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003cul\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003edd: day of the month\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eMMM: abbreviated month name\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eyyyy: year\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"     *     \u003cli\u003eh:mm a: time in 12-hour format with AM/PM\u003c/li\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"     * The method was debugged using ChatGPT after testing on different platforms.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param time the {@link LocalDateTime} object to be formatted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return the formatted date and time string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    default String convertTimeToString(LocalDateTime time) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\",","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"                Locale.forLanguageTag(\"en-GB\"));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"        return time.format(outputFormatter);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":65}},{"path":"src/main/java/mortalreminder/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"// Class and constructor JavaDocs was autocompleted using ChatGPT with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":" * Represents a simple task without any specific time constraints.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":" * The {@code ToDo} class extends the {@code Task} class.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":" * It represents tasks that need to be done, but without a specific deadline or time frame.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code ToDo} task with the specified description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    public ToDo(String description) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"T\"; // short for todo","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    // the following constructor and javadoc was created using ChatGPT autocomplete with minor edits","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"     * Constructs a new {@code ToDo} task with the specified description and completion status.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"     * This method is only called when loading from a file. This method also assumes the values","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"     * are always valid as it has already been checked during the adding to file process.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"     * @param isDone      whether the task is marked as done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    public ToDo(String description, boolean isDone) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"     * Method to get the description factor of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"     * The description is not always the same as the description value passed into the this.description variable","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"     * especially for the deadline and event classes. This method assumes that the variables have been properly","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"     * initialised in the constructor.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of the description after processing.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts the class into a string to be added to the storage file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"     * Converts all the variables from their respective object types to a string format which can be stored","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"     * inside the storage file and later be recognised by the parser to convert back into a task type.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"     * @return string of object summary to be placed into the storage text file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.type + \"|\" + this.isDone + \"|\" + this.description;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":68}},{"path":"src/main/resources/data/alternativeCommands.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"aca add_command_alternative","lastModifiedDate":"2024-09-14","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":1}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"         stylesheets\u003d\"@../css/dialog-box.css\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17.0.7\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"                   fitHeight\u003d\"99.0\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"                   fitWidth\u003d\"99.0\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"                   pickOnBounds\u003d\"true\"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"                   preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":37}},{"path":"src/main/resources/view/MortalReminderWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"            maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"            minHeight\u003d\"-Infinity\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"            minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"            prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"            prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"            stylesheets\u003d\"@../css/main.css\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17.0.7\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"            fx:controller\u003d\"mortalreminder.io.MortalReminderWindow\"\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"                   layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"                   prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"                    vvalue\u003d\"1.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":53}},{"path":"src/test/java/mortalreminder/backend/TaskListStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.tasklistmanager.TaskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDoStub;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskListStorageTest {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    void setUp() throws MortalReminderException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.clearListFile();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    @AfterEach","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    void tearDown() throws MortalReminderException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.clearListFile();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    public void loadTaskListFromFile_emptyFile() throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList taskList \u003d TaskListStorage.loadTaskListFromFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    public void loadTaskListFromFile_IOExceptionThrown_exceptionHandled() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskListStorage.appendToListFile(new ToDoStub(\"Fake Task\"));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskList taskList \u003d TaskListStorage.loadTaskListFromFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(MortalReminderException.getStorageFileCorruptedErrorMessage(), e.getMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    public void loadTaskListFromFile_success() throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.appendToListFile(new ToDo(\"Fake task\", true));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.appendToListFile(new ToDo(\"Fake task 2\", true));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskList taskList \u003d TaskListStorage.loadTaskListFromFile();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":52}},{"path":"src/test/java/mortalreminder/backend/tasklistmanager/TaskCreatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend.tasklistmanager;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.TaskListStorage;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Deadline;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Event;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDoStub;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"class TaskCreatorTest {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    TaskListStub testTaskListStub \u003d new TaskListStub();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    Task testTask;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    String commandDetails;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    void setUp() throws MortalReminderException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.clearListFile();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    @AfterEach","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"    void tearDown() throws MortalReminderException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.clearListFile();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    /* Some ideas of Edge Cases were caught by ChatGPT, code was done by myself.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"     The setup idea was obtained from:","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"     https://stackoverflow.com/questions/63819472/how-can-i-use-the-beforeeach-method-for-testing-in-java */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    void createTask_validToDo() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"            commandDetails \u003d \"Read Book\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskCreator.createTask(commandDetails, testTaskListStub, CommandType.TODO);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(commandDetails, testTaskListStub.getTaskList().get(0).getDescription());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"            fail(e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"    void createTask_validDeadline() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"            commandDetails \u003d \"Return Book /by 19-08-2024 1900\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskCreator.createTask(commandDetails, testTaskListStub, CommandType.DEADLINE);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"            testTask \u003d new Deadline(commandDetails);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(testTask.getDescription(), testTaskListStub.getTaskList().get(0).getDescription());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"            fail(e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"    void createTask_validEvent() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"            commandDetails \u003d \"project meeting /from 19-08-2024 1900 /to 19-08-2024 2000\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskCreator.createTask(commandDetails, testTaskListStub, CommandType.EVENT);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"            testTask \u003d new Event(commandDetails);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(testTask.getDescription(), testTaskListStub.getTaskList().get(0).getDescription());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"            fail(e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"    void createTask_invalidTaskType() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskCreator.createTask(\"Blah blah\", testTaskListStub, CommandType.UNKNOWN);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(e.getMessage(), \"This statement should be unreachable, code has an error!\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"    void createTask_invalidTaskDescription() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskCreator.createTask(\"\", testTaskListStub, CommandType.TODO);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(e.getMessage(), \"Description cannot be empty!\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"    void createTask_invalidDeadlineDate() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskCreator.createTask(\"Return Book /by tmr\", testTaskListStub, CommandType.DEADLINE);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(\"Please enter a valid date in dd-MM-yyy HHmm (24hr format)!\", e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"    void createTask_invalidEventDate() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskCreator.createTask(\"Return Book /from tmr /to day after\", testTaskListStub, CommandType.EVENT);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(\"Please enter a valid date in dd-MM-yyy HHmm (24hr format)!\", e.getMessage());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":110}},{"path":"src/test/java/mortalreminder/backend/tasklistmanager/TaskEditorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend.tasklistmanager;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.backend.TaskListStorage;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.commands.CommandType;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDoStub;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskEditorTest {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"    TaskListStub taskListStub;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"    String testIndexString;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"    ToDoStub toDoStub;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"    public void setUp() throws MortalReminderException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.clearListFile();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"        taskListStub \u003d new TaskListStub();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"        toDoStub \u003d new ToDoStub(\"Read Book\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"        taskListStub.addTask(toDoStub);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        testIndexString \u003d \"1\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"    @AfterEach","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"    public void tearDown() throws MortalReminderException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"        TaskListStorage.clearListFile();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"    public void executeMarkOrUnmark_successfulMark() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskEditor.executeMarkOrUnmark(testIndexString, taskListStub, CommandType.MARK);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"            assertTrue(taskListStub.getTask(0).getIsDone());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"    public void executeMarkOrUnmark_failedMark() throws MortalReminderException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"            taskListStub.getTask(0).markDone();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskEditor.executeMarkOrUnmark(testIndexString, taskListStub, CommandType.MARK);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"            assertTrue(taskListStub.getTask(0).getIsDone());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(e.getMessage(), MortalReminderException.getAlreadyMarkedErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"RezwanAhmed123"},"content":"    public void executeMarkOrUnmark_successfulUnmark() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"RezwanAhmed123"},"content":"            taskListStub.getTask(0).markDone();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskEditor.executeMarkOrUnmark(testIndexString, taskListStub, CommandType.UNMARK);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"RezwanAhmed123"},"content":"            assertFalse(taskListStub.getTask(0).getIsDone());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"RezwanAhmed123"},"content":"    public void executeMarkOrUnmark_failedUnmark() throws MortalReminderException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskEditor.executeMarkOrUnmark(testIndexString, taskListStub, CommandType.UNMARK);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"RezwanAhmed123"},"content":"            assertFalse(taskListStub.getTask(0).getIsDone());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(e.getMessage(), MortalReminderException.getAlreadyNotMarkedErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"RezwanAhmed123"},"content":"    public void executeMarkOrUnmark_invalidCommandType() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskEditor.executeMarkOrUnmark(testIndexString, taskListStub, CommandType.UNKNOWN);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(e.getMessage(), MortalReminderException.getUnreachableCodeErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"RezwanAhmed123"},"content":"    public void executeMarkOrUnmark_invalidIndex() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"RezwanAhmed123"},"content":"            testIndexString \u003d \"2\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskEditor.executeMarkOrUnmark(testIndexString, taskListStub, CommandType.MARK);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(e.getMessage(), \"Task id is invalid!\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"RezwanAhmed123"},"content":"    public void executeMarkOrUnmark_invalidNumberFormat() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"RezwanAhmed123"},"content":"            testIndexString \u003d \"a\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskEditor.executeMarkOrUnmark(testIndexString, taskListStub, CommandType.MARK);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(e.getMessage(), MortalReminderException.getInvalidNumberFormatErrorMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-09-13","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":110}},{"path":"src/test/java/mortalreminder/backend/tasklistmanager/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend.tasklistmanager;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"    public TaskListStub() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"        super();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"        return \"added task!\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"    public Task getTask(int id) throws MortalReminderException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"        if (this.taskList.isEmpty()) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(\"List is empty!\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"        if (id \u003c 0 || id \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"            throw new MortalReminderException(\"Task id is invalid!\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"        return this.taskList.get(id);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":26}},{"path":"src/test/java/mortalreminder/backend/tasklistmanager/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.backend.tasklistmanager;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.tasks.ToDoStub;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    public void getTask_emptyList_exceptionThrown() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"            assertNull(taskList.getTask(0));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"            taskList.clearList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(\"List is empty!\", e.getMessage());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"RezwanAhmed123"},"content":"    public void getTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"RezwanAhmed123"},"content":"            Task testingTask \u003d new ToDoStub(\"This is a task.\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"RezwanAhmed123"},"content":"            taskList.addTask(testingTask);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"RezwanAhmed123"},"content":"            assertNull(taskList.getTask(2));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(\"Invalid task number!\\nPlease input a number between 1 and 1\", e.getMessage());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"RezwanAhmed123"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"RezwanAhmed123"},"content":"    public void getTask_success() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"RezwanAhmed123"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"RezwanAhmed123"},"content":"            TaskList taskList \u003d new TaskListStub();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"RezwanAhmed123"},"content":"            Task testingTask \u003d new ToDoStub(\"This is a task.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"RezwanAhmed123"},"content":"            taskList.addTask(testingTask);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"RezwanAhmed123"},"content":"            assertEquals(testingTask, taskList.getTask(0));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"RezwanAhmed123"},"content":"            taskList.clearList();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"RezwanAhmed123"},"content":"        } catch (MortalReminderException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"RezwanAhmed123"},"content":"            fail();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"RezwanAhmed123"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":53}},{"path":"src/test/java/mortalreminder/tasks/ToDoStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"package mortalreminder.tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"import mortalreminder.errorhandling.MortalReminderException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"public class ToDoStub extends ToDo {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"    public ToDoStub(String description) throws MortalReminderException {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"        super(description);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"    public String convertToFileFormat() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"        return description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RezwanAhmed123"},"content":"hi","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"RezwanAhmed123"},"content":"clear_tasks","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"RezwanAhmed123"},"content":"todo","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"RezwanAhmed123"},"content":"todo read book","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"RezwanAhmed123"},"content":"deadline return book /by 12-09-2024 1300","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"RezwanAhmed123"},"content":"event project meeting /from 12-09-2024 1600 /to 12-09-2024 1800","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"RezwanAhmed123"},"content":"deadline project meeting /from 12-09-2024 1600 /to 12-09-2024 1800","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"RezwanAhmed123"},"content":"event project meeting /from 12-09-2024 1800","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"RezwanAhmed123"},"content":"list","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"unmark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"mark 1","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"RezwanAhmed123"},"content":"mark 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"RezwanAhmed123"},"content":"unmark 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"RezwanAhmed123"},"content":"mark 2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"RezwanAhmed123"},"content":"list","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"RezwanAhmed123"},"content":"delete 1","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"RezwanAhmed123"},"content":"list","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"RezwanAhmed123"},"content":"bye","lastModifiedDate":"2024-08-17","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"RezwanAhmed123"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\**\\*.java","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"RezwanAhmed123"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"RezwanAhmed123"},"content":"java -classpath ..\\bin MortalReminder \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"RezwanAhmed123"},"content":"java -classpath ../bin MortalReminder \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"RezwanAhmed123":1,"-":37}}]
