{"authorDailyContributionsMap":{"wkxcass":[{"date":"2024-08-17","commitResults":[{"hash":"21afdc17105bc797c9cfdefb022b4b42d627f9ed","isMergeCommit":false,"messageTitle":"MoiMoi.java: implement skeletal version","messageBody":"Let\u0027s rename Duke.java into MoiMoi.java, and implement a skeletal\nversion of the chatbot that simply greets the user and exits.\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":10}}},{"hash":"a75b4ef7b3a229e291240970e557ff9f8412eefa","isMergeCommit":false,"messageTitle":"MoiMoi.java: add echoing functionality","messageBody":"Let\u0027s add an echoing functionality to MoiMoi.java such that it echoes\ncommands entered by the user, and exits when the user types the command\n\"bye\".\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":4}}},{"hash":"95ffbc75932c5f0f448b28badc615379c8bfe52f","isMergeCommit":false,"messageTitle":"MoiMoi.java: implement \"add\" and \"list\" functionalities","messageBody":"Let\u0027s,\n* add a functionality for the chatbot to store whatever text entered by\nthe user\n* add a functionality to display (in list-form) all inputs that have\nbeen stored, when requested by the user\n","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":5}}},{"hash":"32c762dbe7e2c9d1eebd4749d6c652137c0c5dfc","isMergeCommit":false,"messageTitle":"Add mark/unmark functionalities","messageBody":"Let\u0027s,\n* create a class named \"Task\" to represent tasks stored and tracked by\nthe chatbot\n* add a functionality for the chatbot to mark tasks as done\n* add a functionality for the chatbot to unmark completed tasks (ie.\nmark tasks as undone)\n\nThe \"Task\" class encapsulates a String description, and the completion\nstatus of a task.\n","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":7}}},{"hash":"6652a3af0b7569eb566ddd74ea90539e1c451cd3","isMergeCommit":false,"messageTitle":"Add Parser.java","messageBody":"Let\u0027s add a class named Parser to streamline input parsing, by\nseparating the command and arguments. This modular approach enhances\nmaintainability, making future modifications (if any) to input handling\nmore manageable.\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"0f9ec57c3b09c7d583d19d9050e7f6011ad023e4","isMergeCommit":false,"messageTitle":"Add support for tracking tasks of various types","messageBody":"Let\u0027s,\n* create subclasses of Task, namely Todo, Event and Deadline,\nleveraging inheritance to extend shared properties and behaviors\n* add functionalities for the chatbot to appropriately handle (eg.\nstore, track etc.) tasks of the aforementioned types\n","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":18}}}]},{"date":"2024-08-18","commitResults":[{"hash":"e7625a659b8d063aa0e4c690cb3a54aceb3204c2","isMergeCommit":false,"messageTitle":"Semi-automate text UI testing","messageBody":"The input/output redirection technique is used to semi-automate the\ntesting of MoiMoi.\n\nLet\u0027s,\n* edit runtest.bat, substituting any instance of \"Duke\" into\n\"MoiMoi\"\n* add a file containing a series of user inputs, named input.txt\n* add a file containing expected outputs corresponding to the\naforementioned inputs, named EXPECTED.TXT\n\nMoiMoi\u0027s logo has been changed (in MoiMoi.java). It now consists of\nmappable ASCII characters for encoding.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"java":{"insertions":6,"deletions":19},"bat":{"insertions":1,"deletions":1}}}]},{"date":"2024-08-19","commitResults":[{"hash":"3de5af3e37247722f30f155c4193b4c2860b0abb","isMergeCommit":false,"messageTitle":"Add exception classes","messageBody":"Let\u0027s create exception classes to facilitate error-handling.\n\nThe abstract class \"MoiMoiException\" represents all exceptions\nspecific to MoiMoi. Its subclasses, \"InvalidCommandException\",\n\"MissingArgumentException\" and \"InvalidArgumentException\" address\nspecific errors that MoiMoi may encounter during execution.\n","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"ab58c6edae3f0f4daf3e6ba9b38c5ee7bdb47203","isMergeCommit":false,"messageTitle":"Handle basic errors","messageBody":"Let\u0027s,\n* Edit MoiMoi.java (and Parser.java) such that it appropriately\nhandles errors, mainly due to incorrect user inputs\n* include error-related scenarios, to be tested on MoiMoi, in\ninput.txt and EXPECTED.TXT\n","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":1},"java":{"insertions":71,"deletions":47}}},{"hash":"d07a9f2fc43f7ad692e073075929ec1ac0c9c3c5","isMergeCommit":false,"messageTitle":"MoiMoi.java: add delete functionality","messageBody":"MoiMoi supports adding tasks, but is unable to delete tasks\nspecified by the user.\n\nUsers may then find it hard to manage their task lists effectively,\nespecially when they need to remove tasks.\n\nLet\u0027s,\n* modify MoiMoi.java to support deleting tasks as specified by the\nuser\n* include corresponding tests in input.txt and EXPECTED.TXT\n\nThis ensures flexibility in MoiMoi\u0027s task management operations,\naligning with user expectations for basic task management\nfunctionalities.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":15,"deletions":0}}}]},{"date":"2024-08-21","commitResults":[{"hash":"20c16b82f2083a9baeee083929b7872111bab4b8","isMergeCommit":false,"messageTitle":"MoiMoi.java: remove indentation for \u0027case\u0027 branches","messageBody":"The \u0027case\u0027 branches in MoiMoi.java are indented.\n\nThis can lead to unnecessary nesting and doesn\u0027t align with the\nmodule\u0027s coding standards.\n\nLet\u0027s remove indentations for \u0027case\u0027 branches in MoiMoi.java.\n\nThis improves code readability and ensures compliance with the\nmodule’s coding standards.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":23}}}]},{"date":"2024-08-22","commitResults":[{"hash":"d778a7e9df3d32409580c55f9b5e43ea9765e1d5","isMergeCommit":false,"messageTitle":"Add storage-specific String method for task classes","messageBody":"Tasks have a \"toString\" method that returns a String representation\nof the task\u0027s information.\n\nHowever, tasks need a separate way to format their information as a\nString for storage purposes, which is different from the format\nused in the UI.\n\nLet\u0027s,\n* create a new field in Task named \"typeIcon\" to generalize task\ntypes\n* implement a new method that returns a String of the task’s\ninformation formatted for storage\n\nThis separation ensures that the data stored in files is consistent\nwith the expected format during loading, while keeping the UI\nrepresentation clean and focused on display purposes.\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":22}}},{"hash":"fc32c027f678233e3b291df6565d05fb31c8a912","isMergeCommit":false,"messageTitle":"Add storage-related exception classes","messageBody":"MoiMoi lacks specific exception classes to handle IO errors and\ncorrupted data files during storage operations.\n\nHandling storage-related errors will make the codebase more robust and\nallow clearer error messaging.\n\nLet\u0027s,\n* create an exception class, named \"StorageCorruptedException\", to\nrepresent errors related to corrupted data files (i.e., when the content\nis not in its expected format)\n* create an exception class, named \"StorageIOException\", to represent IO\nerrors that may occur during data file creation or saving\n\nThese exceptions encapsulate storage-related errors, which can be easily\nhandled and managed.\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"ac7bea59f2fb2e7606411293f1f9c0db76685cc2","isMergeCommit":false,"messageTitle":"MoiMoi.java: add storage functionality","messageBody":"MoiMoi is unable to persist tasks between sessions.\n\nPersistent storage is an expected task management feature, as users need\nto save tasks and load them in future sessions.\n\nLet\u0027s,\n* create a class named \"Storage\" to encapsulate the data file used\nto store tasks, along with methods for loading and saving. If the data\nfile does not exist, a new one will automatically be created\n* modify MoiMoi.java to utilize the Storage class for task persistence\n\nBy centralizing storage logic in a class, the codebase becomes cleaner\nand easier to maintain. Users are enabled to save and load tasks between\nprogram runs.\n","fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":11}}},{"hash":"08827b8daa54b7a8a690bff5cfd4c7c0961992eb","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"wkxcass":{"java":394,"md":0,"fxml":0,"sh":0,"bat":1,"gradle":0,"txt":23}},"authorContributionVariance":{"wkxcass":10786.815},"authorDisplayNameMap":{"wkxcass":"WONG.. XIN"}}
