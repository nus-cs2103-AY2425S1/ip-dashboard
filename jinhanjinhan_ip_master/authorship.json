[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"checkstyle {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    testImplementation \u0027org.mockito:mockito-core:5.5.0\u0027","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"    implementation \u0027com.google.code.gson:gson:2.11.0\u0027","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    mainClass.set(\"juno.launcher.Launcher\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"    archiveBaseName \u003d \"juno\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"    archiveVersion \u003d \"0.1\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"    archiveFileName \u003d \u0027juno.jar\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"jinhanjinhan":25}},{"path":"src/main/java/juno/Juno.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"import juno.ui.MainWindow;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":" * The {@code Juno} class serves as the main entry point for Juno chat bot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":" * It initialises the core components of the chat bot such as the UI, file management, task management,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":" * and command parsing. These components instances are then passed around whenever the command or implementation","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":" * require its functionality.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":" * The chat bot also interacts with users, processing their inputs and executing appropriate commands.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"public class Juno extends Application {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * Starts the Juno chat bot with a GUI. It also loads stored tasks from a file","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     * and detect what user has inputted.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Juno.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setField(); // inject the Juno instance","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().displayWelcomeMessage();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"            stage.show();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":41}},{"path":"src/main/java/juno/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":" * An abstract class for commands that add tasks to the system.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":" * (Specifically, for AddTodoCommand, AddDeadlineCommand, and AddEventCommand classes)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":" * A subclass of abstract class Command, without the implementation of \u003ccode\u003erunCommand()\u003c/code\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":" * Provides the functionality of managing interactions with TaskManager and FileManager.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    protected TaskManager taskManager;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    protected FileManager fileManager;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"    protected String userInput;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs an AddCommand with the specified user input, TaskManager, and FileManager.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * Initialises the task list from the TaskManager.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     * This constructor is used by its subclasses and can be called with \u003ccode\u003esuper\u003c/code\u003e keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"     * @param userInput The input provided by the user to create the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskManager The TaskManager instance to handle task specific operations.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"     * @param fileManager The FileManager instance to handle file operations related to tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"    public AddCommand(String userInput, TaskManager taskManager, FileManager fileManager) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        this.tasks \u003d taskManager.getTasksArray();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":37}},{"path":"src/main/java/juno/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":" * A class to add a new Deadline task to the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":" * Handles the creation and addition of a Deadline task based on user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"    private final String TASK_TYPE \u003d \"deadline\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs an AddDeadlineCommand instance that takes in a specified user input, TaskManager instance,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"     * and FileManager instance.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"     * Initialises an AddDeadlineCommand instance with the provided parameters below.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * @param userInput The input provided by the user to specify the task to add.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskManager The TaskManager instance to handle all task specific operations.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * @param fileManager The FileManager to handle file operations related to tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    public AddDeadlineCommand(String userInput, TaskManager taskManager, FileManager fileManager) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"        super(userInput, taskManager, fileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * Executes the command to add a new Deadline task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     * Based on the user input, extract the task description and end time, checks for duplicates, and then","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     * create a new Deadline task, adds it to the task list, and updates the file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"     * \u003cp\u003eHandle cases such as missing task description and duplicate tasks by throwing TaskManagerException.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"     * Writes the updated task list to the file after addition.\u003c/p\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If an error occurs during task addition, such as missing task description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"    public String runCommand() throws TaskManagerException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"        String taskInfo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        assert this.userInput !\u003d null : \"User input in AddDeadlineCommand() cannot be null!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        assert this.tasks !\u003d null : \"Task array should not be null!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"            taskInfo \u003d userInput.split(\"\\\\s+\", 3)[2];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83D\\uDE15 Hmm, something went wrong. Did you add task correctly? \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"(\\uD83D\\uDCA1 Tip: Use \\\"add {Specify Task Type e.g. todo, deadline, or event} \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"/ {Input task description here}\\\" to add a task)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_ADD_TASK_NUMBER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        String taskDescription;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"        Task t;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"            String[] taskInfoArray \u003d taskInfo.split(\"/\", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"            taskDescription \u003d taskInfoArray[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"            // Check if the task already exists","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"            if (super.taskManager.isDuplicateTask(taskDescription)) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"                throw new TaskManagerException(\"This task is already in your list! \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"                        + \"Maybe you can try renaming it and input again?\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"                        TaskManagerException.ErrorType.DUPLICATE_TASK);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"            t \u003d new Deadline(taskDescription, taskInfoArray[1], this.TASK_TYPE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83D\\uDE15 Hmm, something went wrong. Did you add task correctly? \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"(\\uD83D\\uDCA1 Tip: Use \\\"add {Specify Task Type e.g. todo, deadline, or event} \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"/ {Input task description here}\\\" to add a task)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_ADD_TASK_NUMBER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"        this.tasks.add(t);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"        this.fileManager.writeTasksToFile(this.tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"        StringBuilder outString \u003d new StringBuilder(\"\\uD83C\\uDF89 Got it! I\u0027ve added: \\\"\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"                + taskDescription","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"                + \"\\\" to your list!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"        outString.append(\"\\n\").append(\"\\uD83C\\uDFAF You now have \")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"                 .append(this.tasks.size())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"                 .append(\" tasks in the list. Keep going!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"        return outString.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":84}},{"path":"src/main/java/juno/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":" * A class to add a new Event task to the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":" * Handles the creation and addition of an Event task based on user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"    private final String TASK_TYPE \u003d \"event\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a AddEventCommand instance that takes in a specified user input, TaskManager instance, and FileManager","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"     * instance.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"     * Initialises an AddEventCommand instance with the provided parameters below.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"     * @param userInput The input provided by the user to specify the task to add.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskManager The TaskManager instance to handle all task specific operations.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     * @param fileManager The FileManager to handle file operations related to tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    public AddEventCommand(String userInput, TaskManager taskManager, FileManager fileManager) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"        super(userInput, taskManager, fileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * Executes the command to add a new Event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     * Based on the user input, extract the task description, start time and end time, checks for duplicates, and then","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     * create a new Event task, adds it to the task list, and updates the file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"     * \u003cp\u003eHandle cases such as missing task description and duplicate tasks by throwing TaskManagerException.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"     * Writes the updated task list to the file after addition.\u003c/p\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If an error occurs during task addition, such as missing task description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"    public String runCommand() throws TaskManagerException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"        String taskInfo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        assert this.userInput !\u003d null : \"User input in AddEventCommand() cannot be null!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        assert this.tasks !\u003d null : \"Task array should not be null!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"            taskInfo \u003d userInput.split(\"\\\\s+\", 3)[2];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83D\\uDE15 Hmm, something went wrong. Did you add task correctly? \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"(\\uD83D\\uDCA1 Tip: Use \\\"add {Specify Task Type e.g. todo, deadline, or event} \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"/ {Input task description here}\\\" to add a task)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_ADD_TASK_NUMBER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        String taskDescription;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"        Task t;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"            String[] taskInfoArray \u003d taskInfo.split(\"/\", 3);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"            taskDescription \u003d taskInfoArray[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"            // Check if the task already exists","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"            if (super.taskManager.isDuplicateTask(taskDescription)) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"                throw new TaskManagerException(\"This task is already in your list! \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"                        + \"Maybe you can try renaming it and input again?\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"                        TaskManagerException.ErrorType.DUPLICATE_TASK);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"            t \u003d new Event(taskDescription, taskInfoArray[1], taskInfoArray[2], this.TASK_TYPE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83D\\uDE15 Hmm, something went wrong. Did you add task correctly? \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"(\\uD83D\\uDCA1 Tip: Use \\\"add {Specify Task Type e.g. todo, deadline, or event} \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"/ {Input task description here}\\\" to add a task)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_ADD_TASK_NUMBER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"        this.tasks.add(t);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"        this.fileManager.writeTasksToFile(this.tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"        StringBuilder outString \u003d new StringBuilder(\"\\uD83C\\uDF89 Got it! I\u0027ve added: \\\"\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"                + taskDescription","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"                + \"\\\" to your list!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"        outString.append(\"\\n\").append(\"\\uD83C\\uDFAF You now have \")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"                 .append(this.tasks.size())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"                 .append(\" tasks in the list. Keep going!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"        return outString.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":83}},{"path":"src/main/java/juno/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":" * A class to add a new Todo task to the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":" * Handles the creation and addition of a Todo task based on user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"    private final String TASK_TYPE \u003d \"todo\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a AddTodoCommand that takes in a specified user input, TaskManager instance, and FileManager instance.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"     * Initialises an AddTodoCommand instance with the provided parameters below","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"     * @param userInput The input provided by the user to specify the task to add.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskManager The TaskManager instance to handle all task specific operations.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     * @param fileManager The FileManager to handle file operations related to tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    public AddTodoCommand(String userInput, TaskManager taskManager, FileManager fileManager) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"        super(userInput, taskManager, fileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     * Executes the command to add a new Todo task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * Based on the user input, extract the task description, checks for duplicates, and then","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     * create a new Todo task, adds it to the task list, and updates the file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"     * \u003cp\u003eHandle cases such as missing task description and duplicate tasks by throwing TaskManagerException.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"     * Writes the updated task list to the file after addition.\u003c/p\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If an error occurs during task addition, such as missing task description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"    public String runCommand() throws TaskManagerException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"        String taskInfo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"        assert this.userInput !\u003d null : \"User input in AddTodoCommand() cannot be null!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        assert this.tasks !\u003d null : \"Task array should not be null!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"            taskInfo \u003d this.userInput.split(\"\\\\s+\", 3)[2];","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83D\\uDE15 Hmm, something went wrong. Did you add task correctly? \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"(\\uD83D\\uDCA1 Tip: Use \\\"add {Specify Task Type e.g. todo, deadline, or event} \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"/ {Input task description here}\\\" to add a task)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_ADD_TASK_NUMBER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"        // Check if the task already exists","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        if (super.taskManager.isDuplicateTask(taskInfo)) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"This task is already in your list! \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"Maybe you can try renaming it and input again?\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.DUPLICATE_TASK);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"        Task t \u003d new Todo(taskInfo, this.TASK_TYPE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"        this.tasks.add(t);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"        this.fileManager.writeTasksToFile(this.tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"        StringBuilder outString \u003d new StringBuilder(\"\\uD83C\\uDF89 Got it! I\u0027ve added: \\\"\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"                + taskInfo","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"                + \"\\\" to your list!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"        outString.append(\"\\n\").append(\"\\uD83C\\uDFAF You now have \")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"                 .append(this.tasks.size())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"                 .append(\" tasks in the list. Keep going!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"        return outString.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":70}},{"path":"src/main/java/juno/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":" * Abstract class for all possible commands.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":" * Defines how commands can be executed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":" * Superclass for all other *Command classes in juno.command package","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"     * Runs the command. Subclasses must implement this method.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"     * and define the specific behaviour of the command.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If an error occurs during command execution.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    public abstract String runCommand() throws TaskManagerException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"     * Determines if the command being executed changes the while loop behaviour in Juno class.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * Overriden by ExitCommand class, where it returns false instead.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * @return True if the command is considered to be in a while loop, otherwise false.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    public boolean isInWhileLoop() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"        return true;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":29}},{"path":"src/main/java/juno/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":" * A class to execute the delete functionality for the tasks in Juno chat bot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":" * Subclass of Command class.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager fileManager;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    private String userInput;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a DeleteCommand instance with the specified user input, TaskManager, and FileManager.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * Initialises the task list from the TaskManager.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * @param userInput The input provided by the user which specify the task to delete.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskManager  TaskManager to handle task specific operations.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"     * @param fileManager  FileManager to handle file operations related to tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    public DeleteCommand(String userInput, TaskManager taskManager, FileManager fileManager) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        this.tasks \u003d taskManager.getTasksArray();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"     * Executes the command to delete a task based on the user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"     * The user input should specify the task number to delete. (e.g. delete 2, which deletes the second task in","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"     * the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"     * \u003cp\u003eHandles errors such as out-of-range task numbers and incorrect input format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"     * Writes the updated task list to the file task.json after deletion.\u003c/p\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If an error occurs during task deletion, such as an invalid task number.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"    public String runCommand() throws TaskManagerException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"            assert this.userInput !\u003d null : \"User input in DeleteCommand() cannot be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"            int taskNumber \u003d Integer.parseInt(this.userInput.split(\"\\\\s+\", 2)[1]) - 1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"            if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c this.tasks.size()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"                Task taskToDelete \u003d this.tasks.remove(taskNumber);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"                StringBuilder outString \u003d new StringBuilder(\"Got it! 🗑️ I\u0027ve waved goodbye to this task:\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"                outString.append(\"\\n\").append(taskToDelete.toString()).append(\"\\n\")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"                         .append(\"Your list just got lighter! 🌟 \")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"                         .append(\"Now you\u0027re down to \")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"                         .append(this.tasks.size())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"                         .append(\" tasks. Keep up the momentum!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"                return outString.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"            } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"                throw new TaskManagerException(\"\\uD83D\\uDEAB Oops! That task number is out of range. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"                        + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see task numbers)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"                        TaskManagerException.ErrorType.TASK_OUT_OF_RANGE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83D\\uDE15 Hmm, something went wrong. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"Please enter a task number after mark/unmark/delete command. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see task numbers)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_DELETE_TASK_NUMBER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"        } finally {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"            this.fileManager.writeTasksToFile(this.tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":73}},{"path":"src/main/java/juno/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import juno.ui.JunoUi;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":" * A class to exit the Juno chat bot. When executed, close the chat bot for user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":" * Subclass of Command class.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"    private JunoUi junoUi;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs an ExitCommand instance that takes in a JunoUi instance, subsequently using it","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"     * to display exit message.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"     * @param junoUi The JunoUi instance to display the farewell message.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    public ExitCommand(JunoUi junoUi) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"        this.junoUi \u003d junoUi;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     * Executes the command to exit the chat bot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * Displays the farewell message to the user by calling the \u003ccode\u003edisplayFarewellMessage()\u003c/code\u003e method using","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     * the JunoUi instance.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    public String runCommand() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        return this.junoUi.displayFarewellMessage();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns false as the user executes the exitCommand, so it returns false to exit the while loop in Juno class.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"     * @return False, indicating the command is not in a while loop.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"    public boolean isInWhileLoop() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"        return false;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":41}},{"path":"src/main/java/juno/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"    private String userInput;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"    public FindCommand(String userInput, TaskManager taskManager) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"        this.tasks \u003d taskManager.getTasksArray();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    public String runCommand() throws TaskManagerException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83C\\uDF31 No tasks added yet! Why not plant the first seed? \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"\\uD83C\\uDF31\", TaskManagerException.ErrorType.EMPTY_LIST);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"        String taskString;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"            taskString \u003d userInput.split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83D\\uDE15 Hmm, something went wrong. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"Please enter a valid task string after find command. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see your tasks)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_FIND_TASK);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d this.findTask(taskString);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"No matching tasks found for the keyword: \" + taskString,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.NO_TASK_FOUND);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"        StringBuilder outString \u003d new StringBuilder(\"Here are the matching task(s) in your list:\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"        for (int i \u003d 0; i \u003c tasksFound.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"            String formmattedString \u003d String.format(","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"                    \"%d. %s\", (i + 1),","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"                    tasksFound.get(i).toString()","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"            );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"            outString.append(\"\\n\").append(formmattedString);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"        outString.append(\"\\n\").append(\"\\uD83C\\uDFAF I have found \").append(tasksFound.size())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"                .append(\" task(s) related to \").append(\"your prompt.\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"        return outString.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e findTask(String taskString) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d this.tasks.stream()","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(taskString.toLowerCase())","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"                        || task.getTaskType().toLowerCase().contains(taskString.toLowerCase()))","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"        return tasksFound;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":60}},{"path":"src/main/java/juno/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":" * A class to list all tasks currently in the list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":" * Retrieves and displays a formatted list of tasks currently managed","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":" * by the TaskManager.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a ListCommand instance which takes in a TaskManager instance.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"     * Initialises the task list from the TaskManager by calling \u003ccode\u003egetTasksArray()\u003c/code\u003e method.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskManager The TaskManager instance to retrieve the tasks from.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    public ListCommand(TaskManager taskManager) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"        this.tasks \u003d taskManager.getTasksArray();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     * Executes the command to list all tasks that the user has now.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * If the task list is empty, throws a TaskManagerException.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     * Otherwise, prints each task in a formatted list and the total","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     * number of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"     * Can be executed with the \"list\" input prompt.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If no tasks are present in the list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    public String runCommand() throws TaskManagerException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83C\\uDF31 No tasks added yet! \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"Why not plant the first seed? \\uD83C\\uDF31\", TaskManagerException.ErrorType.EMPTY_LIST);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        StringBuilder outString \u003d new StringBuilder(\"Here\u0027s a rundown of all your tasks! \\uD83D\\uDE0A\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"        String taskList \u003d IntStream.range(0, this.tasks.size())","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\", (i + 1), this.tasks.get(i).toString()))","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"        outString.append(\"\\n\")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"                .append(taskList)","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"                .append(\"\\n\")","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"                .append(\"\\uD83C\\uDFAF You have \")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"                .append(this.tasks.size())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"                .append(\" tasks in the list. Keep going!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"        return outString.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":58}},{"path":"src/main/java/juno/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":" * A class to mark or unmark a task as done or not done (with a X).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":" * Updates the status of a specified task based on the user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":" * Updates the file tasks.json() after the \u003ccode\u003erunCommand()\u003c/code\u003e is executed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager fileManager;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"    private String userInput;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a MarkCommand instance which takes in a specified user input, TaskManager instance , FileManager","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"     * instance, and whether it is a mark/unmark command (through the isMarked boolean parameter).","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"     * @param userInput The input provided by the user to specify which task to mark or unmark.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskManager The TaskManager instance to handle all task specific operations.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     * @param fileManager The FileManager instance to handle file operations related to tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * @param isMarked Boolean indicating whether to mark the task (true) or unmark the task (false).","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    public MarkCommand(String userInput, TaskManager taskManager, FileManager fileManager, boolean isMarked) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"        this.fileManager \u003d fileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        this.tasks \u003d taskManager.getTasksArray();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"     * Executes the command to mark or unmark a task based on the user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"     * The user input should specify the task number to be updated. (e.g. mark 1 marks the first task on list as done).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"     * If the task is already marked and user wants to mark the task, it will tell user that it cannot be done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"     * Similarly, if the task is already unmarked and user wants to unmark the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"     * Handles errors such as out-of-range task numbers and incorrect input format. (e.g. mark abc)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"     * Writes the updated task list to the file using the fileManager instance after the operation.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If an error occurs during mark or unmark, such as an invalid task number.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    public String runCommand() throws TaskManagerException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"            assert this.userInput !\u003d null : \"User input in MarkCommand() cannot be null!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"            int taskNumber \u003d Integer.parseInt(this.userInput.split(\"\\\\s+\", 2)[1]) - 1;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"            if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c this.tasks.size()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"                Task taskToMark \u003d this.tasks.get(taskNumber);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"                StringBuilder outString;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"                if (this.isMarked) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"                    outString \u003d this.handleMarkTask(taskToMark);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"                } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"                    outString \u003d this.handleUnmarkTask(taskToMark);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"                outString.append(\"\\n\").append(\"  \").append(this.tasks.get(taskNumber).toString());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"                return outString.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"            } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"                throw new TaskManagerException(\"\\uD83D\\uDEAB Oops! That task number is out of range. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"                        + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see task numbers)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"                        TaskManagerException.ErrorType.TASK_OUT_OF_RANGE);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"\\uD83D\\uDE15 Hmm, something went wrong. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"Please enter a task number after mark/unmark/delete command. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see task numbers)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_MARK_TASK_NUMBER);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"        } finally {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"            this.fileManager.writeTasksToFile(this.tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"     * Handles the marking of a task as done.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"     * Checks if the task is already marked as done; if so, informs the user that the task has already been completed.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"     * Otherwise, marks the task as done and provides a confirmation message.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskToMark The Task object to be marked as done.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jinhanjinhan"},"content":"     * @return A StringBuilder containing the response message indicating the result of the mark operation.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jinhanjinhan"},"content":"    private StringBuilder handleMarkTask(Task taskToMark) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jinhanjinhan"},"content":"        StringBuilder outString \u003d new StringBuilder();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jinhanjinhan"},"content":"        if (taskToMark.getIsDone()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jinhanjinhan"},"content":"            outString.append(\"You have completed the task \\\"\")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jinhanjinhan"},"content":"                    .append(taskToMark.getDescription()).append(\"\\\" already!\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jinhanjinhan"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jinhanjinhan"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jinhanjinhan"},"content":"            outString.append(\"Great work! Knew you would have completed it.\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jinhanjinhan"},"content":"        return outString;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jinhanjinhan"},"content":"     * Handles the unmarking of a task as not done.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jinhanjinhan"},"content":"     * Checks if the task is currently marked as done; if so, unmarks the task and provides a confirmation message.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jinhanjinhan"},"content":"     * If the task is already not done, informs the user that the task cannot be unmarked.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskToMark The Task object to be unmarked as not done.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jinhanjinhan"},"content":"     * @return A StringBuilder containing the response message indicating the result of the unmark operation.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jinhanjinhan"},"content":"    private StringBuilder handleUnmarkTask(Task taskToMark) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jinhanjinhan"},"content":"        StringBuilder outString \u003d new StringBuilder();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jinhanjinhan"},"content":"        if (taskToMark.getIsDone()) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jinhanjinhan"},"content":"            taskToMark.markAsNotDone();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jinhanjinhan"},"content":"            outString.append(\"Hey, I have unmarked this task for you. \")","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jinhanjinhan"},"content":"                    .append(\"Maybe you should start working on it soon?\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jinhanjinhan"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jinhanjinhan"},"content":"            outString.append(\"Task \\\"\").append(taskToMark.getDescription())","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jinhanjinhan"},"content":"                    .append(\"\\\" is still not done! You can\u0027t unmark an undone task!\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jinhanjinhan"},"content":"        return outString;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":121}},{"path":"src/main/java/juno/launcher/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.launcher;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import juno.Juno;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"public class Launcher {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"        Application.launch(Juno.class, args);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":12}},{"path":"src/main/java/juno/manager/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.manager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.io.File;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.JsonSyntaxException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"import juno.ui.DialogBox;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":" * A class that handles the reading and writing to the file, task.json, which stores tasks in JSON format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"public class FileManager {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    private static final String FILE_CREATED_STRING \u003d \"File created! Unfortunately, it looks like your previous tasks \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"            + \"have vanished into the digital abyss. But hey, fresh start, right? 🌟\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    private static final String CANNOT_DELETE_FILE_STRING \u003d \"Seems like we can\u0027t delete the file either, maybe try \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"            + \"deleting it manually and run me again!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    private static final String DATA_STORING_ERROR_STRING \u003d \"Looks like we ran into some errors while trying to\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"            + \" store your data!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    private static final String ERROR_WRITING_STRING \u003d \"Looks like we ran into some errors while saving the tasks!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"    private static final String INCORRECT_CONTENT_FORMAT \u003d \"Looks like the file content is not in the correct format!\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"            + \"Proceeding to delete the file and create a new one...\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    private static final String ERROR_RETRIEVING_DATA_STRING \u003d \"Looks like we ran into some errors while retrieving \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"            + \"data regarding your tasks!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    private static final String FILE_PATH \u003d \"task.json\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"    private Gson gsonInstance;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"    private Image junoImage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a FileManager instance which when initialised, will initialise a custom Gson instance as well.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"     * The Gson instance will handle Task objects and exclude fields without @Expose annotation.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"    public FileManager(VBox dialogContainer, Image junoImage) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"        this.gsonInstance \u003d new GsonBuilder()","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"                 .registerTypeAdapter(Task.class, new TaskAdapter())","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"                 .setPrettyPrinting()","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"                 .excludeFieldsWithoutExposeAnnotation()","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"                 .create();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"        this.junoImage \u003d junoImage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"     * Writes the list of tasks to the file task.json in JSON format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"     * @param tasks The tasks to be written to the file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"    public void writeTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"        try (FileWriter writer \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"            this.gsonInstance.toJson(tasks, writer);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(ERROR_WRITING_STRING + e.getMessage(),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"                    junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"     * Reads the list of tasks from the file task.json.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The tasks read from the file, in ArrayList.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"    public ArrayList\u003cTask\u003e readTasksFromFile() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"        try (FileReader reader \u003d new FileReader(FILE_PATH)) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"            Type taskListType \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {}.getType();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"            tasks \u003d this.gsonInstance.fromJson(reader, taskListType);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (JsonSyntaxException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(INCORRECT_CONTENT_FORMAT, junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jinhanjinhan"},"content":"            this.handleCorruptedFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jinhanjinhan"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jinhanjinhan"},"content":"                    ERROR_RETRIEVING_DATA_STRING + e.getMessage(),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jinhanjinhan"},"content":"                    junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jinhanjinhan"},"content":"        return tasks;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jinhanjinhan"},"content":"     * Ensures that the file exists. If the file does not exist, create a new one.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If we ran into some issues with storing the data.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jinhanjinhan"},"content":"    public void ensureFileExist() throws TaskManagerException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jinhanjinhan"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jinhanjinhan"},"content":"        if (!f.isFile()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jinhanjinhan"},"content":"            try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jinhanjinhan"},"content":"                boolean isCreatedFile \u003d f.createNewFile();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jinhanjinhan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jinhanjinhan"},"content":"                throw new TaskManagerException(DATA_STORING_ERROR_STRING + e.getMessage(),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jinhanjinhan"},"content":"                        TaskManagerException.ErrorType.FILE_NOT_EXIST);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jinhanjinhan"},"content":"     * Handles the issue when file is corrupted by deleting the corrupted file and creating a new one.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jinhanjinhan"},"content":"    public void handleCorruptedFile() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jinhanjinhan"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jinhanjinhan"},"content":"        if (f.delete()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jinhanjinhan"},"content":"            try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jinhanjinhan"},"content":"                this.ensureFileExist();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jinhanjinhan"},"content":"            } catch (TaskManagerException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jinhanjinhan"},"content":"                dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(e.getMessage(), junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jinhanjinhan"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(FILE_CREATED_STRING, junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jinhanjinhan"},"content":"        } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jinhanjinhan"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(CANNOT_DELETE_FILE_STRING, junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":126}},{"path":"src/main/java/juno/manager/TaskAdapter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.manager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.TypeAdapter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.stream.JsonReader;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.stream.JsonWriter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":" * A class to customise the Gson TypeAdapter for serialising and deserialising Task objects.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":" * Required as reading and writing takes in an ArrayList, so this class will help in reading the writing correctly","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":" * into the task.json file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":" * Handles different Task subclasses (Todo, Deadline, Event) during the JSON read/write process.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"public class TaskAdapter extends TypeAdapter\u003cTask\u003e {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * Deserialises JSON into a Task object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     * Identifies the task type and creates the appropriate Task subclass using switch statement.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"     * @param reader The JsonReader to read the JSON data from.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The deserialised Task object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws IOException If there is an error reading the JSON data.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"    public Task read(JsonReader reader) throws IOException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"        reader.beginObject();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"        String taskType \u003d \"\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        String endTimeString \u003d \"\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        String startTimeString \u003d \"\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"        while (reader.hasNext()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"            String name \u003d reader.nextName();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"            switch (name) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"            case \"taskType\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"                taskType \u003d reader.nextString();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"                break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"            case \"description\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"                description \u003d reader.nextString();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"                break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"            case \"isDone\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"                isDone \u003d reader.nextBoolean();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"                break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"            case \"endTimeString\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"                endTimeString \u003d reader.nextString();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"                break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"            case \"startTimeString\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"                startTimeString \u003d reader.nextString();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"                break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"            default:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"                reader.skipValue();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"                break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"        reader.endObject();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"        switch (taskType) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"            try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"                task \u003d new Deadline(description, endTimeString, taskType);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"            } catch (TaskManagerException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"            break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"        case \"event\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"            try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"                task \u003d new Event(description, startTimeString, endTimeString, taskType);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"            } catch (TaskManagerException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"            break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"        case \"todo\":","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"            task \u003d new Todo(description, taskType);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"            break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"        default:","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jinhanjinhan"},"content":"            throw new RuntimeException();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jinhanjinhan"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jinhanjinhan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jinhanjinhan"},"content":"        return task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jinhanjinhan"},"content":"     * Serialises a Task object into JSON.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jinhanjinhan"},"content":"     * @param writer The JsonWriter to write the JSON data to.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jinhanjinhan"},"content":"     * @param task   The Task object to be serialised.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws IOException If there is an error writing the JSON data.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jinhanjinhan"},"content":"    public void write(JsonWriter writer, Task task) throws IOException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jinhanjinhan"},"content":"        writer.beginObject();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jinhanjinhan"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jinhanjinhan"},"content":"            writer.name(\"taskType\").value(\"todo\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jinhanjinhan"},"content":"            writer.name(\"taskType\").value(\"deadline\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jinhanjinhan"},"content":"            writer.name(\"endTimeString\").value(((Deadline) task).getEndTimeString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jinhanjinhan"},"content":"            writer.name(\"taskType\").value(\"event\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jinhanjinhan"},"content":"            writer.name(\"endTimeString\").value(((Event) task).getEndTimeString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jinhanjinhan"},"content":"            writer.name(\"startTimeString\").value(((Event) task).getStartTimeString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jinhanjinhan"},"content":"        } else {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jinhanjinhan"},"content":"            throw new RuntimeException();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jinhanjinhan"},"content":"        writer.name(\"description\").value(task.getDescription());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jinhanjinhan"},"content":"        writer.name(\"isDone\").value(task.getIsDone());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jinhanjinhan"},"content":"        writer.endObject();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":120}},{"path":"src/main/java/juno/manager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.manager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":" * Class to manage tasks and providing access to the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":" * Stores the list of tasks as an ArrayList.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"public class TaskManager {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a TaskManager instance that takes in a specified list of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"     * If the provided list is null, such as when the user just started the chat bot for the first time,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"     * a new empty ArrayList is initialised.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"     * @param tasks the list of tasks that the user has.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"        } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     * @return an ArrayList containing the tasks","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"    public ArrayList\u003cTask\u003e getTasksArray() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        return this.tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"     * Checks if a task with the specified description already exists in the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskDescription the description of the task to check for duplicates with the current task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"     * @return true if a task with the same description exists, else, return false.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"    public boolean isDuplicateTask(String taskDescription) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        assert this.tasks !\u003d null : \"Task list cannot be null!\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"        boolean isDuplicate \u003d this.tasks.stream()","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"                .anyMatch(task -\u003e task.getDescription().equalsIgnoreCase(taskDescription));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        return isDuplicate;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":50}},{"path":"src/main/java/juno/manager/exception/TaskManagerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.manager.exception;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":" * The TaskManagerException class represents exceptions that can occur.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":" * A subclass of {@code Exception} class and includes {@code ErrorType} to specify the type of error.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"    private final ErrorType errorType;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"     * An enumeration of possible error types that can occur.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"    public enum ErrorType {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"        EMPTY_LIST,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"        INVALID_MARK_TASK_NUMBER,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"        INVALID_ADD_TASK_NUMBER,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"        DUPLICATE_TASK,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"        TASK_OUT_OF_RANGE,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"        INVALID_DATETIME_ARGUMENT,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"        INVALID_FUNCTION,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"        EMPTY_INPUT,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"        INVALID_DELETE_TASK_NUMBER,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"        NO_TASK_FOUND,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"        INVALID_FIND_TASK,","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"        FILE_NOT_EXIST","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a TaskManagerException instance that takes in a specified detail message and error type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     * @param message the message for the exception.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * @param errorType the type of error that occurred, based on the ErrorType enumeration.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    public TaskManagerException(String message, ErrorType errorType) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        this.errorType \u003d errorType;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns the ErrorType of this exception.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"     * @return the error type of the exception.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"    public ErrorType getErrorType() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        return this.errorType;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":46}},{"path":"src/main/java/juno/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.parser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.AddDeadlineCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.AddEventCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.AddTodoCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.DeleteCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.ExitCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.FindCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.ListCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.MarkCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import juno.ui.JunoUi;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":" * Class to parse user input to determine which command should be executed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":" * Based on the input string, it returns the appropriate command object to Juno chat bot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"public class CommandParser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * Parses the user\u0027s input and returns the command to be executed.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     * Needs to pass in these parameters for use in creating the command.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"     * @param junoUi The user interface instance to interact with the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"     * @param fileManager The FileManager instance for handling file operations.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskManager The TaskManager instance for handling task specific operations.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The Command object corresponding to the user\u0027s input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If the input is invalid or an error occurs while parsing.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"    public Command parse(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"            String userInput,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"            JunoUi junoUi,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"            FileManager fileManager,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"            TaskManager taskManager) throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"        String markTaskString \u003d \"mark\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"        String unmarkTaskString \u003d \"unmark\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"        String deleteTaskString \u003d \"delete\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        String addTodoTaskString \u003d \"add todo\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        String addDeadlineTaskString \u003d \"add deadline\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        String addEventTaskString \u003d \"add event\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"        String listTaskString \u003d \"list\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        String exitString \u003d \"bye\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        String findString \u003d \"find\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"        if (userInput.equalsIgnoreCase(exitString)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"            return new ExitCommand(junoUi);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.equalsIgnoreCase(listTaskString)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"            return new ListCommand(taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.isEmpty()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(junoUi.invalidUserInput(),","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.EMPTY_INPUT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.startsWith(markTaskString)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"            return new MarkCommand(userInput, taskManager, fileManager, true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.startsWith(unmarkTaskString)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"            return new MarkCommand(userInput, taskManager, fileManager, false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.startsWith(deleteTaskString)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"            return new DeleteCommand(userInput, taskManager, fileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.startsWith(addTodoTaskString)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"            return new AddTodoCommand(userInput, taskManager, fileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.startsWith(addDeadlineTaskString)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"            return new AddDeadlineCommand(userInput, taskManager, fileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.startsWith(addEventTaskString)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"            return new AddEventCommand(userInput, taskManager, fileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"        } else if (userInput.startsWith(findString)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"            return new FindCommand(userInput, taskManager);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(junoUi.invalidFunctionInput(),","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_FUNCTION);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":76}},{"path":"src/main/java/juno/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.annotations.Expose;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":" * Represents a deadline task type with a description and end time.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":" * Subclass of Task class and adds functionality to handle deadline-specific details.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    @Expose","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"    protected String endTimeString;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a Deadline instance which takes in a specified description, end time, and task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     * Calls its superclass Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * Parses end time from string to LocalDateTime object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     * Throws an exception if the date-time format is invalid.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"     * @param endTimeString The end time as a string in the format \"yyyy MM dd hh.mma\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskType The type of the task, i.e. \"deadline\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If the date-time format is incorrect.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    public Deadline(String description, String endTimeString, String taskType) throws TaskManagerException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"        super(description, taskType);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"            this.endTime \u003d LocalDateTime.parse(endTimeString.trim(), DateTimeFormatter.ofPattern(\"yyyy MM dd hh.mma\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"Your format for date is wrong! Please use this format: \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"add deadline {description}\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"/yyyy MM dd hh.mma (e.g. add deadline homework /2024 11 17 10.00AM)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_DATETIME_ARGUMENT);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        this.endTimeString \u003d endTimeString.trim();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns a string representation of the deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"     * Formats the LocalDateTime object for display.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        return \"[⏰ Deadline] \" + super.toString() + \" - Don\u0027t miss it! ⏳ (due: \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"                + this.endTime.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu, hh:mma\")) + \")\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns the end time string.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The end time string.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"    public String getEndTimeString() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"        return this.endTimeString;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":67}},{"path":"src/main/java/juno/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.annotations.Expose;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":" * Represents an event task type with a description, start time, and end time.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":" * Subclass of Task class and adds functionality to handle event-specific details.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"    @Expose","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"    protected String startTimeString;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"    @Expose","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    protected String endTimeString;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs an Event instance which takes in a specified description, start time, end time, and task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"     * Calls its superclass Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"     * Parses the start and end times from strings to LocalDateTime objects.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"     * Throws an exception if the date-time format is invalid.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * @param startTimeString The start time as a string in the format \"yyyy MM dd hh.mma\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     * @param endTimeString The end time as a string in the format \"yyyy MM dd hh.mma\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskType The type of the task, i.e. \"event\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"     * @throws TaskManagerException If the date-time format is incorrect.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"    public Event(","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"            String description,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"            String startTimeString,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"            String endTimeString,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"            String taskType) throws TaskManagerException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"        super(description, taskType);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"            this.startTime \u003d LocalDateTime.parse(startTimeString.trim(),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy MM dd hh.mma\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"            this.endTime \u003d LocalDateTime.parse(endTimeString.trim(), DateTimeFormatter.ofPattern(\"yyyy MM dd hh.mma\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"            throw new TaskManagerException(\"Your format for date is wrong! Please use this format: \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"add event {description} \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"                    + \"/yyyy MM dd hh.mma /yyyy MM dd hh.mma .\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"                    TaskManagerException.ErrorType.INVALID_DATETIME_ARGUMENT);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"        this.startTimeString \u003d startTimeString.trim();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        this.endTimeString \u003d endTimeString.trim();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"     * Formats the LocalDateTime object for display.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"        return \"[📅 Event] \" + super.toString() + \" - Mark your calendar! 🗓️ \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"                + \"(from: \" + this.startTime.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu, hh:mma\"))","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"                + \" to: \" + this.endTime.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu, hh:mma\")) + \")\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns the end time string.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The end time string.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"    public String getEndTimeString() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"        return this.endTimeString;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns the start time string.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The start time string.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"    public String getStartTimeString() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jinhanjinhan"},"content":"        return this.startTimeString;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":87}},{"path":"src/main/java/juno/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import com.google.gson.annotations.Expose;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":" * Represents a task with a description, whether it is done, and type of task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":" * Provides relevant task related methods.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":" * Superclass for other task types such as Event, Deadline and Todo.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"public class Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"    @Expose","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"    protected String description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"    @Expose","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"    @Expose","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"    protected String taskType;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a Task instance that takes in a specified description and task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskType The type of the task (e.g. \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    public Task(String description, String taskType) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns whether task is done with an icon, for the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"     * \"X\" if the task is marked as done, else, a space.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The status icon as a string.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"     * Marks the task as done (true).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"     * Marks the task as not done (false).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"     * @return True if the task is done, otherwise false.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"        return this.isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The task description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"        return this.description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns the task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"        return this.taskType;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jinhanjinhan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jinhanjinhan"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":90}},{"path":"src/main/java/juno/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":" * Represents an Todo task type with a description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":" * Subclass of Task class.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a Todo instance which takes in a specified description and task type.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"     * Calls its superclass Task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"     * @param taskType The type of the task, i.e. \"deadline\".","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    public Todo(String description, String taskType) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"        super(description, taskType);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns a string representation of the todo.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"        return \"[📝 ToDo] \" + super.toString() + \" - Let\u0027s get this done! 💪\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":30}},{"path":"src/main/java/juno/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.ui;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"    private void flip() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"    public static DialogBox getJunoDialog(String text, Image img) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"        db.flip();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"        return db;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":61}},{"path":"src/main/java/juno/ui/JunoUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.ui;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":" * The {@code JunoUi} class handles user interaction for the Juno chat bot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":" * It provides methods for displaying welcome and farewell messages, as well as responses for invalid user inputs.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"public class JunoUi {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"    private final String greeting;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"    private final String farewell;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"    private final String invalidUserInputString;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"    private final String invalidFunctionInputString;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"     * Constructs a {@code JunoUi} instance and initialises the logo,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"     * greeting message, and farewell message for the chatbot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"    public JunoUi() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"        this.greeting \u003d \"🌟 Welcome to the Future! I\u0027m Juno, your digital assistant.\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"                + \"How can I assist you on your journey today?\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"        this.farewell \u003d \"👋 Farewell for now! Looking forward to our next interaction.\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"                + \"Juno is shutting down now...\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"        this.invalidUserInputString \u003d \"Well, seems like you did not input anything! Please try again.\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"        this.invalidFunctionInputString \u003d \"The input you provided is invalid! \"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"                + \"(\\uD83D\\uDCA1 Tip: You can use the following commands \\\"add\\\", \\\"list\\\",\\\"mark\\\", \\\"unmark\\\".)\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"     * Displays the welcome message to the console.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    public String displayWelcomeMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"        return this.greeting;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"     * Displays the farewell message to the console.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"    public String displayFarewellMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        return this.farewell;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns a string for empty user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"     * @return A string indicating that the input was empty.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"    public String invalidUserInput() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        return this.invalidUserInputString;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"     * Returns a string for invalid function input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"     * @return A string indicating that the input was invalid.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"    // Could implement a help function to see all possible commands in the future","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"    public String invalidFunctionInput() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"        return this.invalidFunctionInputString;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":59}},{"path":"src/main/java/juno/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.ui;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.Command;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"import juno.parser.CommandParser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"    private JunoUi junoUi;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    // file manager to handle all file related method calls","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager fileManager;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"    private CommandParser commandParser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    // task manager to handle all the task related method calls","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"            this.getClass().getResourceAsStream(\"/images/UserImage.png\")));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"    private final Image junoImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"            this.getClass().getResourceAsStream(\"/images/JunoImage.png\")));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    /** Injects the Juno instance */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"    public void setField() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        // start the UI","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"        this.junoUi \u003d new JunoUi();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"        this.fileManager \u003d new FileManager(dialogContainer, junoImage);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"        this.commandParser \u003d new CommandParser();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"            this.fileManager.ensureFileExist();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"            ArrayList\u003cTask\u003e storedTasks \u003d this.fileManager.readTasksFromFile();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"            this.taskManager \u003d new TaskManager(storedTasks);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (TaskManagerException | RuntimeException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(e.getMessage(), junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(this.junoUi.displayWelcomeMessage(), junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"     * Detects user input through the command line.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"     * User input is parsed into commands, which are then executed. The loop continues until","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"     * the user inputs a command \"bye\" to terminate the chat bot.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Juno\u0027s reply and then appends them to","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"        assert userInput !\u003d null : \"User input should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jinhanjinhan"},"content":"            Command command \u003d this.commandParser.parse(input, this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jinhanjinhan"},"content":"            assert command !\u003d null : \"The command returned should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jinhanjinhan"},"content":"            String outputString \u003d command.runCommand();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jinhanjinhan"},"content":"            assert outputString !\u003d null : \"The output string returned should not be null\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jinhanjinhan"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(outputString, junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jinhanjinhan"},"content":"            if (!command.isInWhileLoop()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jinhanjinhan"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jinhanjinhan"},"content":"                delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jinhanjinhan"},"content":"                delay.play();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jinhanjinhan"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jinhanjinhan"},"content":"        } catch (TaskManagerException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jinhanjinhan"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getJunoDialog(e.getMessage(), junoImage));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jinhanjinhan"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jinhanjinhan"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":101}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"juno.ui.MainWindow\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":19}},{"path":"src/test/java/juno/command/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager mockTaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager mockFileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e mockTaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    void startTestEnv() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskManager \u003d mock(TaskManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockFileManager \u003d mock(FileManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        when(this.mockTaskManager.getTasksArray()).thenReturn(this.mockTaskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_validAddDeadlineCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"                \"add deadline Finish homework /2024 10 11 11.59PM\", this.mockTaskManager, this.mockFileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"        addDeadlineCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(1, this.mockTaskList.size());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        Task t \u003d this.mockTaskList.get(0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(Deadline.class, t);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"Finish homework \", t.getDescription());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        verify(this.mockFileManager).writeTasksToFile(this.mockTaskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":50}},{"path":"src/test/java/juno/command/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager mockTaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager mockFileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e mockTaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    void startTestEnv() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskManager \u003d mock(TaskManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockFileManager \u003d mock(FileManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        when(this.mockTaskManager.getTasksArray()).thenReturn(this.mockTaskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_validAddEventCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"                \"add event Finish homework /2024 10 11 11.59PM / 2024 10 12 11.59PM\",","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"                this.mockTaskManager, this.mockFileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"        addEventCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(1, this.mockTaskList.size());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        Task t \u003d this.mockTaskList.get(0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(Event.class, t);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"Finish homework \", t.getDescription());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"        verify(this.mockFileManager).writeTasksToFile(this.mockTaskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":51}},{"path":"src/test/java/juno/command/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager mockTaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager mockFileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e mockTaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    void startTestEnv() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskManager \u003d mock(TaskManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockFileManager \u003d mock(FileManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        when(this.mockTaskManager.getTasksArray()).thenReturn(this.mockTaskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_validAddTodoCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        AddTodoCommand addTodoCommand \u003d new AddTodoCommand(","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"                \"add todo Finish homework\", this.mockTaskManager, this.mockFileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"        addTodoCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(1, this.mockTaskList.size());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        Task t \u003d this.mockTaskList.get(0);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(Todo.class, t);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"Finish homework\", t.getDescription());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        verify(this.mockFileManager).writeTasksToFile(this.mockTaskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":50}},{"path":"src/test/java/juno/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager mockTaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager mockFileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e mockTaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    void startTestEnv() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskManager \u003d mock(TaskManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockFileManager \u003d mock(FileManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"        Task mockTask1 \u003d mock(Task.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"        Task mockTask2 \u003d mock(Task.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskList.add(mockTask1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskList.add(mockTask2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        when(mockTaskManager.getTasksArray()).thenReturn(mockTaskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_validDeleteCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"delete 1\", this.mockTaskManager, this.mockFileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"        deleteCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(1, this.mockTaskList.size());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_invalidDeleteCommand_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"delete 3\", this.mockTaskManager, this.mockFileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, deleteCommand::runCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.TASK_OUT_OF_RANGE, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"\\uD83D\\uDEAB Oops! That task number is out of range. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"                        + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see task numbers)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_wrongTaskNumber_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(\"delete asd\", mockTaskManager, mockFileManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, deleteCommand::runCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"        // Verify that the exception message matches","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.INVALID_DELETE_TASK_NUMBER, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"\\uD83D\\uDE15 Hmm, something went wrong. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"                + \"Please enter a task number after mark/unmark/delete command. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"                + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see task numbers)\", exception.getMessage());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":68}},{"path":"src/test/java/juno/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.times;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Deadline;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Todo;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"public class ListCommandTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager mockTaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    private ListCommand listCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    public void startTestEnv() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskManager \u003d Mockito.mock(TaskManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"        when(this.mockTaskManager.getTasksArray()).thenReturn(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        this.listCommand \u003d new ListCommand(this.mockTaskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_emptyList_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"            this.listCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.EMPTY_LIST, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"\\uD83C\\uDF31 No tasks added yet! Why not plant the first seed? \\uD83C\\uDF31\",","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_nonEmptyList_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        // Mock a non-empty task list","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"        Task mockTask1 \u003d Mockito.mock(Todo.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"        Task mockTask2 \u003d Mockito.mock(Deadline.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"        when(mockTask1.toString()).thenReturn(\"[todo] Mock Task 1\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"        when(mockTask2.toString()).thenReturn(\"[deadline] Mock Task 2\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"        taskList.add(mockTask1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"        taskList.add(mockTask2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"        // change the current mockTaskManager","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskManager \u003d Mockito.mock(TaskManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"        when(this.mockTaskManager.getTasksArray()).thenReturn(taskList);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"        this.listCommand \u003d new ListCommand(this.mockTaskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"        String actualOutput \u003d this.listCommand.runCommand();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"        // Expected output","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"                Here\u0027s a rundown of all your tasks! \\uD83D\\uDE0A","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"                1. [todo] Mock Task 1","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"                2. [deadline] Mock Task 2","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"                \\uD83C\\uDFAF You have 2 tasks in the list. Keep going!\"\"\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"        verify(this.mockTaskManager, times(1)).getTasksArray();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":75}},{"path":"src/test/java/juno/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.times;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"import juno.task.Todo;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager mockTaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager mockFileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"    private ArrayList\u003cTask\u003e mockTasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    public void startTestEnv() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTaskManager \u003d Mockito.mock(TaskManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockFileManager \u003d Mockito.mock(FileManager.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        when(mockTaskManager.getTasksArray()).thenReturn(mockTasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_markTask_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        Task mockTask \u003d Mockito.mock(Todo.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTasks.add(mockTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"        when(mockTask.getIsDone()).thenReturn(false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"        when(mockTask.toString()).thenReturn(\"[todo] Mock Task\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"        String userInput \u003d \"mark 1\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        MarkCommand markCommand \u003d new MarkCommand(userInput, this.mockTaskManager, this.mockFileManager,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"                true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"        markCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"        verify(mockTask).markAsDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        verify(this.mockFileManager, times(1)).writeTasksToFile(mockTasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"    // @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    // public void runCommand_markTask_fail() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"    //        ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"    //        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"    //        Task mockTask \u003d Mockito.mock(Todo.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"    //        mockTask.markAsDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"    //        this.mockTasks.add(mockTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"    //        when(mockTask.getIsDone()).thenReturn(true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"    //        when(mockTask.getDescription()).thenReturn(\"Mock Task\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"    //        when(mockTask.toString()).thenReturn(\"[todo] Mock Task\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"    //        String userInput \u003d \"mark 1\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"    //","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"    //        MarkCommand markCommand \u003d new MarkCommand(userInput, this.mockTaskManager, this.mockFileManager,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"    //                true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"    //        markCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"    //","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"    //        String expectedOutput \u003d \"You have completed the task \\\"Mock Task\\\" already!\\n\" + \"[todo] Mock Task\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"    //        assertEquals(expectedOutput, outputStreamCaptor.toString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"    //","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"    //        verify(this.mockFileManager, times(1)).writeTasksToFile(mockTasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"    //    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_unmarkTask_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"        Task mockTask \u003d Mockito.mock(Todo.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"        this.mockTasks.add(mockTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"        when(mockTask.getIsDone()).thenReturn(true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"        when(mockTask.toString()).thenReturn(\"[todo] Mock Task for unmark\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"        String userInput \u003d \"unmark 1\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"        MarkCommand unmarkCommand \u003d new MarkCommand(userInput, mockTaskManager, mockFileManager, false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"        unmarkCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"        verify(mockTask).markAsNotDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jinhanjinhan"},"content":"        verify(mockFileManager, times(1)).writeTasksToFile(mockTasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jinhanjinhan"},"content":"    //    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jinhanjinhan"},"content":"    //    public void runCommand_unmarkTask_fail() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jinhanjinhan"},"content":"    //        Task mockTask \u003d Mockito.mock(Todo.class);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jinhanjinhan"},"content":"    //        this.mockTasks.add(mockTask);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jinhanjinhan"},"content":"    //        when(mockTask.getIsDone()).thenReturn(false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jinhanjinhan"},"content":"    //        when(mockTask.toString()).thenReturn(\"[todo] Mock Task\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jinhanjinhan"},"content":"    //        String userInput \u003d \"unmark 1\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jinhanjinhan"},"content":"    //","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jinhanjinhan"},"content":"    //        MarkCommand markCommand \u003d new MarkCommand(userInput, this.mockTaskManager, this.mockFileManager,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jinhanjinhan"},"content":"    //                true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jinhanjinhan"},"content":"    //        markCommand.runCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jinhanjinhan"},"content":"    //","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jinhanjinhan"},"content":"    //        verify(mockTask).markAsNotDone();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jinhanjinhan"},"content":"    //        verify(this.mockFileManager, times(1)).writeTasksToFile(mockTasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jinhanjinhan"},"content":"    //    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_markTaskOutOfRange_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jinhanjinhan"},"content":"        String userInput \u003d \"mark 10\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jinhanjinhan"},"content":"        MarkCommand markCommand \u003d new MarkCommand(userInput, this.mockTaskManager, this.mockFileManager,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jinhanjinhan"},"content":"                true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, markCommand::runCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.TASK_OUT_OF_RANGE, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"\\uD83D\\uDEAB Oops! That task number is out of range. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jinhanjinhan"},"content":"                        + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see task numbers)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jinhanjinhan"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jinhanjinhan"},"content":"    public void runCommand_markWrongInput_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jinhanjinhan"},"content":"        String userInput \u003d \"mark a\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jinhanjinhan"},"content":"        MarkCommand markCommand \u003d new MarkCommand(userInput, this.mockTaskManager, this.mockFileManager,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jinhanjinhan"},"content":"                true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, markCommand::runCommand);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.INVALID_MARK_TASK_NUMBER, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"\\uD83D\\uDE15 Hmm, something went wrong. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jinhanjinhan"},"content":"                        + \"Please enter a task number after mark/unmark/delete command. \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jinhanjinhan"},"content":"                        + \"(\\uD83D\\uDCA1 Tip: You can type \\\"list\\\" to see task numbers)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jinhanjinhan"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":130}},{"path":"src/test/java/juno/parser/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.parser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"import org.mockito.Mockito;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.AddDeadlineCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.AddEventCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.AddTodoCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.Command;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.ExitCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.ListCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"import juno.command.MarkCommand;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.FileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.TaskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"import juno.ui.JunoUi;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"public class CommandParserTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    private CommandParser commandParser;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"    private JunoUi junoUi;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"    private FileManager fileManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"    public void startTestEnv() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"        this.commandParser \u003d new CommandParser();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"        this.junoUi \u003d new JunoUi();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"        VBox vBox \u003d Mockito.mock(VBox.class);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        Image image \u003d Mockito.mock(Image.class);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        this.fileManager \u003d new FileManager(vBox, image);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"        this.taskManager \u003d new TaskManager(null);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validExitCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"        Command command \u003d commandParser.parse(\"bye\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_invalidExitCommand_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jinhanjinhan"},"content":"            this.commandParser.parse(\"bye bye\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jinhanjinhan"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.INVALID_FUNCTION, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validListCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jinhanjinhan"},"content":"        Command command \u003d commandParser.parse(\"list\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_invalidListCommand_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jinhanjinhan"},"content":"            this.commandParser.parse(\"list a\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jinhanjinhan"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.INVALID_FUNCTION, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validMarkCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jinhanjinhan"},"content":"        Command command \u003d commandParser.parse(\"mark 1\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(MarkCommand.class, command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validUnmarkCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jinhanjinhan"},"content":"        Command command \u003d commandParser.parse(\"unmark 1\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(MarkCommand.class, command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validAddTodoCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jinhanjinhan"},"content":"        Command command \u003d commandParser.parse(\"add todo Buy milk\", this.junoUi, this.fileManager,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jinhanjinhan"},"content":"                this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(AddTodoCommand.class, command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validAddDeadlineCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jinhanjinhan"},"content":"        Command command \u003d commandParser.parse(\"add deadline Finish report / 2024 11 17 10.10AM\", this.junoUi,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jinhanjinhan"},"content":"                this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(AddDeadlineCommand.class, command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validAddEventCommand_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jinhanjinhan"},"content":"        Command command \u003d commandParser.parse(\"add event Team meeting / 2024 11 17 10.10AM / \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jinhanjinhan"},"content":"                + \"2024 11 17 18.10PM\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jinhanjinhan"},"content":"        assertInstanceOf(AddEventCommand.class, command);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validEmptyInput_success() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jinhanjinhan"},"content":"            commandParser.parse(\"\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jinhanjinhan"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.EMPTY_INPUT, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"Well, seems like you did not input anything! Please try again.\", exception.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jinhanjinhan"},"content":"    public void parse_validWrongFunctionInput_success() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException exception \u003d assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jinhanjinhan"},"content":"            commandParser.parse(\"ifsa\", this.junoUi, this.fileManager, this.taskManager);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jinhanjinhan"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.INVALID_FUNCTION, exception.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"The input you provided is invalid! (\\uD83D\\uDCA1 Tip: You can use the following commands\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jinhanjinhan"},"content":"                + \" \\\"add\\\", \\\"list\\\",\\\"mark\\\", \\\"unmark\\\".)\", exception.getMessage());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":118}},{"path":"src/test/java/juno/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"    public void deadline_validInput_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"        String description \u003d \"Finish project\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"        String endTimeString \u003d \"2024 11 17 10.00AM\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"        String taskType \u003d \"deadline\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"        Deadline deadline \u003d new Deadline(description, endTimeString, taskType);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(endTimeString, deadline.getEndTimeString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(description, deadline.getDescription());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(endTimeString, deadline.getEndTimeString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"[⏰ Deadline] [ ] Finish project - Don\u0027t miss it! ⏳ (due: 17 Nov 2024, 10:00AM)\",","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"                deadline.toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    public void deadline_invalidInput_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"        String description \u003d \"Finish project\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"        String invalidEndTimeString \u003d \"2024-11-17 10:00 AM\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"        String taskType \u003d \"deadline\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException e \u003d assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"            new Deadline(description, invalidEndTimeString, taskType);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.INVALID_DATETIME_ARGUMENT, e.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"Your format for date is wrong! Please use this format: add deadline {description}\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"                + \"/yyyy MM dd hh.mma (e.g. add deadline homework /2024 11 17 10.00AM)\", e.getMessage());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":40}},{"path":"src/test/java/juno/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"package juno.task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"import juno.manager.exception.TaskManagerException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"public class EventTest {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"    public void event_validInput_success() throws TaskManagerException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"        String description \u003d \"Finish project\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"        String startTimeString \u003d \"2024 11 17 08.00AM\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"        String endTimeString \u003d \"2024 11 17 10.00AM\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"        String taskType \u003d \"event\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"        Event event \u003d new Event(description, startTimeString, endTimeString, taskType);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(endTimeString, event.getEndTimeString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(description, event.getDescription());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(endTimeString, event.getEndTimeString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(startTimeString, event.getStartTimeString());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"[\\uD83D\\uDCC5 Event] [ ] Finish project - Mark your calendar! \\uD83D\\uDDD3\\uFE0F \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"                + \"(from: 17 Nov 2024, 08:00AM to: 17 Nov 2024, 10:00AM)\", event.toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"    @Test","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"    public void event_invalidInput_exceptionThrown() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"        String description \u003d \"Finish project\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"        String startTimeString \u003d \"2024 11 17 08.00AM\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"        String invalidEndTimeString \u003d \"2024-11-17 10:00 AM\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"        String taskType \u003d \"event\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"        TaskManagerException e \u003d assertThrows(TaskManagerException.class, () -\u003e {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"            new Event(description, startTimeString, invalidEndTimeString, taskType);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"        });","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(TaskManagerException.ErrorType.INVALID_DATETIME_ARGUMENT, e.getErrorType());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"        assertEquals(\"Your format for date is wrong! Please use this format: add event {description} \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jinhanjinhan"},"content":"                + \"/yyyy MM dd hh.mma /yyyy MM dd hh.mma .\", e.getMessage());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jinhanjinhan"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jinhanjinhan"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinhanjinhan"},"content":"# Test for empty inputs","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jinhanjinhan"},"content":"# Test for invalid inputs","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jinhanjinhan"},"content":"add1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jinhanjinhan"},"content":"marker","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jinhanjinhan"},"content":"mark 1 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jinhanjinhan"},"content":"add 1 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jinhanjinhan"},"content":"add event Attend meeting /1 4","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jinhanjinhan"},"content":"# Test for adding same tasks","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jinhanjinhan"},"content":"add todo Finish homework","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jinhanjinhan"},"content":"add todo Finish homework","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jinhanjinhan"},"content":"add deadline Submit project /2024 11 17 10.00AM","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jinhanjinhan"},"content":"add deadline Submit project /2024 11 17 10.00AM","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"add event Attend meeting /2024 11 17 10.00AM /2024 11 18 03.00AM","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"add event Attend meeting /2024 11 17 10.00AM/ 2024 11 17 03.40PM","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"# Test for current functionality","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jinhanjinhan"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jinhanjinhan"},"content":"unmark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jinhanjinhan"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jinhanjinhan"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jinhanjinhan"},"content":"# Test for multiple marks","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jinhanjinhan"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jinhanjinhan"},"content":"# Test for multiple unmarks","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jinhanjinhan"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jinhanjinhan"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jinhanjinhan"},"content":"# Test for delete","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jinhanjinhan"},"content":"delete 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jinhanjinhan"},"content":"delete 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jinhanjinhan"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jinhanjinhan"},"content":"delete 3","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jinhanjinhan"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jinhanjinhan"},"content":"# Test for bye","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jinhanjinhan"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"jinhanjinhan":41}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jinhanjinhan"},"content":"# Define the path to the Gson JAR file","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jinhanjinhan"},"content":"GSON_JAR_PATH\u003d\"../lib/gson-2.11.0.jar\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jinhanjinhan"},"content":"GSON_ERROR_HANDLING_PATH\u003d\"../lib/error_prone_annotations-2.27.0.jar\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jinhanjinhan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jinhanjinhan"},"content":"if ! javac -cp ../src/main/java:$GSON_JAR_PATH:$GSON_ERROR_HANDLING_PATH -Xlint:none -d ../bin ../src/main/java/juno/*.java","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jinhanjinhan"},"content":"java -classpath ../bin:$GSON_JAR_PATH Juno \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":36,"jinhanjinhan":6}}]
