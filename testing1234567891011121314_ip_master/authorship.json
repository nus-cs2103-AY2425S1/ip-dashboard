[{"path":"data/Reminderebot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"T| |task1","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":"D|X|task2|tmr","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":"T| |task 3","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":"T| |task 4","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":4}},{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":" * Commands that Reminderebot uses.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":"public enum Commands {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":"    BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":" * Deadline represents a Task with a datetime due.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"testing1234567891011121314"},"content":"     * Create a Deadline from the user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"testing1234567891011121314"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"testing1234567891011121314"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"testing1234567891011121314"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"testing1234567891011121314"},"content":"    };","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"     * Creates an entry to a file from a Deadline","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return string representing the Deadline","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"testing1234567891011121314"},"content":"    public String toFile() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"testing1234567891011121314"},"content":"        return \"D|\" + getStatusIcon() + \"|\" + description + \"|\" + by;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"testing1234567891011121314"},"content":"     * Create a Deadline from the text in text file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return Deadline","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"testing1234567891011121314"},"content":"    public Deadline createFromFile(String file) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"testing1234567891011121314"},"content":"        throw new UnsupportedOperationException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"testing1234567891011121314"},"content":"     * Returns the String representing the Deadline to be displayed in tasklist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return string representing Deadline","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"testing1234567891011121314"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"testing1234567891011121314"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":43}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":" * Event represents a Task with a duration from a datetime to a datetime.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"testing1234567891011121314"},"content":"     * Create an Event from the user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"testing1234567891011121314"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"testing1234567891011121314"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"testing1234567891011121314"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"testing1234567891011121314"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"testing1234567891011121314"},"content":"    };","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"testing1234567891011121314"},"content":"     * Creates an entry to a file from an Event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return string representing the Event","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"testing1234567891011121314"},"content":"    public String toFile() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"testing1234567891011121314"},"content":"        return \"E|\" + getStatusIcon() + \"|\" + description + \"|\" +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"testing1234567891011121314"},"content":"                from + \"|\" + to;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"testing1234567891011121314"},"content":"     * Create an Event from the text in text file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"testing1234567891011121314"},"content":"    public Event createFromFile(String file) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"testing1234567891011121314"},"content":"        throw new UnsupportedOperationException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"testing1234567891011121314"},"content":"     * Returns the String representing the Event to be displayed in tasklist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return string representing Event","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"testing1234567891011121314"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"testing1234567891011121314"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) +","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"testing1234567891011121314"},"content":"                \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":47}},{"path":"src/main/java/Reminderebot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"public class Reminderebot {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"testing1234567891011121314"},"content":"    // note: needs support for handling multi-line inputs","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"testing1234567891011121314"},"content":"    private static final String name \u003d \"Reminderebot\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"testing1234567891011121314"},"content":"    private static final String topBuffer \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"testing1234567891011121314"},"content":"    private static final String bottomBuffer \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"testing1234567891011121314"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"testing1234567891011121314"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"testing1234567891011121314"},"content":"    private static final String greetingText \u003d topBuffer +","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"            \" Hello! I\u0027m [\" + name + \"]\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"testing1234567891011121314"},"content":"            \" What can I do for you?\\n\" +","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"testing1234567891011121314"},"content":"            topBuffer;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"testing1234567891011121314"},"content":"    private static final String goodbyeText \u003d","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"testing1234567891011121314"},"content":"            \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"testing1234567891011121314"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"testing1234567891011121314"},"content":"        String filePath \u003d \"./data/Reminderebot.txt\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"testing1234567891011121314"},"content":"        Reminderebot reminderebot \u003d new Reminderebot(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"testing1234567891011121314"},"content":"        reminderebot.greeting();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"testing1234567891011121314"},"content":"        reminderebot.chat();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"testing1234567891011121314"},"content":"    public Reminderebot(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"testing1234567891011121314"},"content":"        this.storage \u003d  new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"testing1234567891011121314"},"content":"        this.tasklist \u003d new TaskList(new ArrayList\u003cTask\u003e());    // in case file not found","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"testing1234567891011121314"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"testing1234567891011121314"},"content":"            this.tasklist \u003d new TaskList(storage.readFileContents());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"testing1234567891011121314"},"content":"        } catch (ReminderebotException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"testing1234567891011121314"},"content":"            System.out.println(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"testing1234567891011121314"},"content":"     * Prints greeting message.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"testing1234567891011121314"},"content":"    private void greeting() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"testing1234567891011121314"},"content":"        System.out.println(greetingText);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"testing1234567891011121314"},"content":"     * Prints goodbye message.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"testing1234567891011121314"},"content":"    private void goodbye() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"testing1234567891011121314"},"content":"        this.storage.saveData(this.tasklist);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"testing1234567891011121314"},"content":"        System.out.println(goodbyeText);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"testing1234567891011121314"},"content":"     * Helper function to get all enum values as a HashSet of Strings","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return a hashset of enum values","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"testing1234567891011121314"},"content":"    public static HashSet\u003cString\u003e getEnums() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"testing1234567891011121314"},"content":"        HashSet\u003cString\u003e values \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"testing1234567891011121314"},"content":"        for (Commands c : Commands.values()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"testing1234567891011121314"},"content":"            values.add(c.name());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"testing1234567891011121314"},"content":"        return values;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"testing1234567891011121314"},"content":"     * Checks if the input is valid.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param input","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"testing1234567891011121314"},"content":"     * @throws ReminderebotException","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"testing1234567891011121314"},"content":"    private void checkInput(String input) throws ReminderebotException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"testing1234567891011121314"},"content":"        Scanner scan2 \u003d new Scanner(input.trim());","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"testing1234567891011121314"},"content":"        String command \u003d scan2.next().toUpperCase();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"testing1234567891011121314"},"content":"        if (getEnums().contains(command)) { // if the input contains a command","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"testing1234567891011121314"},"content":"            switch (Commands.valueOf(command)) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"testing1234567891011121314"},"content":"            case MARK: // if the mark command lacks required arguments","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] markInfo \u003d input.split(\" \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"testing1234567891011121314"},"content":"                if (scan2.hasNextInt() \u0026\u0026 markInfo.length\u003d\u003d2) { // mark has necessary requirements","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"testing1234567891011121314"},"content":"                    int i \u003d scan2.nextInt();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"testing1234567891011121314"},"content":"                    if (i \u003e tasklist.index || i \u003c 1) { // however index is out of bounds","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"testing1234567891011121314"},"content":"                        throw new ReminderebotException(\"Item selected to be marked is not in list.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"testing1234567891011121314"},"content":"                                \"Syntax: mark \u003cint\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"testing1234567891011121314"},"content":"                    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"testing1234567891011121314"},"content":"                    // else input is valid","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"testing1234567891011121314"},"content":"                } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"testing1234567891011121314"},"content":"                    throw new ReminderebotException(\"Mark items by selecting their position.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"testing1234567891011121314"},"content":"                            \"Syntax: mark \u003cint\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"testing1234567891011121314"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"testing1234567891011121314"},"content":"                break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"testing1234567891011121314"},"content":"            case UNMARK: // if the unmark command lacks required arguments","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] unmarkInfo \u003d input.split(\" \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"testing1234567891011121314"},"content":"                if (scan2.hasNextInt() \u0026\u0026 unmarkInfo.length\u003d\u003d2) { // mark has necessary requirements","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"testing1234567891011121314"},"content":"                    int i \u003d scan2.nextInt();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"testing1234567891011121314"},"content":"                    if (i \u003e tasklist.index || i \u003c 1) { // however index is out of bounds","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"testing1234567891011121314"},"content":"                        throw new ReminderebotException(\"Item selected to be marked is not in list.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"testing1234567891011121314"},"content":"                                \"Syntax: unmark \u003cint\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"testing1234567891011121314"},"content":"                    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"testing1234567891011121314"},"content":"                    // else input is valid","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"testing1234567891011121314"},"content":"                } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"testing1234567891011121314"},"content":"                    throw new ReminderebotException(\"Unmark items by selecting their position.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"testing1234567891011121314"},"content":"                            \"Syntax: unmark \u003cint\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"testing1234567891011121314"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"testing1234567891011121314"},"content":"                break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"testing1234567891011121314"},"content":"            case DELETE: // if the delete command lacks required arguments","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] deleteInfo \u003d input.split(\" \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"testing1234567891011121314"},"content":"                if (scan2.hasNextInt() \u0026\u0026 deleteInfo.length\u003d\u003d2) { // mark has necessary requirements","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"testing1234567891011121314"},"content":"                    int i \u003d scan2.nextInt();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"testing1234567891011121314"},"content":"                    if (i \u003e tasklist.index || i \u003c 1) { // however index is out of bounds","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"testing1234567891011121314"},"content":"                        throw new ReminderebotException(\"Item selected to be deleted is not in list.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"testing1234567891011121314"},"content":"                                \"Syntax: delete \u003cint\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"testing1234567891011121314"},"content":"                    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"testing1234567891011121314"},"content":"                    // else input is valid","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"testing1234567891011121314"},"content":"                } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"testing1234567891011121314"},"content":"                    throw new ReminderebotException(\"Delete items by selecting their position.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"testing1234567891011121314"},"content":"                            \"Syntax: delete \u003cint\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"testing1234567891011121314"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"testing1234567891011121314"},"content":"                break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"testing1234567891011121314"},"content":"            case TODO: // if the to-do command lacks required arguments","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] todoInfo \u003d input.split(\" \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"testing1234567891011121314"},"content":"                if (todoInfo.length \u003c 2) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"testing1234567891011121314"},"content":"                    throw new ReminderebotException(\"The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"testing1234567891011121314"},"content":"                            \"Syntax: todo \u003ctaskname\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"testing1234567891011121314"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"testing1234567891011121314"},"content":"                break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"testing1234567891011121314"},"content":"            case DEADLINE: // if the deadline command lacks required arguments","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] dlInfo \u003d input.split(\" \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] dlBy \u003d input.split(\"/by \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"testing1234567891011121314"},"content":"                if (dlInfo.length \u003c 2 || dlBy.length \u003c 2) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"testing1234567891011121314"},"content":"                    throw new ReminderebotException(\"The description of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"testing1234567891011121314"},"content":"                            \"Syntax: deadline \u003ctaskname\u003e /by \u003cduedate\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"testing1234567891011121314"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"testing1234567891011121314"},"content":"                break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"testing1234567891011121314"},"content":"            case EVENT: // if the event command lacks required arguments","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] eventInfo \u003d input.split(\" \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] eventFrom \u003d input.split(\"/from \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"testing1234567891011121314"},"content":"                String[] eventTo \u003d input.split(\"/to \");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"testing1234567891011121314"},"content":"                if (eventInfo.length \u003c 2 || eventFrom.length \u003c 2 || eventTo.length \u003c 2) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"testing1234567891011121314"},"content":"                    throw new ReminderebotException(\"The description of a event cannot be empty.\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"testing1234567891011121314"},"content":"                            \"Syntax: event \u003cname\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"testing1234567891011121314"},"content":"                }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"testing1234567891011121314"},"content":"                break;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"testing1234567891011121314"},"content":"            }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"testing1234567891011121314"},"content":"        } else { // exception: command not found","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"testing1234567891011121314"},"content":"            throw new ReminderebotException(\"I\u0027m sorry, but I don\u0027t know what that means. :(\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"testing1234567891011121314"},"content":"                    \"Please enter a command below:\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"testing1234567891011121314"},"content":"                    \" bye\\n list\\n mark \u003cint\u003e\\n unmark \u003cint\u003e\\n todo \u003ctaskname\u003e\\n\" +","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"testing1234567891011121314"},"content":"                    \" deadline \u003ctaskname\u003e /by \u003cduedate\u003e\\n event \u003cname\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"testing1234567891011121314"},"content":"            );","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"testing1234567891011121314"},"content":"        // if there are no exceptions, don\u0027t do anything","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"testing1234567891011121314"},"content":"    public void chat() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"testing1234567891011121314"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"testing1234567891011121314"},"content":"        Scanner scan2;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"testing1234567891011121314"},"content":"        while (true) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"testing1234567891011121314"},"content":"            // Seperate the commands from the arguments","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"testing1234567891011121314"},"content":"            String input \u003d scan.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"testing1234567891011121314"},"content":"            scan2 \u003d new Scanner(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"testing1234567891011121314"},"content":"            String command \u003d scan2.next().toUpperCase();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"testing1234567891011121314"},"content":"            String str;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"testing1234567891011121314"},"content":"            System.out.println(\"\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"testing1234567891011121314"},"content":"            // Check if the command is mark or unmark","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"testing1234567891011121314"},"content":"            int idx; // used to mark task as done or undone","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"testing1234567891011121314"},"content":"            // handle invalid input by getting user-input and validate against enum","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"testing1234567891011121314"},"content":"            try{","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"testing1234567891011121314"},"content":"                // executes command","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"testing1234567891011121314"},"content":"                checkInput(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"testing1234567891011121314"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"testing1234567891011121314"},"content":"                System.out.println(topBuffer);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"testing1234567891011121314"},"content":"                switch (Commands.valueOf(command)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"testing1234567891011121314"},"content":"                    case BYE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"testing1234567891011121314"},"content":"                        goodbye();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"testing1234567891011121314"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"testing1234567891011121314"},"content":"                    case LIST:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"testing1234567891011121314"},"content":"                        tasklist.printTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"testing1234567891011121314"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"testing1234567891011121314"},"content":"                    case MARK:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"testing1234567891011121314"},"content":"                        idx \u003d scan2.nextInt();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"testing1234567891011121314"},"content":"                        tasklist.markTask(idx);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"testing1234567891011121314"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"testing1234567891011121314"},"content":"                                tasklist.tasks.get(idx - 1));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"testing1234567891011121314"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"testing1234567891011121314"},"content":"                    case UNMARK:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"testing1234567891011121314"},"content":"                        idx \u003d scan2.nextInt();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"testing1234567891011121314"},"content":"                        tasklist.unmarkTask(idx);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"testing1234567891011121314"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"testing1234567891011121314"},"content":"                                tasklist.tasks.get(idx - 1));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"testing1234567891011121314"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"testing1234567891011121314"},"content":"                    case DELETE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"testing1234567891011121314"},"content":"                        idx \u003d scan2.nextInt();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"testing1234567891011121314"},"content":"                        Task task \u003d tasklist.deleteTask(idx);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"testing1234567891011121314"},"content":"                        System.out.println(\"OK, I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"testing1234567891011121314"},"content":"                                task.toString() +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"testing1234567891011121314"},"content":"                                \"\\nNow you have \" + tasklist.index + \" tasks in the list.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"testing1234567891011121314"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"testing1234567891011121314"},"content":"                    case TODO:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"testing1234567891011121314"},"content":"                        str \u003d scan2.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"testing1234567891011121314"},"content":"                        ToDo todo \u003d new ToDo(str);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"testing1234567891011121314"},"content":"                        tasklist.addTask(todo);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"testing1234567891011121314"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"testing1234567891011121314"},"content":"                                todo.toString() +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"testing1234567891011121314"},"content":"                                \"\\nNow you have \" + tasklist.index + \" tasks in the list.\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"testing1234567891011121314"},"content":"                        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"testing1234567891011121314"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"testing1234567891011121314"},"content":"                    case DEADLINE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"testing1234567891011121314"},"content":"                        str \u003d scan2.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"testing1234567891011121314"},"content":"                        String[] dlInfo \u003d str.split(\"/by \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"testing1234567891011121314"},"content":"                        LocalDateTime byTime \u003d LocalDateTime.parse(dlInfo[1].trim(), formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"testing1234567891011121314"},"content":"                        Deadline deadline \u003d new Deadline(dlInfo[0], byTime);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"testing1234567891011121314"},"content":"                        tasklist.addTask(deadline);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"testing1234567891011121314"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"testing1234567891011121314"},"content":"                                deadline.toString() +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"testing1234567891011121314"},"content":"                                \"\\nNow you have \" + tasklist.index + \" tasks in the list.\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"testing1234567891011121314"},"content":"                        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"testing1234567891011121314"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"testing1234567891011121314"},"content":"                    case EVENT:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"testing1234567891011121314"},"content":"                        str \u003d scan2.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"testing1234567891011121314"},"content":"                        String[] eventInfo \u003d str.split(\"/from \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"testing1234567891011121314"},"content":"                        String[] eventTiming \u003d eventInfo[1].split(\"/to \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"testing1234567891011121314"},"content":"                        LocalDateTime fromTime \u003d LocalDateTime.parse(eventTiming[0].trim(), formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"testing1234567891011121314"},"content":"                        LocalDateTime toTime \u003d LocalDateTime.parse(eventTiming[1].trim(), formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"testing1234567891011121314"},"content":"                        Event event \u003d new Event(eventInfo[0], fromTime, toTime);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"testing1234567891011121314"},"content":"                        tasklist.addTask(event);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"testing1234567891011121314"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"testing1234567891011121314"},"content":"                                event.toString() +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"testing1234567891011121314"},"content":"                                \"\\nNow you have \" + tasklist.index + \" tasks in the list.\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"testing1234567891011121314"},"content":"                        );","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"testing1234567891011121314"},"content":"                        break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"testing1234567891011121314"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"testing1234567891011121314"},"content":"                if (Commands.valueOf(command).equals(Commands.BYE)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"testing1234567891011121314"},"content":"                    System.out.println(bottomBuffer);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"testing1234567891011121314"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"testing1234567891011121314"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"testing1234567891011121314"},"content":"                System.out.println(topBuffer);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"testing1234567891011121314"},"content":"            } catch (ReminderebotException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"testing1234567891011121314"},"content":"                System.out.println(topBuffer);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"testing1234567891011121314"},"content":"                System.out.println(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"testing1234567891011121314"},"content":"                System.out.println(topBuffer);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"testing1234567891011121314"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":246}},{"path":"src/main/java/ReminderebotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":" * Custom Exception for Reminderebot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":"public class ReminderebotException extends Exception{","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":"    ReminderebotException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"        super(\"Oops! \" + message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":8}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"import java.io.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"testing1234567891011121314"},"content":" * Storage represents the storage manager for Reminderebot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"testing1234567891011121314"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"testing1234567891011121314"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"testing1234567891011121314"},"content":"    static String filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"testing1234567891011121314"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"testing1234567891011121314"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"testing1234567891011121314"},"content":"     * Reads File and returns contents as an arraylist of Strings.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return an arraylist of Tasks","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"testing1234567891011121314"},"content":"     * @throws ReminderebotException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"testing1234567891011121314"},"content":"    public ArrayList\u003cTask\u003e readFileContents() throws ReminderebotException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"testing1234567891011121314"},"content":"        ArrayList\u003cTask\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"testing1234567891011121314"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"testing1234567891011121314"},"content":"            File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"testing1234567891011121314"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"testing1234567891011121314"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"testing1234567891011121314"},"content":"                contents.add(readEntry(s.nextLine()));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"testing1234567891011121314"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"testing1234567891011121314"},"content":"            s.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"testing1234567891011121314"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"testing1234567891011121314"},"content":"            throw new ReminderebotException(\"File not found!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"testing1234567891011121314"},"content":"        return contents;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"testing1234567891011121314"},"content":"     * Read the string entry and return a task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param entry","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return Task corresponding to string","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"testing1234567891011121314"},"content":"    private Task readEntry(String entry) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"testing1234567891011121314"},"content":"        String[] fields \u003d entry.split(\"\\\\|\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"testing1234567891011121314"},"content":"        //  System.out.println(Arrays.toString(fields));  // debug","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"testing1234567891011121314"},"content":"        Task taskToAdd;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"testing1234567891011121314"},"content":"        switch (fields[0]) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"testing1234567891011121314"},"content":"        case \"E\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"testing1234567891011121314"},"content":"            taskToAdd \u003d new Event(fields[2], LocalDateTime.parse(fields[3]), LocalDateTime.parse(fields[4]));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"testing1234567891011121314"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"testing1234567891011121314"},"content":"        case \"D\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"testing1234567891011121314"},"content":"            taskToAdd \u003d new Deadline(fields[2], LocalDateTime.parse(fields[3]));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"testing1234567891011121314"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"testing1234567891011121314"},"content":"        default: // case \"T\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"testing1234567891011121314"},"content":"            taskToAdd \u003d new ToDo(fields[2]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"testing1234567891011121314"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"testing1234567891011121314"},"content":"        if ((fields[1]).equals(\"X\")) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"testing1234567891011121314"},"content":"            taskToAdd.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"testing1234567891011121314"},"content":"        return taskToAdd;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"testing1234567891011121314"},"content":"     * Save data from TaskList to Storage","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param tasklist","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"testing1234567891011121314"},"content":"    public void saveData(TaskList tasklist) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"testing1234567891011121314"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"testing1234567891011121314"},"content":"//            System.out.println(\"Added tasklist to\" + filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"testing1234567891011121314"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"testing1234567891011121314"},"content":"//","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"testing1234567891011121314"},"content":"//            // This storage location is relative: If run from .bat script,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"testing1234567891011121314"},"content":"//            // the txt file will be stored at ip/text-ui-test/data/","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"testing1234567891011121314"},"content":"//            // On the other hand, if Reminderebot.java is run directly,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"testing1234567891011121314"},"content":"//            // the txt file will be stored at ip/data","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"testing1234567891011121314"},"content":"            File dir \u003d new File(file.getParent());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"testing1234567891011121314"},"content":"            boolean dirCreated \u003d dir.mkdirs();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"testing1234567891011121314"},"content":"//            System.out.println(dirCreated);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"testing1234567891011121314"},"content":"            FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"testing1234567891011121314"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"testing1234567891011121314"},"content":"            for (int i \u003d 0; i \u003c tasklist.length(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"testing1234567891011121314"},"content":"                bw.write(tasklist.getTask(i).toFile());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"testing1234567891011121314"},"content":"                bw.newLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"testing1234567891011121314"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"testing1234567891011121314"},"content":"            bw.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"testing1234567891011121314"},"content":"            fw.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"testing1234567891011121314"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"testing1234567891011121314"},"content":"            throw new RuntimeException(\"This should never happen\", e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"testing1234567891011121314"},"content":"//        /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"testing1234567891011121314"},"content":"//          * Write to File, also Handles I/O exception","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"testing1234567891011121314"},"content":"//          * @param textToAdd","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"testing1234567891011121314"},"content":"//          */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"testing1234567891011121314"},"content":"//    public void writeToFile(String textToAdd) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"testing1234567891011121314"},"content":"//        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"testing1234567891011121314"},"content":"//            System.out.println(\"Added\"+ textToAdd + \"to\" + filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"testing1234567891011121314"},"content":"//            File file \u003d new File(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"testing1234567891011121314"},"content":"//","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"testing1234567891011121314"},"content":"//            // This storage location is relative: If run from .bat script,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"testing1234567891011121314"},"content":"//            // the txt file will be stored at ip/text-ui-test/data/","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"testing1234567891011121314"},"content":"//            // On the other hand, if Reminderebot.java is run directly,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"testing1234567891011121314"},"content":"//            // the txt file will be stored at ip/data","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"testing1234567891011121314"},"content":"//            File dir \u003d new File(file.getParent());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"testing1234567891011121314"},"content":"//","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"testing1234567891011121314"},"content":"//            boolean dirCreated \u003d dir.mkdirs();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"testing1234567891011121314"},"content":"//            System.out.println(dirCreated);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"testing1234567891011121314"},"content":"//            if (file.createNewFile()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"testing1234567891011121314"},"content":"//                FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"testing1234567891011121314"},"content":"//                fw.write(textToAdd);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"testing1234567891011121314"},"content":"//                fw.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"testing1234567891011121314"},"content":"//            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"testing1234567891011121314"},"content":"//                FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"testing1234567891011121314"},"content":"//                fw.write(\"\\n\" + textToAdd);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"testing1234567891011121314"},"content":"//                fw.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"testing1234567891011121314"},"content":"//            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"testing1234567891011121314"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"testing1234567891011121314"},"content":"//            throw new RuntimeException(\"This should never happen\", e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"testing1234567891011121314"},"content":"//        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"testing1234567891011121314"},"content":"//    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"testing1234567891011121314"},"content":"//    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"testing1234567891011121314"},"content":"//     * Prints file contents.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"testing1234567891011121314"},"content":"//     * @param filePath","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"testing1234567891011121314"},"content":"//     * @throws FileNotFoundException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"testing1234567891011121314"},"content":"//     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"testing1234567891011121314"},"content":"//    public void printFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"testing1234567891011121314"},"content":"//        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"testing1234567891011121314"},"content":"//        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"testing1234567891011121314"},"content":"//        while (s.hasNext()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"testing1234567891011121314"},"content":"//            System.out.println(s.nextLine());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"testing1234567891011121314"},"content":"//        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"testing1234567891011121314"},"content":"//    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":140}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":" * Task is an abstract class that contains a description","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":" * and stores whether it is done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"    protected String description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"testing1234567891011121314"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"testing1234567891011121314"},"content":"    protected DateTimeFormatter formatter \u003d java.time.format.DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm a\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"testing1234567891011121314"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"testing1234567891011121314"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"testing1234567891011121314"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"     * Creates an entry to a file from a Task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return string representing the task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"testing1234567891011121314"},"content":"    public abstract String toFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"testing1234567891011121314"},"content":"     * Creates a Task from a given entry in a file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param file","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return Task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"testing1234567891011121314"},"content":"    public abstract Task createFromFile(String file);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"testing1234567891011121314"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"testing1234567891011121314"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"testing1234567891011121314"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"testing1234567891011121314"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"testing1234567891011121314"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"testing1234567891011121314"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"testing1234567891011121314"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"testing1234567891011121314"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":46}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":" * TaskList represents the task manager for Reminderebot.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"    static int index \u003d 0;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"testing1234567891011121314"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"testing1234567891011121314"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"testing1234567891011121314"},"content":"        index \u003d tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"testing1234567891011121314"},"content":"     * Prints all tasks as a tasklist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"    public void printTasks() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"testing1234567891011121314"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"testing1234567891011121314"},"content":"        output.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"testing1234567891011121314"},"content":"        for (int i\u003d0; i\u003cindex; i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"testing1234567891011121314"},"content":"            output.append(i+1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"testing1234567891011121314"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"testing1234567891011121314"},"content":"        String taskList \u003d output.toString();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"testing1234567891011121314"},"content":"        System.out.println(taskList);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"testing1234567891011121314"},"content":"     * Get Task at index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param idx","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"testing1234567891011121314"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"testing1234567891011121314"},"content":"        return tasks.get(idx);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"testing1234567891011121314"},"content":"     * Get number of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return length","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"testing1234567891011121314"},"content":"    public int length() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"testing1234567891011121314"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"testing1234567891011121314"},"content":"     * Add a to-do, deadline or event to the tasklist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"testing1234567891011121314"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"testing1234567891011121314"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"testing1234567891011121314"},"content":"        index++;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"testing1234567891011121314"},"content":"     * Remove a to-do, deadline or event from the tasklist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param idx","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return removed Task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"testing1234567891011121314"},"content":"    public Task deleteTask(int idx) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"testing1234567891011121314"},"content":"        index--;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"testing1234567891011121314"},"content":"        return tasks.remove(idx - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"testing1234567891011121314"},"content":"     * Marks task as done.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param idx","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"testing1234567891011121314"},"content":"    public void markTask(int idx) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"testing1234567891011121314"},"content":"        Task task \u003d tasks.get(idx-1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"testing1234567891011121314"},"content":"        task.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"testing1234567891011121314"},"content":"     * Marks task as undone.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"testing1234567891011121314"},"content":"     * @param idx","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"testing1234567891011121314"},"content":"    public void unmarkTask(int idx) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"testing1234567891011121314"},"content":"        Task task \u003d tasks.get(idx-1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"testing1234567891011121314"},"content":"        task.markAsUndone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":81}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":" * ToDo represents a concrete Task with a description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"     * Create a ToDo from the user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"testing1234567891011121314"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"testing1234567891011121314"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"testing1234567891011121314"},"content":"    };","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"testing1234567891011121314"},"content":"     * Creates an entry to a file from a ToDo","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return string representing the ToDo","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"    public String toFile() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"testing1234567891011121314"},"content":"        return \"T|\" + getStatusIcon() + \"|\" + description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"testing1234567891011121314"},"content":"     * Create a ToDo from the text in text file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return ToDo","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"testing1234567891011121314"},"content":"    public ToDo createFromFile(String file) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"testing1234567891011121314"},"content":"        throw new UnsupportedOperationException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"testing1234567891011121314"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"testing1234567891011121314"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"testing1234567891011121314"},"content":"     * Returns the String representing the ToDo to be displayed in tasklist.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"testing1234567891011121314"},"content":"     * @return string representing ToDo","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"testing1234567891011121314"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"testing1234567891011121314"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"testing1234567891011121314"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"testing1234567891011121314"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"testing1234567891011121314"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"testing1234567891011121314"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":39}},{"path":"text-ui-test/data/Reminderebot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"E| |project meeting|2024-08-29T14:00|2024-08-29T16:00","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"testing1234567891011121314"},"content":"blah","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"testing1234567891011121314"},"content":"todo","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"testing1234567891011121314"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"testing1234567891011121314"},"content":"mark","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"testing1234567891011121314"},"content":"mark -1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"testing1234567891011121314"},"content":"mark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"testing1234567891011121314"},"content":"mark 1 2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"testing1234567891011121314"},"content":"mark 1a","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"testing1234567891011121314"},"content":"unmark","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"testing1234567891011121314"},"content":"unmark -1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"testing1234567891011121314"},"content":"unmark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"testing1234567891011121314"},"content":"unmark 1 2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"testing1234567891011121314"},"content":"unmark 1a","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"testing1234567891011121314"},"content":"delete","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"testing1234567891011121314"},"content":"delete -1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1 2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1a","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"testing1234567891011121314"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"testing1234567891011121314"},"content":"deadline return book/by 29/08/24 1800","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"testing1234567891011121314"},"content":"deadline return book /by 29/08/24 0800","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"testing1234567891011121314"},"content":"event project meeting/from 29/08/24 1400/to 29/08/24 1600","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"testing1234567891011121314"},"content":"event project meeting /from 29/08/24 1400 /to 29/08/24 1600","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"testing1234567891011121314"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"testing1234567891011121314"},"content":"mark","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"testing1234567891011121314"},"content":"mark -1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"testing1234567891011121314"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"testing1234567891011121314"},"content":"mark 1 2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"testing1234567891011121314"},"content":"mark 1a","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"testing1234567891011121314"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"testing1234567891011121314"},"content":"unmark","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"testing1234567891011121314"},"content":"unmark -1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"testing1234567891011121314"},"content":"unmark 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"testing1234567891011121314"},"content":"unmark 1 2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"testing1234567891011121314"},"content":"unmark 1a","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"testing1234567891011121314"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"testing1234567891011121314"},"content":"delete","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"testing1234567891011121314"},"content":"delete -1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1 2","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1a","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"testing1234567891011121314"},"content":"list","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"testing1234567891011121314"},"content":"delete 1","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"testing1234567891011121314"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":46}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"    @ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"testing1234567891011121314"},"content":"java -classpath ..\\bin Reminderebot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"testing1234567891011121314":1,"-":20}}]
