[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wnayar"},"content":"    //mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wnayar"},"content":"    //package.Classname","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wnayar"},"content":"    mainClass.set(\"bill.Bill\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wnayar"},"content":"    archiveBaseName \u003d \"bill\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Wnayar":4,"-":39}},{"path":"data/bill.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"1.[T][ ] crying","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"2.[D][ ] cryhard (by: Oct 08 2024)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"3.[D][X] jump (by: Dec 10 2024)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"4.[T][X] fly","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":"5.[T][X] sad","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"6.[T][X] cryhard","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"7.[T][X] juggle","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"8.[T][X] soon","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wnayar":8}},{"path":"src/main/java/bill/Bill.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":" * The Bill class provides a command line interface chatbot for users to interact with.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"public class Bill {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"     * Initializes Bill chatbot.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"    public Bill() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"     * Starts Bill chatbot when called.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"    public void start() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wnayar"},"content":"        ui.silentLoadingData(storage, tasks.getUserList(), tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wnayar"},"content":"        ui.introduce();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wnayar"},"content":"        ui.handleUserCommands(storage, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wnayar"},"content":"        ui.conclude();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wnayar"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wnayar"},"content":"        new Bill().start();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Wnayar":33}},{"path":"src/main/java/bill/BillException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":" * The BillException class extends the Exception class and  allows for custom exceptions specific to the Bill class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"public class BillException extends Exception{","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"    public BillException(String str) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"        super(str);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Wnayar":10}},{"path":"src/main/java/bill/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":" * The Deadline class extends the Task class, and allows creating tasks with date deadlines.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"    private LocalDate by;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"     * Initializes Deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"     * @param description Description of deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"     * @param by Deadline of task in date format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"        this.by \u003d parseUserDateHelper(by);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wnayar"},"content":"    private LocalDate parseUserDateHelper(String dateStr) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wnayar"},"content":"        // Allow two types of inputs, second format is what is from Bill.txt, user can use that format too for cml","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wnayar"},"content":"        // Can improve this, ideally don\u0027t use try catch as control flow, could also try just allowing one input","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wnayar"},"content":"        DateTimeFormatter formatterUserInput \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wnayar"},"content":"        DateTimeFormatter formatterFileInput \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wnayar"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wnayar"},"content":"            return LocalDate.parse(dateStr, formatterUserInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wnayar"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wnayar"},"content":"            return LocalDate.parse(dateStr, formatterFileInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wnayar"},"content":"    private String dateStringRepresentation() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wnayar"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM dd yyy\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wnayar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wnayar"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wnayar"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateStringRepresentation() + \")\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Wnayar":44}},{"path":"src/main/java/bill/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":" * The Event class extends the Task class, and allows creating tasks with a range of time,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":" * from a certain start period to a certain end period.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"    private String from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"    private String to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"     * Initializes Event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"     * There is currently no restriction on the range period, all string values are accepted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"     * @param description Description of event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"     * @param from Start time period of task in any format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"     * @param to End time period of task in any format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wnayar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wnayar"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wnayar"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to +  \")\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Wnayar":29}},{"path":"src/main/java/bill/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":" * The Parser class offers helper functions to help parse user input based on the commands of the user and when reading from bill.txt.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"public class Parser {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"     * Initializes Ui.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"    public Parser() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"    public int handleMarkOfTaskParser(String[] parsedInput, ArrayList\u003cTask\u003e userList) throws BillException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"        // data validation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"        if (parsedInput.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Please provide a second argument when marking or unmarking a task\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wnayar"},"content":"        // ensure task number is within the range of the task list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wnayar"},"content":"        if (Integer.parseInt(parsedInput[1]) \u003e userList.size() || Integer.parseInt(parsedInput[1]) \u003c 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"There is no task of that number in the current list\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wnayar"},"content":"        return Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wnayar"},"content":"    public String handleToDoParser(String userCommand, ArrayList\u003cTask\u003e userList, Storage storage, TaskList tasks)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wnayar"},"content":"                throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wnayar"},"content":"        // data validation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wnayar"},"content":"        String[] parsedInput \u003d userCommand.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wnayar"},"content":"        if (parsedInput.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Please provide a second argument for the todo, such as a description\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wnayar"},"content":"        return userCommand.replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wnayar"},"content":"    public String[] handleDeadlineParser(String userCommand) throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wnayar"},"content":"        // data validation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wnayar"},"content":"        String[] parsedInput \u003d userCommand.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wnayar"},"content":"        if (parsedInput.length \u003c 4) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"4 Arguments needed minimum for deadline command, following the format:\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wnayar"},"content":"                        + \" deadline \u003ctask\u003e /by \u003cdate\u003e, where \u003c\u003e suggest user input\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wnayar"},"content":"        if (!userCommand.contains(\" /by \")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Missing /by with spaces around it, ensure to follow the format:\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wnayar"},"content":"                        + \" deadline \u003ctask\u003e /by \u003cdate\u003e where \u003c\u003e suggest user input\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wnayar"},"content":"        // data parsing","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wnayar"},"content":"        // remove deadline, trim white spaces and delimit by /by","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wnayar"},"content":"            String[] trimmedUserCommand \u003d userCommand.replaceFirst(\"deadline\", \"\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wnayar"},"content":"                        .trim().split(\" /by \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wnayar"},"content":"            String deadlineDescription \u003d trimmedUserCommand[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wnayar"},"content":"            String deadlineBy \u003d trimmedUserCommand[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wnayar"},"content":"            return new String[]{deadlineDescription, deadlineBy};","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wnayar"},"content":"    public String[] handleEventParser(String userCommand) throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wnayar"},"content":"        // data validation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wnayar"},"content":"        String[] parsedInput \u003d userCommand.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wnayar"},"content":"        if (parsedInput.length \u003c 6) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"6 Arguments needed minimum for deadline command, following the format:\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wnayar"},"content":"                        + \" event \u003ctask\u003e /from \u003cdate1\u003e /to \u003cdate2\u003e, where \u003c\u003e suggest user input\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wnayar"},"content":"        if (!userCommand.contains(\" /from \")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Missing /from with spaces around it, ensure to follow the format:\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wnayar"},"content":"                        + \" event \u003ctask\u003e /from \u003cdate1\u003e /to \u003cdate2\u003e, where \u003c\u003e suggest user input\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wnayar"},"content":"        if (!userCommand.contains(\" /to \")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Missing /to with spaces around it, ensure to follow the format:\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wnayar"},"content":"                        + \" event \u003ctask\u003e /from \u003cdate1\u003e /to \u003cdate2\u003e, where \u003c\u003e suggest user input\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wnayar"},"content":"        // data parsing","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wnayar"},"content":"        // remove event, trim white spaces and delimit by /from and /to","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wnayar"},"content":"        String[] trimmedUserCommand \u003d userCommand.replaceFirst(\"event\", \"\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wnayar"},"content":"                    .trim().split(\" /from \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wnayar"},"content":"        String eventDescription \u003d trimmedUserCommand[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wnayar"},"content":"        String[] furtherTrimmedUserCommand \u003d trimmedUserCommand[1].trim().split(\" /to \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wnayar"},"content":"        String eventFrom \u003d furtherTrimmedUserCommand[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wnayar"},"content":"        String eventTo \u003d furtherTrimmedUserCommand[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wnayar"},"content":"       return new String[]{eventDescription, eventFrom, eventTo};","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wnayar"},"content":"    public int handleDeleteParser(String[] parsedInput, ArrayList\u003cTask\u003e userList) throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wnayar"},"content":"        // data validation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wnayar"},"content":"        if (parsedInput.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Please provide a second argument when deleting a task\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wnayar"},"content":"        if (parsedInput.length \u003e 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Please provide only one additional argument after the delete word,\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wnayar"},"content":"                        + \" ensure to follow the format: delete \u003cnumber\u003e, where \u003c\u003e is your input\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wnayar"},"content":"        // ensure task number is within the range of the task list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wnayar"},"content":"        if (Integer.parseInt(parsedInput[1]) \u003e userList.size() || Integer.parseInt(parsedInput[1]) \u003c 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"There is no task of that number in the current list, unable to delete,\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wnayar"},"content":"                        + \" please try again with a valid number\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wnayar"},"content":"        return Integer.parseInt(parsedInput[1]) - 1;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wnayar"},"content":"    public String[] handleRouteParser(String userCommand) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wnayar"},"content":"        return userCommand.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wnayar"},"content":"    public String handleFindParser(String[] parsedInput) throws BillException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wnayar"},"content":"        // data validation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wnayar"},"content":"        if (parsedInput.length \u003c 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Please provide a second argument for the find command, such as a keyword,\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wnayar"},"content":"                        + \" the format for find is: find \u003c\u003e, where \u003c\u003e is a single keyword\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wnayar"},"content":"        if (parsedInput.length \u003e 2) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Please ensure the following format for the find command:\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wnayar"},"content":"                        + \" find \u003c\u003e, where \u003c\u003e is a single keyword\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wnayar"},"content":"        return parsedInput[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wnayar":126}},{"path":"src/main/java/bill/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":"import java.io.File;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":" * The Storage class stores the relevant file and directories paths, and loads and writes to the persistent data of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"public class Storage {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"    private Path pathStorageDirectory;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"    private Path pathStorageFile;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wnayar"},"content":"     * Initializes Storage, reading and writing from persistent data to save and update list of task state.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wnayar"},"content":"    public Storage () {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wnayar"},"content":"        // set directory for output, and output file,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wnayar"},"content":"        // in this case \u003c\u003e\\Desktop\\CS2103T_IP\\data, where \u003c\u003e is the autodetected home directory","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wnayar"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wnayar"},"content":"        pathStorageDirectory \u003d Paths.get(home, \"Desktop\", \"CS2103T_IP\", \"data\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wnayar"},"content":"        pathStorageFile \u003d Paths.get(home, \"Desktop\", \"CS2103T_IP\", \"data\", \"bill.txt\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wnayar"},"content":"     * Saves updated list to bill.txt.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wnayar"},"content":"     * @param userList Current accessible state of mutable list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wnayar"},"content":"     * @throws IOException If there is an error writing to the bill.txt file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wnayar"},"content":"    public void saveList(ArrayList\u003cTask\u003e userList) throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wnayar"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(String.valueOf(pathStorageFile)));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wnayar"},"content":"        for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wnayar"},"content":"            writer.write((i + 1) + \".\" + userList.get(i));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wnayar"},"content":"            writer.newLine();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wnayar"},"content":"        writer.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wnayar"},"content":"     * Loads bill.txt tasks into a mutable userlist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wnayar"},"content":"     * @param ui User Interface access to leverage in built methods to handle parsing of tasks from bill.txt to mutable userlist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wnayar"},"content":"     * @param userList Current accessible state of mutable list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wnayar"},"content":"     * @param tasks All helper methods associated with userList, such as getters.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wnayar"},"content":"     * @throws IOException If there is an error reading from the bill.txt file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wnayar"},"content":"     * @throws BillException If there is an unrecognisable format in the bill.txt file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wnayar"},"content":"    public void loadStorage(Ui ui, ArrayList\u003cTask\u003e userList, TaskList tasks) throws IOException, BillException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wnayar"},"content":"        boolean directoryExists \u003d Files.exists(pathStorageDirectory);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wnayar"},"content":"        boolean fileExists  \u003d Files.exists(pathStorageFile);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wnayar"},"content":"        // if directory doesn\u0027t exist","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wnayar"},"content":"        if (!directoryExists) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wnayar"},"content":"            // make the directory and the file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wnayar"},"content":"            Files.createDirectory(pathStorageDirectory);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wnayar"},"content":"        // if directory exists but file doesn\u0027t","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wnayar"},"content":"        if (!fileExists) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wnayar"},"content":"            // make the file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wnayar"},"content":"            Files.createFile(pathStorageFile);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wnayar"},"content":"        File file \u003d new File(String.valueOf(pathStorageFile));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wnayar"},"content":"        // if text file empty return early to main function","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wnayar"},"content":"        if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wnayar"},"content":"            return;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wnayar"},"content":"        // while loop until finish reading bill.txt or error","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wnayar"},"content":"        BufferedReader lineReader \u003d new BufferedReader(new FileReader(String.valueOf(pathStorageFile)));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wnayar"},"content":"        String line;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wnayar"},"content":"        while ((line \u003d lineReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wnayar"},"content":"            // get 4 char the route, note index from 0","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wnayar"},"content":"            char route \u003d line.charAt(3);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wnayar"},"content":"            // get 7 char the mark","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wnayar"},"content":"            char mark \u003d line.charAt(6);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wnayar"},"content":"            boolean isMarked \u003d mark \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wnayar"},"content":"            // get index of first char after marking [ ] or [X] and the space after","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wnayar"},"content":"            int firstSpace \u003d Math.max(line.indexOf(\"[ ]\"), line.indexOf(\"[X]\")) + 4;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wnayar"},"content":"            // get index","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wnayar"},"content":"            int index \u003d Integer.parseInt(String.valueOf(line.charAt(0)));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wnayar"},"content":"            // load storage into list var","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wnayar"},"content":"            switch (route) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wnayar"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wnayar"},"content":"                System.out.println(\"todo \" + line.substring(firstSpace));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wnayar"},"content":"                ui.handleToDo(\"todo \" + line.substring(firstSpace), userList, this, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wnayar"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wnayar"},"content":"                ui.handleDeadline(\"deadline \"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wnayar"},"content":"                            + line.substring(firstSpace).replace(\"(\", \"\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wnayar"},"content":"                            .replace(\")\", \"\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wnayar"},"content":"                            .replace(\"by:\", \"/by\"), userList, this, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wnayar"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wnayar"},"content":"                ui.handleEvent(\"event \"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wnayar"},"content":"                            + line.substring(firstSpace).replace(\"(\", \"\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wnayar"},"content":"                            .replace(\")\", \"\").replace(\"from:\", \"/from\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wnayar"},"content":"                            .replace(\"to:\", \"/to\"), userList, this, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wnayar"},"content":"            default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wnayar"},"content":"                throw new BillException(\"Not a recognised command in bill.txt,\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wnayar"},"content":"                            + \" please ensure that all lines in bill.txt have the template of the expected output\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wnayar"},"content":"                            + \" based on user commands\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wnayar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wnayar"},"content":"            if (isMarked) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wnayar"},"content":"                ui.handleMarkOfTask(new String[]{\"mark\", String.valueOf(index)}, userList, tasks, this);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wnayar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wnayar":128}},{"path":"src/main/java/bill/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":" * The Task class allows for initialising of general tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":" * It is used predominantly as a parent class to be inherited from.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"public class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"    private String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"     * Initializes Task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"     * @param description Description of task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wnayar"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wnayar"},"content":"        return description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wnayar"},"content":"    public void mark() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wnayar"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wnayar"},"content":"    public void unmark() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wnayar"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wnayar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wnayar"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wnayar"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Wnayar":41}},{"path":"src/main/java/bill/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":" * The TaskList class allows for initialising and storing and modifying the lists of tasks during the program\u0027s run.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"public class TaskList {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"    private ArrayList\u003cTask\u003e userList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"     * Initializes the userList of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"        userList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"    public ArrayList\u003cTask\u003e getUserList() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"        return userList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wnayar"},"content":"     * Adds task to list to userList and calls storage to save current state of list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wnayar"},"content":"     * @param newTask Task the user is attempting to add to the userList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wnayar"},"content":"     * @param userList Current accessible state of mutable list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wnayar"},"content":"     * @param storage Storage to save the updated list to bill.txt persistent data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wnayar"},"content":"     * @throws IOException If there is an error writing to the bill.txt file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wnayar"},"content":"    public void addTask(Task newTask, ArrayList\u003cTask\u003e userList, Storage storage) throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wnayar"},"content":"        userList.add(newTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wnayar"},"content":"        System.out.println(\"added: \" + newTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wnayar"},"content":"        System.out.println(\"Now you have \" + userList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wnayar"},"content":"        //update hardisk list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wnayar"},"content":"        storage.saveList(userList);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wnayar"},"content":"     * Deletes task from userList and calls storage to save current state of list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wnayar"},"content":"     * @param targetTaskNumber The index of the targeted task from the userList to remove it.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wnayar"},"content":"     * @param storage Storage to save the updated list to bill.txt persistent data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wnayar"},"content":"     * @throws IOException If there is an error writing to the bill.txt file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wnayar"},"content":"    public void deleteTask(int targetTaskNumber, Storage storage) throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wnayar"},"content":"        Task targetTask \u003d userList.get(targetTaskNumber);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wnayar"},"content":"        userList.remove(targetTaskNumber);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wnayar"},"content":"        storage.saveList(userList);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wnayar"},"content":"     * Shows task from userList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wnayar"},"content":"     * @param userList Current accessible state of mutable list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wnayar"},"content":"    public void showList(ArrayList\u003cTask\u003e userList) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wnayar"},"content":"        if (userList.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wnayar"},"content":"            System.out.println(\"List is empty\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wnayar"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wnayar"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wnayar"},"content":"            for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wnayar"},"content":"                System.out.println((i + 1) + \".\" + userList.get(i));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wnayar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wnayar"},"content":"    public void showFilterList(String keyWord) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wnayar"},"content":"        // similar to show list but filter by description to contains the keyword searched by the user","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wnayar"},"content":"        if (userList.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wnayar"},"content":"            System.out.println(\"List is empty, no matching tasks\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wnayar"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wnayar"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wnayar"},"content":"            boolean hasNoMatch \u003d true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wnayar"},"content":"            for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wnayar"},"content":"                if (userList.get(i).getDescription().contains(keyWord)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wnayar"},"content":"                    System.out.println((i + 1) + \".\" + userList.get(i));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wnayar"},"content":"                    hasNoMatch \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wnayar"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wnayar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wnayar"},"content":"            if (hasNoMatch) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wnayar"},"content":"                System.out.println(\"There are no matching tasks in your list currently matching the keyword \" + keyWord);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wnayar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wnayar"},"content":"     * Marks or unmarks tasks in userList.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wnayar"},"content":"     * @param targetTaskNumber The index of the targeted task from the userList to mark or unmark it.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wnayar"},"content":"     * @param markOrUnmark Identifier of mark or unmark, which determines if the target task will be marked or unmarked.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wnayar"},"content":"    public void markOrUnmarkTask(int targetTaskNumber, String markOrUnmark) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wnayar"},"content":"        Task targetTask \u003d userList.get(targetTaskNumber);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wnayar"},"content":"        if (markOrUnmark.equals(\"mark\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wnayar"},"content":"            targetTask.mark();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wnayar"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wnayar"},"content":"            // unmarked","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wnayar"},"content":"            targetTask.unmark();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wnayar"},"content":"        System.out.println(targetTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wnayar":104}},{"path":"src/main/java/bill/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":" * The ToDo class extends the Task class, and allows creating tasks with a description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"     * Initializes Todo.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"     * @param description Description of ToDo.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Wnayar":20}},{"path":"src/main/java/bill/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"import java.io.OutputStream;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":" * The UI class allows the user to interact with the chatbot Bill, and handles routing of user requests.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"public class Ui {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"    private Scanner userScanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"    private Parser parser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"    private enum Route {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, INVALID, FIND","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Wnayar"},"content":"     * Initializes Ui.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Wnayar"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Wnayar"},"content":"    public Ui() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Wnayar"},"content":"        userScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Wnayar"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Wnayar"},"content":"    public void introduce() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Wnayar"},"content":"        System.out.println(\"Hello! I\u0027m Bill\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Wnayar"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Wnayar"},"content":"    public void conclude() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Wnayar"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Wnayar"},"content":"    private String getUserCommand() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Wnayar"},"content":"        return userScanner.nextLine().trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Wnayar"},"content":"    public void handleUserCommands(Storage storage, TaskList tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Wnayar"},"content":"        String userCommand \u003d getUserCommand();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Wnayar"},"content":"        while (!userCommand.equals(\"bye\")) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Wnayar"},"content":"            handleRoute(userCommand, tasks.getUserList(), storage, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Wnayar"},"content":"            userCommand \u003d getUserCommand();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Wnayar"},"content":"    private Route getRouteEnum(String route) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Wnayar"},"content":"        String routeValue \u003d route.toUpperCase();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Wnayar"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Wnayar"},"content":"            return Route.valueOf(routeValue);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Wnayar"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Wnayar"},"content":"            return Route.INVALID;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Wnayar"},"content":"    public void handleMarkOfTask(String[] parsedInput, ArrayList\u003cTask\u003e userList, TaskList tasks, Storage storage)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Wnayar"},"content":"                throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Wnayar"},"content":"        int targetTaskNumber \u003d parser.handleMarkOfTaskParser(parsedInput, userList);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Wnayar"},"content":"        tasks.markOrUnmarkTask(targetTaskNumber, parsedInput[0]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Wnayar"},"content":"        //update hardisk list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Wnayar"},"content":"        storage.saveList(userList);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Wnayar"},"content":"    public void handleToDo(String userCommand, ArrayList\u003cTask\u003e userList, Storage storage, TaskList tasks)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Wnayar"},"content":"                throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Wnayar"},"content":"        String trimmedUserCommand \u003d parser.handleToDoParser(userCommand, userList, storage, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Wnayar"},"content":"        tasks.addTask(new ToDo(trimmedUserCommand), userList, storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Wnayar"},"content":"    public void handleDeadline(String userCommand, ArrayList\u003cTask\u003e userList, Storage storage, TaskList tasks)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Wnayar"},"content":"                throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Wnayar"},"content":"        // data validation","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Wnayar"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Wnayar"},"content":"            String[] trimmedUserCommand \u003d parser.handleDeadlineParser(userCommand);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Wnayar"},"content":"            String deadlineDescription \u003d trimmedUserCommand[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Wnayar"},"content":"            String deadlineBy \u003d trimmedUserCommand[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Wnayar"},"content":"            tasks.addTask(new Deadline(deadlineDescription, deadlineBy), userList, storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Wnayar"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(\"Please ensure to follow the format:\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Wnayar"},"content":"                        + \" deadline \u003ctask\u003e /by \u003cdate\u003e where \u003c\u003e suggest user input.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Wnayar"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Wnayar"},"content":"            throw new BillException(ex.getMessage()","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Wnayar"},"content":"                        + \". Please ensure to follow the format yyyy-MM-dd (e.g 2024-10-12) or\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Wnayar"},"content":"                        + \" MMM dd yyyy (Dec 10 2024) with capitalize first letter\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Wnayar"},"content":"    public void handleEvent(String userCommand, ArrayList\u003cTask\u003e userList, Storage storage, TaskList tasks)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Wnayar"},"content":"                throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Wnayar"},"content":"       try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Wnayar"},"content":"           String[] trimmedUserCommand \u003d parser.handleEventParser(userCommand);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Wnayar"},"content":"           String eventDescription \u003d trimmedUserCommand[0];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Wnayar"},"content":"           String eventFrom \u003d trimmedUserCommand[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Wnayar"},"content":"           String eventTo \u003d trimmedUserCommand[2];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Wnayar"},"content":"           tasks.addTask(new Event(eventDescription, eventFrom, eventTo), userList, storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Wnayar"},"content":"       } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Wnayar"},"content":"           throw new BillException(\"Please ensure to follow the format:\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Wnayar"},"content":"                    + \" event \u003ctask\u003e /from \u003cdate1\u003e /to \u003cdate2\u003e, where \u003c\u003e suggest user input\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Wnayar"},"content":"       }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Wnayar"},"content":"    private void handleDelete(String[] parsedInput, ArrayList\u003cTask\u003e userList, TaskList tasks, Storage storage)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Wnayar"},"content":"                throws BillException, IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Wnayar"},"content":"        int targetTaskNumber \u003d parser.handleDeleteParser(parsedInput, userList);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Wnayar"},"content":"        Task targetTask \u003d userList.get(targetTaskNumber);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Wnayar"},"content":"        // delete and update hardisk","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Wnayar"},"content":"        tasks.deleteTask(targetTaskNumber, storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Wnayar"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Wnayar"},"content":"        System.out.println(targetTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Wnayar"},"content":"        System.out.println(\"Now you have \" + userList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Wnayar"},"content":"    private void handleFind(String[] parsedInput, TaskList tasks) throws BillException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Wnayar"},"content":"        String keyWord \u003d parser.handleFindParser(parsedInput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Wnayar"},"content":"        tasks.showFilterList(keyWord);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Wnayar"},"content":"    public void handleRoute(String userCommand, ArrayList\u003cTask\u003e userList, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Wnayar"},"content":"        String[] parsedInput \u003d parser.handleRouteParser(userCommand);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Wnayar"},"content":"        Route route \u003d getRouteEnum(parsedInput[0]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Wnayar"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Wnayar"},"content":"            switch (route) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Wnayar"},"content":"            case LIST:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Wnayar"},"content":"                tasks.showList(userList);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Wnayar"},"content":"            case MARK:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Wnayar"},"content":"                // Fallthrough","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Wnayar"},"content":"            case UNMARK:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Wnayar"},"content":"                handleMarkOfTask(parsedInput, userList, tasks, storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Wnayar"},"content":"            case TODO:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Wnayar"},"content":"                handleToDo(userCommand, userList, storage, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Wnayar"},"content":"            case DEADLINE:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Wnayar"},"content":"                handleDeadline(userCommand, userList, storage, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Wnayar"},"content":"            case EVENT:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Wnayar"},"content":"                handleEvent(userCommand, userList, storage, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Wnayar"},"content":"            case DELETE:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Wnayar"},"content":"                handleDelete(parsedInput, userList, tasks, storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Wnayar"},"content":"            case FIND:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Wnayar"},"content":"                handleFind(parsedInput, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Wnayar"},"content":"                break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Wnayar"},"content":"            default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Wnayar"},"content":"                throw new BillException(\"Not a recognised command, please try again\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Wnayar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Wnayar"},"content":"        } catch (BillException | IOException ex) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Wnayar"},"content":"            System.out.println(ex.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Wnayar"},"content":"    public void silentLoadingData(Storage storage, ArrayList\u003cTask\u003e userList, TaskList tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Wnayar"},"content":"        // load data in, but silence print messages, as leveraging custom functions which have print statements","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Wnayar"},"content":"        PrintStream originalOutput \u003d System.out;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Wnayar"},"content":"        // temp output to hide print messages, so can leverage previously built methods which have print statements","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Wnayar"},"content":"        OutputStream silence \u003d new OutputStream() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Wnayar"},"content":"            @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Wnayar"},"content":"            public void write(int b) throws IOException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Wnayar"},"content":"                //do nothing","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Wnayar"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Wnayar"},"content":"        };","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Wnayar"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Wnayar"},"content":"            System.setOut(new PrintStream(silence));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Wnayar"},"content":"            storage.loadStorage(this, userList, tasks);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Wnayar"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Wnayar"},"content":"            System.setOut(originalOutput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Wnayar"},"content":"            System.out.println(ex.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Wnayar"},"content":"            return;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Wnayar"},"content":"        } catch (BillException ex) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Wnayar"},"content":"            System.setOut(originalOutput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Wnayar"},"content":"            System.out.println(\"There is a formatting issue with the bill.txt file, it is related to:\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Wnayar"},"content":"            System.out.println(ex.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Wnayar"},"content":"            return;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Wnayar"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Wnayar"},"content":"        System.setOut(originalOutput);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wnayar":187}},{"path":"src/test/java/bill/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"    public void dateFormatting_yyyyMMdd_success() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"        // Deadline climb 2024-12-10 is [D][ ] climb (by: Dec 10 2024) task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"        assertEquals(\"[D][ ] climb (by: Dec 10 2024)\", new Deadline(\"climb\", \"2024-12-10\").toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"    public void dateFormatting_monthDayYear_success() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"        // Deadline climb Dec 10 2024 is [D][ ] climb (by: Dec 10 2024) task","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"        assertEquals(\"[D][ ] climb (by: Dec 10 2024)\", new Deadline(\"climb\", \"Dec 10 2024\").toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wnayar":19}},{"path":"src/test/java/bill/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"package bill;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Wnayar"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Wnayar"},"content":"public class TaskTest {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Wnayar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Wnayar"},"content":"    public void markTest_mark_showsX() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Wnayar"},"content":"        Task juggle \u003d new Task(\"juggle\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Wnayar"},"content":"        juggle.mark();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Wnayar"},"content":"        // Juggle task mark toString() is [X] juggle","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Wnayar"},"content":"        assertEquals(\"[X] juggle\", juggle.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Wnayar"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Wnayar"},"content":"    @Test","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Wnayar"},"content":"    public void unMarkTest_unmark_noX() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"        Task juggle \u003d new Task(\"juggle\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Wnayar"},"content":"        juggle.unmark();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Wnayar"},"content":"        // Juggle task unmark toString() is [ ] juggle","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Wnayar"},"content":"        assertEquals(\"[ ] juggle\", juggle.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Wnayar"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Wnayar"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Wnayar":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Wnayar"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Wnayar"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Wnayar"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Wnayar"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Wnayar":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Wnayar"},"content":"java -classpath ..\\bin Bill \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Wnayar":1,"-":20}}]
