{"authorDailyContributionsMap":{"KrashKart":[{"date":"2024-08-18","commitResults":[{"hash":"de74fb890421c0abedcf9962ff2ecba0a19c32c7","isMergeCommit":false,"messageTitle":"changed Duke.java to Jackson.java changed greeting","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":10}}},{"hash":"158101b023f18e2f66b908971a95c86210c8551a","isMergeCommit":false,"messageTitle":"added conversation loop","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":1}}},{"hash":"c9f628b8fc6768aa01cf5b29b9df5ce6428bf102","isMergeCommit":false,"messageTitle":"added add and list functions, segregated add and list into separate global methods","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":3}}},{"hash":"e704f36d9fb8a472570502094fba15e3fba10690","isMergeCommit":false,"messageTitle":"changed attribute names","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":9}}},{"hash":"b00b26db7342af3045f7f0ff60e96a461612f796","isMergeCommit":false,"messageTitle":"Added Task class file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":1}}},{"hash":"8b391f73dc03b4a94ccb3ce55ac7f39f1225ba61","isMergeCommit":false,"messageTitle":"Added marking and unmarking functionality into chatbot loop","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":18}}}]},{"date":"2024-08-19","commitResults":[{"hash":"361aa733d8d808aa7b494f895e3523bfae0f8501","isMergeCommit":false,"messageTitle":"Added Deadline, Event and Todo class files, changed main loop from switch statement to if else (because it\u0027s easier for me), established regex parsing of input and tidied up code","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":31}}},{"hash":"00ba05839e41582c688f5d2f9c6083500faa7f26","isMergeCommit":false,"messageTitle":"added automated UI testing files","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":0},"java":{"insertions":3,"deletions":2},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2024-08-20","commitResults":[{"hash":"fd01a1b09d88ca726530a0bb79d7aa3bd127faec","isMergeCommit":false,"messageTitle":"Added custom exception files, modified main loop to utilise REGEX (for neater and shorter code)","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":100,"deletions":33}}},{"hash":"d9459594d01e9bf587299808adf83f31e528b078","isMergeCommit":false,"messageTitle":"Added delete method and improved Exceptions to include: invalid index (0) and invalid index (above list size)","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":3}}},{"hash":"df135ec6b45e7d0ee832f9175473159625e4dbe7","isMergeCommit":false,"messageTitle":"Integrated \"bye\" detection into if-else loop, added secret function","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"java":{"insertions":40,"deletions":4}}},{"hash":"992ef0f36ed4d28e361fd0017abe3560f777ea2d","isMergeCommit":false,"messageTitle":"Added encryption for secret text file","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":9},"java":{"insertions":3,"deletions":0}}},{"hash":"c079f7d4fb2136f70b0c30dff05d50c579b5eb84","isMergeCommit":false,"messageTitle":"Grouped Exceptions under JacksonException, removed redundant InvalidIndexException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":85}}},{"hash":"5e24bdd5b0b7691012506acc82a812b80839605b","isMergeCommit":false,"messageTitle":"Added enums for Response type checking","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"ac39fad3a84fe16c4b0a99afd1aa0c6d78fe3c7e","isMergeCommit":false,"messageTitle":"Added JacksonException as the parent Exception class for Jackson-specific exceptions, standardized all JacksonExceptions to take in a String msg during construction","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}},{"hash":"5c3620023abe4da1c316dbd1895d9e37484f3c18","isMergeCommit":false,"messageTitle":"Created Response, TaskList and Parser class to handle Action type and Matcher, task list amendments and input parsing respectively","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":158,"deletions":29}}},{"hash":"29c0b4c90952f1ad5c496eb91ea54b8e08817208","isMergeCommit":false,"messageTitle":"Updated UI testing files for the latest version of Jackson","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}},{"hash":"2806f0b2dc5c72d8ca1ad6d11f6ede4137dc7826","isMergeCommit":false,"messageTitle":"Added javadocs to existing methods/variables and comments describing main loop","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":144,"deletions":14}}}]},{"date":"2024-08-24","commitResults":[{"hash":"34b5703fb99272d1be60498c8c8cbe4d18368f41","isMergeCommit":false,"messageTitle":"Modify Javadocs description","messageBody":"Javadocs description does not adhere to coding standards.\n\nJavadocs have to conform to standards according to course demands.\n\nLet\u0027s rewrite Javadocs to adhere to standards in terms of description.\n","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":22}}},{"hash":"43034715b03ca32cdf6928ceb3483c6eb7a3dc97","isMergeCommit":false,"messageTitle":"TaskList: Remove showList, add overloaded toString","messageBody":"TaskList currently uses showList to show the task list\n\nThis is not generalisable as we now have to be able to show and save\ntasks to file.\n\nLet\u0027s remove showList and implement a more flexible toString\nimplementation so it can be used for both \"list\" and \"save\" commands.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":17}}},{"hash":"130b98a0d767eeaa655071b29529a579852e02a3","isMergeCommit":false,"messageTitle":"TaskList: Add save method","messageBody":"TaskList currently cannot save the list to a text file after every\nmodification.\n\nUpon saving, users can retrieve task list history if needed.\n\nLet\u0027s add the save function to write the task list history into a\ntext file in real-time.\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"f4dad92e4827dd7ef76fbe853fda030c949bbd07","isMergeCommit":false,"messageTitle":"Add save and load functionalities","messageBody":"Currently, Jackson does not save the task list after changes and\ncannot load a previously saved task list.\n\nThis means every time we start Jackson, we have to waste time\nre-entering all the tasks, which is cumbersome and not functional.\n\nLet\u0027s add this save and load function such that the tasks can be\nwritten and read from a save file data.txt to ensure continuity of\nmemory across Jackson runs.\n* Modify TaskList to include save and load methods\n* Add regex to read tasks from the save text file more easily\n* Modify TaskList modification methods (addList, deleteList, etc)\nto save after each method call\n* Add Exception checking for IOExceptions\n* Remove toString method as it might be redundant and reinstate\nshowList\n","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":11}}},{"hash":"0f2fbc702b693e04e60ad295e076806e02fd0154","isMergeCommit":false,"messageTitle":"Rename secret command","messageBody":"Secret command is too obvious\n\nThus, users can guess functionality based on the command itself\n\nLet\u0027s change the command to make it less obvious\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"85c99a3bf7f13f39e3da5145db90dc742d214c00","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"61545bdd3a1fbc2db5b7ae744d4207b0daab1693","isMergeCommit":false,"messageTitle":"Temporal: Add new DateTime/Date class","messageBody":"Previously, there was no restriction on dates for Event and\nDeadline classes.\n\nThus, there was no standardized format for users to input their\nfrom, to and by dates.\n\nLet\u0027s do a few things here:\n* Create Temporal class to handle DateTime/Date information storage\n* Create DateTimeFormatters to output datetime accordingly\n* Modify Event and Deadline classes to contain Temporal class\nobjects\n* Modify Temporal class to be able to read saved dates and\ndatetimes (which have already been converted to output datetime\nformat)\n","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":10}}},{"hash":"34d65104bdcb611407c4c9d1e8c26a39049ccaf4","isMergeCommit":false,"messageTitle":"Remove unused imports","messageBody":"Get rid of unused imports in Jackson and Parser, as well as\nmodifying regex patterns to comply with accepted datetime input\nformat\n","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":30}}},{"hash":"f1959c40895f09f6ded4cd4a9f1488fc116d3b20","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"a60ca91dfc304ca7ac5438ce4b886d8471c4f2c9","isMergeCommit":false,"messageTitle":"More OOP: Add new class files","messageBody":"Previously, Jackson.java handled most of the functionality for the\nchatbot (eg. User Interaction and Save File input-output), which\nmade the file messy and convoluted.\n\nIn addition, TaskList.java also had untidy code due to placing too\nmuch functionality in one file. Overall code was not segmented well\nin accordance to OOP principles.\n\nLet\u0027s do a few changes:\n* Create new Ui class to handle printing output and exceptions\n* Transfer printing responsibility from Jackson to Ui\n* Create new Storage class to handle save file input-output\n* Transfer read-write duties from TaskList to Storage\n* Change Jackson from static to instance class\n* Separate main and run methods in Jackson, so now main creates\ninstance of Jackson and runs the main loop instead\n* Other code standard changes (naming, etc)\n","fileTypesAndContributionMap":{"java":{"insertions":395,"deletions":225}}},{"hash":"60d1cda7e59c790fcc0a1c34800ccfdce2469a82","isMergeCommit":false,"messageTitle":"Javadocs: Add java docs to Temporal and newly created classes","messageBody":"Add javadocs for methods and variables in Temporal, Storage, Ui,\nJackson and TaskList\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"21e2824028cf342c1ea0b63cba3f6717b8e313fd","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-MoreOOP\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"3235df536be4b91ff1c0cafdcd1dae9766ce865b","isMergeCommit":false,"messageTitle":"Package: Separate files into packages","messageBody":"Files were disorganised without partitions to organise them.\n\nLet\u0027s separate all of them into packages for better organisation.\n","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":4}}},{"hash":"e974cf947cad16d50b5606e39310842bf3154a63","isMergeCommit":false,"messageTitle":"Revert \"Package: Separate files into packages\"","messageBody":"This reverts commit 3235df536be4b91ff1c0cafdcd1dae9766ce865b.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":68}}},{"hash":"e258d3e9295734939aa55d81b96f564fd2f9da10","isMergeCommit":false,"messageTitle":"Reapply \"Package: Separate files into packages\"","messageBody":"This reverts commit e974cf947cad16d50b5606e39310842bf3154a63.\n","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":4}}},{"hash":"9154d3d42805f97cc1d76a99146155f41a072f6d","isMergeCommit":false,"messageTitle":"Packages: Separate files into packages","messageBody":"Files were disorganised previously.\n\nIf not organised properly, files can be hard to find and import.\n\nLet\u0027s separate all the files into respective packages.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"3c2ed227bc1666ad86c83ac9823e5a54fc8a1775","isMergeCommit":false,"messageTitle":"Revert \"Packages: Separate files into packages\"","messageBody":"This reverts commit 9154d3d42805f97cc1d76a99146155f41a072f6d.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"e12a762a34ebf907184ed48a5067a44dd60bf672","isMergeCommit":false,"messageTitle":"Reapply \"Packages: Separate files into packages\"","messageBody":"This reverts commit 3c2ed227bc1666ad86c83ac9823e5a54fc8a1775.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"73ecdca2c1c5d49bff134f06901898c53a6e0b65","isMergeCommit":false,"messageTitle":"Comments: Change comments to be clearer","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"f7592d3121f6c09625f2567c037a6b03773e298d","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-Packages\u0027","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"081bf203a7d058b18ce6bd74ca04c01a5867d281","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"b10eb047c7789f9272429d2b194f59bc8070b487","isMergeCommit":false,"messageTitle":"Gradle: Add Gradle to project","messageBody":"Previously, Grade was not present.\n\nThus, project tasks could not be automated.\n\nLet\u0027s add Gradle support.\n","fileTypesAndContributionMap":{"gradle":{"insertions":46,"deletions":0}}},{"hash":"6a77aaebf3e9d57591316726fe845e9816ad72c2","isMergeCommit":false,"messageTitle":"Checkstyle: Change code to conform to checkstyle","messageBody":"Run checkstyle on gradle and correct all checkstyle issues in all\nfiles\n","fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":71}}},{"hash":"08a8c8effd186b73cdb65431d31ca821cacc0f33","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Gradle\u0027","messageBody":"# Conflicts:\n#\tbuild.gradle\n#\tgradle/wrapper/gradle-wrapper.jar\n#\tgradle/wrapper/gradle-wrapper.properties\n#\tgradlew\n#\tgradlew.bat\n","fileTypesAndContributionMap":{}},{"hash":"5869094911c92808d23717950fd8bc63b139dbf3","isMergeCommit":false,"messageTitle":"Resolve merge conflicts","messageBody":"Due to inconsistent merging with branch-A-gradle, resolve merge\nconflicts.\n","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":3}}},{"hash":"fc7fd6c1f5f4dd09f1b4e411af690cbcfd217f64","isMergeCommit":false,"messageTitle":"Resolve more merge conflicts","messageBody":"Follow up from previous merge conflict resolution\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":4}}}]},{"date":"2024-08-25","commitResults":[{"hash":"0c23811187333e12477283b7fee88b33c1b5d923","isMergeCommit":false,"messageTitle":"Parser: Modify exception thrown in parse and add unit tests","messageBody":"Previously, no unit tests existed for any class in Jackson\n\nThis is a problem since we cannot automate tests for Jackson\nclasses and weed out bugs.\n\nLet\u0027s:\n* Create unit tests for the Parser class (ParserTest)\n* Modify Parser to only throw SyntaxException (for standardization)\n","fileTypesAndContributionMap":{"java":{"insertions":103,"deletions":1}}},{"hash":"29fe363f95db8259cd8f458e98652df4cead473f","isMergeCommit":false,"messageTitle":"Ui: Add unit tests","messageBody":"Let\u0027s add unit tests to Ui class so we can automate testing better.\nThis unit tests extensively tests the printFormatGuide method in\nUi\n","fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":0}}},{"hash":"c9844b6b522074ea136d244ed3ed9696a04f2661","isMergeCommit":false,"messageTitle":"Checkstyle: Rewrite UiTest and ParserTest","messageBody":"Let\u0027s\n* Run checkstyle via Gradle to see checkstyle errors\n* Correct them in both UiTest and ParserTest\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":6}}},{"hash":"54d5cf36c18e194125507fe5adcb1c9b81d8b0b4","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"52d694950eb964a9626318af15c61f68d2e5d093","isMergeCommit":false,"messageTitle":"ShadowJar: Configure build.gradle for shadowJar conversion","messageBody":"Previously, no jar conversion was available.\n\nThis is a problem if jar conversion is required.\n\nLet\u0027s modify build.gradle to\n* include dependencies for shadowJar\n* Modify shadowJar archiveFileName to jackson.jar\n* run shadowJar via Gradle to get jackson.jar\n\njackson.jar will be gitignored\n","fileTypesAndContributionMap":{"gradle":{"insertions":17,"deletions":8}}},{"hash":"ce1f8b4f7407c03c855f17ade6c72c6363d8d42b","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Jar\u0027","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"7d8edba8cc02533262fd28258931112bd2628524","isMergeCommit":false,"messageTitle":"Javadoc: Add comments and javadocs to files","messageBody":"Add comments for further elaboration for newer files from\nA-MoreOOP tag onwards\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":13}}},{"hash":"92a4783091ef4c62b8385ccca03e487b904b8231","isMergeCommit":false,"messageTitle":"Coding Standard: Change code to comply with standards","messageBody":"Placeholder commit for the branch so I can merge it.\nEnsure that all files adhere to the coding standards\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"175653f1462db596931145374562300da15a0486","isMergeCommit":false,"messageTitle":"Find: Add find functionality","messageBody":"Previously, chatbot could not find tasks by searching for keywords.\n\nThis means users had to find their desired tasks from a potentially\nvery long list of tasks, which is cumbersome.\n\nLet\u0027s change a few things:\n* Add find functionality to Parser, Jackson, Ui and TaskList\n* Add find action type to Actions\n* Modify unit tests to include testing for find function\n","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":4}}},{"hash":"b8f2215c6e1e85757ddcc3ca6f6e0e499e228679","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"35550090d745e016e68727636fe4c75a17dec642","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"65b46d051e6d28c59998132ecf067b05dd6be9ff","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}},{"hash":"e4fab2f051ed66bf8303069078240400dc22c420","isMergeCommit":false,"messageTitle":"Clean up imports and add unit test functionality","messageBody":"* Add before each and after each wrappers for junit tests.\n* Remove unused imports.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":35}}}]},{"date":"2024-08-30","commitResults":[{"hash":"04b9abc38de2e1a8f0017b6097e1328e6657bf23","isMergeCommit":false,"messageTitle":"Fix Javadocs punctuation","messageBody":"Add full stop to every line in Javadocs.\n","fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":71}}}]},{"date":"2024-09-01","commitResults":[{"hash":"a3a2a2c4d62fce6b9d64ecd2d80fedd0326486f8","isMergeCommit":false,"messageTitle":"CheckStyle: Add Javadocs","messageBody":"Add Javadocs to conform to CheckStyle style requirements.\n\nSpecifically, add Javadocs to Jackson.main\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"79f48aed8c5668c79c3a19ccfcc4cdf2e0c301da","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"fbf35ea3c1dc9d3163d8dfc39d09bb4234bc11d8","isMergeCommit":false,"messageTitle":"Varargs: Overload constructor for TaskList","messageBody":"Previously, no constructor for TaskList existed that accepted\nVarargs of Tasks.\n\nThis renders TaskList inflexible in its construction.\n\nLet\u0027s add an overloaded varargs constructor for TaskList\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"5efa81f735e2e5ef526bb1e54ea6d887537cc821","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Varargs\u0027","messageBody":"","tags":["A-Varargs"],"fileTypesAndContributionMap":{}},{"hash":"1156a994fbd41e9351247672ace39319fcf4695b","isMergeCommit":false,"messageTitle":"Add tutorial files for JavaFX","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":42,"deletions":0},"java":{"insertions":161,"deletions":0}}},{"hash":"4abd5083835c87f13e5b23981c4868268ba60f7e","isMergeCommit":false,"messageTitle":"JavaFX: Add JavaFX GUI for Jackson","messageBody":"Previously, only text GUI existed for Jackson.\n\nThis meant User Experience was not as immersive.\n\nLet\u0027s do a few things:\n- Add JavaFX GUI drawing, loading and controller files\n- Redirect IO from Jackson to JavaFX GUI\n- Reformat most functions to return String (JavaFX compatibility)\n- Add GUI Quality of Life and Design changes\n","fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":7},"txt":{"insertions":2,"deletions":0},"fxml":{"insertions":12,"deletions":8},"java":{"insertions":359,"deletions":257}}}]},{"date":"2024-09-02","commitResults":[{"hash":"3d77c37965e2c7ea5345173b151e6c441bcf798e","isMergeCommit":false,"messageTitle":"Improve graphics in GUI","messageBody":"Let\u0027s\n* Reshape userInput and sendButton to be longer and rounder\nrespectively\n* Add grey pane behind userInput and sendButton to emulate normal\nmessaging apps\n* Add window icon and name\n* Add exit timer of 5 seconds and print file save status and exit\nmessage after user chooses to exit\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"fxml":{"insertions":14,"deletions":3},"java":{"insertions":17,"deletions":7}}},{"hash":"5c9e3250adb95072d9fe7fec813623fc9d1db63d","isMergeCommit":false,"messageTitle":"Rectify CheckStyle changes and add enums","messageBody":"Let\u0027s\n* Make changes to any and all CheckStyle violations to ensure\nconsistent code quality.\n* Add enums support for Jackson DialogBox style logic to ensure\ncode safety.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":118,"deletions":60}}},{"hash":"dbda1e499a3c3c14b378d9defafe5b78d7a9c3ee","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"# Conflicts:\n#\tsrc/main/java/jackson/Jackson.java\n","tags":["Level-10"],"fileTypesAndContributionMap":{}},{"hash":"65440808178d9f5368162720ba6757a6d589ae16","isMergeCommit":false,"messageTitle":"Edit build.gradle for more concise jar name","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2024-09-09","commitResults":[{"hash":"8ad8b25d0d50c092b8351343ecc16cb67046b41d","isMergeCommit":false,"messageTitle":"Update repository","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":1}}},{"hash":"780f75f53213f2da19c9992364054d4458d40134","isMergeCommit":false,"messageTitle":"CodeQuality: Improve code quality","messageBody":"Variable names and comments are not clear enough.\n\nClearer documentation and more intuitive naming conventions enable\nsmoother debugging and easier understanding of code.\n\nLet\u0027s,\n* add short explanation for regex checking in Parser.java\n* change method names to be more concise and clear\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":19}}},{"hash":"ba67d6ef60155f0c1b4326c4ee4b3971f78087c9","isMergeCommit":false,"messageTitle":"Add Assertions","messageBody":"No assertions present in the code.\n\nInvariants in the program cannot be tested before chatbot is run,\nmeaning higher chance of unchecked exceptions.\n\nLet\u0027s use Java\u0027s assert to check for invariants in the Storage\nclass like whether the save file is created after saving or if it\nexists before loading from it.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":11,"deletions":0}}},{"hash":"4cdf6bb3ca12ed49d85875ceac7e8b7274384e78","isMergeCommit":false,"messageTitle":"Add Stream to read secret file","messageBody":"No streams present in the current program.\n\nWithout the versatility of streams, errors and null values cannot\nbe handled efficiently and lazily.\n\nLet\u0027s add streams when reading the secret file in the Jackson.java\nfile.\n\nThis is done to leverage the Optional class in Java for lazy\nloading, in case the secret file text changes and becomes long and\nmore inefficient to load.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":17}}},{"hash":"1ca76e3c42837c2b22a42995ea90d68d6fe5cbeb","isMergeCommit":true,"messageTitle":"Merge pull request #3 from KrashKart/branch-A-Assertions","messageBody":"Add Assertions","fileTypesAndContributionMap":{}},{"hash":"e7d3bfdc2bc5b923c76e6f6612e4b287f989db08","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/KrashKart/ip","messageBody":"","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"7d331a053f012762d3567b608c910570de3bc922","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"18baf8a19d7712df00814f410886d4d05622534a","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"bb0df564a225af38cf3c3c62a1b7b1350150fb1f","isMergeCommit":true,"messageTitle":"Merge pull request #1 from KrashKart/branch-A-CodeQuality","messageBody":"CodeQuality: Improve code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"1149bbcc8d4b951cc7531fbf98b728b82916ada3","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"c7e7505f2d183036a9665851b2e82d6b06f18fc2","isMergeCommit":true,"messageTitle":"Merge pull request #2 from KrashKart/branch-A-Streams","messageBody":"Add Stream to read secret file","tags":["A-Streams"],"fileTypesAndContributionMap":{}},{"hash":"856bb86834674f5fc7e093907ba2e654f4f8a8bb","isMergeCommit":false,"messageTitle":"Sort: Integrate sort functionality","messageBody":"Users were not able to sort tasks according to the task attributes.\n\nThis lack of organisation can make it hard to organise tasks in\na neat way according to user preference, which defeats the point of\nthe chatbot.\n\nLet\u0027s,\n* create a new sort method in TaskList\n* make CustomDateTime comparable to facilitate comparison\n* add new sort command to Parser, Ui and Jackson\n* add Javadocs\n* do minor spring cleaning of code comments and existing Javadocs\n\nDirectly incorporating comparison functionality into the classes\ninvolved is much better than simple text comparison of the classes\nas it is more airtight and reliable.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":208,"deletions":35}}},{"hash":"283a25e981757343e23f1b99f25f51f4626da9b1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-C-Sort\u0027","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}},{"hash":"5d048d99cc5cf134a2087544b620a86c0becaade","isMergeCommit":false,"messageTitle":"Add data.txt to .gitignore","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":3}}},{"hash":"e867a5adff31af57bd355be534818e3997701cfe","isMergeCommit":false,"messageTitle":"Fix bugs in sorting methods","messageBody":"Particularly in TaskList and in the Parser.\nAdditionally fixed gitignore to ignore the correct data.txt.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":11}}},{"hash":"21052b6796e26993eb8720106807be6dbdcdeecd","isMergeCommit":false,"messageTitle":"Javadocs: Update Javadocs","messageBody":"Javadocs are not updated and contain inaccurate and misleading\ninformation.\n\nThis makes debugging harder and new readers will not be able to\neasily grasp how the code works.\n\nLet\u0027s update the Javadocs to include newly added functions in\nJackson and CustomDateTime so users can understand both files\nbetter.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}}]},{"date":"2024-09-10","commitResults":[{"hash":"2aebbd72d966fc6007f060f49f7357d0862e6313","isMergeCommit":false,"messageTitle":"A-BetterGui: Improve GUI","messageBody":"The GUI is minimal and simple with flat colours and no help\ncommand.\n\nThe presentation of the textbot can seem mundane and clunky.\nAdditionally, lack of help command means users cannot seek usage\nhelp for the commands.\n\nLet\u0027s,\n* revamp DialogBox to include color gradients and defined borders\n* integrate a help command into the program\n* revamp printFormatGuide in Ui.java for more detailed explanation\n* modify whitespaces in accordance with coding standards and\ncheckStyle\n","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":3},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":79,"deletions":34}}},{"hash":"2ea28c163c28fe45dc1cbb3f2e14c861b44fdfa8","isMergeCommit":false,"messageTitle":"A-Personality: Add personality quirk to Jackson","messageBody":"Jackson gives standard responses and behaves like a normal chatbot.\n\nThis can seem mundane and uninteresting to users and they may not\nenjoy or remain engaged with it.\n\nLet\u0027s add a \"Singlish\" style response that Jackson can use to\nadd flavour to the program.\n\nThis is a placeholder commit as I have already integrated this\npersonality many commits ago.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"29c687353b50dc4ee36f6ec208d4199655b79d71","isMergeCommit":false,"messageTitle":"A-MoreErrorHandling: Improve error handling","messageBody":"Jackson does not have the capability to detect conflicting task\nnames before adding the tasks.\n\nThe possibility of a name conflict impeding code progress later on\nis high and minimising this risk is optimal for now.\n\nLet\u0027s,\n* create DuplicatedTaskException to handle such conflicts\n* modify addTask in TaskList.java to check for name conflicts first\n* modify Javadocs to adhere to coding standard and checkStyle\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"5f4f4899ebf1e9429af55af053fbe9f942ada935","isMergeCommit":false,"messageTitle":"A-MoreErrorHandling: Improve error handling part 2","messageBody":"Jackson does not have the capability to detect conflicting task\nnames before adding the tasks.\n\nThe possibility of a name conflict impeding code progress later on\nis high and minimising this risk is optimal for now.\n\nLet\u0027s,\n* create DuplicatedTaskException to handle such conflicts\n* modify addTask in TaskList.java to check for name conflicts first\n* modify Javadocs to adhere to coding standard and checkStyle\n\nI forgot to stage the changes so this commit will be an extension\nto the previous one.\n","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":4}}},{"hash":"f54a53552eda5495b6480f309a78c6c57dbb17b3","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-BetterGui\u0027","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{}},{"hash":"1b697f282dcb1645add41aefe2699dbeefb04962","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreErrorHandling\u0027","messageBody":"","tags":["A-MoreErrorHandling"],"fileTypesAndContributionMap":{}},{"hash":"d8871dd077a472ff67498366d53bf39d44881f11","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Personality\u0027","messageBody":"","tags":["A-Personality"],"fileTypesAndContributionMap":{}},{"hash":"600a974ee003139d234dc02e58210b3a0e861118","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-MoreTesting","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"8ca7fd4944ee82215471ddd5bdb0a0ccea69c3fd","isMergeCommit":false,"messageTitle":"A-MoreTesting: Add new tests","messageBody":"Unit tests for TaskList is not present. Also, due to the transition\nto the JavaFX GUI and other output updates, UiTest.java contains\noutdated JUnit tests.\n\nThis slows down development and inhibits unit testing to ensure\ncode quality.\n\nLet\u0027s,\n* update UiTest.java\n* create unit tests for TaskListTest.java to test task list\nfunctionality\n","fileTypesAndContributionMap":{"java":{"insertions":152,"deletions":108}}},{"hash":"9db8df087bb378322a04b257d9e35b8659f6e25a","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-MoreTesting\u0027","messageBody":"","tags":["A-MoreTesting"],"fileTypesAndContributionMap":{}},{"hash":"b845fe4c2b874ffa06b73148fd062656269baf29","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-AiAssisted","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"1c9e11c9cbed5b6b2679320a9ccbcce894feb7e1","isMergeCommit":false,"messageTitle":"A-AiAssisted: Improve code using ChatGPT","messageBody":"Tasks were unable to switch easily between DateTime formats.\n\nThis meant incompatibility and inversatility.\n\nLet\u0027s use ChatGPT to assist with the formulation of a DateTime\nformatter.\n\nSince I had used ChatGPT to assist with said DateTime formatter\nin CustomDateTime.java many commits ago, this is a placeholder\ncommit.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":37}}},{"hash":"1386735b4715a47e43015933af8f18629d16fd4e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-AiAssisted\u0027","messageBody":"","tags":["A-AiAssisted"],"fileTypesAndContributionMap":{}},{"hash":"3225220189bb738c965bd33f0be7189418a86bc3","isMergeCommit":false,"messageTitle":"A-UserGuide: Add user guide","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":5},"java":{"insertions":83,"deletions":46},"md":{"insertions":176,"deletions":40}}},{"hash":"c2c73ec3fe64777787a44f71481d4ab4d0cb02b9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-UserGuide\u0027","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{}},{"hash":"a741558d94a0649547a0687f25d7b11c489669ed","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":21,"deletions":11}}},{"hash":"9f27a937398a14a5e39ae1c3997cf138bbf0b253","isMergeCommit":false,"messageTitle":"Update README.md part 2","messageBody":"Add /","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]},{"date":"2024-09-11","commitResults":[{"hash":"f354e140064be46763539cc6a1e304c2e728ef8d","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"Reposition image","fileTypesAndContributionMap":{"md":{"insertions":10,"deletions":6}}},{"hash":"4011f855991ce1db1d7d3f640cf2486eafc0f1d7","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"I dislike markdown","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":1}}}]},{"date":"2024-09-13","commitResults":[{"hash":"cf1a910ec1dfcbbdb61277622cb7b9d5c865c420","isMergeCommit":false,"messageTitle":"Fix ordering and tidy code","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":82,"deletions":66}}},{"hash":"fd5e804f8ed893758efcd0238d045575117fe21c","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of https://github.com/KrashKart/ip","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"074e49b2936f12cf4d4df6c3101497492a401c82","isMergeCommit":false,"messageTitle":"Edit gitignore and simplify comparison for CustomDateTime","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"502a62c33466bab06bccbb8a1e29977015385d6e","isMergeCommit":false,"messageTitle":"Remove data.txt from repo","messageBody":"This file is not necessary for the repo as it is a local save used\nto test code. This can be ignored.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4}}}]},{"date":"2024-09-14","commitResults":[{"hash":"1825646dc8d73a12b9832e1839473876d051aae0","isMergeCommit":false,"messageTitle":"Improve code standard and quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":82}}}]},{"date":"2024-09-17","commitResults":[{"hash":"5641531993c906f6716454afb5dc274181ccec66","isMergeCommit":false,"messageTitle":"Final release","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"txt":{"insertions":0,"deletions":1},"java":{"insertions":24,"deletions":31}}},{"hash":"e3d1141643675fa607337ba44238242f744ea9d8","isMergeCommit":false,"messageTitle":"Update gitignore","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0}}},{"hash":"0febd7382aae74dbf1880eaddc142ace0ba3a5c2","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":9,"deletions":8}}}]}]},"authorFileTypeContributionMap":{"KrashKart":{"java":1977,"md":189,"fxml":57,"sh":1,"bat":1,"gradle":26,"txt":14}},"authorContributionVariance":{"KrashKart":109805.08},"authorDisplayNameMap":{"KrashKart":"CS2103T-F14a-4 WONG.. JIE"}}
