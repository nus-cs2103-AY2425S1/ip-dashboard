[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"    mainClass.set(\"nave.Launcher\")","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"    archiveBaseName \u003d \"nave\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"checkstyle {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Jollybomber":21,"-":39}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"date,2020-04-04","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"new","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"yes","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"testing ","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Jollybomber":5}},{"path":"src/main/java/nave/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":" * The {@code Deadline} class represents a task with a deadline, including a name and a due date.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":" * It extends the {@code Task} class to add functionality for handling tasks that have a specific due date.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":" * This includes parsing input to create a {@code Deadline} instance, formatting the task for display, and","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":" * converting it to a file-compatible format.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"     * Constructs a {@code Deadline} task with the specified name and due date.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"     * @param name the name of the deadline task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"     * @param endDate the due date for the deadline task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    public Deadline(String name, LocalDate endDate) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"        super(name);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"     * Creates a new {@code Deadline} instance based on the provided input string.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"     * The method uses regular expressions to validate the input and ensure it contains both a valid task name","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"     * and a properly formatted due date. If the input does not match the expected pattern, appropriate","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"     * {@code WrongInputException}s are thrown based on the nature of the input error.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"     * @param input the input string containing the task name and due date","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"     * @return a {@code Deadline} object if the input is valid","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"     * @throws WrongInputException if the input contains errors such as incorrect date format or missing details","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"    public static Deadline handleInput(String input) throws WrongInputException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"        Pattern correctPattern \u003d Pattern.compile(\"((\\\\w+\\\\s*)+) /by (\\\\d{4}-\\\\d{2}-\\\\d{2})\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"        Matcher correctMatcher \u003d correctPattern.matcher(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"        Pattern wrongPattern1 \u003d Pattern.compile(\"(\\\\s*|\\\\s*/by((.+\\\\s*)*))\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"        Matcher wrongMatcher1 \u003d wrongPattern1.matcher(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"        Pattern wrongPattern2 \u003d Pattern.compile(\"((.+\\\\s*)*) (/by)?\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"        Matcher wrongMatcher2 \u003d wrongPattern2.matcher(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"        Pattern wrongPattern3 \u003d Pattern.compile(\"((\\\\w+\\\\s*)+) /by (\\\\d+-\\\\d+-\\\\d+|.+)\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"        Matcher wrongMatcher3 \u003d wrongPattern3.matcher(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"        if (correctMatcher.matches()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"            LocalDate date \u003d LocalDate.parse(correctMatcher.group(3));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"            return new Deadline(correctMatcher.group(1), date);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        } else if (wrongMatcher3.matches()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"Your date format is wrong!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"        } else if (wrongMatcher1.matches()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"Hmmm... This deadline doesn\u0027t have a name!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"        } else if (wrongMatcher2.matches()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"You forgot to specify a due date!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"        } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"            //Shouldn\u0027t reach if all error cases handled","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"Something\u0027s wrong!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"     * Returns a response message indicating that a new deadline task has been added.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"     * This method is used to generate a confirmation message when a new deadline","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"     * task is created.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"     * @return a string message indicating the addition of a new deadline task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"    public String creationResponse() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"        return \"Ok! I\u0027ve added a new task with a deadline:\\n\" + this","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"                + \"\\n\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"     * Returns the string format of the deadline task suitable for saving to a csv file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"     * This method includes the task\u0027s name and due date, separated by a comma, and ends with a newline character.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"     * @return the file format string of the deadline task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"        return super.toFileFormat() + \",\" + endDate.toString() + System.lineSeparator();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"     * This method includes a prefix indicating that the task is a deadline item, followed by the task\u0027s","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"     * completion status, name, and due date formatted as \"dd MMM yyyy EEE\".","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jollybomber"},"content":"     * @return a string representation of the deadline task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jollybomber"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jollybomber"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jollybomber"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLL yyyy EEE\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jollybomber"},"content":"        String endDateString \u003d \" (by: \" + endDate.format(formatter) + \")\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jollybomber"},"content":"        return \"[D]\" + super.toString() + endDateString;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Jollybomber":112}},{"path":"src/main/java/nave/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    @FXML","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"    @FXML","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"    private void flip() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"    public static DialogBox getNaveDialog(String text, Image img) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        db.flip();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"        return db;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"    public static DialogBox getNaveDialog(String text, Image img, Parser.Command commandType) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"        db.flip();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"        db.changeDialogStyle(commandType);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"        return db;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"    @SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"    private void changeDialogStyle(Parser.Command commandType) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"        switch(commandType) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"        case TASK -\u003e dialog.getStyleClass().add(\"add-label\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"        case MARK -\u003e dialog.getStyleClass().add(\"marked-label\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"        case DELETE -\u003e dialog.getStyleClass().add(\"delete-label\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"        default -\u003e dialog.getStyleClass().add(\"\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Jollybomber":78}},{"path":"src/main/java/nave/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * The {@code Event} class represents a task with a start and end date.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":" * It extends the {@code Task} class to add functionality for handling tasks that have a specific time frame.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":" * This includes parsing input to create an {@code Event} instance, formatting the task for display, and","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":" * converting it to a file-compatible format.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"    private final String startDate;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"    private final String endDate;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"     * Constructs an {@code Event} task with the specified name, start date, and end date.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"     * @param name the name of the event task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"     * @param startDate the start date of the event","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"     * @param endDate the end date of the event","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    public Event(String name, String startDate, String endDate) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"        super(name);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"     * Creates a new {@code Event} instance based on the provided input string.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"     * The method uses regular expressions to validate the input and ensure it contains a valid task name as well","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"     * as properly formatted start and end dates. If the input does not match the expected pattern, appropriate","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"     * {@code WrongInputException}s are thrown based on the nature of the input error.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"     * @param input the input string containing the task name, start date, and end date","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"     * @return an {@code Event} object if the input is valid","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"     * @throws WrongInputException if the input contains errors such as missing details or incorrect date format","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"    public static Event handleInput(String input) throws WrongInputException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"        Pattern correctPattern \u003d","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"                Pattern.compile(\"((\\\\w+\\\\s*)+) /from ((\\\\w+\\\\s*)+) /to ((\\\\w+\\\\s*)+)\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"        Matcher correctMatcher \u003d correctPattern.matcher(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"        Pattern wrongPattern1 \u003d Pattern.compile(","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"                \"(\\\\s*|\\\\s*/from|\\\\s*/to|\\\\s*/from.*/to ((.+\\\\s*)*))\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"        Matcher wrongMatcher1 \u003d wrongPattern1.matcher(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"        Pattern wrongPattern2 \u003d Pattern.compile(\"((.+\\\\s*)*)( /from)?( /to)?\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"        Matcher wrongMatcher2 \u003d wrongPattern2.matcher(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"        if (correctMatcher.matches()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"            return new Event(correctMatcher.group(1),","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"                    correctMatcher.group(3), correctMatcher.group(5));","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        } else if (wrongMatcher1.matches()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"Hmmm... This event doesn\u0027t have a name!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"        } else if (wrongMatcher2.matches()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"You forgot to specify a start and end date!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"        } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"            //Shouldn\u0027t reach if all error cases handled","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"Something\u0027s wrong!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"     * Returns a response message indicating that a new event task has been added.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"     * This method is used to generate a confirmation message when a new event task is created.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"     * @return a string message indicating the addition of a new event task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"    public String creationResponse() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"        return \"Ok! I\u0027ve added a new event:\\n\" + this","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"                + \"\\n\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"     * Returns the string format of the event task suitable for saving to a file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"     * This method includes the task\u0027s name, start date, and end date, separated by commas,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"     * and ends with a newline character.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"     * @return the file format string of the event task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"        return super.toFileFormat() + \",\" + startDate + \",\" + endDate + System.lineSeparator();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"     * This method includes a prefix indicating that the task is an event item, followed by the task\u0027s","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"     * completion status, name, and formatted start and end dates.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"     * @return a string representation of the event task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jollybomber"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jollybomber"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jollybomber"},"content":"        String dateString \u003d \" (from: \" + startDate + \" to: \"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jollybomber"},"content":"                + endDate + \")\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jollybomber"},"content":"        return \"[E]\" + super.toString() + dateString;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Jollybomber":110}},{"path":"src/main/java/nave/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":" * The entry point for launching the JavaFX application.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" * This class contains the main method which is the entry point of the application. It launches the","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":" * JavaFX application specified by the {@link Main} class.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"public class Launcher {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Jollybomber":16}},{"path":"src/main/java/nave/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":" * A GUI for Nave using FXML.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"    private final Nave nave \u003d new Nave();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    @Override","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setNave(nave); // inject the Nave instance","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setScene(scene);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"            stage.show();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Jollybomber":35}},{"path":"src/main/java/nave/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"    @FXML","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"    @FXML","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    @FXML","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"    @FXML","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"    private Nave nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"    private Scene scene;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"    private final Image naveImage \u003d new Image(","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaNave.png\")));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"    @FXML","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"    /** Injects the Nave instance */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"    public void setNave(Nave d) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"        nave \u003d d;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"    /** Injects the Scene instance */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"    public void setScene(Scene s) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"        scene \u003d s;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"    /** Greet\u0027s User */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"    public void greetUser() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"                DialogBox.getNaveDialog(nave.getGreeting(), naveImage)","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"        );","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        nave.guiStart();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Nave\u0027s reply and then appends them to","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"    @FXML","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"        String response \u003d nave.getResponse(input);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"        Parser.Command commandType \u003d nave.getCommandType();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"                DialogBox.getNaveDialog(response, naveImage, commandType)","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"        );","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"        if (commandType \u003d\u003d Parser.Command.BYE) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"            closeWindow();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"     * Closes the application or window.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"    private void closeWindow() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"        Duration delay \u003d Duration.seconds(3);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"        PauseTransition pause \u003d new PauseTransition(delay);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"        pause.setOnFinished(event -\u003e {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"            Stage stage \u003d (Stage) scene.getWindow();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"            if (stage !\u003d null) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"                stage.close();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"        });","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"        pause.play();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Jollybomber":97}},{"path":"src/main/java/nave/Nave.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":" * The {@code Nave} class represents the main chatbot.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * It interacts with the user, processes commands, manages tasks, and handles","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" * persistence of task data.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"@SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"public class Nave {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"    private final TaskStorage storage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"    private final Ui ui;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"    private final Parser parser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"    private Parser.Command commandType;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    Nave() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"        this.storage \u003d new TaskStorage(\"./data/tasks.txt\");","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"     * Starts the application and enters the main loop.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"     * The method displays a greeting to the user, processes user input in a loop","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"     * until the user inputs \"bye\", and performs actions based on the parsed input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"     * It handles various commands such as listing tasks, marking tasks, unmarking tasks,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"     * adding tasks, deleting tasks, and providing help messages.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"    public void run() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"        //Greet User","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"        ui.greet();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"        //Load tasks from local file","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"        storage.onStart(tasks);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"        listenAndRespond();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"        //Say goodbye","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"        ui.sayFarewell();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"     * Waits for user input then parses information and responds.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"    public void listenAndRespond() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"        Scanner inputReader \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"        //Get user\u0027s input","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"        String userInput \u003d inputReader.nextLine();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"            String response \u003d getResponse(userInput);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"            ui.showResponse(response);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"            userInput \u003d inputReader.nextLine();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"        String output;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"        int place;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"        commandType \u003d parser.handleInput(userInput);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"        switch(commandType) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"        case LIST:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"            output \u003d tasks.listItems();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"        case HELP:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"            output \u003d ui.guiHelp();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"        case MARK:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"            place \u003d parser.parseMark(userInput);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"            assert place \u003e 0 : \"Tasks index should be a positive number\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"            output \u003d tasks.markItem(place);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"        case UNMARK:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"            place \u003d parser.parseUnmark(userInput);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"            assert place \u003e 0 : \"Tasks index should be a positive number\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"            output \u003d tasks.unmarkItem(place);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"        case TASK:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"            try {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"                Task curr \u003d parser.parseTask(userInput);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"                tasks.addTask(curr);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"                storage.saveToFile(curr.toFileFormat()); //Add task to local file","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"                output \u003d curr.creationResponse() + tasks.countTasks();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"            } catch (WrongInputException e) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"                output \u003d e.getMessage();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"        case DELETE:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"            place \u003d parser.parseDelete(userInput);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"            assert place \u003e 0 : \"Tasks index should be a positive number\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"            storage.deleteFromFile(place); //Delete task from local file","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"            output \u003d tasks.deleteItem(place);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jollybomber"},"content":"        case BYE:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jollybomber"},"content":"            output \u003d ui.guiFarewell();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jollybomber"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jollybomber"},"content":"        case FIND:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jollybomber"},"content":"            String keyword \u003d parser.parseFind(userInput);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jollybomber"},"content":"            output \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jollybomber"},"content":"            break;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jollybomber"},"content":"        default:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jollybomber"},"content":"            output \u003d ui.guiUnsure();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jollybomber"},"content":"        return output;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jollybomber"},"content":"     * Generates a greeting for the user\u0027s chat message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jollybomber"},"content":"    public String getGreeting() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jollybomber"},"content":"        return ui.guiGreet();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jollybomber"},"content":"     * Loads tasks from storage when starting up Nave on GUI.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jollybomber"},"content":"    public void guiStart() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jollybomber"},"content":"        //Load tasks from local file","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jollybomber"},"content":"        storage.onStart(tasks);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jollybomber"},"content":"     * Gets command type of command input by user.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jollybomber"},"content":"    public Parser.Command getCommandType() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jollybomber"},"content":"        return commandType;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jollybomber"},"content":"     * The entry point of the application.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jollybomber"},"content":"     * Creates a new {@code Nave} instance and starts it by calling the {@code run} method.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jollybomber"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jollybomber"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jollybomber"},"content":"        new Nave().run();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"Jollybomber":152}},{"path":"src/main/java/nave/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * The {@code Parser} class is responsible for interpreting user input and","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" * converting it into appropriate commands or data for further processing.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":" * It provides methods for handling different types of commands and parsing","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":" * various aspects of the input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"public class Parser {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"     * The {@code Command} enum defines the different types of commands","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"     * that the {@code Parser} can recognize.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    public enum Command {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"        LIST, HELP, MARK, UNMARK, TASK, DELETE, UNSURE, FIND, BYE","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"     * Determines the appropriate {@code Command} based on the user input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"     * This method uses regular expressions to match the input against various","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"     * command patterns and returns the corresponding {@code Command}.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"     * @param input the user input string","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"     * @return the {@code Command} corresponding to the input","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"    public Command handleInput(String input) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"        // Regex for mark/unmark commands","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"        Pattern markPattern \u003d Pattern.compile(\"^(mark|unmark) (\\\\d+)$\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"        Matcher markMatcher \u003d markPattern.matcher(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"        // Regex for delete command","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"        Pattern deletePattern \u003d Pattern.compile(\"^delete (\\\\d+)$\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"        Matcher deleteMatcher \u003d deletePattern.matcher(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"        // Regex for task commands","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"        Pattern taskPattern \u003d Pattern.compile(\"^(todo|deadline|event)\\\\s?(.*)$\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"        Matcher taskMatcher \u003d taskPattern.matcher(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"        //Regex checking for find","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"        Pattern findPattern \u003d Pattern.compile(\"^find (.+)$\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"        Matcher findMatcher \u003d findPattern.matcher(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"            return Command.LIST;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"        } else if (input.equals(\"/help\")) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"            return Command.HELP;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"        } else if (markMatcher.matches()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"            String markOrNot \u003d markMatcher.group(1);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"            return markOrNot.equals(\"mark\") ? Command.MARK : Command.UNMARK;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"        } else if (taskMatcher.matches()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"            return Command.TASK;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        } else if (deleteMatcher.matches()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"            return Command.DELETE;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"        } else if (findMatcher.matches()) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"            return Command.FIND;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"            return Command.BYE;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"        } else {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"            return Command.UNSURE;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"     * Parses the input string to extract the task index for a mark command.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"     * @param input the input string containing the mark command","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"     * @return the index of the task to be marked, or -1 if the input is invalid","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"    public int parseMark(String input) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"        Pattern markPattern \u003d Pattern.compile(\"^(mark) (\\\\d+)$\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"        Matcher markMatcher \u003d markPattern.matcher(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"        return markMatcher.matches() ? Integer.parseInt(markMatcher.group(2)) : -1;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"     * Parses the input string to extract the task index for an unmark command.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"     * @param input the input string containing the unmark command","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"     * @return the index of the task to be unmarked, or -1 if the input is invalid","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"    public int parseUnmark(String input) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"        Pattern markPattern \u003d Pattern.compile(\"^(unmark) (\\\\d+)$\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"        Matcher markMatcher \u003d markPattern.matcher(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"        return markMatcher.matches() ? Integer.parseInt(markMatcher.group(2)) : -1;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"     * Parses the input string to extract the task index for a delete command.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"     * @param input the input string containing the delete command","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"     * @return the index of the task to be deleted, or -1 if the input is invalid","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"    public int parseDelete(String input) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"        Pattern deletePattern \u003d Pattern.compile(\"^delete (\\\\d+)$\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"        Matcher deleteMatcher \u003d deletePattern.matcher(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"        return deleteMatcher.matches() ? Integer.parseInt(deleteMatcher.group(1)) : -1;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jollybomber"},"content":"     * Parses the input string to create a {@code Task} object based on the command.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jollybomber"},"content":"     * @param input the input string containing the task command","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jollybomber"},"content":"     * @return a {@code Task} object corresponding to the input command","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jollybomber"},"content":"     * @throws WrongInputException if the input does not match the expected task patterns","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jollybomber"},"content":"    public Task parseTask(String input) throws WrongInputException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jollybomber"},"content":"        Pattern taskPattern \u003d Pattern.compile(\"^(todo|deadline|event)\\\\s(.*)$\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jollybomber"},"content":"        Matcher taskMatcher \u003d taskPattern.matcher(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jollybomber"},"content":"        if (!taskMatcher.matches()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"There is an error in your command\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jollybomber"},"content":"        return switch (taskMatcher.group(1)) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jollybomber"},"content":"        case \"todo\" -\u003e Todo.handleInput(taskMatcher.group(2));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jollybomber"},"content":"        case \"deadline\" -\u003e Deadline.handleInput(taskMatcher.group(2));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jollybomber"},"content":"        case \"event\" -\u003e Event.handleInput(taskMatcher.group(2));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jollybomber"},"content":"        default -\u003e throw new WrongInputException(\"Unknown task type\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jollybomber"},"content":"        };","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jollybomber"},"content":"     * Extracts the keyword from a \"find\" command string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jollybomber"},"content":"     * This method uses a regular expression to match and extract the keyword from the input string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jollybomber"},"content":"     * The input string is expected to start with the word \"find\" followed by a space and then the keyword.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jollybomber"},"content":"     * If the input matches this pattern, the keyword is returned. If the input does not match the pattern,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jollybomber"},"content":"     * an empty string is returned.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jollybomber"},"content":"     * @param input The input string that may contain a \"find\" command followed by a keyword.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jollybomber"},"content":"     *              The expected format is \"find [keyword]\", where [keyword] is any non-empty string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jollybomber"},"content":"     * @return The keyword extracted from the input string if it matches the pattern; otherwise, an empty string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jollybomber"},"content":"     *         The returned keyword is everything after the initial \"find \" in the input string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jollybomber"},"content":"    public String parseFind(String input) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jollybomber"},"content":"        Pattern findPattern \u003d Pattern.compile(\"^find (.+)$\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jollybomber"},"content":"        Matcher findMatcher \u003d findPattern.matcher(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Jollybomber"},"content":"        return findMatcher.matches() ? findMatcher.group(1) : \"\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"Jollybomber":146}},{"path":"src/main/java/nave/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":" * The {@code Task} class represents a generic task with a name and a status indicating whether it is done.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":" * This is an abstract class that serves as a base for specific types of tasks such as {@code Todo},","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * {@code Deadline}, and {@code Event}. It provides common functionality for marking, unmarking, and","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" * displaying tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"public abstract class Task {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"    private final String name;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"    private boolean done;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"     * Constructs a {@code Task} with the specified name.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"     * Initializes the task as not done.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"     * @param name the name of the task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"    public Task(String name) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"     * If the task is already marked as done, it does nothing and returns {@code false}.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"     * Otherwise, it marks the task as done and returns {@code true}.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"     * @return {@code true} if the task was successfully marked; {@code false} if it was already marked","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"    public boolean mark() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"        if (done) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"            return false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"            done \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"            return true;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"     * Unmarks the task, setting its status to not done.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"     * If the task is already not done, it does nothing and returns {@code false}.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"     * Otherwise, it unmarks the task and returns {@code true}.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"     * @return {@code true} if the task was successfully unmarked; {@code false} if it was already unmarked","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"    public boolean unmark() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"        if (!done) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"            return false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"            done \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"            return true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"     * The string includes a marker indicating whether the task is done or not, followed by the task\u0027s name.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"     * @return a string representation of the task, including its completion status and name","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"        String checked \u003d done","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"                ? \"[X] \"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"                : \"[] \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"        return checked + name;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"     * Returns the string format of the task suitable for saving to a csv file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"     * This method provides a basic representation of the task, typically including only the name of the task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"     * Subclasses may override this method to include additional information as needed for their specific formats.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"     * @return a string format of the task for file storage","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"        return name;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"     * Provides a response message that is displayed when the task is created.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"     * This is an abstract method that must be implemented by subclasses to return a creation-specific","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"     * response message tailored to the type of task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"     * @return a string response message indicating task creation details","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"    abstract String creationResponse();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Jollybomber":102}},{"path":"src/main/java/nave/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":" * The {@code TaskList} class manages a list of {@code Task} objects.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * It provides methods for adding, listing, marking, unmarking, and deleting tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"public class TaskList {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"     * Initializes an empty list of tasks.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"     * Adds a {@code Task} to the task list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"     * @param task the {@code Task} to be added to the list","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"        tasks.add(task);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"     * Returns a message indicating the number of tasks currently in the list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"     * @return a string message stating the number of tasks","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"    public String countTasks() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"        return \"You have \" + tasks.size() + \" tasks now.\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"     * Returns a string listing all tasks in the list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"     * If the list is empty, returns a message indicating that no tasks have been added.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"     * Otherwise, returns a formatted list of all tasks with their index.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"     * @return a string containing all tasks in the list","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"    public String listItems() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"        //Check if there are any tasks","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"            return \"You haven\u0027t added anything to the list, dummy!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"        StringBuilder fullList \u003d new StringBuilder(\"Here are your tasks:\\n\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"            String currItem \u003d tasks.indexOf(t) + 1 + \".\" + t + \"\\n\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"            fullList.append(currItem);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"        fullList.append(\"That\u0027s all, you can do this!\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"        return fullList.toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"     * Marks a task as completed based on its position in the list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"     * @param place the position (1-based index) of the task to be marked","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"     * @return a message indicating whether the task was successfully marked or already marked","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"    public String markItem(int place) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"            Task curr \u003d tasks.get(place - 1);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"            return curr.mark()","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"                ? \"Well done! I have checked this item off the list:\\n\" + curr","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"                : \"This item was already marked as done previously!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"            return \"This task does not exist!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"     * Unmarks a task as completed based on its position in the list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"     * @param place the position (1-based index) of the task to be unmarked","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"     * @return a message indicating whether the task was successfully unmarked or already unchecked","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"    public String unmarkItem(int place) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"            Task curr \u003d tasks.get(place - 1);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"            return curr.unmark()","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"                ? \"Oh no! It\u0027s ok, I will uncheck this item for now:\\n\" + curr","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"                : \"This item was already unchecked previously!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"            return \"This task does not exist!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"     * Deletes a task from the list based on its position.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"     * @param place the position (1-based index) of the task to be deleted","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"     * @return a message indicating that the task was deleted, along with the updated count of tasks","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jollybomber"},"content":"    public String deleteItem(int place) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jollybomber"},"content":"            Task deleted \u003d tasks.remove(place - 1);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jollybomber"},"content":"            return \"I have taken this item off the list:\\n\" + deleted","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jollybomber"},"content":"                    + \"\\n\" + countTasks();","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jollybomber"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jollybomber"},"content":"            return \"This task does not exist!\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jollybomber"},"content":"     * Searches for tasks in the list that contain the specified keyword.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jollybomber"},"content":"     * This method iterates through the list of tasks and checks if each task\u0027s string representation","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jollybomber"},"content":"     * contains the provided keyword. If matching tasks are found, they are listed in a formatted string.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jollybomber"},"content":"     * If no tasks match the keyword, a message indicating this is returned.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jollybomber"},"content":"     * @param keyword The keyword to search for within the tasks. This parameter is case-sensitive.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jollybomber"},"content":"     * @return A string that either contains the list of matching tasks, each prefixed with its index,","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jollybomber"},"content":"     *         or a message indicating that no tasks were found containing the specified keyword.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jollybomber"},"content":"     *         The result string will include the header \"Here are the matching tasks in your list:\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jollybomber"},"content":"     *         followed by the list of tasks, or a message stating that no tasks were found.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jollybomber"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jollybomber"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jollybomber"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jollybomber"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jollybomber"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jollybomber"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jollybomber"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jollybomber"},"content":"            return \"No tasks found containing the keyword: \" + keyword;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jollybomber"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jollybomber"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jollybomber"},"content":"            result.append(i + 1).append(\".\").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jollybomber"},"content":"        return result.toString();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Jollybomber":143}},{"path":"src/main/java/nave/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"import java.io.File;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":" * The {@code TaskStorage} class handles the storage and retrieval of tasks","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":" * from a file. It provides methods for loading tasks from a file, saving new","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":" * tasks to the file, and deleting tasks from the file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"public class TaskStorage {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    private final String filePathString;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"    private final Path filePath;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"     * Constructs a {@code TaskStorage} object with the specified file path.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"     * @param filePathString the path to the file where tasks are stored","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"    public TaskStorage(String filePathString) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"        this.filePathString \u003d filePathString;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"        this.filePath \u003d Path.of(filePathString);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"     * Loads tasks from the file specified by {@code filePathString} and","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"     * adds them to the given {@code TaskList}.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"     * The method reads the file line by line, parses the task information,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"     * and creates appropriate {@code Task} objects (such as {@code Todo},","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"     * {@code Deadline}, or {@code Event}) based on the data in each line.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"     * @param list the {@code TaskList} to which the tasks will be added","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"    public void onStart(TaskList list) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"            File loadFile \u003d new File(filePathString);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"            Scanner scanner \u003d new Scanner(loadFile);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"                String currLine \u003d scanner.nextLine();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"                String[] split \u003d currLine.split(\",\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"                switch (split.length) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"                case 1:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"                    list.addTask(new Todo(split[0]));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"                    break;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"                case 2:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"                    list.addTask(new Deadline(split[0], LocalDate.parse(split[1])));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"                    break;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"                case 3:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"                    list.addTask(new Event(split[0], split[1], split[2]));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"                    break;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"                default:","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"                    return;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"                }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"            //Local storage file should be created beforehand at \"./data/tasks.txt\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"            if (!Files.isDirectory(Path.of(\"./data\"))) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"                System.out.println(\"Directory \u0027./data\u0027 does not exist. Please create it first.\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"                System.exit(0);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"            } else {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"                System.out.println(\"File \u0027./data/tasks.txt\u0027 does not exist. Please create it first.\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"                System.exit(0);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"     * Appends the given content to the file specified by {@code filePathString}.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"     * This method is used to save new task data to the file. The content is","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"     * added at the end of the file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"     * @param content the content to be written to the file","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"    public void saveToFile(String content) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"            FileWriter writer \u003d new FileWriter(filePathString, true);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"            writer.write(content);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"            writer.close();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"     * Deletes the task at the specified position from the file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"     * This method reads the file, skips the line corresponding to the specified","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"     * task index, and writes the remaining lines to a temporary file. The","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jollybomber"},"content":"     * temporary file is then copied back to the original file, effectively","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jollybomber"},"content":"     * removing the task at the specified index.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jollybomber"},"content":"     * @param place the index of the task to be deleted","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jollybomber"},"content":"    public void deleteFromFile(int place) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jollybomber"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePathString));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jollybomber"},"content":"            FileWriter writer \u003d new FileWriter(\"./data/temp.txt\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jollybomber"},"content":"            //Counts the lines to find task to delete","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jollybomber"},"content":"            int counter \u003d 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jollybomber"},"content":"            String currLine;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jollybomber"},"content":"            while ((currLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jollybomber"},"content":"                if (counter \u003d\u003d place) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jollybomber"},"content":"                    //If is line to be deleted, it is not copied over","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jollybomber"},"content":"                    counter++;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jollybomber"},"content":"                    continue;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jollybomber"},"content":"                }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jollybomber"},"content":"                //Else, copy the line to temp file","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jollybomber"},"content":"                writer.write(currLine + System.lineSeparator());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jollybomber"},"content":"                counter++;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jollybomber"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jollybomber"},"content":"            writer.close();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jollybomber"},"content":"            //Copy temp file back to original file","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jollybomber"},"content":"            Files.copy(Path.of(\"./data/temp.txt\"), filePath, REPLACE_EXISTING);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jollybomber"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jollybomber"},"content":"            System.out.println(\"There was an error with the file input.\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"Jollybomber":134}},{"path":"src/main/java/nave/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * The {@code Todo} class represents a simple to-do task with a name.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":" * It extends the {@code Task} class to provide functionality specific to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":" * to-do tasks. This includes handling input for task creation, formatting","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":" * the task for display, and converting it to a file-compatible format.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"     * Constructs a {@code Todo} task with the specified name.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"     * @param name the name of the to-do task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"        super(name);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"     * Creates a new {@code Todo} instance based on the provided input string.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"     * The method uses a regular expression to validate the input and ensure","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"     * it contains a valid task name. If the input does not match the expected","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"     * pattern, a {@code WrongInputException} is thrown.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"     * @param input the input string containing the task name","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"     * @return a {@code Todo} object if the input is valid","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"     * @throws WrongInputException if the input does not contain a valid task name","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"    public static Todo handleInput(String input) throws WrongInputException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"        Pattern correctPattern \u003d Pattern.compile(\"((\\\\w+\\\\s*)+)\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"        Matcher correctMatcher \u003d correctPattern.matcher(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"        if (correctMatcher.matches()) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"            return new Todo(input);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"        } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"            throw new WrongInputException(\"This todo doesn\u0027t have a name!\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"     * Returns a response message indicating that a new to-do task has been added.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"     * This method is used to generate a confirmation message when a new to-do","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"     * task is created.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"     * @return a string message indicating the addition of a new to-do task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"    public String creationResponse() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        return \"Ok! I\u0027ve added a new todo task:\\n\" + this","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"                + \"\\n\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"     * Returns the string format of the to-do task suitable for saving to a file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"     * This method appends a newline character to the string format returned by","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"     * the {@code toFileFormat} method in the {@code Task} class.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"     * @return the file format string of the to-do task with a newline","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"        return super.toFileFormat() + System.lineSeparator();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"     * This method includes a prefix indicating that the task is a to-do item,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"     * followed by the status and name of the task.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"     * @return a string representation of the to-do task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Jollybomber":89}},{"path":"src/main/java/nave/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":" * The {@code Ui} class is responsible for interacting with the user through","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":" * textual responses. It provides methods for greeting the user, showing help","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":" * messages, displaying task-related responses, and formatting these responses","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * for better readability.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"public class Ui {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"     * This method prints a welcome message to the console, introducing","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"     * the {@code Nave} application and prompting the user for input.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    public void greet() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"        System.out.println(formatResponse(guiGreet()));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"     * Returns a greeting message to the user for the GUI.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    public String guiGreet() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"        return \"Hello! :) I\u0027m Nave, your personal task management assistant.\\n\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"                + \"What can I do for you today?\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"     * Displays a farewell message to the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"     * This method prints a goodbye message to the console, indicating that","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"     * the application is ending.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"    public void sayFarewell() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"        System.out.println(formatResponse(\"Goodbye :( Come visit me again\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"     * Returns a farewell message to the user for the GUI.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"    public String guiFarewell() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"        return \"Goodbye :( Come visit me again! Closing window in 3 seconds...\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"     * Displays a help message that lists all available commands.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"     * This method prints a help message to the console, providing the user","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"     * with a list of commands they can use to interact with the {@code Nave}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"     * application.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"    public void helpMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"        System.out.println(formatResponse(guiHelp()));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"     * Returns a help message to the user for the GUI.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"    public String guiHelp() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"        return \"\"\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"            /help: shows all available commands","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"            list: shows all tasks","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"            todo [name]: adds a todo with associated name","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"            deadline [name] /by [date]: adds a deadline with associated name and date","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"            event [name] /from [date] /to [date]: adds an event with associated name,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"                start date and end date","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"            find [keyword]: finds tasks that contain the keyword in their name","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"            bye: ends the Nave chatbot\"\"\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"     * Displays a message indicating that the user\u0027s input was not understood.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"     * This method prints a message to the console when the application does","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"     * not recognize the user\u0027s command or input, and suggests using the","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"     * {@code /help} command.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"    public void unsureMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"        System.out.println(formatResponse(guiUnsure()));","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"     * Returns an unsure message to the user for the GUI.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"    public String guiUnsure() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"        return \"I\u0027m not sure what you want me to do! try /help\";","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"     * Displays a given response message to the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"     * This method prints the provided {@code response} to the console,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"     * formatted with borders for better readability.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"     * @param response the message to be displayed","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"    public void showResponse(String response) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jollybomber"},"content":"        System.out.println(formatResponse(response));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jollybomber"},"content":"     * Formats a response message with borders for better readability.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jollybomber"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jollybomber"},"content":"     * This method wraps the provided {@code input} message in a bordered format,","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jollybomber"},"content":"     * which is used for displaying responses to the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jollybomber"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jollybomber"},"content":"     * @param input the message to be formatted","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jollybomber"},"content":"     * @return the formatted message with borders","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jollybomber"},"content":"    public static String formatResponse(String input) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jollybomber"},"content":"        return \"-----------------------------------------------------------------\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jollybomber"},"content":"                + input + \"\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jollybomber"},"content":"                + \"-----------------------------------------------------------------\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"Jollybomber":121}},{"path":"src/main/java/nave/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":" * {@code WrongInputException} is a custom exception class used to signal that","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":" * an invalid input was encountered. It extends the {@code Exception} class","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":" * to provide specific error handling for cases where user input does not meet","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":" * expected criteria.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"public class WrongInputException extends Exception {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"     * Constructs a new {@code WrongInputException} with the specified detail","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"     * message.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"     * @param errorMessage the detail message that describes the reason for","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"     *                     the exception","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    public WrongInputException(String errorMessage) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"        super(errorMessage);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-08-24","isFullCredit":false}],"authorContributionMap":{"Jollybomber":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"         stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"        \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\"/\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"        \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\"/\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Jollybomber":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"            prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"nave.MainWindow\"\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"                prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"Jollybomber":21}},{"path":"src/test/java/nave/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"    public void successfulCreation() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(new Deadline(\"deadline test 1\", LocalDate.parse(\"2024-01-01\")).toString(),","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"                    Deadline.handleInput(\"deadline test 1 /by 2024-01-01\").toString());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_noName1() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Hmmm... This deadline doesn\u0027t have a name!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_noName2() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\" /by\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Hmmm... This deadline doesn\u0027t have a name!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_noName3() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\" /by \");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Hmmm... This deadline doesn\u0027t have a name!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_noName4() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"/by 2024-01-01\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Hmmm... This deadline doesn\u0027t have a name!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_noName5() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"/by abc\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Hmmm... This deadline doesn\u0027t have a name!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_noDate1() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"no date test 1 \");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"You forgot to specify a due date!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_noDate2() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"no date test 2 /by\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"You forgot to specify a due date!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_wrongDate1() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"wrong date test 1 /by 2024-1-1\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Your date format is wrong!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_wrongDate2() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"wrong date test 2 /by today\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Your date format is wrong!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_wrongDate3() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"wrong date test 3 /by 01-01-2024\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Your date format is wrong!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_others1() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\" others   test 1 /by 2024-01-01\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Something\u0027s wrong!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jollybomber"},"content":"    public void failedCreation_others2() {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jollybomber"},"content":"            Deadline.handleInput(\"deadlinetest3/by 2024-01-01\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"Something\u0027s wrong!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"Jollybomber":135}},{"path":"src/test/java/nave/NaveTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"public class NaveTest {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"    private static final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"    private static ByteArrayInputStream input;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"    @BeforeAll","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"    public static void setUp() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"    public void runAndExit() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"        input \u003d new ByteArrayInputStream(\"bye\".getBytes());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"        System.setIn(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"        Nave.main(null);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"        assertEquals(\"\"\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"                Hello! :) I\u0027m Nave, your personal task management assistant.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jollybomber"},"content":"                What can I do for you today?","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jollybomber"},"content":"                Goodbye :( Come visit me again","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jollybomber"},"content":"                \"\"\", output.toString());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jollybomber"},"content":"        output.reset();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jollybomber"},"content":"    public void helpMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jollybomber"},"content":"        input \u003d new ByteArrayInputStream(\"/help\\nbye\".getBytes());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jollybomber"},"content":"        System.setIn(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jollybomber"},"content":"        Nave.main(null);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jollybomber"},"content":"        assertEquals(\"\"\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jollybomber"},"content":"                Hello! :) I\u0027m Nave, your personal task management assistant.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jollybomber"},"content":"                What can I do for you today?","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jollybomber"},"content":"                /help: shows all available commands","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jollybomber"},"content":"                list: shows all tasks","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jollybomber"},"content":"                todo [name]: adds a todo with associated name","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jollybomber"},"content":"                deadline [name] /by [date]: adds a deadline with associated name and date","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jollybomber"},"content":"                event [name] /from [date] /to [date]: adds an event with associated name,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jollybomber"},"content":"                    start date and end date","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jollybomber"},"content":"                bye: ends the Nave.Nave chatbot","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jollybomber"},"content":"                Goodbye :( Come visit me again","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jollybomber"},"content":"                -----------------------------------------------------------------","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jollybomber"},"content":"                \"\"\", output.toString());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jollybomber"},"content":"        output.reset();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"Jollybomber":61}},{"path":"src/test/java/nave/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"package nave;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"public class TodoTest {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"    public void todoCreationSuccess() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(new Todo(\"test item 1\").toString(), Todo.handleInput(\"test item 1\").toString());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"            fail();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jollybomber"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jollybomber"},"content":"    @Test","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jollybomber"},"content":"    public void todoExceptionThrown() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jollybomber"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jollybomber"},"content":"            Todo.handleInput(\"\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jollybomber"},"content":"        } catch (WrongInputException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"            assertEquals(\"This todo doesn\u0027t have a name!\", e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jollybomber"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jollybomber"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jollybomber"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"Jollybomber":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jollybomber"},"content":"/help","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Jollybomber"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jollybomber"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jollybomber"},"content":"deadline return book /by","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jollybomber"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jollybomber"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jollybomber"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jollybomber"},"content":"mark 4","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jollybomber"},"content":"mark 3","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jollybomber"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jollybomber"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jollybomber"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jollybomber"},"content":"unmark 4","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jollybomber"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jollybomber"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Jollybomber":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jollybomber"},"content":"java -classpath ../bin Nave \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"Jollybomber":1,"-":37}}]
