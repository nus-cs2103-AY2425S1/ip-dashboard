[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"# Bong project template","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"This is a project template for a greenfield Java project. Given below are instructions on how to use it.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"3. After that, locate the `src/main/java/bong/Bong.java` file, right-click it, and choose `Run bong.Bong.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"samuelthen":3,"-":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"    mainClass.set(\"bong.Bong\")","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"    archiveFileName \u003d \u0027bong.jar\u0027","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    archiveBaseName \u003d \"bong\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"checkstyle {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"samuelthen":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"# Bong User Guide","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"![Ui](https://samuelthen.github.io/ip/Ui.png)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"Bong is a desktop app that serves as a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"## Quick start","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"1. Ensure you have Java `17` or above installed in your Computer.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"2. Download the latest `.jar` file from [here](https://github.com/).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Bong chatbot.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar Bong.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"5. Type the command in the text box and press Enter to execute it. ","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"   Some example commands you can try:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    * `list` : Lists all tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    * `deadline Physics Homework /by 31 Dec 2024 1500` : Adds a deadline named `Physics Homework` to the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    * `delete 3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"    * `bye` : Exits the app.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"## Features","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"### Listing all tasks : `list`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"Shows a list of all tasks in the Bong chatbot. It is","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"Format: `list`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"* The list is sorted according to the urgency of the tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"### Adding a to-do : `todo`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"Adds a to-do into the task list. ","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"Format: `todo TASK`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"* No date and time is associated with to-do tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"Examples:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"*  `todo Buy groceries` Adds `Buy groceries` into the task list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"[T][] Buy groceries","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"### Adding a deadline : `deadline`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"Adds a task with a deadline into the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"Format: `deadline TASK /by DATE/DATE-TIME`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"* If time is not specified for a date, it is assumed to be 2359 of the specified date","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"Examples:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"*  `deadline CS3230 Assignment /by 20 Sep 2024 1500` Adds `CS3230 Assignment` into the task list with a deadline on 20 Sep 2024 1500","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"*  `deadline SEP application /by 29 Sep 2024` Adds `SEP application` into the task list with a deadline on 20 Sep 2024 2359","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"[D][] SEP application (by: 29/9/2024 2359)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"### Adding an event : `event`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"Adds an event into the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"Format: `event TASK /from DATE/DATE-TIME /to DATE/DATE-TIME`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"* If an event time is not specified for a date, it is assumed to start at 0000 of the specified `from` date and end at 2359 of the specified `to` date","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"Examples:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelthen"},"content":"*  `event Dinner /from 20 Sep 2024 1800 /to 20 Sep 2024 2200` Add `Dinner` into the task list from 20 Sep 2024 1800 to 20 Sep 2024 2200","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelthen"},"content":"*  `event Hackathon /from 29 Sep 2024 to 30 Sep 2024` Add `Hackathon` into the task list from 29 Sep 2024 0000 to 30 Sep 2024 2359","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelthen"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelthen"},"content":"[E][] Hackathon (from: 29/9/2024 0000 to: 20/9/2024 2359)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelthen"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelthen"},"content":"### Mark a task as done : `mark`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelthen"},"content":"Marks the specified task as done from the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelthen"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelthen"},"content":"* Marks the task at the specified `INDEX`.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelthen"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samuelthen"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samuelthen"},"content":"Examples:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samuelthen"},"content":"* `list` followed by `mark 2` marks the 2nd task as done in the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samuelthen"},"content":"* `find Hackathon` followed by `mark 4` marks the task with index 4 as done in the results of the `find` command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samuelthen"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samuelthen"},"content":"[E][X] Hackathon (from: 29/9/2024 0000 to: 20/9/2024 2359)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samuelthen"},"content":"### Unmark a task as done : `unmark`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samuelthen"},"content":"Unmarks the specified task as done from the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samuelthen"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samuelthen"},"content":"* Unmarks the task at the specified `INDEX`.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samuelthen"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samuelthen"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samuelthen"},"content":"Examples:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samuelthen"},"content":"* `list` followed by `unmark 2` unmarks the 2nd task as done in the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samuelthen"},"content":"* `find Hackathon` followed by `unmark 4` unmarks the task with index 4 as done in the results of the `find` command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samuelthen"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samuelthen"},"content":"[E][] Hackathon (by: 29/9/2024 0000 to: 20/9/2024 2359)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samuelthen"},"content":"### Locating tasks by name: `find`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samuelthen"},"content":"Finds tasks whose names contain the given keyword.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samuelthen"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samuelthen"},"content":"* The search is case-insensitive. e.g. `presentation` will match `Presentation`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"samuelthen"},"content":"* Only the name is searched.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"samuelthen"},"content":"* Only partial words will still be matched e.g. `CS` will match `CS2103T Homework`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"samuelthen"},"content":"Examples:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"samuelthen"},"content":"* `find CS` returns `CS2103T Homework` and `CS2109S Problem Set`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"samuelthen"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"samuelthen"},"content":"3. [D][] CS2103T Homework (by: 29/9/2024 2359)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"samuelthen"},"content":"7. [D][] CS2109S Problem Set (by: 30/9/2024 2359)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"samuelthen"},"content":"### Deleting a task : `delete`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"samuelthen"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"samuelthen"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"samuelthen"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"samuelthen"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"samuelthen"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"samuelthen"},"content":"Examples:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"samuelthen"},"content":"* `list` followed by `delete 2` deletes the 2nd task in the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"samuelthen"},"content":"* `find Hackathon` followed by `delete 4` deletes the task with index 4 in the results of the `find` command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"samuelthen"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"samuelthen"},"content":"[E][] Hackathon (by: 29/9/2024 0000 to: 20/9/2024 2359)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"samuelthen"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"samuelthen"},"content":"```","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"samuelthen"},"content":"### Exiting the program : `bye`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"samuelthen"},"content":"Exits the program.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"samuelthen"},"content":"Format: `bye`","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"samuelthen"},"content":"### Saving the data","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"samuelthen"},"content":"Bong chatbot data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"samuelthen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"samuelthen"},"content":"## FAQ","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"samuelthen"},"content":"**Q**: \u003cbr\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"samuelthen"},"content":"What date and date-time format are accepted? \u003cbr\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"samuelthen"},"content":"**A**: \u003cbr\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"samuelthen"},"content":"Date-Time Formats:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"samuelthen"},"content":"1. `d/M/yyyy HHmm`. Example: \"31/12/2023 2359\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"samuelthen"},"content":"2. `d-M-yyyy HHmm`. Example: \"31-12-2023 2359\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"samuelthen"},"content":"3. `dd MMM yyyy HHmm`. Example: \"31 Dec 2023 2359\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"samuelthen"},"content":"4. `yyyy-MM-dd HHmm`. Example: \"2023-12-31 2359\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"samuelthen"},"content":"5. `MMM dd yyyy HHmm`. Example: \"Dec 31 2023 2359\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"samuelthen"},"content":"Date-Only Formats:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"samuelthen"},"content":"1. `d/M/yyyy`. Example: \"31/12/2023\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"samuelthen"},"content":"2. `d-M-yyyy`. Example: \"31-12-2023\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"samuelthen"},"content":"3. `d MMM yyyy`. Example: \"31 Dec 2023\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"samuelthen"},"content":"4. `yyyy-MM-dd`. Example: \"2023-12-31\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"samuelthen"},"content":"5. `MMM dd yyyy`. Example: \"Dec 31 2023\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"samuelthen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"samuelthen"},"content":"## Command summary","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"samuelthen"},"content":"| Action           | Format, Examples                                                                                                         |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"samuelthen"},"content":"|------------------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"samuelthen"},"content":"| **List Tasks**   | `list`\u003cbr\u003ee.g., `list`                                                                                                   |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"samuelthen"},"content":"| **Add To-do**    | `todo TASK`\u003cbr\u003ee.g., `todo Buy groceries`                                                                                |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"samuelthen"},"content":"| **Add Deadline** | `deadline TASK /by DATE/DATE-TIME`\u003cbr\u003ee.g., `deadline CS3230 Assignment /by 20 Sep 2024 1500`                            |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"samuelthen"},"content":"| **Add Event**    | `event TASK /from DATE/DATE-TIME /to DATE/DATE-TIME`\u003cbr\u003ee.g., `event Dinner /from 20 Sep 2024 1800 /to 20 Sep 2024 2200` |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"samuelthen"},"content":"| **Mark Task**    | `mark INDEX`\u003cbr\u003ee.g., `mark 2`                                                                                           |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"samuelthen"},"content":"| **Unmark Task**  | `unmark INDEX`\u003cbr\u003ee.g., `unmark 2`                                                                                       |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"samuelthen"},"content":"| **Find Task**    | `find KEYWORD`\u003cbr\u003ee.g., `find CS`                                                                                        |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"samuelthen"},"content":"| **Delete Task**  | `delete INDEX`\u003cbr\u003ee.g., `delete 3`                                                                                       |","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"samuelthen"},"content":"| **Exit**         | `bye`                                                                                                                    |","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"samuelthen":204,"-":17}},{"path":"src/main/java/bong/Bong.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import bong.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import bong.command.CommandResult;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import bong.utils.BongException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import bong.utils.Parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"import bong.utils.Storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":" * The {@code Bong} class is the main entry point of the application.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":" * It initializes the necessary components and starts the main program loop","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":" * to process user commands.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"public class Bong {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"./data/bong.txt\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"    private final Storage storage;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"    private final Parser parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code Bong} instance.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"     * Initializes the storage, parser, and loads tasks from the storage file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"     * If the storage file cannot be loaded, an empty task list is initialized.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    public Bong() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"        storage \u003d new Storage(DEFAULT_FILE_PATH);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"        loadTasks();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"     * Loads tasks from storage or initializes an empty task list if loading fails.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"    private void loadTasks() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"        } catch (BongException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"        assert tasks !\u003d null : \"TaskList should not be null after initialization\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"     * Processes a user input, executes the corresponding command,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"     * and returns the result as a response.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"     * @param userInput The user input string.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"     * @return The feedback message to the user after executing the command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"            Command command \u003d parser.parseCommand(userInput);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"            assert command !\u003d null : \"Parsed command should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"            CommandResult result \u003d command.execute(tasks);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"            assert result !\u003d null : \"Command result should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"            if (result.isModified()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"                storage.save(tasks.getList());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"            return result.getFeedbackToUser();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"        } catch (BongException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"            return \"An error occurred.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"     * Displays the welcome message for the application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"     * @return A welcome message string.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"        return \"Hello! I\u0027m Bong.\\nWhat can I do for you?\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"     * Launches the Bong application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":89}},{"path":"src/main/java/bong/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    @FXML","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    @FXML","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"     * Constructs a {@code DialogBox} with the specified text and image.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"     * Loads the corresponding FXML file to initialize the layout and sets","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"     * the text and image for the dialog.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * @param text The text content of the dialog box.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     * @param img  The image representing the speaker\u0027s face.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"        loadFxml();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"        setDialogContent(text, img);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"     * Loads the FXML layout for the dialog box.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"    private void loadFxml() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"     * Sets the text and image content for the dialog.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"     * @param text The text content to display.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"     * @param img  The image representing the speaker.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"    private void setDialogContent(String text, Image img) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"        assert dialog !\u003d null : \"Dialog label should be initialized\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"        assert displayPicture !\u003d null : \"Display picture should be initialized\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"     * Flips the dialog box such that the ImageView is on the left and the text is on the right.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"     * This is typically used to distinguish between user and system messages.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"    private void flip() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"        assert getChildren().get(0) instanceof ImageView : \"First child should be an ImageView after flip\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"        assert getChildren().get(1) instanceof Label : \"Second child should be a Label after flip\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"     * Creates a {@code DialogBox} for the user dialog.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"     * @param text The text content of the user dialog.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"     * @param img  The image representing the user\u0027s face.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"     * @return A new {@code DialogBox} instance representing the user dialog.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelthen"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelthen"},"content":"     * Creates a {@code DialogBox} for the Bong dialog (the bot\u0027s response).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelthen"},"content":"     * The dialog box is flipped such that the ImageView is on the left and the text is on the right.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelthen"},"content":"     * @param text The text content of the Bong dialog.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelthen"},"content":"     * @param img  The image representing Bong\u0027s face.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelthen"},"content":"     * @return A new {@code DialogBox} instance representing the Bong dialog.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelthen"},"content":"    public static DialogBox getBongDialog(String text, Image img) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelthen"},"content":"        DialogBox dialogBox \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelthen"},"content":"        dialogBox.flip();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelthen"},"content":"        return dialogBox;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"samuelthen":106}},{"path":"src/main/java/bong/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":" * The {@code Main} class serves as the entry point for the JavaFX application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":" * It initializes the JavaFX stage and scene, sets up the UI components,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":" * and injects an instance of the {@code Bong} class to handle user interactions.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"    private static final int MIN_HEIGHT \u003d 220;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    private static final int MIN_WIDTH \u003d 417;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"    private Bong bong \u003d new Bong();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     * The main entry point for the JavaFX application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"     * This method is called after the JavaFX runtime initializes.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"     * It sets up the primary stage, loads the main window from the FXML file,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"     * and injects the {@code Bong} instance into the controller.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"     * @param stage The primary stage for this JavaFX application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"        assert stage !\u003d null : \"Primary stage should not be null\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"            stage.setMinHeight(MIN_HEIGHT);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"            stage.setMinWidth(MIN_WIDTH);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBong(bong); // inject the Bong instance","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"            stage.show();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"samuelthen":47}},{"path":"src/main/java/bong/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":" * Controller for the main GUI of the application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":" * Manages the layout and functionality of the user interface,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":" * handling user inputs and displaying responses from Bong.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    // \u0027image: Flaticon.com\u0027.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"    private static final Image BONG_IMAGE \u003d new Image(MainWindow.class","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"            .getResourceAsStream(\"/images/cool.png\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"    private static final Image USER_IMAGE \u003d new Image(MainWindow.class","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"            .getResourceAsStream(\"/images/speaking.png\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"    @FXML","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    @FXML","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    @FXML","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    private Bong bong;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * Initializes the main window controller.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     * Binds the vertical scroll value of the scroll pane to the height of the dialog container.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"     * Displays a welcome message from Bong when the application starts.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"    @FXML","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"        assert USER_IMAGE !\u003d null : \"User image should be loaded\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"        assert BONG_IMAGE !\u003d null : \"Bong image should be loaded\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"        assert scrollPane !\u003d null : \"ScrollPane should be initialized\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"        assert dialogContainer !\u003d null : \"DialogContainer should be initialized\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"        assert userInput !\u003d null : \"UserInput should be initialized\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"        dialogContainer.getChildren().add(DialogBox.getBongDialog(new Bong().showWelcomeMessage(), BONG_IMAGE));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"     * Injects the {@code Bong} instance into this controller.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"     * @param bongInstance The {@code Bong} instance to be used by this controller.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"    public void setBong(Bong bongInstance) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"        this.bong \u003d bongInstance;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"     * Handles the user input by creating two dialog boxes: one for the user\u0027s input","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"     * and another for Bong\u0027s response. Appends these dialog boxes to the dialog container.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"     * Clears the user input after processing. If the input is \"bye\", displays a goodbye","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"     * message and closes the application after a short delay.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"    @FXML","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"        String response \u003d bong.getResponse(input);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"        displayDialog(input, response);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"        if (isExitCommand(input)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"            displayExitMessage();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"            scheduleExit();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"     * Displays the user input and Bong\u0027s response in the dialog container.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"     * @param input    The user input text.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"     * @param response The response from Bong.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"    private void displayDialog(String input, String response) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"                DialogBox.getUserDialog(input, USER_IMAGE),","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"                DialogBox.getBongDialog(response, BONG_IMAGE)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelthen"},"content":"     * Checks if the user input is an exit command.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelthen"},"content":"     * @param input The user input text.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelthen"},"content":"     * @return True if the input is \"bye\", otherwise false.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelthen"},"content":"    private boolean isExitCommand(String input) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelthen"},"content":"        return input.trim().equalsIgnoreCase(\"bye\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelthen"},"content":"     * Displays a goodbye message and schedules the application to close.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelthen"},"content":"    private void displayExitMessage() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelthen"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samuelthen"},"content":"                DialogBox.getBongDialog(\"Goodbye! Have a nice day!\", BONG_IMAGE)","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samuelthen"},"content":"        );","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samuelthen"},"content":"     * Schedules the application to close after a short delay.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samuelthen"},"content":"    private void scheduleExit() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samuelthen"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samuelthen"},"content":"            try {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samuelthen"},"content":"                Thread.sleep(2000); // Wait for 2 seconds before closing","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samuelthen"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samuelthen"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samuelthen"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samuelthen"},"content":"            Platform.exit();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samuelthen"},"content":"        });","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"samuelthen":124}},{"path":"src/main/java/bong/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import bong.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"     * Constructs an {@code AddCommand} with the specified task to add.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     * @param task The {@code Task} to be added to the task list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"        this.taskToAdd \u003d task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"     * Executes the command to add the task to the given {@code TaskList}.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The {@code TaskList} to which the task will be added.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"     * @return A {@code CommandResult} containing the feedback to the user and the modification status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    public CommandResult execute(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"        tasks.addTask(taskToAdd);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"        return new CommandResult(","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"                String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"                        taskToAdd, tasks.size()),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"                true","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"        );","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"     * Indicates whether this command signifies an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"     * @return {@code false} as this command does not signify an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":46}},{"path":"src/main/java/bong/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import bong.utils.BongException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"public interface Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"     * Executes the command using the provided {@code TaskList}.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The {@code TaskList} on which the command will be executed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"     * @return A {@code CommandResult} containing the feedback to the user and the modification status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If an error occurs during command execution.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    CommandResult execute(TaskList tasks) throws BongException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"     * Indicates whether this command signifies an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"     * @return {@code true} if this command signifies an exit action, {@code false} otherwise.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    boolean isExit();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":25}},{"path":"src/main/java/bong/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":" * Represents the result of executing a command.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"public class CommandResult {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"    private final boolean isModified;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"     * Constructs a {@code CommandResult} with the specified feedback and modification status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"     * @param feedbackToUser The feedback message to be shown to the user.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"     * @param isModified Indicates whether the command has modified the task list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"    public CommandResult(String feedbackToUser, boolean isModified) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"        this.isModified \u003d isModified;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"     * Returns the feedback message to be shown to the user.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"     * @return The feedback message.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"        return feedbackToUser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"     * Indicates whether the command has modified the task list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     * @return {@code true} if the task list has been modified, {@code false} otherwise.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    public boolean isModified() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"        return isModified;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":38}},{"path":"src/main/java/bong/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import bong.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import bong.utils.BongException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"     * Constructs a {@code DeleteCommand} with the specified task index.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"     * @param args The index of the task to be deleted, provided as a string.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the provided index is not a valid integer or is out of bounds.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    public DeleteCommand(String args) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"            this.taskIndex \u003d Integer.parseInt(args.trim()) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(\"Please provide a valid task number.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"     * Executes the command to delete the task at the specified index from the given {@code TaskList}.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The {@code TaskList} from which the task will be removed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"     * @return A {@code CommandResult} containing the feedback to the user and the modification status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the index is out of bounds.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    public CommandResult execute(TaskList tasks) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"        Task removedTask \u003d tasks.removeTask(taskIndex);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"        return new CommandResult(","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"                String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"                        removedTask, tasks.size()),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"                true","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"        );","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"     * Indicates whether this command signifies an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"     * @return {@code false} as this command does not signify an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":53}},{"path":"src/main/java/bong/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"     * Executes the exit command, which terminates the application.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The {@code TaskList} is not used in this command.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"     * @return A {@code CommandResult} indicating that the application will exit.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    public CommandResult execute(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"        return new CommandResult(\"Bye. Hope to see you again soon!\", false);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"     * Indicates that this command signifies an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"     * @return {@code true} as this command signifies an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"        return true;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":30}},{"path":"src/main/java/bong/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import java.util.List;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import java.util.Map;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import bong.task.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":" * Represents a command that finds tasks in the task list that contain a given keyword.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    private final String keyword;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"     * Constructs a FindCommand with the specified keyword.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"     * Executes the FindCommand by searching for tasks in the task list that contain the keyword.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The list of tasks to search through.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * @return A CommandResult containing a message with the matching tasks or a message indicating","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     *         no matches were found.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    public CommandResult execute(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"        List\u003cMap.Entry\u003cInteger, Task\u003e\u003e matchingTasksWithIndex \u003d IntStream.range(0, tasks.getList().size())","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"                .filter(i -\u003e tasks.getList().get(i).getDescription().toLowerCase().contains(keyword))","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"                .mapToObj(i -\u003e new AbstractMap.SimpleEntry\u003c\u003e(i + 1, tasks.getList().get(i)))","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"        return new CommandResult(formatMatchingTasks(matchingTasksWithIndex), false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"     * Indicates whether this command should exit the program.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"     * @return false, as the FindCommand does not cause the program to exit.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"     * Formats the list of matching tasks into a string. If no tasks match, it returns","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"     * a message indicating that no matching tasks were found.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"     * @param matchingTasksWithIndex The list of indexes and tasks that match the search keyword.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"     * @return A formatted string of matching tasks or a message if none are found.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"    private String formatMatchingTasks(List\u003cMap.Entry\u003cInteger, Task\u003e\u003e matchingTasksWithIndex) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"        if (matchingTasksWithIndex.isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"        for (Map.Entry\u003cInteger, Task\u003e entry : matchingTasksWithIndex) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"            int actualIndex \u003d entry.getKey();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"            Task task \u003d entry.getValue();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"            sb.append(String.format(\"%d. %s \\n\", actualIndex, task));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"        return sb.toString();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":77}},{"path":"src/main/java/bong/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import bong.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"     * Executes the command to list all tasks in the provided {@code TaskList}.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The {@code TaskList} from which tasks will be listed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"     * @return A {@code CommandResult} containing the list of tasks.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"    public CommandResult execute(TaskList tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"        return new CommandResult(formatTaskList(tasks.getList()), false);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"     * Indicates that this command does not signify an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"     * @return {@code false} as this command does not signify an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"     * Formats the task list into a string representation.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"     * @param list The {@code ArrayList} of {@code Task} objects to be formatted.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"     * @return A string representation of the task list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"    private String formatTaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"            sb.append(String.format(\"%d. %s\\n\", i + 1, list.get(i)));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"        return sb.toString();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":47}},{"path":"src/main/java/bong/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import bong.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import bong.utils.BongException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"     * Constructs a {@code MarkCommand} with the specified task index.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"     * @param args The index of the task to be marked as done, provided as a string.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the provided index is not a valid integer or is out of bounds.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    public MarkCommand(String args) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"            this.taskIndex \u003d Integer.parseInt(args.trim()) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(\"Please provide a valid task number.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"     * Executes the command to mark the specified task as done in the given {@code TaskList}.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The {@code TaskList} in which the task will be marked as done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"     * @return A {@code CommandResult} indicating the task has been marked as done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the task index is out of bounds.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    public CommandResult execute(TaskList tasks) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"        Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"        task.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"        return new CommandResult(","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"                String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", task),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"                true","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"        );","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"     * Indicates that this command does not signify an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"     * @return {@code false} as this command does not signify an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":54}},{"path":"src/main/java/bong/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import bong.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import bong.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import bong.utils.BongException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":" * Represents a command to unmark a task as not done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task index.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"     * @param args The index of the task to be unmarked as not done, provided as a string.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the provided index is not a valid integer or is out of bounds.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    public UnmarkCommand(String args) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"            this.taskIndex \u003d Integer.parseInt(args.trim()) - 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(\"Please provide a valid task number.\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"     * Executes the command to unmark the specified task as not done in the given {@code TaskList}.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The {@code TaskList} in which the task will be unmarked as not done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"     * @return A {@code CommandResult} indicating the task has been unmarked as not done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the task index is out of bounds.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    public CommandResult execute(TaskList tasks) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"        Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"        return new CommandResult(","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"                String.format(\"OK, I\u0027ve marked this task as not done yet:\\n  %s\", task),","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"                true","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"        );","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"     * Indicates that this command does not signify an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"     * @return {@code false} as this command does not signify an exit action.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":53}},{"path":"src/main/java/bong/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":" * Represents a task with a specific deadline in the Bong application.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":" * Inherits from the {@code Task} class.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"    private static final DateTimeFormatter DEFAULT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code Deadline} task with the specified description, deadline, and status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"     * @param by The deadline date and time for the task in string format.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"        super(description, isDone, Task.parseDateTime(by, false));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"        this.by \u003d Task.parseDateTime(by, false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"     * Returns the type icon representing a deadline task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"     * @return The string \"[D]\" representing a deadline task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"        return \"[D]\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"     * @return The string representation of the deadline task, including its type, status, description, and deadline.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + description + \" (by: \" + by.format(DEFAULT_FORMATTER) + \")\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"     * Returns the formatted string to be saved in the file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"     * @return The formatted string to be saved in the file, representing the deadline task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"        return \"D | \" + super.toFileString() + \" | \" + by.format(DEFAULT_FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"samuelthen":56}},{"path":"src/main/java/bong/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":" * Represents an event task with a specific start and end time in the Bong application.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":" * Inherits from the {@code Task} class.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"    private static final DateTimeFormatter DEFAULT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code Event} task with the specified description, start and end time, and status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"     * @param from The start date and time for the event in string format.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"     * @param to The end date and time for the event in string format.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     * @param isDone Whether the task is marked as done.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"        super(description, isDone, Task.parseDateTime(from, true));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"        this.from \u003d Task.parseDateTime(from, true);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"        this.to \u003d Task.parseDateTime(to, false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * Returns the type icon representing an event task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"     * @return The string \"[E]\" representing an event task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"        return \"[E]\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"     * @return The string representation of the event task (type, status, description, start, and end time).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + description","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"                + \" (from: \" + from.format(DEFAULT_FORMATTER) + \" to: \" + to.format(DEFAULT_FORMATTER) + \")\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"     * Returns the formatted string to be saved in the file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"     * @return The formatted string to be saved in the file, representing the event task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"        return \"E | \" + super.toFileString() + \" | \" + from.format(DEFAULT_FORMATTER) + \" | \"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"                + to.format(DEFAULT_FORMATTER);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"samuelthen":62}},{"path":"src/main/java/bong/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"    private static final DateTimeFormatter[] FORMATTERS \u003d {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"), // e.g., \"31/12/2023 2359\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\"), // e.g., \"31/12/2023 23:59\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\"), // e.g., \"31-12-2023 2359\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HH:mm\"), // e.g., \"31-12-2023 23:59\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"), // e.g., \"31 Dec 2023 2359\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"), // e.g., \"31 Dec 2023 23:59\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"), // e.g., \"2023-12-31 2359\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"), // e.g., \"2023-12-31 23:59\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"), // e.g., \"Dec 31 2023 2359\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"), // e.g., \"Dec 31 2023 23:59\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"), // e.g., \"31/12/2023\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"), // e.g., \"31-12-2023\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"d MMM yyyy\"), // e.g., \"31 Dec 2023\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"), // e.g., \"2023-12-31\"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\"), // e.g., \"Dec 31 2023\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"    };","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    protected String description;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"    private LocalDateTime sortingDate;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code Task} with the specified description and completion status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"    public Task(String description, boolean isDone, LocalDateTime sortingDate) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"        this.sortingDate \u003d sortingDate;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"        return description;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"     * Returns the status icon representing whether the task is completed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"     * @return The status icon as \"[X]\" if the task is completed, otherwise \"[ ]\".","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"     * Returns the type icon representing the type of task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"     * To be implemented by subclasses.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"     * @return The type icon as a string.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"    public abstract String toString(); // to be implemented by subclasses","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelthen"},"content":"     * Returns a string representation of the task for file storage.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelthen"},"content":"     * @return The string representation of the task suitable for file storage.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelthen"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelthen"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelthen"},"content":"     * Parses the given date and time string into a {@code LocalDateTime} object.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelthen"},"content":"     * @param dateTimeString The date and time string to be parsed.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelthen"},"content":"     * @param isStartOfDay If true, the time is set to 00:00 for date-only inputs; otherwise, it\u0027s set to 23:59.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelthen"},"content":"     * @return The parsed {@code LocalDateTime} object.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelthen"},"content":"     * @throws IllegalArgumentException If the input string does not match any known date format.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samuelthen"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString, boolean isStartOfDay) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samuelthen"},"content":"        for (DateTimeFormatter formatter : FORMATTERS) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samuelthen"},"content":"            LocalDateTime localDateTime \u003d tryParseDateTime(dateTimeString, formatter, isStartOfDay);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samuelthen"},"content":"            if (localDateTime !\u003d null) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samuelthen"},"content":"                return localDateTime;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samuelthen"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samuelthen"},"content":"        throw new IllegalArgumentException(\"Invalid date format: \" + dateTimeString);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samuelthen"},"content":"    private static LocalDateTime tryParseDateTime(String dateTimeString,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samuelthen"},"content":"                                                  DateTimeFormatter formatter,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samuelthen"},"content":"                                                  boolean isStartOfDay) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samuelthen"},"content":"            return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samuelthen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samuelthen"},"content":"            // Parsing failed, continue to the next format","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samuelthen"},"content":"        try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samuelthen"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeString, formatter);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samuelthen"},"content":"            if (isStartOfDay) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samuelthen"},"content":"                return date.atTime(0, 0);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samuelthen"},"content":"            } else {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samuelthen"},"content":"                return date.atTime(23, 59);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samuelthen"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samuelthen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samuelthen"},"content":"            // Parsing failed, continue to the next format","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samuelthen"},"content":"        return null;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samuelthen"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samuelthen"},"content":"        if (this.sortingDate \u003d\u003d null \u0026\u0026 other.sortingDate \u003d\u003d null) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samuelthen"},"content":"            return 0;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"samuelthen"},"content":"        if (this.sortingDate \u003d\u003d null) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"samuelthen"},"content":"            return 1;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"samuelthen"},"content":"        if (other.sortingDate \u003d\u003d null) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"samuelthen"},"content":"            return -1;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"samuelthen"},"content":"        return this.sortingDate.compareTo(other.sortingDate);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"samuelthen":152}},{"path":"src/main/java/bong/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import bong.utils.BongException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":" * Manages a list of tasks, allowing for adding, retrieving, and removing tasks.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"public class TaskList {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code TaskList} with an empty list of tasks.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code TaskList} with the specified list of tasks.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"     * @param tasks The list of tasks to initialize the {@code TaskList}.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"        sortTasks();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"     * @param task The {@code Task} to add to the list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"        tasks.add(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"        sortTasks();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"     * Retrieves a task from the list by index.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"     * @return The {@code Task} at the specified index.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the index is out of bounds.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"    public Task getTask(int index) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(\"Invalid task number!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"     * Removes a task from the list by index.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"     * @return The {@code Task} that was removed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the index is out of bounds.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"    public Task removeTask(int index) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(\"Invalid task number!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"     * Returns a copy of the list of tasks.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"     * @return An {@code ArrayList} containing all tasks.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"    public int size() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"        return tasks.size();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"    private void sortTasks() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"        Collections.sort(tasks); // Sort tasks according to the natural order","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":90}},{"path":"src/main/java/bong/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":" * Represents a to-do task that needs to be completed.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code Todo} task with the specified description and completion status.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"        super(description, isDone, null);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"        return \"[T]\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"samuelthen":31}},{"path":"src/main/java/bong/utils/BongException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":" * Represents a custom exception specific to the Bong application.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"public class BongException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code BongException} with the specified detail message.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"     * @param message The detail message for this exception.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"    public BongException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"samuelthen":15}},{"path":"src/main/java/bong/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import bong.command.AddCommand;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import bong.command.Command;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import bong.command.DeleteCommand;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import bong.command.ExitCommand;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import bong.command.FindCommand;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"import bong.command.ListCommand;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import bong.command.MarkCommand;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"import bong.command.UnmarkCommand;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"import bong.task.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"import bong.task.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"import bong.task.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":" * The {@code Parser} class is responsible for parsing user input into commands","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":" * that the Bong application can execute.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"public class Parser {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"    private static final String SPLIT_REGEX \u003d \" \";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    private static final String MARK \u003d \"mark\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    private static final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    private static final String DESCRIPTION_EMPTY_MSG \u003d \"The description of %s cannot be empty.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"    private static final String UNKNOWN_COMMAND_MSG \u003d \"I\u0027m sorry, I don\u0027t understand that command.\";","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    private static final String DEADLINE_BY \u003d \" /by \";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"    private static final String EVENT_FROM \u003d \" /from \";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"    private static final String EVENT_TO \u003d \" /to \";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"     * Parses the user input and returns the corresponding {@code Command} object.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"     * @param userInput The input string provided by the user.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"     * @return The {@code Command} object representing the user\u0027s command.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If the user input cannot be parsed into a valid command.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"    public Command parseCommand(String userInput) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"        String[] parts \u003d userInput.split(SPLIT_REGEX, 2);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"        String commandWord \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"        String arguments \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"        case BYE:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"        case FIND:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"        case LIST:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"            return new ListCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"        case MARK:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"            return new MarkCommand(arguments);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"        case UNMARK:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"            return new UnmarkCommand(arguments);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"        case DELETE:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"            return new DeleteCommand(arguments);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"        case TODO:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"            return createTodoCommand(arguments);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"        case DEADLINE:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"            return createDeadlineCommand(arguments);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"        case EVENT:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"            return createEventCommand(arguments);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"        default:","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(UNKNOWN_COMMAND_MSG);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"    private Command createTodoCommand(String arguments) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"        return new AddCommand(new Todo(arguments, false));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"    private Command createDeadlineCommand(String arguments) throws BongException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"        String[] subparts \u003d arguments.split(DEADLINE_BY);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"        validateDescription(subparts[0].trim(), DEADLINE);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"        String by \u003d subparts[1].trim();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"        return new AddCommand(new Deadline(subparts[0].trim(), by, false));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"    private Command createEventCommand(String arguments) throws BongException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"        String[] subparts \u003d arguments.split(EVENT_FROM + \"|\" + EVENT_TO);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"        validateDescription(subparts[0].trim(), EVENT);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"        String from \u003d subparts[1].trim();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"        String to \u003d subparts[2].trim();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"        return new AddCommand(new Event(subparts[0].trim(), from, to, false));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelthen"},"content":"    private void validateDescription(String description, String type) throws BongException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelthen"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(String.format(DESCRIPTION_EMPTY_MSG, type));","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":96}},{"path":"src/main/java/bong/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import java.io.File;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"import bong.task.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"import bong.task.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"import bong.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"import bong.task.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"/**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":" * The {@code Storage} class handles the loading and saving of tasks to and from a file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":" */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"public class Storage {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"    private String filePath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"     * Constructs a new {@code Storage} object with the specified file path.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"     * @param filePath The path of the file where tasks will be saved and loaded.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"     * @return An {@code ArrayList} of tasks loaded from the file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If an error occurs while loading tasks from the file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"    public ArrayList\u003cTask\u003e load() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"            createFileIfNotExists(file);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"            return list;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"        return readTasksFromFile(file);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"    private void createFileIfNotExists(File file) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"        new File(file.getParent()).mkdirs();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"    private ArrayList\u003cTask\u003e readTasksFromFile(File file) throws BongException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"            String line;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"                Task task \u003d parseTaskFromLine(line);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"                    list.add(task);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"                }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"        return list;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"    private Task parseTaskFromLine(String line) throws BongException {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"        return switch (taskType) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"        case \"T\" -\u003e new Todo(parts[2], isDone);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"        case \"D\" -\u003e new Deadline(parts[2], parts[3], isDone);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"        case \"E\" -\u003e new Event(parts[2], parts[3], parts[4], isDone);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"        default -\u003e {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"            System.out.println(\"Unrecognized task format in file, skipping line: \" + line);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"            yield null;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"        };","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"    /**","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"     *","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"     * @param list The {@code ArrayList} of tasks to save.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"     * @throws BongException If an error occurs while saving tasks to the file.","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"     */","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"    public void save(ArrayList\u003cTask\u003e list) throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelthen"},"content":"            for (Task task : list) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelthen"},"content":"                bw.write(task.toFileString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelthen"},"content":"                bw.newLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelthen"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelthen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelthen"},"content":"            throw new BongException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelthen"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":98}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"samuelthen":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"            fx:controller\u003d\"bong.MainWindow\"\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"samuelthen":25}},{"path":"src/test/java/bong/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"import bong.utils.BongException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"public class TaskListTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    public void setUp() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    public void testConstructor_emptyTaskList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"    public void testConstructor_existingTaskList() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"        tasks.add(new Todo(\"Read book\", false));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"        tasks.add(new Todo(\"Write report\", false));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"        TaskList taskListWithTasks \u003d new TaskList(tasks);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"        assertEquals(2, taskListWithTasks.size());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Read book\", taskListWithTasks.getTask(0).getDescription());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Write report\", taskListWithTasks.getTask(1).getDescription());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"        Todo todo \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(\"Read book\", taskList.getTask(0).getDescription()));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"    public void testGetTask_validIndex() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"        Todo todo \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"        Task task \u003d taskList.getTask(0);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Read book\", task.getDescription());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"    public void testGetTask_invalidIndex_throwsException() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"        BongException exception \u003d assertThrows(BongException.class, () -\u003e {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"            taskList.getTask(1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"        });","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Invalid task number!\", exception.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"    public void testRemoveTask_validIndex() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"        Todo todo1 \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"        Todo todo2 \u003d new Todo(\"Write report\", false);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"        taskList.addTask(todo1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"        taskList.addTask(todo2);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"        Task removedTask \u003d taskList.removeTask(0);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Read book\", removedTask.getDescription());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Write report\", taskList.getTask(0).getDescription());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samuelthen"},"content":"    public void testRemoveTask_invalidIndex_throwsException() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samuelthen"},"content":"        BongException exception \u003d assertThrows(BongException.class, () -\u003e {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samuelthen"},"content":"            taskList.removeTask(0);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samuelthen"},"content":"        });","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Invalid task number!\", exception.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samuelthen"},"content":"    public void testGetList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samuelthen"},"content":"        Todo todo1 \u003d new Todo(\"Read book\", false);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samuelthen"},"content":"        Todo todo2 \u003d new Todo(\"Write report\", false);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samuelthen"},"content":"        taskList.addTask(todo1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samuelthen"},"content":"        taskList.addTask(todo2);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samuelthen"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samuelthen"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Read book\", tasks.get(0).getDescription());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"Write report\", tasks.get(1).getDescription());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samuelthen"},"content":"    public void testSize() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samuelthen"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samuelthen"},"content":"        taskList.addTask(new Todo(\"Read book\", false));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samuelthen"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samuelthen"},"content":"        taskList.addTask(new Todo(\"Write report\", false));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samuelthen"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":106}},{"path":"src/test/java/bong/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"package bong.utils;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"import bong.command.AddCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"import bong.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"import bong.command.DeleteCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"import bong.command.ExitCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"import bong.command.ListCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"import bong.command.MarkCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"import bong.command.UnmarkCommand;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"public class ParserTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_exitCommand() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"        Command command \u003d parser.parseCommand(\"bye\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"        assertInstanceOf(ExitCommand.class, command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_listCommand() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samuelthen"},"content":"        Command command \u003d parser.parseCommand(\"list\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samuelthen"},"content":"        assertInstanceOf(ListCommand.class, command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_markCommand() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samuelthen"},"content":"        Command command \u003d parser.parseCommand(\"mark 1\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samuelthen"},"content":"        assertInstanceOf(MarkCommand.class, command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_unmarkCommand() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samuelthen"},"content":"        Command command \u003d parser.parseCommand(\"unmark 1\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samuelthen"},"content":"        assertInstanceOf(UnmarkCommand.class, command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_deleteCommand() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samuelthen"},"content":"        Command command \u003d parser.parseCommand(\"delete 1\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samuelthen"},"content":"        assertInstanceOf(DeleteCommand.class, command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_todoCommand() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samuelthen"},"content":"        Command command \u003d parser.parseCommand(\"todo Read book\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samuelthen"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_deadlineCommand() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samuelthen"},"content":"        Command command \u003d parser.parseCommand(\"deadline Submit report /by 2024-09-01\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samuelthen"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_eventCommand() throws BongException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samuelthen"},"content":"        Command command \u003d parser.parseCommand(\"event Conference /from 2024-09-01 /to 2024-09-03\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samuelthen"},"content":"        assertInstanceOf(AddCommand.class, command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samuelthen"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samuelthen"},"content":"    public void testParseCommand_unknownCommand() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samuelthen"},"content":"        BongException exception \u003d assertThrows(BongException.class, () -\u003e {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samuelthen"},"content":"            parser.parseCommand(\"unknown command\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samuelthen"},"content":"        });","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samuelthen"},"content":"        assertEquals(\"I\u0027m sorry, I don\u0027t understand that command.\", exception.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samuelthen"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samuelthen"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"samuelthen":76}},{"path":"src/test/java/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"samuelthen":22}},{"path":"src/test/java/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samuelthen"},"content":"            xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samuelthen"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samuelthen"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samuelthen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samuelthen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samuelthen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samuelthen"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samuelthen"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samuelthen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samuelthen"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samuelthen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samuelthen"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"samuelthen":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelthen"},"content":"todo","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samuelthen"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samuelthen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samuelthen"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samuelthen"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samuelthen"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samuelthen"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samuelthen"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samuelthen"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samuelthen"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samuelthen"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"samuelthen":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samuelthen"},"content":"java -classpath ..\\bin bong.Bong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"samuelthen":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samuelthen"},"content":"java -classpath ../bin Bong \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"samuelthen":1,"-":37}}]
