[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"checkstyle {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"sourceSets {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"    main {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"        java {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"            resources {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"                srcDirs \u003d [\u0027src/main/java/resources\u0027]","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    test {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"        java {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"            resources {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"                srcDirs \u003d [\u0027src/main/java/resources\u0027]","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"    mainClass.set(\"duke.DailyTasks\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    archiveBaseName \u003d \"DailyTasks\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"yongkheehou":23,"-":41}},{"path":"src/main/java/duke/DailyTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.util.List;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.javafx.MainWindow;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":" * The main class for the DailyTasks application, which acts as a task manager.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":" * It handles initializing the application, managing the task list, and saving","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":" * the application state before exiting.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":" *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003eThis class extends {@link javafx.application.Application} and serves as","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":" * the entry point for the JavaFX application. It initializes core components","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":" * such as the task list, storage, and user interface, and passes these","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":" * components to the {@link duke.javafx.MainWindow} for UI management.\u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"public class DailyTasks extends Application {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"     * The entry point of the JavaFX application. This method is called after the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"     * application is launched and is responsible for initializing core components","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     * and setting up the main window.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     * @param stage The primary stage for this application, onto which the main application scene can be set.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"            List\u003cTask\u003e tasks \u003d storage.loadStateFileToTasksList();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"            this.taskList.setTasks(tasks);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"            System.out.println(\"Cannot initialize task list!\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"        MainWindow mainWindow \u003d new MainWindow(stage, this.taskList, this.storage, this.ui);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"     * The main method that serves as the entry point for the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"     * It calls the {@link #launch(String...)} method to start the JavaFX application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"        launch(args);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"yongkheehou":61}},{"path":"src/main/java/duke/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.commands;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidTodoDescriptionException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.UnknownMessageException;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * Represents a command to add a task to the task list in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" * This command parses the user input and attempts to add the task to the task list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"    /** The user input containing the task description and any relevant details. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    private final String userInput;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a new AddTaskCommand with the specified user input.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     * @param userInput The user\u0027s input string representing the task to be added.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"    public AddTaskCommand(String userInput) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"        super();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"     * Executes the command by adding a task to the task list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"     * If the task description is empty or unrecognized, an appropriate error message is displayed.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     * @param taskList The list of tasks to which the new task will be added.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     * @param ui The user interface used to display messages to the user.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     * @param storage The storage system responsible for saving and loading tasks.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"            taskList.addTask(this.userInput);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"            return \"Your task has been added\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"        } catch (UnknownMessageException | InvalidTodoDescriptionException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"            // ui.showMessage(ui.formatOutputMessage(\"Please enter a valid task!\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"            return \"Please enter a valid task!\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":46}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.commands;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":" * Represents an abstract command in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * Commands are responsible for performing specific actions that manipulate","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" * the task list, interact with the user interface, or modify the storage.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" * Subclasses must implement the {@link #execute(TaskList, Ui, Storage)} method","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":" * to define specific behavior.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"     * Executes the command using the provided task list, user interface, and storage.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     * Subclasses of {@code Command} should override this method to provide","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     * specific behavior, such as adding, removing, or updating tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"     * @param taskList The list of tasks to be manipulated by the command.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"     * @param storage The storage object to read from or write to the file system.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":30}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.commands;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":" * Represents a command to delete a task from the task list in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" * This command deletes the task at the specified index and displays a message confirming the deletion.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" * If the task index is invalid, no task will be deleted, and no message will be shown.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"    /** The index of the task to be deleted. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a new DeleteTaskCommand with the specified task index.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     * @param taskIndex The index of the task to be deleted. A value of -1 indicates an invalid index.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"        super();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"     * Executes the command by deleting a task from the task list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     * If the task index is valid (i.e., not -1), the task is removed and a message confirming the deletion","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     * is displayed to the user. If the index is invalid, no action is taken.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"     * @param taskList The {@link TaskList} from which the task will be deleted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"     * @param ui The {@link Ui} used to display messages to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"     * @param storage The {@link Storage} system responsible for saving and","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"     *                loading tasks (not used in this implementation).","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"        if (this.taskIndex !\u003d -1) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"            Task task \u003d taskList.deleteTask(this.taskIndex);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"            // ui.showMessage(ui.formatDeleteTask(task, taskList.getTasks().size()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"            return ui.formatDeleteTask(task, taskList.getTasks().size());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"        return \"Please enter a valid task!\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":51}},{"path":"src/main/java/duke/commands/FilterTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.commands;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.util.List;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" * Represents a command to filter tasks that are occurring on a specified date and time in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":" * This command retrieves and displays a list of tasks that occur at the specified datetime.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"public class FilterTaskCommand extends Command {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"    /** The datetime used to filter the tasks that occur on this date and time. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a new FilterTaskCommand with the specified datetime.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     * @param dateTime The datetime to filter tasks by.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    public FilterTaskCommand(LocalDateTime dateTime) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"        super();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"     * Executes the command by filtering tasks that occur at the specified datetime.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     * The filtered tasks are then displayed using the user interface.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     * @param taskList The list of tasks to be filtered.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     * @param ui The user interface used to display the filtered list of tasks.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"     * @param storage The storage system responsible for saving and loading tasks (not used in this implementation).","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasksOccurring(dateTime);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"        // ui.showMessage(ui.formatTaskListings(tasks, true));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"        return ui.formatTaskListings(tasks, true);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":44}},{"path":"src/main/java/duke/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.commands;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.util.List;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" * Represents a command to find tasks in the task list that match a specified keyword.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":" * This command searches for tasks whose descriptions contain the given keyword","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":" * and displays the matching tasks to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"    /** The keyword used to search for matching tasks in the task list. */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"    private final String keyword;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a new {@code FindTaskCommand} with the specified keyword.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"     * @param keyword The keyword used to search for tasks in the task list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     * Executes the command by searching the task list for tasks that","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     * contain the specified keyword in their descriptions.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"     * The matching tasks are then displayed using the user interface.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"     * @param taskList The {@link TaskList} containing the list of tasks to be searched.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"     * @param ui The {@link Ui} used to display the found tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"     * @param storage The {@link Storage} system responsible for saving and","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"     *                loading tasks (not used in this implementation).","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"        // Search for tasks that contain the keyword in their description","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"            if (task.getDescription().contains(this.keyword)) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"        // ui.showMessage(ui.formatTaskListings(foundTasks, false));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"        return ui.formatTaskListings(foundTasks, false);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"yongkheehou":59}},{"path":"src/main/java/duke/commands/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.commands;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":" * Represents a command to list all tasks in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":" * This command retrieves and displays the entire list of tasks.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a new ListTaskCommand.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"     * This command does not require any parameters.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"    public ListTaskCommand() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"        super();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     * Executes the command by displaying the entire list of tasks.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     * The task list is formatted and displayed using the user interface.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"     * @param ui The user interface used to display the task list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"     * @param storage The storage system responsible for saving and loading tasks (not used in this implementation).","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"        ui.showMessage(ui.formatTaskListings(taskList.getTasks(), false));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"        return ui.formatTaskListings(taskList.getTasks(), false);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":34}},{"path":"src/main/java/duke/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.commands;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":" * Represents a command to mark or unmark a task as done in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * This command updates the status of the task based on the user\u0027s input.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    /** A flag indicating whether to mark the task as done or not done. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"    private boolean markAsDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"    /** The index of the task to be marked or unmarked. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    private int taskIndex;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a new MarkTaskCommand with the specified action (mark as done or not done) and task index.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     * @param markAsDone True to mark the task as done, false to mark it as not done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     * @param taskIndex The index of the task to be marked or unmarked.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    public MarkTaskCommand(boolean markAsDone, int taskIndex) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"        super();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"        this.markAsDone \u003d markAsDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     * Executes the command by marking or unmarking a task as done or not done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     * The task status is updated and a message is displayed to confirm the change.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"     * @param taskList The list of tasks where the task is located.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"     * @param ui The user interface used to display messages to the user.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"     * @param storage The storage system responsible for saving and loading tasks (not used in this implementation).","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"        if (this.taskIndex !\u003d -1) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"            Task task \u003d taskList.getTask(this.taskIndex);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"            if (this.markAsDone) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"                task.setDone();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"                // ui.showMessage(ui.formatMarkTask(task));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"                return ui.formatMarkTask(task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"            } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"                task.setNotDone();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"                // ui.showMessage(ui.formatUnmarkTask(task));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"                return ui.formatUnmarkTask(task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"        return \"Please enter a valid task!\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":56}},{"path":"src/main/java/duke/exceptions/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.exceptions;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":" * Represents an exception that is thrown when a user enters an invalid deadline format in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":" * This exception typically occurs when the deadline input is incorrectly formatted, such as when there are","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":" * too many spaces or the format is otherwise not as expected.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":" * Examples of valid deadline formats:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" *     \u003cli\u003e2/12/2019 1800\u003c/li\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" *     \u003cli\u003e2/12/2019\u003c/li\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"public class InvalidDeadlineException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"     * Constructs an InvalidDeadlineException with a specified error message.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"     * @param e The error message describing the exception.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"    public InvalidDeadlineException(String e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"        super(e);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":25}},{"path":"src/main/java/duke/exceptions/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.exceptions;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":" * Represents an exception that is thrown when a user enters an invalid event in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":" * This exception typically occurs when the `from` or `to` time for the event is incorrectly formatted or invalid.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"public class InvalidEventException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"     * Constructs an InvalidEventException with a specified error message.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"     * @param e The error message describing the exception.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    public InvalidEventException(String e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"        super(e);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":17}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.exceptions;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":" * Represents an exception that is thrown when a user enters an invalid input in the DailyTasks application.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":" * This exception could be triggered when the input command is not complete, or when dates are not formatted properly.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"     * Constructs an InvalidInputException with a specified error message.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"     * @param e The error message describing the exception.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    public InvalidInputException(String e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"        super(e);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"yongkheehou":17}},{"path":"src/main/java/duke/exceptions/InvalidTodoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.exceptions;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":" * Represents an exception that is thrown when a Todo task is created without a description.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":" * This exception is used to signal that the task description cannot be empty.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"public class InvalidTodoDescriptionException extends Exception {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"     * Constructs an EmptyTodoDescriptionException with a specified error message.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"     * @param e The error message describing the exception.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    public InvalidTodoDescriptionException(String e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"        super(e);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":17}},{"path":"src/main/java/duke/exceptions/UnknownMessageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.exceptions;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":" * Represents an exception that is thrown when the user enters a message that is not recognized as a valid task in","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":" * the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":" * This exception is used to signal that the input does not correspond to any known command or task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"public class UnknownMessageException extends Exception {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"     * Constructs an UnknownMessageException with no error message.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"     * This is used when the exception needs to be thrown without a specific error message.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    public UnknownMessageException() {}","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"     * Constructs an UnknownMessageException with a specified error message.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"     * This constructor is used when additional details about the exception are needed.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"     * @param e The error message describing the exception.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"    public UnknownMessageException(String e) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"        super(e);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":25}},{"path":"src/main/java/duke/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.javafx;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.util.Collections;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"    @FXML","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    private Label dialog;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    @FXML","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"            double radius \u003d 49.5; // half of fitHeight/fitWidth of ImageView","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"            Circle clip \u003d new Circle(radius, radius, radius);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"            displayPicture.setClip(clip);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"    private void flip() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"        db.flip();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"        return db;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"yongkheehou":64}},{"path":"src/main/java/duke/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.javafx;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.parser.InputParser;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":" * The MainWindow class is the main controller for the application\u0027s GUI.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":" * It manages user interactions, displays the task list, and handles input and output.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":" * This class interacts with the {@link TaskList}, {@link Storage}, and {@link Ui}","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":" * components to facilitate task management and user interface operations.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":" * The GUI is built using JavaFX, with components defined in an FXML file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":" * This class is responsible for loading the FXML layout, initializing UI elements,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":" * and responding to user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"    @FXML","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"    @FXML","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"    @FXML","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"    private TextField userInput;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"    @FXML","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"    private Button sendButton;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a new MainWindow object, which loads and initializes the UI components","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"     * from the specified FXML file and sets up the main application window.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"     * @param stage    The primary stage of the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"     * @param taskList The task list to be managed by the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"     * @param storage  The storage component for saving and loading tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"     * @param ui       The user interface component for interacting with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"    public MainWindow(Stage stage, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"        stage.setScene(new Scene(this));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"        stage.setTitle(\"My Daily Tasks\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"        stage.show();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"        stage.setOnCloseRequest(event -\u003e saveTasks()); // Save tasks on exit","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"     * Initializes the MainWindow. This method is automatically called after","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"     * the FXML file has been loaded and is used to perform any necessary setup.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongkheehou"},"content":"     * It binds the scroll pane\u0027s vertical value property to the height property of the dialog container,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongkheehou"},"content":"     * ensuring that the scroll pane always scrolls to the bottom as new messages are added.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongkheehou"},"content":"    @FXML","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongkheehou"},"content":"    public void initialize() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongkheehou"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongkheehou"},"content":"     * Handles user input from the text field. When the user submits input, this method","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongkheehou"},"content":"     * parses the input, executes the corresponding command, and displays the result","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongkheehou"},"content":"     * in the dialog container.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongkheehou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongkheehou"},"content":"     * If the input is invalid, an error message is printed to the console.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongkheehou"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongkheehou"},"content":"    @FXML","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongkheehou"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongkheehou"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongkheehou"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongkheehou"},"content":"            Command command \u003d InputParser.parseUserInput(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongkheehou"},"content":"            String response \u003d command.execute(taskList, ui, storage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongkheehou"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongkheehou"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongkheehou"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongkheehou"},"content":"            );","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongkheehou"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongkheehou"},"content":"            System.out.println(\"Invalid input: \" + e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongkheehou"},"content":"        userInput.clear();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongkheehou"},"content":"     * Saves the current state of the task list to a file. This method is","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongkheehou"},"content":"     * called when the application is about to close.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongkheehou"},"content":"    private void saveTasks() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongkheehou"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongkheehou"},"content":"            Storage.saveTasksListToStateFile(this.taskList.getTasks());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongkheehou"},"content":"            System.out.println(\"Tasks saved.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongkheehou"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongkheehou"},"content":"            System.out.println(\"IOException occurred\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"yongkheehou":126}},{"path":"src/main/java/duke/parser/DateTimeFormatEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.parser;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import java.util.Optional;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * Enum {@code DateTimeParser} provides a set of predefined date-time formats for parsing strings","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" * into {@link LocalDateTime} or {@link LocalDate} objects. It supports multiple date formats and","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" * encapsulates the parsing logic within the enum constants.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":" * Each constant is associated with a specific date-time format pattern and its corresponding","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":" * {@link DateTimeFormatter}. The {@code parse} method tries each defined format to parse","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":" * a given date string, returning the result wrapped in an {@link Optional}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"public enum DateTimeFormatEnum {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     * Date-time format with a time component in 24-hour format (e.g., \"2/12/2019 1800\").","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    DATE_TIME_WITH_TIME(\"d/M/yyyy HHmm\", DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")),","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"     * Date-time format with a time component including AM/PM meridiem (e.g., \"Dec 2 2019, 6:00 PM\").","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    DATE_TIME_FOR_SAVING(\"MMM d yyyy, h:mm a\", DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\")),","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     * Date-only format without a time component (e.g., \"2/12/2019\").","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     * Default time is set to the start of the day (00:00).","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    DATE_ONLY(\"d/M/yyyy\", DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    private final String pattern;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"    private final DateTimeFormatter formatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a {@code DateTimeParser} enum constant with the specified date format pattern and formatter.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"     * @param pattern   the date format pattern","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"     * @param formatter the {@link DateTimeFormatter} corresponding to the pattern","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"    DateTimeFormatEnum(String pattern, DateTimeFormatter formatter) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"        this.pattern \u003d pattern;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"        this.formatter \u003d formatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"     * Returns the format pattern as a string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"     * @return the format pattern string","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"    public String getPattern() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"        return pattern;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"     * Returns the {@link DateTimeFormatter} associated with this enum constant.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"     * @return the formatter for this date format","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"    public DateTimeFormatter getFormatter() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"        return formatter;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"     * Attempts to parse the given date string using the predefined date-time formats.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"     * This method iterates over the available enum constants, attempting to match the input string","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"     * with each corresponding format. If the format is {@code DATE_ONLY}, the resulting date will","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"     * default to midnight (00:00) for the time component. The method returns the parsed date wrapped","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"     * in an {@link Optional}, or an empty {@code Optional} if no valid format is found.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"     * @param dateTimeStr the date-time string to be parsed","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"     * @return an {@link Optional} containing the parsed {@link LocalDateTime},or an empty {@code Optional}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"    public static Optional\u003cLocalDateTime\u003e parse(String dateTimeStr) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongkheehou"},"content":"        for (DateTimeFormatEnum format : values()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongkheehou"},"content":"            try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongkheehou"},"content":"                if (format \u003d\u003d DATE_ONLY) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongkheehou"},"content":"                    LocalDate date \u003d LocalDate.parse(dateTimeStr, format.getFormatter());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongkheehou"},"content":"                    return Optional.of(date.atStartOfDay()); // Set time to midnight if only date is provided","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongkheehou"},"content":"                } else {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongkheehou"},"content":"                    return Optional.of(LocalDateTime.parse(dateTimeStr, format.getFormatter()));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongkheehou"},"content":"                }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongkheehou"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongkheehou"},"content":"                // If parsing fails, continue trying the next format","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongkheehou"},"content":"        return Optional.empty();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"yongkheehou":96}},{"path":"src/main/java/duke/parser/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.parser;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.AddTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.DeleteTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.FilterTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.FindTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.ListTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.MarkTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":" * The {@code InputParser} class is responsible for parsing user input and","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":" * converting it into the corresponding command objects.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":" * This class interprets commands for listing, marking, unmarking, deleting,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":" * filtering tasks, and adding new tasks based on the user\u0027s input.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"public class InputParser {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"     * Parses the user\u0027s input string and returns the corresponding {@link Command}.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"     * The parser determines the type of command (e.g., list, mark, unmark, delete, filter, or add task)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"     * based on the input string provided by the user. If the input does not match any recognized","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"     * command, it assumes the input is for adding a new task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     * @param userInput The raw input string from the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     * @return The {@link Command} object representing the action to be taken based on the user input.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     * @throws InvalidInputException if the input format is invalid or cannot be parsed correctly.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"    public static Command parseUserInput(String userInput) throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"            return new MarkTaskCommand(false, InputParser.parseTaskIndex(userInput));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"            return new MarkTaskCommand(true, InputParser.parseTaskIndex(userInput));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"            return new DeleteTaskCommand(InputParser.parseTaskIndex(userInput));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"        } else if (userInput.startsWith(\"filter\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"            String dateString \u003d InputParser.parseCommandArgument(userInput, \"Invalid date format.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"            LocalDateTime dateTime \u003d duke.parser.DateTimeFormatEnum.parse(dateString)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"                    .orElseThrow(() -\u003e new InvalidInputException(\"Invalid date format.\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"            return new FilterTaskCommand(dateTime);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"            String keyword \u003d InputParser.parseCommandArgument(userInput, \"Invalid find command format.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"            return new FindTaskCommand(keyword);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"        } else { // we try to add a task (todos/deadline/event)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"            return new AddTaskCommand(userInput);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"     * Extracts the task index from the user\u0027s input string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"     * This method assumes that the user input contains a valid command followed by","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"     * an integer representing the task index (e.g., \"delete 2\"). The method returns","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"     * the parsed index (0-based) by subtracting 1 from the input number.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"     * @param userInput The raw input string from the user, typically containing the command and a task index.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"     * @return The task index as a 0-based integer.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"     * @throws InvalidInputException if the input does not contain a valid integer index or is improperly formatted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"    public static int parseTaskIndex(String userInput) throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"            return Integer.parseInt(userInput.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"            throw new InvalidInputException(\"Your input is invalid.\\n\" + e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"     * Extracts the argument from the user\u0027s input string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"     * This method is used to extract arguments from commands such as \"filter\" or \"find\".","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongkheehou"},"content":"     * It returns the part of the string following the command keyword.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongkheehou"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongkheehou"},"content":"     * @param userInput The raw input string from the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongkheehou"},"content":"     * @param errorMessage The error message to display if the argument cannot be extracted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongkheehou"},"content":"     * @return The extracted argument as a string.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongkheehou"},"content":"     * @throws InvalidInputException if the input does not contain a valid argument or is improperly formatted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongkheehou"},"content":"    private static String parseCommandArgument(String userInput, String errorMessage) throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongkheehou"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongkheehou"},"content":"            return userInput.split(\" \", 2)[1];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongkheehou"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongkheehou"},"content":"            throw new InvalidInputException(errorMessage + \"\\n\" + e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"yongkheehou":97}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.storage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"import java.util.List;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidEventException;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":" * The Storage class handles saving and loading tasks from a file to persist the state of the task list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":" * It reads from and writes to a specified file to store the tasks across sessions.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"public class Storage {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    /** The directory where the state file is stored. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    private static final String STATE_FILE_DIRECTORY \u003d \"./data\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    /** The name of the state file where tasks are saved. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    private static final String STATE_FILE \u003d \"save.txt\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     * Converts a line of text from the state file into a Task object.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     * @param state The line of text representing a saved task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     * @return The corresponding Task object, or null if there is an error converting the task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    private static Task convertStateToTask(String state) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"        String[] taskInformation \u003d state.split(\" \\\\| \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"        String description \u003d taskInformation[2];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"        Task task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"        if (taskInformation[0].equals(\"T\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"            task \u003d new ToDos(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"        } else if (taskInformation[0].equals(\"D\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"            String by \u003d taskInformation[3];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"            } catch (InvalidDeadlineException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"                System.out.println(e.getMessage() + \"error converting task back to deadline\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"                return null;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"            String[] times \u003d taskInformation[3].split(\"-\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"            String from \u003d times[0];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"            String to \u003d times[1];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"                task \u003d new Event(description, from, to);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"            } catch (InvalidEventException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"                System.out.println(e.getMessage() + \"error converting task back to event\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"                return null;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"        if (taskInformation[1].equals(\"1\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"            task.setDone();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"        return task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"     * Saves the current list of tasks to the state file.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"    public static void saveTasksListToStateFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"        Path dirPath \u003d Paths.get(Storage.STATE_FILE_DIRECTORY);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"        Path filePath \u003d dirPath.resolve(Storage.STATE_FILE);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongkheehou"},"content":"        BufferedWriter writer \u003d Files.newBufferedWriter(filePath);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongkheehou"},"content":"        List\u003cString\u003e stateFile \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongkheehou"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongkheehou"},"content":"            stateFile.add(Storage.convertTaskToState(task));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongkheehou"},"content":"        for (String line : stateFile) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongkheehou"},"content":"            writer.write(line);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongkheehou"},"content":"            writer.newLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongkheehou"},"content":"        writer.close();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongkheehou"},"content":"     * Converts a Task object into a string that can be saved in the state file.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongkheehou"},"content":"     * @param task The task to be converted.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongkheehou"},"content":"     * @return The string representation of the task for storage.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongkheehou"},"content":"    private static String convertTaskToState(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongkheehou"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongkheehou"},"content":"        str.append(task.getStatusIcon().equals(\"X\") ? \"| 1 \" : \"| 0 \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongkheehou"},"content":"        str.append(\"| \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongkheehou"},"content":"        str.append(task.getDescription());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongkheehou"},"content":"        str.append(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongkheehou"},"content":"        if (task instanceof ToDos) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongkheehou"},"content":"            str.insert(0, \"T \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongkheehou"},"content":"        } else if (task instanceof Deadline deadline) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongkheehou"},"content":"            str.insert(0, \"D \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongkheehou"},"content":"            str.append(\"| \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongkheehou"},"content":"            str.append(deadline.getBy());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongkheehou"},"content":"        } else if (task instanceof Event event) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongkheehou"},"content":"            str.insert(0, \"E \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongkheehou"},"content":"            str.append(\"| \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongkheehou"},"content":"            str.append(event.getFrom());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongkheehou"},"content":"            str.append(\"-\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongkheehou"},"content":"            str.append(event.getTo());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongkheehou"},"content":"        return str.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongkheehou"},"content":"     * Loads the state file and converts its content to a list of Task objects.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongkheehou"},"content":"     * Creates the state file and directory if they do not exist.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yongkheehou"},"content":"     * @return The list of tasks read from the state file.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yongkheehou"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yongkheehou"},"content":"    public List\u003cTask\u003e loadStateFileToTasksList() throws IOException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yongkheehou"},"content":"        Path dirPath \u003d Paths.get(Storage.STATE_FILE_DIRECTORY);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yongkheehou"},"content":"        Path filePath \u003d dirPath.resolve(Storage.STATE_FILE);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yongkheehou"},"content":"        if (Files.notExists(dirPath)) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yongkheehou"},"content":"            Files.createDirectories(dirPath);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yongkheehou"},"content":"        if (Files.notExists(filePath)) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yongkheehou"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yongkheehou"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yongkheehou"},"content":"        BufferedReader reader \u003d Files.newBufferedReader(filePath);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yongkheehou"},"content":"        String line;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yongkheehou"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yongkheehou"},"content":"            lines.add(line);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yongkheehou"},"content":"        reader.close();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yongkheehou"},"content":"        // Convert the state file lines to a list of tasks","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yongkheehou"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yongkheehou"},"content":"        for (String state : lines) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yongkheehou"},"content":"            tasks.add(Storage.convertStateToTask(state));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yongkheehou"},"content":"        return tasks;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"yongkheehou":163}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.tasks;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.parser.DateTimeFormatEnum;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * Represents a deadline task in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" * A deadline task has a description and a specific datetime by which the task must be completed.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"    /** The datetime by which the deadline task must be completed. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    protected LocalDateTime parsedDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"     * Creates a new Deadline task with the specified description and deadline datetime.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"     * Validates that the datetime is properly formatted.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     * @param by The deadline datetime in string format.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     * @throws InvalidDeadlineException If the provided datetime is invalid.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    public Deadline(String description, String by) throws InvalidDeadlineException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"        parsedDateTime \u003d DateTimeFormatEnum.parse(by)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid date format.\"));;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"        if (parsedDateTime \u003d\u003d null) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"            throw new InvalidDeadlineException(\"Your deadline is invalid.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"     * Returns the formatted deadline datetime.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted deadline datetime as a string (e.g., \"MMM d yyyy, h:mm a\").","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"    public String getBy() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"        return parsedDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\"));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"     * Checks if the deadline task is occurring at a specific date and time.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"     * @param taskDate The date and time to check.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"     * @return true if the task is occurring at the specified date and time, false otherwise.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"    public boolean occurring(LocalDateTime taskDate) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"        return taskDate !\u003d null \u0026\u0026 taskDate.equals(this.parsedDateTime);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"     * Returns a string representation of the deadline task, including its type identifier,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"     * status icon, description, and the formatted deadline datetime.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"        return \"[D]\" + \" [\" + this.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + this.getBy() + \")\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"yongkheehou":67}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.tasks;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidEventException;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.parser.DateTimeFormatEnum;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * Represents an event task in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" * An event task includes a description and a time range specified by a \u0027from\u0027 and \u0027to\u0027 datetime.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"    /** The starting datetime of the event. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    protected LocalDateTime parsedFromDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    /** The ending datetime of the event. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"    protected LocalDateTime parsedToDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     * Creates a new Event task with the specified description, start (\u0027from\u0027), and end (\u0027to\u0027) times.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     * Validates that the \u0027from\u0027 and \u0027to\u0027 datetimes are correctly formatted and that \u0027from\u0027 is before \u0027to\u0027.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"     * @param from The start datetime of the event in string format.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"     * @param to The end datetime of the event in string format.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"     * @throws InvalidEventException If the \u0027from\u0027 or \u0027to\u0027 datetimes are invalid or \u0027from\u0027 is after \u0027to\u0027.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"    public Event(String description, String from, String to) throws InvalidEventException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"        parsedFromDateTime \u003d null;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"        parsedToDateTime \u003d null;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"        // Parse the \u0027from\u0027 field","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"        parsedFromDateTime \u003d DateTimeFormatEnum.parse(from)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid date format.\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"        if (parsedFromDateTime \u003d\u003d null) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"            throw new InvalidEventException(\"Invalid \u0027from\u0027 date and time format.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"        // Parse the \u0027to\u0027 field","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"        parsedToDateTime \u003d DateTimeFormatEnum.parse(to)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"                .orElseThrow(() -\u003e new IllegalArgumentException(\"Invalid date format.\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"        if (parsedToDateTime \u003d\u003d null) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"            throw new InvalidEventException(\"Invalid \u0027to\u0027 date and time format.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"        // Ensure that \u0027from\u0027 is before \u0027to\u0027","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"        if (parsedFromDateTime.isAfter(parsedToDateTime)) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"            throw new InvalidEventException(\"\u0027From\u0027 date and time must be before \u0027to\u0027 date and time.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"     * Returns the formatted start datetime of the event.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted start datetime as a string (e.g., \"MMM d yyyy, h:mm a\").","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"    public String getFrom() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"        return parsedFromDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\"));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"     * Returns the formatted end datetime of the event.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted end datetime as a string (e.g., \"MMM d yyyy, h:mm a\").","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"    public String getTo() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"        return parsedToDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mm a\"));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"     * Checks if the event is occurring at a given datetime.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"     * @param taskDate The datetime to check.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"     * @return true if the event is occurring at the given datetime, false otherwise.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"    public boolean occurring(LocalDateTime taskDate) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongkheehou"},"content":"        return (","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongkheehou"},"content":"                taskDate !\u003d null \u0026\u0026 taskDate.isAfter(this.parsedFromDateTime)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongkheehou"},"content":"                        \u0026\u0026 taskDate.isBefore(this.parsedToDateTime)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongkheehou"},"content":"            );","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongkheehou"},"content":"     * Returns a string representation of the event task, including its type identifier,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongkheehou"},"content":"     * status icon, description, and the formatted \u0027from\u0027 and \u0027to\u0027 datetimes.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongkheehou"},"content":"     * @return The string representation of the event task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongkheehou"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongkheehou"},"content":"        return \"[E]\" + \" [\" + this.getStatusIcon()","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongkheehou"},"content":"                + \"] \" + super.toString()","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongkheehou"},"content":"                + \" (from: \" + this.getFrom()","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongkheehou"},"content":"                + \" to: \" + this.getTo() + \")\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"yongkheehou":101}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.tasks;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":" * Represents a task in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":" * A task contains a description and a status indicating whether it is done or not.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"public class Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"    /** The description of the task. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"    protected String description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    /** The status of the task, indicating whether it is done or not. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"     * Creates a new task with the specified description.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"        return description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"     * An \"X\" indicates the task is done, and a blank space indicates it is not done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"     * @return The status icon as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"     * Checks if the task is occurring at a specified date and time.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"     * By default, this method returns false and is overridden by specific task types such as Event and Deadline.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"     * @param taskDate The date and time to check.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"     * @return false by default.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"    public boolean occurring(LocalDateTime taskDate) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"        return false; // Default to null, overridden by Deadline and Event","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"    public void setDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"     * Returns a string representation of the task, which is the task description.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"        return this.description;","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"yongkheehou":81}},{"path":"src/main/java/duke/tasks/TaskEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.tasks;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":" * Represents the types of tasks available in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":" * These include:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":" *     \u003cli\u003eTODOS - Tasks without specific dates or deadlines.\u003c/li\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":" *     \u003cli\u003eDEADLINE - Tasks with a specific deadline.\u003c/li\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":" *     \u003cli\u003eEVENT - Tasks that occur during a specific time period.\u003c/li\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"public enum TaskEnum {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"    TODOS,","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    DEADLINE,","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"    EVENT","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":16}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.tasks;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import java.util.List;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidDeadlineException;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidEventException;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidTodoDescriptionException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.UnknownMessageException;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":" * The {@code TaskManager} class is responsible for managing a collection of tasks.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":" * It supports adding, retrieving, deleting, and identifying task types. Tasks","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":" * include ToDos, Deadlines, and Events.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":" * The class manages an internal list of {@link Task} objects and provides methods","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":" * for interacting with and manipulating this list. It also handles errors related","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":" * to invalid task inputs or operations.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"public class TaskList {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"     * The list of tasks being managed by the {@code TaskManager}.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"     * Constructs a new {@code TaskManager} with an empty task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"     * Retrieves the list of tasks managed by this {@code TaskManager}.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"     * @return an {@code ArrayList} of tasks.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"        return tasks;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"     * Retrieves the task at the specified index in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"     * @param index the index of the task to retrieve.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"     * @return the {@code Task} at the specified index.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"     * @throws IndexOutOfBoundsException if the index is out of the range of the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"        throw new IndexOutOfBoundsException(\"Invalid task index.\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"     * Retrieves the last task in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"     * @return the last {@code Task} in the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"     * @throws IllegalStateException if the task list is empty.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"    public Task getLastTask() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"            throw new IllegalStateException(\"No tasks available.\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"    public List\u003cTask\u003e getTasksOccurring(LocalDateTime dateTime) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"        List\u003cTask\u003e tasksOccurringOnDateTime \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"            if (task.occurring(dateTime)) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"                tasksOccurringOnDateTime.add(task);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongkheehou"},"content":"        return tasksOccurringOnDateTime;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongkheehou"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongkheehou"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongkheehou"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongkheehou"},"content":"     * @param index the index of the task to delete.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongkheehou"},"content":"     * @return the {@code Task} that was removed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongkheehou"},"content":"     * @throws IndexOutOfBoundsException if the index is out of the range of the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongkheehou"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongkheehou"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongkheehou"},"content":"            return tasks.remove(index);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongkheehou"},"content":"        throw new IndexOutOfBoundsException(\"Invalid task index.\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongkheehou"},"content":"     * Adds a new task to the task list based on the user\u0027s input.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongkheehou"},"content":"     * The input is parsed to determine the type of task (ToDo, Deadline, or Event).","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongkheehou"},"content":"     * @param userInput the raw input string from the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongkheehou"},"content":"     * @throws UnknownMessageException if the task type is unknown or unrecognized.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongkheehou"},"content":"     * @throws InvalidTodoDescriptionException if the task is a ToDo but lacks a description.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongkheehou"},"content":"    public void addTask(String userInput) throws UnknownMessageException, InvalidTodoDescriptionException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongkheehou"},"content":"        TaskEnum taskType \u003d determineTaskType(userInput);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongkheehou"},"content":"        switch (taskType) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongkheehou"},"content":"        case TODOS:","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongkheehou"},"content":"            try {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongkheehou"},"content":"                String todoDescription \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongkheehou"},"content":"                tasks.add(new ToDos(todoDescription));","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongkheehou"},"content":"                break;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongkheehou"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongkheehou"},"content":"                throw new InvalidTodoDescriptionException(\"Please include a description of your todo task!\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongkheehou"},"content":"        case DEADLINE:","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongkheehou"},"content":"            String[] deadlineInfo \u003d userInput.split(\"/by\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongkheehou"},"content":"            String deadlineDescription \u003d deadlineInfo[0].replace(\"deadline\", \"\").trim();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongkheehou"},"content":"            String deadlineDate \u003d deadlineInfo[1].trim();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongkheehou"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongkheehou"},"content":"                tasks.add(new Deadline(deadlineDescription, deadlineDate));","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongkheehou"},"content":"            } catch (InvalidDeadlineException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongkheehou"},"content":"                System.out.println(e.getMessage() + \" Please enter a valid deadline\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongkheehou"},"content":"                return;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yongkheehou"},"content":"            break;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yongkheehou"},"content":"        case EVENT:","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yongkheehou"},"content":"            String[] eventInfo \u003d userInput.split(\"/from\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yongkheehou"},"content":"            String eventDescription \u003d eventInfo[0].replace(\"event\", \"\").trim();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yongkheehou"},"content":"            String[] eventTime \u003d eventInfo[1].split(\"/to\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yongkheehou"},"content":"            String start \u003d eventTime[0].trim();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yongkheehou"},"content":"            String end \u003d eventTime[1].trim();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yongkheehou"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yongkheehou"},"content":"                tasks.add(new Event(eventDescription, start, end));","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yongkheehou"},"content":"            } catch (InvalidEventException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yongkheehou"},"content":"                System.out.println(e.getMessage() + \" Please enter a valid event\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yongkheehou"},"content":"                return;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yongkheehou"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yongkheehou"},"content":"            break;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yongkheehou"},"content":"        default:","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yongkheehou"},"content":"            throw new UnknownMessageException(\"Unknown task type.\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yongkheehou"},"content":"        System.out.println(Ui.formatAddTask(this.getTasks().size(),","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yongkheehou"},"content":"                this.getLastTask()));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yongkheehou"},"content":"     * Determines the type of task from the user\u0027s input.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yongkheehou"},"content":"     * @param input the raw input string from the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yongkheehou"},"content":"     * @return the {@code TaskEnum} representing the type of task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yongkheehou"},"content":"     * @throws UnknownMessageException if the task type is unknown or unrecognized.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yongkheehou"},"content":"    private TaskEnum determineTaskType(String input) throws UnknownMessageException {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yongkheehou"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yongkheehou"},"content":"            return TaskEnum.TODOS;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yongkheehou"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yongkheehou"},"content":"            return TaskEnum.DEADLINE;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yongkheehou"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yongkheehou"},"content":"            return TaskEnum.EVENT;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yongkheehou"},"content":"        } else {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yongkheehou"},"content":"            throw new UnknownMessageException();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"yongkheehou":172}},{"path":"src/main/java/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.tasks;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":" * Represents a Todo task in the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":" * A Todo task is a type of task that only contains a description without any specific date or time.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"     * Creates a new Todo task with the specified description.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    public ToDos(String description) {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"        super(description);","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"     * Returns a string representation of the Todo task, which includes the task type identifier,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"     * status icon, and the description of the task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     * @return The string representation of the Todo task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    @Override","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    public String toString() {","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"        return \"[T]\" + \" [\" + this.getStatusIcon() + \"] \" + super.toString();","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-18","isFullCredit":false}],"authorContributionMap":{"yongkheehou":28}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import java.util.List;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":" * Represents the User Interface (UI) for the DailyTasks application.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":" * This class is responsible for displaying messages to the user","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":" * and formatting task-related information.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"public class Ui {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    /** The name of the bot. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"    public static final String BOT_NAME \u003d \"DailyTasks\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"    /** Greeting message displayed to the user upon startup. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"    public static final String GREETING \u003d \"Hello! I\u0027m \" + BOT_NAME + \", your awesome task planner!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"    /** Goodbye message displayed when the user exits the application. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"    public static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"    /** Indentation spacing for formatted output. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    public static final String SPACING \u003d \"    \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    /** Border used for formatting messages. */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"    public static final String BORDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"     * Returns the formatted border with proper indentation.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted border as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"    public static String formattedBorder() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"        return Ui.SPACING + Ui.BORDER;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"     * Formats a single task with its corresponding index for display.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"     * @param i The index of the task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"     * @param task The task to be formatted.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted task as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"    private static String formatSingleTask(int i, Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"        return Ui.SPACING + \" \" + i + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"     * Displays the welcome message to the user.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"        System.out.println(Ui.formatOutputMessage(GREETING));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"     * Displays the goodbye message to the user.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"        System.out.println(Ui.formatOutputMessage(GOODBYE));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"        System.out.println(message);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"     * Formats a list of tasks for display.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"     * @param filtered Whether the task list is filtered.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted task list as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"    public String formatTaskListings(List\u003cTask\u003e tasks, boolean filtered) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"        str.append(Ui.formattedBorder()).append(\"\\n\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"        str.append(Ui.SPACING + \" \")","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"                .append(filtered ? \"Here are the filtered tasks:\" : \"Here are the tasks in your list:\")","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"                .append(\"\\n\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongkheehou"},"content":"            str.append(Ui.formatSingleTask(i + 1, tasks.get(i)));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongkheehou"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongkheehou"},"content":"        str.append(Ui.formattedBorder()).append(\"\\n\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongkheehou"},"content":"        return str.toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yongkheehou"},"content":"     * Formats an output message to be displayed within borders.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yongkheehou"},"content":"     * @param input The message to be displayed.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted message as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yongkheehou"},"content":"    public static String formatOutputMessage(String input) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yongkheehou"},"content":"        return (","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yongkheehou"},"content":"                Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \" \" + input + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yongkheehou"},"content":"            );","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yongkheehou"},"content":"     * Formats a message when a task is added to the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yongkheehou"},"content":"     * @param taskCount The number of tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yongkheehou"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted message as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yongkheehou"},"content":"    public static String formatAddTask(int taskCount, Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yongkheehou"},"content":"        return (","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yongkheehou"},"content":"                Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \" \" + \"Got it. I\u0027ve added this task:\" + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \"   \" + task.toString() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \" \" + \"Now you have \" + taskCount + \" tasks in the list.\" + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yongkheehou"},"content":"            );","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yongkheehou"},"content":"     * Formats a message when a task is marked as done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yongkheehou"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted message as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yongkheehou"},"content":"    public String formatMarkTask(Task task) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yongkheehou"},"content":"        return (","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yongkheehou"},"content":"                Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \" \" + \"Nice! I\u0027ve marked this task as done:\" + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \"   \" + task.toString() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yongkheehou"},"content":"            );","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yongkheehou"},"content":"     * Formats a message when a task is unmarked as done.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yongkheehou"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted message as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yongkheehou"},"content":"    public String formatUnmarkTask(Task task) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yongkheehou"},"content":"        return (","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yongkheehou"},"content":"                Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \" \" + \"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \"   \" + task.toString() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yongkheehou"},"content":"            );","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yongkheehou"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yongkheehou"},"content":"     * Formats a message when a task is deleted from the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yongkheehou"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yongkheehou"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yongkheehou"},"content":"     * @param size The remaining number of tasks in the list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yongkheehou"},"content":"     * @return The formatted message as a string.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yongkheehou"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yongkheehou"},"content":"    public String formatDeleteTask(Task task, int size) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yongkheehou"},"content":"        return (","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yongkheehou"},"content":"                Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \" \" + \"Noted. I\u0027ve removed this task:\" + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \"   \" + task.toString() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.SPACING + \" \" + \"Now you have \" + size + \" tasks in the list.\" + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yongkheehou"},"content":"                        + Ui.formattedBorder() + \"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yongkheehou"},"content":"            );","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"yongkheehou":166}},{"path":"src/main/java/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"         spacing\u003d\"10.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"yongkheehou":23}},{"path":"src/main/java/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"\u003cfx:root type\u003d\"AnchorPane\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"        \u003cTextField fx:id\u003d\"userInput\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"                   onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"                   prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"                   AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"                   AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"                   AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"        \u003cButton fx:id\u003d\"sendButton\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"                AnchorPane.bottomAnchor\u003d\"0.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"                AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"                    vbarPolicy\u003d\"ALWAYS\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"                    fitToWidth\u003d\"true\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"                    fitToHeight\u003d\"true\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"                    AnchorPane.bottomAnchor\u003d\"41.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"                      prefHeight\u003d\"552.0\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"                      prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"yongkheehou":43}},{"path":"src/test/java/duke/parser/DateTimeFormatEnumTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.parser;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"import java.util.Optional;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"public class DateTimeFormatEnumTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    public void parse_validDateTimeWithTime_correctLocalDateTime() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"        String input \u003d \"2/12/2019 1800\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2019, 12, 2, 18, 0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"        Optional\u003cLocalDateTime\u003e result \u003d DateTimeFormatEnum.parse(input);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"        assertTrue(result.isPresent(), \"Expected a valid LocalDateTime object.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"        assertEquals(expected, result.get(), \"Parsed LocalDateTime should match the expected value.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    public void parse_validDateTimeForSaving_correctLocalDateTime() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"        String input \u003d \"Dec 2 2019, 6:00 pm\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2019, 12, 2, 18, 0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"        Optional\u003cLocalDateTime\u003e result \u003d DateTimeFormatEnum.parse(input);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"        System.out.println(result);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"        assertTrue(result.isPresent(), \"Expected a valid LocalDateTime object.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"        assertEquals(expected, result.get(), \"Parsed LocalDateTime should match the expected value.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"    public void parse_validDateOnly_midnightLocalDateTime() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"        String input \u003d \"2/12/2019\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2019, 12, 2, 0, 0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"        Optional\u003cLocalDateTime\u003e result \u003d DateTimeFormatEnum.parse(input);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"        assertTrue(result.isPresent(), \"Expected a valid LocalDateTime object.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"        assertEquals(expected, result.get(), \"Parsed LocalDateTime should be at midnight.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"    public void parse_invalidDateTime_emptyOptional() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"        String input \u003d \"invalid date\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"        Optional\u003cLocalDateTime\u003e result \u003d DateTimeFormatEnum.parse(input);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"        assertTrue(result.isEmpty(), \"Expected parsing to fail, resulting in an empty Optional.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    public void parse_partialDateTime_emptyOptional() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"        String input \u003d \"12/2019 1800\"; // Missing day part","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"        Optional\u003cLocalDateTime\u003e result \u003d DateTimeFormatEnum.parse(input);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"        assertTrue(result.isEmpty(), \"Expected parsing to fail for an incomplete date-time format.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"    public void parse_differentDateFormat_emptyOptional() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"        String input \u003d \"2019-12-02 18:00\"; // ISO format not supported","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"        Optional\u003cLocalDateTime\u003e result \u003d DateTimeFormatEnum.parse(input);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"        assertTrue(result.isEmpty(), \"Expected parsing to fail for a format not defined in the enum.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"yongkheehou":74}},{"path":"src/test/java/duke/parser/InputParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"package duke.parser;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.AddTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.DeleteTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.FilterTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.ListTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"import duke.commands.MarkTaskCommand;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"public class InputParserTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"    public void parseUserInput_listCommand_returnsListTaskCommand() throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"        Command command \u003d InputParser.parseUserInput(\"list\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"        assertInstanceOf(ListTaskCommand.class, command, \"Command should be of type ListTaskCommand\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    public void parseUserInput_markCommand_returnsMarkTaskCommand() throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"        Command command \u003d InputParser.parseUserInput(\"mark 1\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"        assertInstanceOf(MarkTaskCommand.class, command, \"Command should be of type MarkTaskCommand\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    public void parseUserInput_deleteCommand_returnsDeleteTaskCommand() throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"        Command command \u003d InputParser.parseUserInput(\"delete 2\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"        assertInstanceOf(DeleteTaskCommand.class, command, \"Command should be of type DeleteTaskCommand\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"    public void parseUserInput_addTaskCommand_returnsAddTaskCommand() throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"        Command command \u003d InputParser.parseUserInput(\"todo read a book\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"        assertInstanceOf(AddTaskCommand.class, command, \"Command should be of type AddTaskCommand\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"    public void parseUserInput_filterCommand_returnsFilterTaskCommand() throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"        Command command \u003d InputParser.parseUserInput(\"filter 2/12/2019 1800\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"        assertInstanceOf(FilterTaskCommand.class, command, \"Command should be of type FilterTaskCommand\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"    public void parseTaskIndex_validIndex_returnsCorrectIndex() throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"        int index \u003d InputParser.parseTaskIndex(\"delete 2\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"        assertEquals(1, index, \"Task index should be 1\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"    public void parseTaskIndex_invalidIndex_throwsInvalidInputException() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"        // Test that the InvalidInputException is thrown when the task index is invalid","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"            InputParser.parseTaskIndex(\"delete invalid\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"        }, \"Expected InvalidInputException for invalid task index input\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"    public void parseDateTime_validDateTime_returnsCorrectLocalDateTime() throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2019, 12, 2, 18, 0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"        LocalDateTime actual \u003d DateTimeFormatEnum.parse(\"2/12/2019 1800\")","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yongkheehou"},"content":"                .orElseThrow(() -\u003e new InvalidInputException(\"Invalid date format.\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yongkheehou"},"content":"        assertEquals(expected, actual, \"Parsed date time should be 2/12/2019 1800\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yongkheehou"},"content":"    public void parseDateTime_invalidDateTime_returnsEmptyOptional() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yongkheehou"},"content":"        // Ensure that the parser returns an empty Optional for invalid date input","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yongkheehou"},"content":"        assertTrue(DateTimeFormatEnum.parse(\"invalid date\").isEmpty(),","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yongkheehou"},"content":"                \"Parsed date time should be empty for invalid input\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yongkheehou"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yongkheehou"},"content":"    public void parseDateTime_validDate_returnsLocalDateTimeAtMidnight() throws InvalidInputException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yongkheehou"},"content":"        LocalDateTime expected \u003d LocalDateTime.of(2019, 12, 2, 0, 0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yongkheehou"},"content":"        LocalDateTime actual \u003d DateTimeFormatEnum.parse(\"2/12/2019\")","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yongkheehou"},"content":"                .orElseThrow(() -\u003e new InvalidInputException(\"Invalid date format.\"));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yongkheehou"},"content":"        assertEquals(expected, actual, \"Parsed date should be 2/12/2019 at start of day\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yongkheehou"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yongkheehou"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"yongkheehou":88}},{"path":"text-ui-test/expected-test-results/expected1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"     Hello! I\u0027m DailyTasks, your awesome task planner!","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"       [T] [ ] read book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"     Now you have 1 tasks in the list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"       [D] [ ] return book (by: June 6th)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"     Now you have 2 tasks in the list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"       [E] [ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"     Now you have 3 tasks in the list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"       [T] [ ] join sports club","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"     Now you have 4 tasks in the list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"       [T] [X] read book","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"       [T] [X] join sports club","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"       [T] [ ] borrow book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"     Now you have 5 tasks in the list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"     1.[T] [X] read book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"     2.[D] [ ] return book (by: June 6th)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"     3.[E] [ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yongkheehou"},"content":"     4.[T] [X] join sports club","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"     5.[T] [ ] borrow book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"       [D] [ ] return book (by: Sunday)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yongkheehou"},"content":"     Now you have 6 tasks in the list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yongkheehou"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yongkheehou"},"content":"       [E] [ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yongkheehou"},"content":"     Now you have 7 tasks in the list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yongkheehou"},"content":"     Bye. Hope to see you again soon!","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":69}},{"path":"text-ui-test/expected-test-results/expected2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"     Hello! I\u0027m DailyTasks, your awesome task planner!","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"     Please enter a valid task!","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"yongkheehou":8}},{"path":"text-ui-test/expected-test-results/expected3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"     Hello! I\u0027m DailyTasks, your awesome task planner!","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":8}},{"path":"text-ui-test/expected-test-results/expected4.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"     Hello! I\u0027m DailyTasks, your awesome task planner!","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"       [T] [ ] read book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"     Now you have 1 tasks in the list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yongkheehou"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yongkheehou"},"content":"       [T] [X] read book","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"     1.[T] [X] read book","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"       [T] [ ] read book","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"     1.[T] [ ] read book","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"     Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"       [T] [ ] read book","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"     Now you have 0 tasks in the list.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"     Bye. Hope to see you again soon!","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"    ____________________________________________________________","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":43,"-":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"if [ ! -d \"./bin\" ]; then","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"    mkdir ./bin","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"# find all .java files in the duke directory and subdirectories and compile them into the bin folder","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"if ! find ./src/main/java/duke -name \"*.java\" -print0 | xargs -0 javac -cp ./bin -Xlint:none -d ./bin; then","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yongkheehou"},"content":"# delete actual-test-results directory if it exists","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yongkheehou"},"content":"if [ -d \"./text-ui-test/actual-test-results\" ]; then","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yongkheehou"},"content":"    rm -r ./text-ui-test/actual-test-results","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yongkheehou"},"content":"fi","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yongkheehou"},"content":"# create the actual-test-results directory to store test case outputs","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yongkheehou"},"content":"mkdir ./text-ui-test/actual-test-results","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yongkheehou"},"content":"# loop through all test files in the tests directory","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yongkheehou"},"content":"for testfile in ./text-ui-test/tests/test*.txt; do","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yongkheehou"},"content":"    # extract the test number (e.g., 1 from test1.txt)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yongkheehou"},"content":"    testnum\u003d$(echo \"$testfile\" | grep -o \u0027[0-9]\\+\u0027)","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yongkheehou"},"content":"    # corresponding expected output file","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yongkheehou"},"content":"    expectedfile\u003d\"./text-ui-test/expected-test-results/expected${testnum}.txt\"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yongkheehou"},"content":"    # check if the expected file exists","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yongkheehou"},"content":"    if [ ! -f \"$expectedfile\" ]; then","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yongkheehou"},"content":"        echo \"Expected file $expectedfile does not exist. Skipping test $testnum.\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yongkheehou"},"content":"        continue","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yongkheehou"},"content":"    fi","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yongkheehou"},"content":"    # specify the output file in the actual-test-results directory","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yongkheehou"},"content":"    actualfile\u003d\"./text-ui-test/actual-test-results/actual${testnum}.txt\"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yongkheehou"},"content":"    # run the program with the current test input and redirect the output to the actual test file","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yongkheehou"},"content":"    java -classpath ./bin duke.DailyTasks \u003c \"$testfile\" \u003e \"$actualfile\"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yongkheehou"},"content":"    # convert both actual and expected files to UNIX format","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yongkheehou"},"content":"    cp \"$expectedfile\" EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yongkheehou"},"content":"    dos2unix \"$actualfile\" EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yongkheehou"},"content":"    # compare the actual output to the expected output","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yongkheehou"},"content":"    echo \"Running test $testnum...\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yongkheehou"},"content":"    if diff \"$actualfile\" EXPECTED-UNIX.TXT \u003e /dev/null; then","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yongkheehou"},"content":"        echo \"Test $testnum result: PASSED\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yongkheehou"},"content":"        echo \"Test $testnum result: FAILED\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yongkheehou"},"content":"    fi","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yongkheehou"},"content":"    # remove the temporary EXPECTED-UNIX.TXT file","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yongkheehou"},"content":"    if [ -e \"./EXPECTED-UNIX.TXT\" ]; then","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yongkheehou"},"content":"        rm EXPECTED-UNIX.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yongkheehou"},"content":"done","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"yongkheehou":45,"-":13}},{"path":"text-ui-test/tests/test1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"todo read book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"event project meeting /from 6/8/2019 1600 /to 6/8/2019 1800","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"todo join sports club","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"mark 1","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"mark 4","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"todo borrow book","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yongkheehou"},"content":"bye","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":9}},{"path":"text-ui-test/tests/test2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":1}},{"path":"text-ui-test/tests/test3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"list","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"yongkheehou":1}},{"path":"text-ui-test/tests/test4.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongkheehou"},"content":"todo read book","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yongkheehou"},"content":"mark 1","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yongkheehou"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yongkheehou"},"content":"unmark 1","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yongkheehou"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yongkheehou"},"content":"delete 1","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yongkheehou"},"content":"list","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yongkheehou"},"content":"bye","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"yongkheehou":8}}]
