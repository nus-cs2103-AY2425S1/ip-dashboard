[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"    mainClass.set(\"grok.Grok\")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"    archiveBaseName \u003d \"grok\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"josh1248":2,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"T | X | fewe","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"D |   | hello  | 2020-10-20","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"T |   | wfioewfew","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":3}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"    private final Task task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"        super();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"     * Execution actions:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"     * - Add task to the task list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"     * - Write updated task list to storage","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"     * - Print new task and inform user on total tasks","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"        storage.writeToTextStorage(tasks);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"        ui.printGenericMessage( \"Got it. I\u0027ve added this task:\\n  \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"                task + \"\\nNow you have \" + tasks.length() + \" tasks in the list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":29}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":" * Encapsulates relevant information behind a user command and abstracts the required state changes from the user.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"    private final boolean isExitCommand;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    public Command() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"        isExitCommand \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"    public Command(boolean isExitCommand) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"        this.isExitCommand \u003d isExitCommand;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"    // The breaking of the abstraction barrier here is unavoidable as the command must terminate the entire program.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"        return isExitCommand;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"     * Carry out the required actions of the command, including UI input, task list updating, and storage.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"     * Unifying under a single method allows for abstraction of the effects of the command from the caller.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"        if (!(obj instanceof Command)) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"            return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"        return ((Command) obj).isExitCommand \u003d\u003d isExitCommand;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":39}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":" * Deletes a task index from the list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":" * Separation of concerns: Callers must ensure that the task index is within the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"        super();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"     * Execution actions:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"     * - Delete task with selected index from the task list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"     * - Write updated task list to storage","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"     * - Print deleted task and inform user on total tasks","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"        Task task \u003d tasks.deleteTaskAt(taskIndex);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"        storage.writeToTextStorage(tasks);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        ui.printGenericMessage( \"Got it. I\u0027ve deleted this task:\\n  \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"                task + \"\\nNow you have \" + tasks.length() + \" tasks in the list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":33}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":" * The caller must ensure to exit the program when they encounter this command using isExit().","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"        super(true);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"     * Execution actions:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"     * - Print a goodbye message :)","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"        ui.printByeMessage();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"        return super.equals(obj);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":30}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":" * Executable actions:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":" * - Find all tasks that contain the search query as a substring","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":" * - Format the tasks traditionally","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":" * - Print remaining task list to the user","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    private final String searchQuery;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"    public FindCommand(String searchQuery) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"        super();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"        this.searchQuery \u003d searchQuery;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"        if (tasks.length() \u003d\u003d 0) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"            ui.printGenericMessage(\"There are no tasks in the list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"            return;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        listOfTasks.append(\"Here are the matching tasks for \u0027\" + searchQuery + \"\u0027 in your list:\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"            Task task \u003d tasks.getTaskAt(i);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"            System.out.println(task.getDescription());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"            System.out.println(task.getDescription().contains(\"z\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"            if (task.getDescription().contains(searchQuery)) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"                listOfTasks","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"                        .append(counter)","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"                        .append(\". \")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"                        .append(tasks.getTaskAt(i))","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"                counter++;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"josh1248"},"content":"        // remove the last character, which is a new line.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josh1248"},"content":"        ui.printGenericMessage(","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josh1248"},"content":"                listOfTasks.substring(0, Math.max(0, listOfTasks.length() - 1))","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"josh1248"},"content":"        );","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":52}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"    public ListCommand() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"        super();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"     * Execution actions:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"     * - Convert all tasks to their string representations","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"     * - Print to user","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"        if (tasks.length() \u003d\u003d 0) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"            ui.printGenericMessage(\"There are no tasks in the list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"            return;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"        for (int i \u003d 0; i \u003c tasks.length(); i++) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"            listOfTasks","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"                    .append(i + 1)","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"                    .append(\". \")","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"                    .append(tasks.getTaskAt(i))","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"        // remove the last character, which is a new line.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"        ui.printGenericMessage(","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"                listOfTasks.substring(0, Math.max(0, listOfTasks.length() - 1))","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"        );","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":39}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":" * Marks a task index from the list as done.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":" * Separation of concerns: Callers must ensure that the task index is within the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"        super();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"     * Execution actions:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"     * - Mark task with selected index as done","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"     * - Write updated task list to storage","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"     * - Print updated task","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"        Task task \u003d tasks.getTaskAt(taskIndex);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"        task.markDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        storage.writeToTextStorage(tasks);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"        ui.printGenericMessage( \"Nice! I\u0027ve marked this task as done:\\n  \" + task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":33}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package commands;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":" * Marks a task index from the list as undone.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":" * Separation of concerns: Callers must ensure that the task index is within the task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"        super();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"     * Execution actions:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"     * - Unmark task with selected index as done","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"     * - Write updated task list to storage","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"     * - Print updated task","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"        Task task \u003d tasks.getTaskAt(taskIndex);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"        task.markUndone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        storage.writeToTextStorage(tasks);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"        ui.printGenericMessage( \"Ok, I\u0027ve marked this task as not done yet:\\n  \" + task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":33}},{"path":"src/main/java/exceptions/GrokInvalidUserInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package exceptions;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":" * Denotes a non-compliance to the specifications of the command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":" * The error message stored provides additional information about which part of the command was invalid.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"public class GrokInvalidUserInputException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"    public GrokInvalidUserInputException() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"        super(\"Invalid user input\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"    public GrokInvalidUserInputException(String msg) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"        super(msg);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"josh1248":15}},{"path":"src/main/java/grok/Grok.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package grok;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import commands.Command;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import parser.Parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import storage.Storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"import ui.Ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":" * The main coordinator engine behind the application","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":" * - Coordinates the actions of the Ui, storage, task list, and parser","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":" * - Endlessly waits for commands until the bye command is encountered","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"public class Grok {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"    private static final String TEXT_FILE_DIRECTORY \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"    public Grok() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"        storage \u003d new Storage(TEXT_FILE_DIRECTORY);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"        taskList \u003d new TaskList(storage.parseTextStorage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"        while (true) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"                Command c \u003d parser.parseUserInput(scanner.nextLine(), taskList);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"                if (c.isExit()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"                    break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"            } catch (GrokInvalidUserInputException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josh1248"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"josh1248"},"content":"        new Grok();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"josh1248":49}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import commands.*;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"import tasks.Event;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"import tasks.Todo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":" * A wrapper class helps to process raw input from the user and converts into a cleaned command for execution.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"public class Parser {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    public Parser() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"     * Parse a single line of user input into an executable command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"     * @param userInput - the raw string input by the user","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"     * @param tasks - the current task list. Required for input validation of index arguments, like mark","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"     * @return an executable command if the user input is valid","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"     * @throws GrokInvalidUserInputException if the user format does not any command","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"    public Command parseUserInput(String userInput, TaskList tasks) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(\"Please enter your command.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.contains(\"|\")){","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"            // required so that | can be used to delimit different items in storage reliably.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(\"Message cannot contain the restricted character \u0027|\u0027!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"            return new ListCommand();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"            if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Please indicate a non-empty search query, e.g. find book\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"            return new FindCommand(userInput.substring(5));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.contains(\"unmark\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"            if (userInput.length() \u003c 8) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Please indicate the index to unmark: e.g. unmark 1\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"josh1248"},"content":"            int taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josh1248"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josh1248"},"content":"                taskIndex \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"josh1248"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Please enter the task index number to unmark.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"josh1248"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.length()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Index provided is out of bounds of the current task list.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"josh1248"},"content":"            return new UnmarkCommand(taskIndex - 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.contains(\"mark\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"josh1248"},"content":"            if (userInput.length() \u003c 6) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException (\"Please indicate the index to mark: e.g. mark 1\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"josh1248"},"content":"            int taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"josh1248"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"josh1248"},"content":"                taskIndex \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"josh1248"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Please enter the task index number to mark.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"josh1248"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.length()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Please enter a valid task index to mark.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"josh1248"},"content":"            return new MarkCommand(taskIndex - 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.contains(\"todo\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"josh1248"},"content":"            if (userInput.length() \u003c 6) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Todo command usage: todo (task description here)\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"josh1248"},"content":"            // potentially throws an invalid user input exception of its own.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"josh1248"},"content":"            Task newTask \u003d new Todo(userInput.substring(5));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"josh1248"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.contains(\"deadline\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"josh1248"},"content":"            String deadlineUsage \u003d \"Deadline command usage: deadline (task description here) \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"josh1248"},"content":"                    \"/by (due date and time)\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"josh1248"},"content":"            if (userInput.length() \u003c 10 || !userInput.contains(\"/by\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(deadlineUsage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"josh1248"},"content":"            String[] components \u003d userInput.split(\"/by\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"josh1248"},"content":"            if (components.length !\u003d 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(deadlineUsage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"josh1248"},"content":"            String description \u003d components[0].substring(9);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"josh1248"},"content":"            String due \u003d components[1].substring(1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"josh1248"},"content":"            // potentially throws an invalid user input exception of its own.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"josh1248"},"content":"            Task newTask \u003d new Deadline(description, due);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"josh1248"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.contains(\"event\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"josh1248"},"content":"            String eventUsage \u003d \"Event command usage: event (task description here) \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"josh1248"},"content":"                    \"/from (start date and time) /to (end date and time)\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"josh1248"},"content":"            if (userInput.length() \u003c 7 || !userInput.contains(\"/from\") || !userInput.contains(\"/to\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(eventUsage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"josh1248"},"content":"            String[] components \u003d userInput.split(\"/from\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"josh1248"},"content":"            if (components.length !\u003d 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(eventUsage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"josh1248"},"content":"            String[] subcomponents \u003d components[1].split(\"/to\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"josh1248"},"content":"            if (subcomponents.length !\u003d 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(eventUsage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"josh1248"},"content":"            String description \u003d components[0];","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"josh1248"},"content":"            String from \u003d subcomponents[0].substring(1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"josh1248"},"content":"            String to \u003d subcomponents[1].substring(1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"josh1248"},"content":"            // potentially throws an invalid user input exception of its own.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"josh1248"},"content":"            Task newTask \u003d new Event(description, from, to);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"josh1248"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"josh1248"},"content":"        } else if (userInput.contains(\"delete\")) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"josh1248"},"content":"            if (userInput.length() \u003c 8) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Delete command usage: delete (task index to delete)\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"josh1248"},"content":"            int taskIndex;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"josh1248"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"josh1248"},"content":"                taskIndex \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"josh1248"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Please enter the task index number to delete.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"josh1248"},"content":"            if (taskIndex \u003c\u003d 0 || taskIndex \u003e tasks.length()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"josh1248"},"content":"                throw new GrokInvalidUserInputException(\"Please enter a valid task index to delete.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"josh1248"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"josh1248"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"josh1248"},"content":"                    \"OOPS! Sorry, I don\u0027t recognize your input :(\\n\" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"josh1248"},"content":"                            \"Available commands are: \" +","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"josh1248"},"content":"                            \"bye, list, mark, unmark, todo, deadline, event, delete\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"josh1248"},"content":"            );","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":152}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package storage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import tasks.Event;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"import tasks.Todo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":" * Persistent storage reader/writer, such as with a plaintext text file.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":" * Other persistent media like databases could be explored at a later date.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"public class Storage {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"    public ArrayList\u003cTask\u003e parseTextStorage() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"            // this creates a file only if it does not already exist - so running it un-conditionally is OK.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"            // the only thing which changes is that it will return false if the file already exists.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"                System.out.println(\"Text file not detected. Initiating a new file to hold records...\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"            } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"                System.out.println(\"Reading data from existing text file at location: \" + filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"            System.out.println(\"An error occurred in file opening :(\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"            return items;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"josh1248"},"content":"            // this line potentially throws FileNotFoundException.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josh1248"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"josh1248"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"josh1248"},"content":"                String s \u003d sc.nextLine();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"josh1248"},"content":"                String[] components \u003d s.split(\" \\\\| \");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"josh1248"},"content":"                // this may trigger an invalid input exception - but this is not to be expected at all.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"josh1248"},"content":"                switch (s.substring(0, 1)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"josh1248"},"content":"                case \"T\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"josh1248"},"content":"                    items.add(new Todo(components[2], components[1].equals(\"X\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"josh1248"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"josh1248"},"content":"                case \"D\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"josh1248"},"content":"                    items.add(new Deadline(components[2], components[3], components[1].equals(\"X\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"josh1248"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"josh1248"},"content":"                case \"E\":","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"josh1248"},"content":"                    items.add(new Event(components[2], components[3], components[4], components[1].equals(\"X\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"josh1248"},"content":"                    break;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"josh1248"},"content":"                default:","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"josh1248"},"content":"                    System.out.println(\"Corrupted data detected.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"josh1248"},"content":"                    items.clear();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"josh1248"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"josh1248"},"content":"        } catch (FileNotFoundException | GrokInvalidUserInputException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"josh1248"},"content":"            System.out.println(\"Something has gone wrong - text file is corrupted, or file creation is not working.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"josh1248"},"content":"            System.exit(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"josh1248"},"content":"        return items;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"josh1248"},"content":"    public void writeToTextStorage(TaskList tasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"josh1248"},"content":"            // this line potentially throws IOException.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"josh1248"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"josh1248"},"content":"            for (Task t: tasks.getAllTasks()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"josh1248"},"content":"                writer.write(t.serialize());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"josh1248"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"josh1248"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"josh1248"},"content":"            writer.close();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"josh1248"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"josh1248"},"content":"            System.out.println(\"An error occurred while writing to the text file: \" + e.getMessage());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"josh1248":92}},{"path":"src/main/java/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package taskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":" * A wrapper class to hold a list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"public class TaskList {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"        } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"    public int length() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"     * Retrieve and obtain the desired task index","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"     * NOTE: It is the caller\u0027s responsibility to ensure that an OOB exception is not triggered here - hence no error handling","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"     * @param idx the zero-indexed task index.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"     * @return the task at that index.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"    public Task getTaskAt(int idx) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"        return tasks.get(idx);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"     * Delete a selected task.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"     * @param idx the zero-indexed tsk index.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"     * @return the task that has just been deleted.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"    public Task deleteTaskAt(int idx) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"        return tasks.remove(idx);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"    public void addTask(Task t) { tasks.add(t); }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"josh1248"},"content":"     * Get all tasks as an ArrayList.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josh1248"},"content":"     * @return A copy of the task list (not the actual copy to prevent mutation of tasks through this method).","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"josh1248"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"josh1248"},"content":"        // no choice but to do an unchecked cast here because of type erasure.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"josh1248"},"content":"        return (ArrayList\u003cTask\u003e) tasks.clone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":54}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":" * A Deadline stores an additional deadline field in ISO date format.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    protected LocalDate due;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    public Deadline(String description, String due) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"            this.due \u003d LocalDate.parse(due);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(\"Invalid date format. Please declare your date in the ISO format yyyy-mm-dd.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"    public Deadline(String description, String due, Boolean isDone) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"            this.due \u003d LocalDate.parse(due);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(\"Invalid date format. Please declare your date in the ISO format yyyy-mm-dd.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"    public String serialize() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"        return String.join(\" | \", \"D\", super.serialize(), due.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"        return \"[E] \" + super.toString() + \"(by: \" + due.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"josh1248":43}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":" * An Event stores two fields, one \u0027from\u0027 field and one \u0027to\u0027 field, in ISO date format.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"    protected LocalDate start;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    protected LocalDate end;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    public Event(String description, String start, String end) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"            this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"            this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(\"Invalid date format. Please declare your date in the ISO format yyyy-mm-dd.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"    public Event(String description, String start, String end, Boolean isDone) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"            this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"            this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(\"Invalid date format. Please declare your date in the ISO format yyyy-mm-dd.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"    public String serialize() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"        return String.join(\" | \", \"E\", super.serialize(), start.toString(), end.toString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"josh1248":44}},{"path":"src/main/java/tasks/Serializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":" * An interface denoting the ability for an object to be serialized as text for retrieval later.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"interface Serializable {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"    String serialize();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"josh1248":8}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":" * The parent class that denotes a task, which is to be stored in a task list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":" * It stores 2 universal fields - the description of a task and its completion status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"    protected String description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    public Task(String description) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(\"Grok.Task description cannot be empty!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"    public Task(String description, Boolean isDone) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"            throw new GrokInvalidUserInputException(\"Grok.Task description cannot be empty!\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"    public String getDescription() { return description; }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"    public void markDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"    public void markUndone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"    public String serialize() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josh1248"},"content":"        return String.join(\" | \", getStatusIcon(), description);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josh1248"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"josh1248"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"josh1248":53}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":" * A Todo class denotes a base Task with nothing else besides its description and completion status.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"    public Todo(String description) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"    public Todo(String description, Boolean isDone) throws GrokInvalidUserInputException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"    public String serialize() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"        return String.join(\" | \", \"T\", super.serialize());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"josh1248":26}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"public class Ui {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"    public Ui() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"     * Pad a provided message with horizontal lines and indentation to separate bot input from user input","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"     * @param msg - Message the bot should return to the user","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"     * @return Standard bot message formatted message, easily distinguishable from user messages","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"    private static String padMessage(String msg) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"        // first stage - add horizontal lines above and below the message","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"        String horizontalLine \u003d \"_\".repeat(80);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"        String msgWithHLines \u003d String.join(\"\\n\", horizontalLine, msg, horizontalLine);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"        // second stage - provide 1 indentation to all lines of the message, including the horizontal line","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"        String indentSpaces \u003d \" \".repeat(4);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"        return indentSpaces.concat(msgWithHLines.replace(\"\\n\", \"\\n\".concat(indentSpaces)));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"    public void printGenericMessage(String s) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"        System.out.println(padMessage(s));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"        printGenericMessage(\"Hello! I\u0027m Grok\\nWhat ya wanna do to grok your way to success?\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"    public void printByeMessage() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"        printGenericMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"    public void printErrorMessage(String s) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"        printGenericMessage(\"Error! \" + s);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":43}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import commands.ExitCommand;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"import taskList.TaskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"    private static Parser parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"    @BeforeAll","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"    public static void setup() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"        tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"    public void parseUserInput_validCommand() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"            assertEquals(new ExitCommand(), parser.parseUserInput(\"bye\", tasks));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"        } catch (GrokInvalidUserInputException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"            fail(\"Exception was thrown for valid, simple command\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"    public void parseUserInput_invalidCharacter() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"            parser.parseUserInput(\"todo hello | world\", tasks);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"            fail(\"An invalid user input was not caught.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"        } catch (GrokInvalidUserInputException e) {}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"    public void parseUserInput_invalidCommand() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"            parser.parseUserInput(\"deadline something s/o/met/hing / / ww\", tasks);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"            fail(\"An invalid user input was not caught.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"        } catch (GrokInvalidUserInputException e) {}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":46}},{"path":"src/test/java/taskList/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package taskList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"import tasks.Task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"import tasks.TaskStub;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"josh1248"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"josh1248"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"josh1248"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"josh1248"},"content":"    public void setup() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"josh1248"},"content":"        tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"josh1248"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"josh1248"},"content":"    public void addTask_singleTask() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"josh1248"},"content":"            assertEquals(tasks.length(), 0);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"josh1248"},"content":"            Task task \u003d new TaskStub(\"Hello hello\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"josh1248"},"content":"            assertEquals(tasks.length(), 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"josh1248"},"content":"            assertSame(tasks.getTaskAt(0), task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"josh1248"},"content":"        } catch (GrokInvalidUserInputException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"josh1248"},"content":"            fail(\"Something went wrong with the stub.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"josh1248"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"josh1248"},"content":"    public void addTask_multipleTasks() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"josh1248"},"content":"            assertEquals(tasks.length(), 0);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"josh1248"},"content":"            Task task \u003d new TaskStub(\"Hello hello\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"josh1248"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"josh1248"},"content":"            assertSame(tasks.getTaskAt(0), task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"josh1248"},"content":"            assertEquals(tasks.length(), 1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"josh1248"},"content":"            Task nextTask \u003d new TaskStub(\"I am another task.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"josh1248"},"content":"            tasks.addTask(nextTask);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"josh1248"},"content":"            assertSame(tasks.getTaskAt(1), nextTask);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"josh1248"},"content":"            assertEquals(tasks.length(), 2);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"josh1248"},"content":"        } catch (GrokInvalidUserInputException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"josh1248"},"content":"            fail(\"Something went wrong with the stub.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"josh1248"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"josh1248"},"content":"    public void deleteTaskAt_singleTask() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"josh1248"},"content":"            assertEquals(tasks.length(), 0);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"josh1248"},"content":"            tasks.addTask(new TaskStub(\"I am the first task.\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"josh1248"},"content":"            Task taskToDelete \u003d new TaskStub(\"I am the second task.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"josh1248"},"content":"            tasks.addTask(taskToDelete);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"josh1248"},"content":"            tasks.addTask(new TaskStub(\"I am the third task.\"));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"josh1248"},"content":"            Task deletedTask \u003d tasks.deleteTaskAt(1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"josh1248"},"content":"            assertEquals(tasks.length(), 2);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"josh1248"},"content":"            assertSame(deletedTask, taskToDelete);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"josh1248"},"content":"        } catch (GrokInvalidUserInputException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"josh1248"},"content":"            fail(\"Something went wrong with the stub.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"josh1248"},"content":"    @Test","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"josh1248"},"content":"    public void getAllTasks_immutableCopyReturned() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"josh1248"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"josh1248"},"content":"            Task t1 \u003d new TaskStub(\"I am the first task.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"josh1248"},"content":"            Task t2 \u003d new TaskStub(\"I am the second task.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"josh1248"},"content":"            tasks.addTask(t1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"josh1248"},"content":"            tasks.addTask(t2);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"josh1248"},"content":"            ArrayList\u003cTask\u003e allTasks \u003d tasks.getAllTasks();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"josh1248"},"content":"            allTasks.remove(1);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"josh1248"},"content":"            assertEquals(2, tasks.length());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"josh1248"},"content":"        } catch (GrokInvalidUserInputException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"josh1248"},"content":"            fail(\"Something went wrong with the stub.\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"josh1248"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":88}},{"path":"src/test/java/tasks/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"package tasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"import exceptions.GrokInvalidUserInputException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"    public TaskStub(String description) throws GrokInvalidUserInputException{","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"        super(description);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"josh1248":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"josh1248"},"content":"todo hello world","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"josh1248"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"josh1248"},"content":"unmark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"josh1248"},"content":"deadline lorem ipsum /by Monday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"josh1248"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"josh1248"},"content":"event hello /from A /to B","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"josh1248"},"content":"unmark -999","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"josh1248"},"content":"mark 3","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"josh1248"},"content":"mark 3","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"josh1248"},"content":"unmark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"josh1248"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"josh1248":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"josh1248"},"content":"java -classpath ../bin Grok \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"josh1248"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"josh1248":2,"-":32}}]
