[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryancheny"},"content":"    mainClass.set(\"crack.Crack\")","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryancheny"},"content":"    archiveBaseName \u003d \"Crack\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"bryancheny":2}},{"path":"data/crack.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"T | 0 | 5","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"T | 0 | 5555","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"bryancheny":2}},{"path":"src/main/java/crack/Crack.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"package crack;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":" * The Crack class serves as the main entry point for the application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":" * It initializes the user interface (Ui), task storage (Storage), ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":" * and task management (TaskList). It also contains the main loop that ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":" * processes user commands.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":"public class Crack {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"    private Ui ui;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"     * Constructs a Crack instance, initializing the Ui, Storage, ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"     * and TaskList. Attempts to load tasks from the file specified ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryancheny"},"content":"     * by the filePath. If loading fails, an empty task list is initialized.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryancheny"},"content":"     * @param filePath the path to the file where tasks are stored.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryancheny"},"content":"    public Crack(String filePath) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryancheny"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryancheny"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryancheny"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryancheny"},"content":"            tasks \u003d new TaskList(storage.loadTasks(ui));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryancheny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryancheny"},"content":"            ui.showError(\"Unable to load tasks from file.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryancheny"},"content":"            tasks \u003d new TaskList();  // Initialize with an empty task list if load fails","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryancheny"},"content":"     * Starts the main loop of the application. It repeatedly reads user input, ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryancheny"},"content":"     * parses commands, and performs actions based on the input. The loop continues ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryancheny"},"content":"     * until the user enters the \"bye\" command, at which point the application exits.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryancheny"},"content":"    public void run() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryancheny"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryancheny"},"content":"        while (true) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryancheny"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryancheny"},"content":"            String command \u003d Parser.parseCommand(input);  // Get the command part of the input","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryancheny"},"content":"            switch (command) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryancheny"},"content":"                case \"bye\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryancheny"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryancheny"},"content":"                    ui.close();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryancheny"},"content":"                    return;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryancheny"},"content":"                case \"list\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryancheny"},"content":"                    if (tasks.isEmpty()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryancheny"},"content":"                        ui.showMessage(\"Your task list is empty.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryancheny"},"content":"                    } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryancheny"},"content":"                        ui.showMessage(\"Here are the tasks in your list:\\n\" + tasks.listTasks());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryancheny"},"content":"                case \"mark\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryancheny"},"content":"                    try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryancheny"},"content":"                        int index \u003d Parser.parseTaskNumber(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryancheny"},"content":"                        tasks.getTask(index).markAsDone();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryancheny"},"content":"                        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n   \" + tasks.getTask(index));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryancheny"},"content":"                        storage.saveTasks(tasks.getTasks(), ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryancheny"},"content":"                    } catch (IllegalArgumentException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryancheny"},"content":"                        ui.showError(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryancheny"},"content":"                case \"unmark\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryancheny"},"content":"                    try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryancheny"},"content":"                        int index \u003d Parser.parseTaskNumber(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryancheny"},"content":"                        tasks.getTask(index).unmark();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryancheny"},"content":"                        ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n   \" + tasks.getTask(index));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryancheny"},"content":"                        storage.saveTasks(tasks.getTasks(), ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryancheny"},"content":"                    } catch (IllegalArgumentException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryancheny"},"content":"                        ui.showError(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryancheny"},"content":"                case \"todo\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryancheny"},"content":"                    try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryancheny"},"content":"                        String description \u003d Parser.parseTodoDescription(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryancheny"},"content":"                        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryancheny"},"content":"                        tasks.addTask(newTodo);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryancheny"},"content":"                        ui.showTaskAdded(newTodo, tasks.getSize());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryancheny"},"content":"                        storage.saveTasks(tasks.getTasks(), ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryancheny"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryancheny"},"content":"                        ui.showError(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryancheny"},"content":"                case \"deadline\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryancheny"},"content":"                    try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryancheny"},"content":"                        String[] deadlineDetails \u003d Parser.parseDeadline(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryancheny"},"content":"                        Deadline newDeadline \u003d new Deadline(deadlineDetails[0], deadlineDetails[1]);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryancheny"},"content":"                        tasks.addTask(newDeadline);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryancheny"},"content":"                        ui.showTaskAdded(newDeadline, tasks.getSize());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryancheny"},"content":"                        storage.saveTasks(tasks.getTasks(), ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryancheny"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryancheny"},"content":"                        ui.showError(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryancheny"},"content":"                case \"event\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryancheny"},"content":"                    try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryancheny"},"content":"                        String[] eventDetails \u003d Parser.parseEvent(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryancheny"},"content":"                        Event newEvent \u003d new Event(eventDetails[0], eventDetails[1], eventDetails[2]);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryancheny"},"content":"                        tasks.addTask(newEvent);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryancheny"},"content":"                        ui.showTaskAdded(newEvent, tasks.getSize());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryancheny"},"content":"                        storage.saveTasks(tasks.getTasks(), ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryancheny"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryancheny"},"content":"                        ui.showError(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bryancheny"},"content":"                case \"find\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bryancheny"},"content":"                    try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bryancheny"},"content":"                        String keyword \u003d input.substring(5).trim();  // Extract the keyword","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bryancheny"},"content":"                        if (keyword.isEmpty()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bryancheny"},"content":"                            throw new IllegalArgumentException(\"Keyword cannot be empty.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bryancheny"},"content":"                        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bryancheny"},"content":"                        ui.showMatchingTasks(tasks.findTasks(keyword));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bryancheny"},"content":"                    } catch (StringIndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bryancheny"},"content":"                        ui.showError(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bryancheny"},"content":"                ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bryancheny"},"content":"                case \"delete\":","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bryancheny"},"content":"                    try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bryancheny"},"content":"                        int index \u003d Parser.parseTaskNumber(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bryancheny"},"content":"                        Task removedTask \u003d tasks.removeTask(index);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bryancheny"},"content":"                        ui.showMessage(\"Noted. I\u0027ve removed this task:\\n   \" + removedTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bryancheny"},"content":"                        storage.saveTasks(tasks.getTasks(), ui);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bryancheny"},"content":"                    } catch (IllegalArgumentException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bryancheny"},"content":"                        ui.showError(e.getMessage());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bryancheny"},"content":"                default:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bryancheny"},"content":"                    ui.showError(\"Invalid Command.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bryancheny"},"content":"     * The main method that initializes the Crack application and starts its execution.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bryancheny"},"content":"     * @param args command-line arguments (not used in this application).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bryancheny"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bryancheny"},"content":"        new Crack(\"./data/crack.txt\").run();  // Passes file path to the constructor","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"bryancheny":149}},{"path":"src/main/java/crack/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"package crack;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":" * The Parser class handles the interpretation and parsing of user input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":" * It extracts commands and relevant data such as task descriptions, dates,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":" * and task numbers from the input provided by the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":"public class Parser {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":"     * Parses the user input and returns the command as a string.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":"     * The command is assumed to be the first word in the input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"     * @param input the raw input string provided by the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"     * @return the command part of the input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"    public static String parseCommand(String input) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"        return input.split(\" \")[0];  // Return the first word as the command","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryancheny"},"content":"     * Parses a \"mark\" or \"unmark\" command to extract the task number.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"     * The task number is expected to be the second word in the input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryancheny"},"content":"     * This method converts the 1-based task number into a 0-based index.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryancheny"},"content":"     * @param input the input string containing the \"mark\" or \"unmark\" command.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryancheny"},"content":"     * @return the 0-based index of the task to mark or unmark.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryancheny"},"content":"     * @throws IllegalArgumentException if the task number format is invalid.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryancheny"},"content":"    public static int parseTaskNumber(String input) throws IllegalArgumentException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryancheny"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryancheny"},"content":"            return Integer.parseInt(input.split(\" \")[1]) - 1;  // Task numbers are 1-based, convert to 0-based index","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryancheny"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryancheny"},"content":"            throw new IllegalArgumentException(\"Invalid task number format.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryancheny"},"content":"     * Parses a \"todo\" command to extract the task description.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryancheny"},"content":"     * The description is expected to follow the \"todo\" keyword.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryancheny"},"content":"     * @param input the input string containing the \"todo\" command.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryancheny"},"content":"     * @return the description of the todo task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryancheny"},"content":"     * @throws IllegalArgumentException if the todo description is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryancheny"},"content":"    public static String parseTodoDescription(String input) throws IllegalArgumentException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryancheny"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryancheny"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryancheny"},"content":"            throw new IllegalArgumentException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryancheny"},"content":"        return description;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryancheny"},"content":"     * Parses a \"deadline\" command to extract the task description and deadline date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryancheny"},"content":"     * The description should precede the \"/by\" delimiter and the deadline should follow it.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryancheny"},"content":"     * @param input the input string containing the \"deadline\" command.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryancheny"},"content":"     * @return a string array where the first element is the task description and the second is the deadline.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryancheny"},"content":"     * @throws IllegalArgumentException if the format of the deadline is invalid or incomplete.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryancheny"},"content":"    public static String[] parseDeadline(String input) throws IllegalArgumentException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryancheny"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryancheny"},"content":"            String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryancheny"},"content":"            if (parts.length \u003c 2 || parts[0].trim().isEmpty()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryancheny"},"content":"                throw new IllegalArgumentException(\"Invalid format for deadline. Use: deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryancheny"},"content":"            return new String[]{parts[0].trim(), parts[1].trim()};  // Return description and deadline date","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryancheny"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryancheny"},"content":"            throw new IllegalArgumentException(\"Invalid format for deadline. Use: deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryancheny"},"content":"     * Parses an \"event\" command to extract the task description, start date, and end date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryancheny"},"content":"     * The description should precede the \"/from\" delimiter, the start date should follow \"/from\", ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryancheny"},"content":"     * and the end date should follow \"/to\".","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryancheny"},"content":"     * @param input the input string containing the \"event\" command.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryancheny"},"content":"     * @return a string array where the first element is the task description, the second is the start date, and the third is the end date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryancheny"},"content":"     * @throws IllegalArgumentException if the format of the event is invalid or incomplete.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryancheny"},"content":"    public static String[] parseEvent(String input) throws IllegalArgumentException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryancheny"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryancheny"},"content":"            String[] parts \u003d input.substring(6).split(\" /from | /to \");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryancheny"},"content":"            if (parts.length \u003c 3 || parts[0].trim().isEmpty()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryancheny"},"content":"                throw new IllegalArgumentException(\"Invalid format for event. Use: event \u003cdescription\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryancheny"},"content":"            return new String[]{parts[0].trim(), parts[1].trim(), parts[2].trim()};  // Return description, start, and end dates","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryancheny"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryancheny"},"content":"            throw new IllegalArgumentException(\"Invalid format for event. Use: event \u003cdescription\u003e /from \u003cyyyy-mm-dd\u003e /to \u003cyyyy-mm-dd\u003e.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"bryancheny":94}},{"path":"src/main/java/crack/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"package crack;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"import java.io.File;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":" * The Storage class handles reading and writing tasks to and from a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":" * It manages the persistence of tasks, ensuring that tasks can be saved and loaded","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":" * between sessions.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"public class Storage {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"    private String filePath;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryancheny"},"content":"     * @param filePath the file path where tasks will be saved and loaded from.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryancheny"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryancheny"},"content":"     * Saves the list of tasks to a file. If the file or directory does not exist,","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryancheny"},"content":"     * it creates them. Each task is saved in a specific format that can be loaded later.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryancheny"},"content":"     * @param tasks the list of tasks to be saved.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryancheny"},"content":"     * @param ui    the user interface to show error messages if the save operation fails.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryancheny"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryancheny"},"content":"        try {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryancheny"},"content":"            File dir \u003d new File(\"./data\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryancheny"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryancheny"},"content":"                dir.mkdirs();  // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryancheny"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryancheny"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryancheny"},"content":"                file.createNewFile();  // Create the file if it doesn\u0027t exist","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryancheny"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryancheny"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryancheny"},"content":"                writer.write(task.toSaveString() + System.lineSeparator());  // Write each task in save format","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryancheny"},"content":"            writer.close();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryancheny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryancheny"},"content":"            ui.showError(\"Unable to save tasks.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryancheny"},"content":"     * Loads the list of tasks from the file. If the file does not exist, it returns an empty task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryancheny"},"content":"     * The method parses each line in the file and recreates the corresponding tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryancheny"},"content":"     * @param ui the user interface to show error messages in case of corrupted data or file issues.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryancheny"},"content":"     * @return an ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryancheny"},"content":"     * @throws IOException if the file format is corrupted or there are issues reading the file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryancheny"},"content":"    public ArrayList\u003cTask\u003e loadTasks(Ui ui) throws IOException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryancheny"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryancheny"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryancheny"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryancheny"},"content":"            return tasks;  // No file exists, so return an empty task list","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryancheny"},"content":"        Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryancheny"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryancheny"},"content":"            String line \u003d fileScanner.nextLine();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryancheny"},"content":"            String[] parts \u003d line.split(\" \\\\| \");  // Split the task into parts based on the save format","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryancheny"},"content":"            switch (parts[0]) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryancheny"},"content":"                case \"T\":  // Todo task","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryancheny"},"content":"                    Todo todo \u003d new Todo(parts[2]);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryancheny"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryancheny"},"content":"                        todo.markAsDone();  // Mark the task as done if indicated in the file","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryancheny"},"content":"                    tasks.add(todo);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryancheny"},"content":"                case \"D\":  // Deadline task","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryancheny"},"content":"                    Deadline deadline \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryancheny"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryancheny"},"content":"                        deadline.markAsDone();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryancheny"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryancheny"},"content":"                case \"E\":  // Event task","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryancheny"},"content":"                    Event event \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryancheny"},"content":"                    if (parts[1].equals(\"1\")) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryancheny"},"content":"                        event.markAsDone();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryancheny"},"content":"                    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryancheny"},"content":"                    tasks.add(event);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryancheny"},"content":"                    break;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryancheny"},"content":"                default:","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryancheny"},"content":"                    throw new IOException(\"Corrupted task format\");  // If the task type is unrecognized, throw an exception","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryancheny"},"content":"        fileScanner.close();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryancheny"},"content":"        return tasks;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"bryancheny":103}},{"path":"src/main/java/crack/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"package crack;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":" * The Task class represents a generic task in the application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":" * It stores basic information about the task, such as its description, status (done or not),","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":" * and type (Todo, Deadline, or Event).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":"public class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":"    ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"     * Enum representing the different types of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"    public enum TaskType {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryancheny"},"content":"    protected String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryancheny"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"    protected TaskType type;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryancheny"},"content":"     * Constructs a new Task with a description and type.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryancheny"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryancheny"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryancheny"},"content":"     * @param type the type of the task (Todo, Deadline, or Event).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryancheny"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryancheny"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryancheny"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryancheny"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryancheny"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryancheny"},"content":"     * @return \"X\" if the task is done, otherwise a blank space.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryancheny"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryancheny"},"content":"        return (isDone ? \"X\" : \" \");  // Mark done task with X","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryancheny"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryancheny"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryancheny"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryancheny"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryancheny"},"content":"    public void unmark() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryancheny"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryancheny"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryancheny"},"content":"     * @return the type of the task (Todo, Deadline, or Event).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryancheny"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryancheny"},"content":"        return type;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryancheny"},"content":"     * Returns a formatted string representation of the task for saving to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryancheny"},"content":"     * @return the task details in a save-friendly format.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryancheny"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryancheny"},"content":"        return getTypeIcon() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryancheny"},"content":"     * Returns a string representation of the task, including its type and status.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryancheny"},"content":"     * @return a string representation of the task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryancheny"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryancheny"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryancheny"},"content":"        return \"[\" + getTypeIcon() + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryancheny"},"content":"     * Returns the icon representing the type of the task (T for Todo, D for Deadline, E for Event).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryancheny"},"content":"     * @return the icon of the task type.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryancheny"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryancheny"},"content":"        switch (type) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryancheny"},"content":"            case TODO:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryancheny"},"content":"                return \"T\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryancheny"},"content":"            case DEADLINE:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryancheny"},"content":"                return \"D\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryancheny"},"content":"            case EVENT:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryancheny"},"content":"                return \"E\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryancheny"},"content":"            default:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryancheny"},"content":"                return \" \";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryancheny"},"content":" * Represents a Todo task. A Todo task only has a description and does not have any dates.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bryancheny"},"content":"class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bryancheny"},"content":"    ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bryancheny"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bryancheny"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bryancheny"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bryancheny"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bryancheny"},"content":"     * Returns a formatted string representation of the Todo task for saving to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"bryancheny"},"content":"     * @return the Todo task details in a save-friendly format.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"bryancheny"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"bryancheny"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"bryancheny"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"bryancheny"},"content":" * Represents a Deadline task. A Deadline task has a description and a due date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"bryancheny"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"bryancheny"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"bryancheny"},"content":"     * Constructs a new Deadline task with the specified description and due date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"bryancheny"},"content":"     * The due date is expected to be in the yyyy-mm-dd format.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"bryancheny"},"content":"     * @param description the description of the deadline task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"bryancheny"},"content":"     * @param by the due date of the deadline task (in yyyy-mm-dd format).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"bryancheny"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"bryancheny"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"bryancheny"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"bryancheny"},"content":"            this.by \u003d LocalDate.parse(by);  // Parse date in yyyy-mm-dd format","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"bryancheny"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"bryancheny"},"content":"            System.out.println(\"Error: Invalid date format. Please use yyyy-mm-dd.\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"bryancheny"},"content":"     * Returns a formatted string representation of the Deadline task for saving to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"bryancheny"},"content":"     * @return the Deadline task details in a save-friendly format.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"bryancheny"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"bryancheny"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"bryancheny"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"bryancheny"},"content":"     * Returns a string representation of the Deadline task, including its description and due date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"bryancheny"},"content":"     * @return a string representation of the Deadline task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"bryancheny"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"bryancheny"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"bryancheny"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"bryancheny"},"content":"        return super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"bryancheny"},"content":"     * Represents an Event task. An Event task has a description, start date, and end date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"bryancheny"},"content":"class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"bryancheny"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"bryancheny"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"bryancheny"},"content":"     * Constructs a new Event task with the specified description, start date, and end date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"bryancheny"},"content":"     * The start and end dates are expected to be in the yyyy-mm-dd format.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"bryancheny"},"content":"     * @param description the description of the event task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"bryancheny"},"content":"     * @param from the start date of the event (in yyyy-mm-dd format).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"bryancheny"},"content":"     * @param to the end date of the event (in yyyy-mm-dd format).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"bryancheny"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"bryancheny"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"bryancheny"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"bryancheny"},"content":"            this.from \u003d LocalDate.parse(from);  // Parse start date in yyyy-mm-dd format","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"bryancheny"},"content":"            this.to \u003d LocalDate.parse(to);      // Parse end date in yyyy-mm-dd format","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"bryancheny"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"bryancheny"},"content":"            System.out.println(\"Error: Invalid date format. Please use yyyy-mm-dd.\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"bryancheny"},"content":"     * Returns a formatted string representation of the Event task for saving to a file.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"bryancheny"},"content":"     * @return the Event task details in a save-friendly format.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"bryancheny"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"bryancheny"},"content":"    public String toSaveString() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"bryancheny"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"bryancheny"},"content":"     * Returns a string representation of the Event task, including its description, start date, and end date.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"bryancheny"},"content":"     * ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"bryancheny"},"content":"     * @return a string representation of the Event task.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"bryancheny"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"bryancheny"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"bryancheny"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"bryancheny"},"content":"        return super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"bryancheny":222}},{"path":"src/main/java/crack/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"package crack;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":" * The TaskList class manages the list of tasks in the application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":" * It provides methods to add, remove, and retrieve tasks, as well as other operations ","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":" * such as checking if the list is empty and listing all tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":"public class TaskList {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryancheny"},"content":"     * Constructs a new TaskList with a pre-existing list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"     * @param tasks an ArrayList of tasks to initialize the task list with.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryancheny"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryancheny"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryancheny"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryancheny"},"content":"     * @param task the task to be added.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryancheny"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryancheny"},"content":"        tasks.add(task);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryancheny"},"content":"     * Removes a task from the task list based on the given index.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryancheny"},"content":"     * @param index the index of the task to be removed (0-based index).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryancheny"},"content":"     * @return the task that was removed from the list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryancheny"},"content":"     * @throws IndexOutOfBoundsException if the provided index is out of range.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryancheny"},"content":"    public Task removeTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryancheny"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryancheny"},"content":"            return tasks.remove(index);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryancheny"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryancheny"},"content":"            throw new IndexOutOfBoundsException(\"Task number out of range.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryancheny"},"content":"     * Retrieves a task from the task list based on the given index.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryancheny"},"content":"     * @param index the index of the task to retrieve (0-based index).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryancheny"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryancheny"},"content":"     * @throws IndexOutOfBoundsException if the provided index is out of range.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryancheny"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryancheny"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryancheny"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryancheny"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryancheny"},"content":"            throw new IndexOutOfBoundsException(\"Task number out of range.\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryancheny"},"content":"     * Returns the number of tasks currently in the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryancheny"},"content":"     * @return the size of the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryancheny"},"content":"    public int getSize() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryancheny"},"content":"        return tasks.size();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryancheny"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryancheny"},"content":"     * @return true if the task list is empty, false otherwise.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryancheny"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryancheny"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryancheny"},"content":"     * Returns a string representation of all tasks in the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryancheny"},"content":"     * Each task is listed with its corresponding number (1-based index).","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryancheny"},"content":"     * @return a string representation of the tasks in the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryancheny"},"content":"    public String listTasks() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryancheny"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryancheny"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryancheny"},"content":"            taskList.append((i + 1)).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryancheny"},"content":"        return taskList.toString();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryancheny"},"content":"     * Returns the internal list of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryancheny"},"content":"     * @return the ArrayList of tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryancheny"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryancheny"},"content":"        return tasks;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryancheny"},"content":"     /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"bryancheny"},"content":"     * Finds tasks that contain the given keyword in their description.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"bryancheny"},"content":"     * @param keyword the keyword to search for in the task descriptions.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"bryancheny"},"content":"     * @return a list of tasks that match the keyword.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"bryancheny"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"bryancheny"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"bryancheny"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"bryancheny"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"bryancheny"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"bryancheny"},"content":"        return matchingTasks;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"bryancheny":124}},{"path":"src/main/java/crack/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"package crack;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":"/**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":" * The Ui class handles all interactions with the user. It provides methods","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":" * for displaying messages, reading user input, and formatting output to be","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":" * presented to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":" */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":"public class Ui {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"     * Constructs a Ui object and initializes the scanner for reading user input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"    public Ui() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryancheny"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryancheny"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryancheny"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryancheny"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryancheny"},"content":"                + \" Hello! I\u0027m Crack\\n\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryancheny"},"content":"                + \" What can I do for you?\\n\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryancheny"},"content":"                + DIVIDER);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"bryancheny"},"content":"     * Prints a divider line to visually separate sections of output.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"bryancheny"},"content":"    public void showDivider() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"bryancheny"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"bryancheny"},"content":"     * Displays the goodbye message when the user exits the application.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"bryancheny"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"bryancheny"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"bryancheny"},"content":"     * Reads and returns the user\u0027s command input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"bryancheny"},"content":"     * @return the user\u0027s input as a trimmed string.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"bryancheny"},"content":"    public String readCommand() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"bryancheny"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"bryancheny"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"bryancheny"},"content":"     * Displays an error message in a formatted output.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"bryancheny"},"content":"     * @param message the error message to display.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"bryancheny"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"bryancheny"},"content":"        System.out.println(DIVIDER + \" Error: \" + message + \"\\n\" + DIVIDER);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"bryancheny"},"content":"     * Displays a general message to the user.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"bryancheny"},"content":"     * @param message the message to display.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"bryancheny"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"bryancheny"},"content":"        System.out.println(DIVIDER + message + \"\\n\" + DIVIDER);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"bryancheny"},"content":"     * Displays a message indicating that a task has been added to the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"bryancheny"},"content":"     * @param task the task that was added.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"bryancheny"},"content":"     * @param size the new size of the task list.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"bryancheny"},"content":"    public void showTaskAdded(Task task, int size) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"bryancheny"},"content":"        System.out.println(DIVIDER + \" Got it. I\u0027ve added this task:\\n   \" + task + \"\\n\"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"bryancheny"},"content":"                + \" Now you have \" + size + \" tasks in the list.\\n\" + DIVIDER);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"bryancheny"},"content":"        /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"bryancheny"},"content":"     * Displays the list of tasks that match the search keyword.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"bryancheny"},"content":"     *","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"bryancheny"},"content":"     * @param tasks the list of matching tasks.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"bryancheny"},"content":"    public void showMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"bryancheny"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"bryancheny"},"content":"            System.out.println(DIVIDER + \" No tasks found with the given keyword.\\n\" + DIVIDER);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"bryancheny"},"content":"        } else {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"bryancheny"},"content":"            System.out.println(DIVIDER + \" Here are the matching tasks in your list:\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"bryancheny"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"bryancheny"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"bryancheny"},"content":"            }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"bryancheny"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"bryancheny"},"content":"        }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"bryancheny"},"content":"    /**","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"bryancheny"},"content":"     * Closes the scanner used for reading user input.","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"bryancheny"},"content":"     */","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"bryancheny"},"content":"    public void close() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"bryancheny"},"content":"        scanner.close();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"bryancheny":109}},{"path":"src/main/java/crack/data/crack.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"D | 1 | this | 2022-01-01","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"D | 0 | that | 2020-10-10","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"T | 1 | that thing","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"E | 0 | sohs | 2022-11-11 | 2024-11-11","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"bryancheny":4}},{"path":"src/test/java/crack/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"package crack;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":"class ParserTest {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":"    @Test","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":"    void testParseTodoDescription() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":"        String input \u003d \"todo read book\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":"        String expectedDescription \u003d \"read book\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":"        String result \u003d Parser.parseTodoDescription(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"        // Check if the correct description is parsed","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"        assertEquals(expectedDescription, result);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"    @Test","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryancheny"},"content":"    void testParseTaskNumber() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryancheny"},"content":"        String input \u003d \"mark 2\";","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryancheny"},"content":"        int expectedTaskNumber \u003d 1;  // 1-based index is converted to 0-based","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryancheny"},"content":"        int result \u003d Parser.parseTaskNumber(input);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryancheny"},"content":"        // Check if the correct task number is parsed","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryancheny"},"content":"        assertEquals(expectedTaskNumber, result);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"bryancheny":29}},{"path":"src/test/java/crack/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"package crack;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":"class TaskListTest {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":"    @Test","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":"    void testAddTask() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"        // Check if the task was added successfully","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"    @Test","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"bryancheny"},"content":"    void testRemoveTask() {","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"bryancheny"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"bryancheny"},"content":"        Todo task \u003d new Todo(\"Test task\");","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"bryancheny"},"content":"        Task removedTask \u003d taskList.removeTask(0);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"bryancheny"},"content":"","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"bryancheny"},"content":"        // Check if the task was removed successfully","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"bryancheny"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"bryancheny"},"content":"        assertEquals(task, removedTask);","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"bryancheny"},"content":"    }","lastModifiedDate":"2024-09-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"bryancheny"},"content":"}","lastModifiedDate":"2024-09-06","isFullCredit":false}],"authorContributionMap":{"bryancheny":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryancheny"},"content":"todo read book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"bryancheny"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"bryancheny"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"bryancheny"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"bryancheny"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"bryancheny"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"bryancheny"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"bryancheny"},"content":"mark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"bryancheny"},"content":"unmark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"bryancheny"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"bryancheny"},"content":"delete 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"bryancheny"},"content":"delete 10","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"bryancheny"},"content":"delete 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"bryancheny"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"bryancheny"},"content":"todo ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"bryancheny"},"content":"deadline submit report /by ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"bryancheny"},"content":"event team meeting /from /to ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"blah","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"bryancheny"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"bryancheny":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"bryancheny"},"content":"java -classpath ..\\bin Crack \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"bryancheny":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"bryancheny"},"content":"java -classpath ../bin Crack \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"bryancheny":1}}]
