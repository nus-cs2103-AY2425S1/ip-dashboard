[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"checkstyle {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"    mainClass.set(\"talkie.Launcher\")","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    archiveBaseName \u003d \"talkie\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":22,"-":39}},{"path":"src/main/java/talkie/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code DialogBox} class is a custom JavaFX {@code HBox} component that displays a dialog","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":" * with an associated image, such as a user\u0027s profile picture. The dialog can be flipped","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":" * to adjust the positioning of the image and text, depending on whether the dialog is from","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":" * the user or the application (Talkie).","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code DialogBox} instance with the specified text and image.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * This constructor loads the FXML layout for the dialog box, sets the dialog text,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * and assigns the provided image to the {@code ImageView}.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @param text The text to be displayed in the dialog.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * @param img  The image to be displayed in the {@code ImageView}.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"        dialog.setFont(Font.font(\"Verdana\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"     * Flips the dialog box such that the {@code ImageView} is on the left and the text on the right.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"     * This method reorders the child nodes of the {@code HBox} to reverse their positions,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"     * typically used for displaying the application\u0027s responses with the image on the left side.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"    private void flip() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     * Creates a {@code DialogBox} for the user with the specified text and image.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     * This method returns a {@code DialogBox} where the image is on the right side,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     * representing the user\u0027s input in the dialog.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"     * @param text The user\u0027s input text.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"     * @param img  The user\u0027s profile image.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A {@code DialogBox} instance representing the user\u0027s dialog.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"     * Creates a {@code DialogBox} for Talkie with the specified text and image.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"     * This method returns a {@code DialogBox} where the image is on the left side,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"     * representing the application\u0027s response in the dialog.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"     * @param text The application\u0027s response text.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"     * @param img  The application\u0027s profile image.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A {@code DialogBox} instance representing Talkie\u0027s dialog.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"    public static DialogBox getTalkieDialog(String text, Image img) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"        db.flip();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"        return db;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":105}},{"path":"src/main/java/talkie/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * A launcher class to work around classpath issues.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code Launcher} class serves as an entry point for the Talkie application. It is used to bypass classpath","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * issues that can occur when running JavaFX applications from certain IDEs or environments. This class directly","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * launches the {@code Main} class, which initializes and starts the JavaFX application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"public class Launcher {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * The main method of the Launcher class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * This method invokes the {@code Application.launch} method, passing the {@code Main} class and any command-line","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * arguments. This effectively starts the JavaFX application by delegating to the {@code Main} class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":27}},{"path":"src/main/java/talkie/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * A GUI for Talkie using FXML.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code Main} class serves as the entry point for launching the Talkie application with a graphical user","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * interface (GUI) built using JavaFX. It sets up the primary stage and scene, loads the FXML layout, and injects the","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" * {@code Talkie} instance into the controller.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    private Talkie talkie \u003d new Talkie();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * Starts the JavaFX application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * This method is called when the JavaFX application is launched. It sets up the primary stage by loading the","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * {@code MainWindow.fxml} layout, creates a scene with the loaded layout, and sets the scene on the stage. The","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * {@code Talkie} instance is injected into the {@code MainWindow} controller for handling user interactions.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * @param stage The primary stage for this application, onto which the application scene is set.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTalkie(talkie); // inject the Talkie instance","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"            stage.show();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":46}},{"path":"src/main/java/talkie/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code MainWindow} class handles the primary user interface of the Talkie application. It manages the dialog","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":" * between the user and Talkie, displays the responses, and handles application exit based on user commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    private Talkie talkie;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/travis.png\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/baby-yoda.png\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * Initializes the main window components.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * This method binds the scroll pane\u0027s vertical value to the dialog container\u0027s height to ensure that new messages","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * are always visible. It also sets the font for the input and send button and displays a greeting message in the","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * dialog container.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        sendButton.setFont(Font.font(\"Verdana\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"        userInput.setFont(Font.font(\"Verdana\"));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"        String greeting \u003d \"Welcome! I\u0027m Talkie.\\nWhat can I do for you?\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"                DialogBox.getTalkieDialog(greeting, dukeImage)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"        );","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"     * Injects the Talkie instance into this controller.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"     * This method is used to set the Talkie instance that the {@code MainWindow} interacts with.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     * @param t The Talkie instance to be used by this controller.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"    public void setTalkie(Talkie t) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"        talkie \u003d t;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     * Handles user input and generates a response from Talkie.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     * This method reads the user\u0027s input, processes it to generate a response, and displays both the input and response","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     * in dialog boxes. If the user inputs \"bye\", the application will close after a short delay.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"        String input \u003d userInput.getText().toLowerCase().trim();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"        String response \u003d talkie.getResponse(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"                DialogBox.getTalkieDialog(response, dukeImage)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"        );","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"            closeAfterDelay();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"     * Closes the application after a short delay.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"     * This method creates a 1-second pause before exiting the application. It is used to give the user a moment to see","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"     * the final response from Talkie before the application closes.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"    private void closeAfterDelay() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"        pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jereeemyyyy"},"content":"        pause.play();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":106}},{"path":"src/main/java/talkie/Talkie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * The main class for the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code Talkie} class initializes the user interface, task list, and storage components. It handles loading and","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * saving tasks, and manages the main program loop where user commands are processed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"public class Talkie {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    private static String filePath \u003d \"./data/talkie.Talkie.txt\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code Talkie} instance with the specified file path for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * Initializes the user interface, storage, and task list. Loads existing tasks from storage if available,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * otherwise initializes an empty task list. Handles any exceptions related to loading data.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    public Talkie() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"        storage \u003d new Storage(Talkie.filePath);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"            tasks \u003d new TaskList(this.storage.loadData());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (TalkieException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"            ui.showTalkieException(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * Runs the main Talkie program loop.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays the welcome message, reads user commands, and processes them until an exit command is issued. Handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * any exceptions related to command execution and displays appropriate messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"    public void runTalkie() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.print(ui.welcomeMessage());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        while (!isExit) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"            try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                String input \u003d this.ui.readCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                Command c \u003d Parser.getCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"                String response \u003d c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                System.out.println(response);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"            } catch (TalkieException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"                System.out.println(e);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     * This method processes a user input string, determines the appropriate command,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     * executes it, and returns the response. If an exception occurs during command","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     * execution, the exception message is returned as the response.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The response generated by executing the command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"            Command c \u003d Parser.getCommand(input);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"            return c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (TalkieException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"            return e.toString();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"     * The main entry point for the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"     * Initializes a {@code Talkie} instance and starts the Talkie program loop.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"        // Start of talkie.Talkie","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"        new Talkie().runTalkie();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":95,"-":2}},{"path":"src/main/java/talkie/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to exit the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code ByeCommand} is responsible for saving the current task list data to persistent storage","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * and displaying a goodbye message to the user before the application exits.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code ByeCommand}, which saves the current task list to storage","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * and displays a goodbye message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * If an error occurs during the data-saving process, the method returns an error message instead.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing the goodbye message if the data is successfully saved,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     *         or an error message if the saving process fails.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"            return ui.byeMessage();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"            return \"Oops! Something went wrong when saving the data!\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command will terminate the application.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * The {@code ByeCommand} always returns {@code true} because it is intended to exit the program.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true}, as this command ends the program.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":53}},{"path":"src/main/java/talkie/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an abstract command in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * Commands are actions that the user can perform, such as adding tasks, deleting tasks, or exiting the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * Subclasses of {@code Command} must implement the {@code execute} method to define the specific action the command","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * performs. Additionally, subclasses must implement the {@code isExit} method to define whether the command will","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * cause the program to exit.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * This method is abstract and must be implemented by all subclasses to define the specific behavior of the command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * The method interacts with the task list, the user interface, and the storage system,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * and may throw a {@code TalkieException} if an error occurs during execution.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save or load task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the result of the command\u0027s execution, typically a message to be","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     *         displayed to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieException If an error occurs during the execution of the command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws TalkieException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates whether the command will terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * Subclasses should override this method to return {@code true} if the command causes the application to exit.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * By default, commands are assumed not to terminate the application unless explicitly overridden.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the command ends the program, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":46}},{"path":"src/main/java/talkie/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents the different types of commands that can be issued in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * Each command type corresponds to a specific user action or task manipulation within the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"public enum CommandType {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"    BYE, LIST, DELETE,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"    MARK, UNMARK, TODO,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"    EVENT, DEADLINE, FIND","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":11}},{"path":"src/main/java/talkie/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to add a deadline task to the task list in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" * The command parses the user input to create a {@code Deadline} task with a description","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":" * and a specific deadline date and time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code DeadlineCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and details of the deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code DeadlineCommand} by parsing the input to create a new {@code Deadline} task,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * adding it to the task list, and displaying an appropriate message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * The command expects a description and a deadline in the format:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003ccode\u003edeadline description /by yyyy-MM-dd HHmm\u003c/code\u003e. If the description or deadline is missing,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * or if the date/time format is incorrect, appropriate exceptions are thrown, and error messages are displayed.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The {@code TaskList} containing all current tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The {@code Ui} component used to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The {@code Storage} component used to save task data.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing a confirmation message about the added deadline task, or an error message if the","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     *         input is invalid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If the command is missing the required description or deadline.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TalkieMissingArgumentException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2); // Split into type and the rest of the input","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"                String details \u003d parts[1]; // Rest of the input (e.g., description /by deadline details)","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                String[] deadlineParts \u003d details.split(\"/by \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                String description \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"                String by \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"                Task newDeadline \u003d new Deadline(description, time);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"                tasks.addTask(newDeadline);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"                return ui.addMessage(newDeadline, tasks.size());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieMissingArgumentException(parts[0],","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"                        \"The \u0027description\u0027 and \u0027by\u0027 of deadline cannot be empty.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"            return ui.wrongDateTimeFormatMessage();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":85}},{"path":"src/main/java/talkie/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieInvalidArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieNoTaskFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to delete a task from the task list in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * The command parses the user input to determine which task to delete based on its index in the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code DeleteCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and the index of the task to be deleted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code DeleteCommand} by parsing the input to delete the specified task from the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * The command expects an index of the task to delete. The input should be in the format:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003ccode\u003edelete index\u003c/code\u003e. If the index is missing, invalid, or the specified task does not exist,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * appropriate exceptions are thrown.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The {@code TaskList} containing all current tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The {@code Ui} component used to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The {@code Storage} component used to save task data.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing a confirmation message about the deleted task or an error message if","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     *         the input is invalid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException  If the command is missing the required task index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException      If the task index specified does not exist in the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieInvalidArgumentException  If the provided argument is not a valid integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"            throws TalkieMissingArgumentException, TalkieNoTaskFoundException, TalkieInvalidArgumentException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"        String[] temp \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if user included an argument","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(temp[0], \"The \u0027delete\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if user included the correct integer argument","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"        } else if (this.isInteger(temp[1])) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"            int index \u003d Integer.parseInt(temp[1]);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if the task is in the list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"            if (index \u003c\u003d tasks.size()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"                Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"                return ui.deleteMessage(task, tasks.size());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieNoTaskFoundException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieInvalidArgumentException(temp[0], \"The \u0027delete\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if a given input string can be parsed as an integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The string to be checked.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the input can be parsed as an integer; {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"    private boolean isInteger(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"            return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"            return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":94}},{"path":"src/main/java/talkie/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to add a new event task to the task list in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" * The command processes user input to create an event with a description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code EventCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and the details of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    public EventCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code EventCommand} by parsing the input to add a new event task to the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * The event task includes a description, start time, and end time. The input is expected to follow the format:","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003ccode\u003eevent description /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\u003c/code\u003e. If the input is missing any required","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * components or if the date/time format is incorrect, appropriate exceptions are thrown.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The {@code TaskList} containing all current tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The {@code Ui} component used to display messages to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The {@code Storage} component used to save task data.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing a confirmation message about the added event or an error message if the input","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     *         is invalid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If the command is missing the required description, start time,","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     *         or end time.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TalkieMissingArgumentException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2); // Split into command type and the rest of the input","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                String details \u003d parts[1]; // Rest of the input (e.g., description, from, to details)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                String[] eventParts \u003d details.split(\"/from | /to \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                if (eventParts.length \u003c 3) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                    throw new TalkieMissingArgumentException(parts[0],","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"                            \"The \u0027description\u0027, \u0027from\u0027, and \u0027to\u0027 of event cannot be empty.\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"                }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"                String description \u003d eventParts[0].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"                String from \u003d eventParts[1].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"                String to \u003d eventParts[2].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"                LocalDateTime startTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"                LocalDateTime endTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"                if (startTime.isAfter(endTime)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"                    return \"The end time must be after the start time!\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"                Task newEvent \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"                tasks.addTask(newEvent);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"                return ui.addMessage(newEvent, tasks.size());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieMissingArgumentException(parts[0],","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"                        \"The \u0027description\u0027, \u0027from\u0027, and \u0027to\u0027 of event cannot be empty.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"            return ui.wrongDateTimeFormatMessage();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":94}},{"path":"src/main/java/talkie/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieInvalidArgumentException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code FindCommand} class processes a command that searches for tasks with descriptions matching a given keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * It requires the keyword as an argument and handles any errors related to missing or invalid arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code FindCommand} with the specified full command string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * Initializes the command with the full string provided by the user,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * which is used to parse and execute the find operation.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full command string input by the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code FindCommand} to search for tasks containing the specified keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * This method splits the command string to extract the keyword. It checks if the keyword is provided","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * and valid. If so, it uses the {@code Ui} component to display tasks that match the keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * If the keyword is missing or invalid, the method throws appropriate exceptions.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The {@code TaskList} containing all the tasks to search within.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The {@code Ui} component used to display tasks matching the keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The {@code Storage} component (not used in this method but included for method","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     *                signature consistency).","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing the search results, showing tasks that contain the specified keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If the keyword is not provided in the command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieInvalidArgumentException If the argument is not a valid string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"            throws TalkieMissingArgumentException, TalkieInvalidArgumentException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        String[] temp \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if user included an argument","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(temp[0], \"The \u0027find\u0027 command requires a string as argument\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"        // Checks if the argument is a string","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp[1] !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"            String keyword \u003d temp[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"            return ui.findTasks(tasks, keyword);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieInvalidArgumentException(temp[0], \"The \u0027find\u0027 command requires a string as argument\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     * The {@code FindCommand} does not end the program, so this method always returns {@code false}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":80}},{"path":"src/main/java/talkie/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to list all tasks in the task list in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * The command triggers the display of the current list of tasks to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code ListCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    public ListCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code ListCommand} by displaying the current list of tasks to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * This method retrieves the list of all current tasks from the task list and generates a formatted message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * to present the tasks to the user. The storage component is not used in this command but is included","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * for consistency with the method signature.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display the list of tasks to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data (not used in this command).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing the formatted list of all current tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"        return ui.listTasks(tasks);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":52}},{"path":"src/main/java/talkie/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieInvalidArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieNoTaskFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to mark a task as done in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * The command marks a specified task as completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code MarkCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and task index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code MarkCommand} by marking a specified task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * The method parses the command input to extract the task index and then marks the corresponding task in the","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * task list as done. A confirmation message is generated to inform the user of the successful operation.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * If the index is not provided or is invalid, appropriate exceptions are thrown.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing a confirmation message about the task being marked as done, including the","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     *         task details.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieInvalidArgumentException If the argument provided is not a valid integer or is not in the expected","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     *         format.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If no task index is provided in the command input.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException     If the specified task index does not correspond to any task in the list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"            throws TalkieInvalidArgumentException, TalkieMissingArgumentException, TalkieNoTaskFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"        String[] temp \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if the user included an argument","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(temp[0], \"The \u0027mark\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if the user included the correct integer argument","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        } else if (this.isInteger(temp[1])) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"            int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if the task is in the list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"            if (index \u003c\u003d tasks.size()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"                Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"                task.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"                return ui.markMessage(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieNoTaskFoundException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieInvalidArgumentException(temp[0], \"The \u0027mark\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if a given string can be parsed as an integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The string to check.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the string can be parsed as an integer, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"    private boolean isInteger(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"            return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"            return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":97}},{"path":"src/main/java/talkie/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.ToDo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to create a new ToDo task in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * The command processes user input to add a new ToDo task with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code ToDoCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and task description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    public ToDoCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code ToDoCommand} by creating a new ToDo task with the given description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * The method parses the command input to extract the task description and then creates a new ToDo task","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * with the provided description. The task is added to the task list, and a confirmation message is generated","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * to inform the user of the successful addition. If the description is missing, an exception is thrown.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing a confirmation message about the newly added ToDo task, including the task details","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     *         and the updated size of the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If the description of the ToDo task is missing, indicating that","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     *         the user did not provide a task description in the command input.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TalkieMissingArgumentException {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2); // Split into type and the rest of the input","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"            String details \u003d parts[1]; // Rest of the input (e.g., task description)","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"            Task newToDo \u003d new ToDo(details.trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"            tasks.addTask(newToDo);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"            return ui.addMessage(newToDo, tasks.size());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(parts[0], \"The \u0027description\u0027 of todo cannot be empty.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":66}},{"path":"src/main/java/talkie/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieInvalidArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieNoTaskFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to mark a task as not done in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code UnMarkCommand} reverts the completion status of a specified task","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * by marking it as not done.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code UnMarkCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and task index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    public UnMarkCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code UnMarkCommand} by marking a specified task as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * The method parses the task index from the user input and attempts to mark the corresponding","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * task as not done. It performs validation to ensure the index is provided, is an integer, and","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * corresponds to a valid task in the list. If any errors occur, appropriate exceptions are thrown.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string containing the result of marking the task as not done, or an error message if","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     *         the operation fails.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieInvalidArgumentException If the argument provided is not a valid integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If no task index is provided.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException     If the specified task does not exist in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"            throws TalkieInvalidArgumentException, TalkieMissingArgumentException, TalkieNoTaskFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        String[] temp \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if the user included an argument","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(temp[0], \"The \u0027unmark\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if the user included the correct integer argument","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"        } else if (this.isInteger(temp[1])) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"            int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if the task index is valid in the task list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"            if (index \u003c\u003d tasks.size()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"                Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"                task.markAsNotDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"                return ui.unMarkMessage(task);","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieNoTaskFoundException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieInvalidArgumentException(temp[0], \"The \u0027unmark\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     * The {@code UnMarkCommand} returns {@code false} because it is intended to modify a task\u0027s","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"     * completion status rather than end the program.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if a given string can be parsed as an integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The string to check.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the string can be parsed as an integer, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"    private boolean isInteger(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"            return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"            return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":103}},{"path":"src/main/java/talkie/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.ByeCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.Command;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.CommandType;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.DeadlineCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.DeleteCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.EventCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.FindCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.ListCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.MarkCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.ToDoCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.UnMarkCommand;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieUnknownCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":" * Parses user input and returns the corresponding {@link Command} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":" * This class is responsible for converting user input into specific command instances","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":" * based on the input command type.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * Parses the given user input to determine the corresponding {@code Command} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003eThis method extracts the command type from the user input and creates an instance","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * of the appropriate {@link Command} subclass based on the command type. If the command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * type is not recognized, it throws a {@link TalkieUnknownCommandException}.\u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The user input containing the command and its arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A {@code Command} object corresponding to the user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieUnknownCommandException If the command type is not recognized.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"    public static Command getCommand(String input) throws TalkieUnknownCommandException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"            String inputCommand \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"            CommandType command \u003d CommandType.valueOf(inputCommand.toUpperCase());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"            switch (command) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"            case BYE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"            case LIST:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"                return new ListCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"            case DELETE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"                return new DeleteCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"            case MARK:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"                return new MarkCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"            case UNMARK:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"                return new UnMarkCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"            case TODO:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"                return new ToDoCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"            case DEADLINE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                return new DeadlineCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"            case EVENT:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"                return new EventCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"            case FIND:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                return new FindCommand(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"            default:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieUnknownCommandException(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieUnknownCommandException(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":66}},{"path":"src/main/java/talkie/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.File;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieNoTaskFoundException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Event;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.ToDo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":" * Handles loading and saving of tasks to and from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code Storage} class is responsible for reading tasks from a file and","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":" * writing tasks to a file. It supports creating a new file if one does not exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    private String filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code Storage} object with the specified file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * Loads tasks from the file specified by {@code filePath}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * Reads each line from the file, parses it into a {@link Task} object, and adds it to an {@code ArrayList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * If the file does not exist, a new file is created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * @return An {@code ArrayList} of tasks loaded from the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException If an error occurs while parsing a task entry.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    public ArrayList\u003cTask\u003e loadData() throws TalkieNoTaskFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        File database \u003d new File(this.filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"            Scanner fileReader \u003d new Scanner(database);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                String entry \u003d fileReader.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                taskList.add(readEntry(entry));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"            this.createDatabase();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"        return taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     * Parses a task entry from a string and creates a {@link Task} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     * @param entry The string containing task data in a specific format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The corresponding {@code Task} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException If the task type is unknown or the format is incorrect.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"    private Task readEntry(String entry) throws TalkieNoTaskFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"        String[] fields \u003d entry.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"        Task taskToBeAdded;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"        switch(fields[0]) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"        case \"T\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"            taskToBeAdded \u003d new ToDo(fields[2]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"        case \"E\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"            taskToBeAdded \u003d new Event(fields[2],","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"                    LocalDateTime.parse(fields[3], formatter),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"                    LocalDateTime.parse(fields[4], formatter));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"        case \"D\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"            taskToBeAdded \u003d new Deadline(fields[2],","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"                    LocalDateTime.parse(fields[3], formatter));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"        default:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieNoTaskFoundException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"        if (Integer.parseInt(fields[1]) \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"            taskToBeAdded.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"        return taskToBeAdded;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jereeemyyyy"},"content":"     * Creates a new database file if it does not already exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jereeemyyyy"},"content":"     * Creates a directory for the file if it is missing, and then creates a new file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jereeemyyyy"},"content":"    private void createDatabase() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jereeemyyyy"},"content":"        File db \u003d new File(this.filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jereeemyyyy"},"content":"        File dir \u003d new File(db.getParent());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jereeemyyyy"},"content":"        dir.mkdir();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jereeemyyyy"},"content":"            db.createNewFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jereeemyyyy"},"content":"            System.out.println(\"Oops! Something went wrong when creating the database!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jereeemyyyy"},"content":"     * Saves the list of tasks to the file specified by {@code filePath}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jereeemyyyy"},"content":"     * Writes each task to the file, overwriting any existing content.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jereeemyyyy"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jereeemyyyy"},"content":"    public void saveData(TaskList taskList) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jereeemyyyy"},"content":"        FileWriter writer \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jereeemyyyy"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jereeemyyyy"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jereeemyyyy"},"content":"            bufferedWriter.write(taskList.getTask(i).stringifyTask());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jereeemyyyy"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jereeemyyyy"},"content":"        bufferedWriter.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jereeemyyyy"},"content":"        writer.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":142}},{"path":"src/main/java/talkie/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * Handles user interactions and displays messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code Ui} class manages the display of various types of messages to the user,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * such as welcome messages, task addition, deletion, and error handling.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Enum representing different types of messages used by the {@code Ui} class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    public enum MessageType {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"        WELCOME_MESSAGE(\"Hello! I\u0027m Talkie, your friendly ChatBot.\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"                + \"What can I do for you?\\n\"),","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        BYE_MESSAGE(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"        private final String message;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"        MessageType(String message) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"            this.message \u003d message;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"        /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"         * Gets the message associated with the {@code MessageType}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"         *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"         * @return The message string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"         */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"        public String getMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"            return this.message;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    // Scanner for input","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"    private Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        return this.input.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"     * Closes the {@code Scanner} used for user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"    public void closeInput() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"        this.input.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"        return MessageType.WELCOME_MESSAGE.getMessage();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"    public String byeMessage() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"        return MessageType.BYE_MESSAGE.getMessage();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message indicating that the date/time format is incorrect.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"    public String wrongDateTimeFormatMessage() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"        return \"Please enter the time in the format of \u003cyyyy-MM-dd HHmm\u003e!\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message confirming that a task has been added to the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"     * @param t The task that was added.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"     * @param taskListSize The current size of the task list after addition.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"    public String addMessage(Task t, int taskListSize) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"        String taskWord \u003d (taskListSize \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"        String finalMessage \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"                + \"  \" + t + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Now you have \" + taskListSize + \" \" + taskWord + \" in the list.\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"        return finalMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message confirming that a task has been deleted from the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"     * @param t The task that was deleted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"     * @param taskListSize The current size of the task list after deletion.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jereeemyyyy"},"content":"    public String deleteMessage(Task t, int taskListSize) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jereeemyyyy"},"content":"        String taskWord \u003d (taskListSize \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jereeemyyyy"},"content":"        String doneMessage \u003d \"Noted! I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jereeemyyyy"},"content":"                + \"  \" + t + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Now you have \" + taskListSize + \" \" + taskWord + \" in the list.\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jereeemyyyy"},"content":"        return doneMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a list of all tasks in the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jereeemyyyy"},"content":"    public String listTasks(TaskList tasks) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jereeemyyyy"},"content":"        String listMessage \u003d \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jereeemyyyy"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jereeemyyyy"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jereeemyyyy"},"content":"            String description \u003d (i) + \". \" + currTask + \"\\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jereeemyyyy"},"content":"            listMessage +\u003d description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jereeemyyyy"},"content":"        String finalMessage \u003d \"Here are the tasks in your list:\\n\" + listMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jereeemyyyy"},"content":"        return finalMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jereeemyyyy"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jereeemyyyy"},"content":"    public String markMessage(Task task) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jereeemyyyy"},"content":"        String doneMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jereeemyyyy"},"content":"                + \" \" + task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jereeemyyyy"},"content":"        return doneMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jereeemyyyy"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jereeemyyyy"},"content":"    public String unMarkMessage(Task task) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jereeemyyyy"},"content":"        String undoneMessage \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jereeemyyyy"},"content":"                + \" \" + task + \"\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jereeemyyyy"},"content":"        return undoneMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays an error message when a {@link TalkieException} is encountered.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jereeemyyyy"},"content":"     * @param e The exception to be displayed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jereeemyyyy"},"content":"    public void showTalkieException(TalkieException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(String.format(\"%s\\n\", e));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jereeemyyyy"},"content":"     * Searches for tasks containing the specified keyword and displays the matching tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jereeemyyyy"},"content":"     * This method iterates through the provided {@code TaskList}, checks each task for the presence of the keyword,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jereeemyyyy"},"content":"     * and collects the tasks that match. It then displays the matching tasks or appropriate messages if no tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jereeemyyyy"},"content":"     * are found or if the task list is empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks The {@code TaskList} containing all tasks to search through.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jereeemyyyy"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jereeemyyyy"},"content":"    public String findTasks(TaskList tasks, String keyword) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jereeemyyyy"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jereeemyyyy"},"content":"            return \"There are no tasks in your list! \\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList searchedList \u003d new TaskList();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jereeemyyyy"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jereeemyyyy"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jereeemyyyy"},"content":"            if (currTask.containsWord(keyword)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jereeemyyyy"},"content":"                searchedList.addTask(currTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jereeemyyyy"},"content":"        if (searchedList.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jereeemyyyy"},"content":"            return \"There are no tasks found in your list! \\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jereeemyyyy"},"content":"        StringBuilder searchedListMessage \u003d new StringBuilder();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jereeemyyyy"},"content":"        for (int i \u003d 1; i \u003c\u003d searchedList.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jereeemyyyy"},"content":"            Task searchedTask \u003d searchedList.getTask(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jereeemyyyy"},"content":"            String description \u003d (i) + \". \" + searchedTask + \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jereeemyyyy"},"content":"            searchedListMessage.append(description);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jereeemyyyy"},"content":"        String finalMessage \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jereeemyyyy"},"content":"                + searchedListMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jereeemyyyy"},"content":"        return finalMessage;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":205}},{"path":"src/main/java/talkie/exception/TalkieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * The base class for all exceptions in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code TalkieException} serves as the root of the exception hierarchy for the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * It extends {@code Exception} and provides a custom string representation for exceptions in this application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public abstract class TalkieException extends Exception {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a generic message indicating that an error has occurred.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the exception message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"        return \"OOPS!\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":24}},{"path":"src/main/java/talkie/exception/TalkieInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an exception thrown when an invalid argument is provided for a command in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code TalkieInvalidArgumentException} extends {@code TalkieException} and is used to indicate that","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * the provided arguments for a command are invalid. It also provides a hint for resolving the issue.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class TalkieInvalidArgumentException extends TalkieException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /** The command that had invalid arguments. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    protected String command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /** A hint for correcting the invalid arguments. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    protected String hint;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code TalkieInvalidArgumentException} with the specified command and hint.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param command The command with invalid arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param hint A hint for correcting the invalid arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public TalkieInvalidArgumentException(String command, String hint) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        this.hint \u003d hint;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a detailed message including the invalid command, a hint for correction,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * and a suggestion to try again.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the exception message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"        return super.toString() + \" Your \" + this.command + \" has invalid arguments!\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Hint: \" + hint + \"\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please try again! :D\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":44}},{"path":"src/main/java/talkie/exception/TalkieMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an exception thrown when a command is missing required arguments in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code TalkieMissingArgumentException} extends {@code TalkieException} and is used to indicate that","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * a required argument for a command is missing. It also provides a hint for resolving the issue.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class TalkieMissingArgumentException extends TalkieException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /** The command that is missing required arguments. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    protected String command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /** A hint for correcting the missing arguments. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    protected String hint;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code TalkieMissingArgumentException} with the specified command and hint.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param command The command with missing arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param hint A hint for correcting the missing arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public TalkieMissingArgumentException(String command, String hint) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        this.hint \u003d hint;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a detailed message including the command with missing arguments, a hint for correction,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * and a suggestion to try again.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the exception message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"        return super.toString() + \" Your \" + this.command + \" has missing arguments!\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Hint: \" + hint + \"\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please try again! :D\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":45}},{"path":"src/main/java/talkie/exception/TalkieNoTaskFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an exception thrown when a task cannot be found in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code TalkieNoTaskFoundException} extends {@code TalkieException} and is used to indicate that","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * a specified task could not be located in the system. It provides a hint for the user to check the list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class TalkieNoTaskFoundException extends TalkieException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a detailed message indicating that the task could not be found, along with a hint","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * to use the \u0027list\u0027 command to check the list of tasks and a suggestion to try again.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the exception message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"        return super.toString() + \" I cannot find this task in my system!\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Hint: Use the command \u0027list\u0027 to check the list of tasks.\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please try again! :D\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":27}},{"path":"src/main/java/talkie/exception/TalkieUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Exception thrown when an unrecognized command is encountered.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code TalkieUnknownCommandException} is used to indicate that the command provided by the user","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * is not recognized by the system.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class TalkieUnknownCommandException extends TalkieException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    protected String command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code TalkieUnknownCommandException} with the specified command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * @param command The command that was not recognized.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    public TalkieUnknownCommandException(String command) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a detailed message indicating that the command was not recognized,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * along with a suggestion to try again.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string describing the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"        return super.toString() + \" I do not recognise the command, \" + this.command + \".\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please try again! :D\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":37}},{"path":"src/main/java/talkie/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a deadline task in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * A {@code Deadline} task has a description and a deadline date/time by which the task needs to be completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code Deadline} with the specified description and deadline date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * @param desc The description of the deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * @param by The deadline date/time by which the task needs to be completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    public Deadline(String desc, LocalDateTime by) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"        super(desc);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * Serializes the deadline task to a string format for storage or retrieval.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * The string format is as follows: \"D | status | description | deadline date/time\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representation of the deadline task for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    public String stringifyTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"        return String.format(\"D | %d | %s | %s\", super.getStatus() ? 1 : 0,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"                super.getDesc(),","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * The string includes the task\u0027s status icon, description,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * and the deadline date/time in the format \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                + \" (by: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"                + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":58}},{"path":"src/main/java/talkie/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an event task in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * An {@code Event} task has a description and a time range indicating when the event starts and ends.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs an {@code Event} with the specified description, start date/time, and end date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * @param desc The description of the event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public Event(String desc, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        super(desc);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * Serializes the event task to a string format for storage or retrieval.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * The string format is as follows: \"E | status | description | start date/time | end date/time\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representation of the event task for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    public String stringifyTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"        return String.format(\"E | %d | %s | %s | %s\", super.getStatus() ? 1 : 0,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"                super.getDesc(),","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     * The string includes the task\u0027s status icon, description,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"     * start date/time, and end date/time in the format \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                + \" (from: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"                + \" to: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"                + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":64}},{"path":"src/main/java/talkie/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a task in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code Task} is an abstract class that defines the common attributes and methods for all types of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * It provides functionality to manage the status and description of a task and requires subclasses to","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * implement the {@code stringifyTask} method to specify how the task should be serialized.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    protected String desc;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code Task} with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    public Task(String desc) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * The string includes the task\u0027s status icon (either \"[X]\" for done or \"[ ]\" for not done) and its description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"        return this.getStatusIcon() + \" \" + this.desc;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"    public String getDesc() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"        return this.desc;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the task is done; {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        return this.isDone;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"     * The icon is \"[X]\" if the task is done, or \"[ ]\" if the task is not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     * This method sets the task\u0027s status to done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"     * This method sets the task\u0027s status to not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if the task description contains the specified keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"     * This method is used to determine if the task matches a search criterion.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"     * @param keyword The keyword to search for in the task description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the description contains the keyword; {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean containsWord(String keyword) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"        return this.desc.contains(keyword);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jereeemyyyy"},"content":"     * Serializes the task to a string format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jereeemyyyy"},"content":"     * This is an abstract method that must be implemented by subclasses to define how the task should be converted","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jereeemyyyy"},"content":"     * to a string representation for storage or other purposes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jereeemyyyy"},"content":"    public abstract String stringifyTask();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":114}},{"path":"src/main/java/talkie/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * Manages a list of tasks in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code TaskList} class provides methods to add, remove, and access tasks. It maintains an internal list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * of {@code Task} objects and supports various operations such as retrieving the size of the list and checking","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * if the list is empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code TaskList} with the specified list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks An {@code ArrayList} of {@code Task} objects to initialize the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * The index is 1-based, so the first task is at index 1.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @param index The index of the task to retrieve (1-based).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The {@code Task} at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"    public int size() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"     * @param task The {@code Task} to add to the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     * Removes and returns the task at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     * The index is 1-based, so the first task is at index 1.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     * @param index The index of the task to remove (1-based).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The {@code Task} that was removed from the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"        return this.tasks.remove(index - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the list is empty, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":87}},{"path":"src/main/java/talkie/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a task with no specific deadline or time, commonly referred to as a \"ToDo\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code ToDo} class extends the {@code Task} class and provides a specific implementation for","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * tasks that do not have a date or time associated with them.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code ToDo} task with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     * @param desc The description of the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"        super(desc);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * Serializes the ToDo task to a string format for storage or retrieval.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * The string format is as follows: \"T | status | description\",","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * where \"status\" is 1 if the task is done and 0 otherwise.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representation of the todo task for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    public String stringifyTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"        return String.format(\"T | %d | %s\", super.getStatus() ? 1 : 0, super.getDesc());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the ToDo task for display purposes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * The format is: \"[T] description\", where \"[T]\" is a label indicating the task type.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the ToDo task for display.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"talkie.MainWindow\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":19}},{"path":"src/test/java/talkie/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"    public void testGetTask() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test1 \u003d new ToDo(\"test\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"        taskList.addTask(test1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(test1, taskList.getTask(1), \"`getTask` should return the correct task from the list\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test1 \u003d new ToDo(\"test\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test2 \u003d new ToDo(\"test2\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"        taskList.addTask(test1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"        taskList.addTask(test2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(test2,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"                taskList.deleteTask(2),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"                \"`deleteTask` should delete and return the deleted task from the list\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    public void testIsEmpty() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"        assertTrue(taskList.isEmpty(), \"`isEmpty` should return true if the list is empty\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":36}},{"path":"src/test/java/talkie/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"public class ToDoTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"    public void testStringifyTask() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test1 \u003d new ToDo(\"CS2103T Assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test2 \u003d new ToDo(\"CS2100 Assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"        test2.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(\"T | 0 | CS2103T Assignment\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"                test1.stringifyTask(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"                \"Stringify a uncompleted ToDo Task\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(\"T | 1 | CS2100 Assignment\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"                test2.stringifyTask(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"                \"Stringify a completed ToDo Task\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test1 \u003d new ToDo(\"CS2103T Assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test2 \u003d new ToDo(\"CS2100 Assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"        test2.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(\"[T][ ] CS2103T Assignment\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"                test1.toString(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"                \"String of an uncompleted ToDo Task\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(\"[T][X] CS2100 Assignment\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"                test2.toString(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"                \"String of a completed ToDo Task\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"todo sunday","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"deadline return book /by 2024-08-02 1800","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"event project meeting /from 2024-08-03 1300 /to 2024-08-03 1600","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"mark 2","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"unmark 2","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"mark 4","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"unmark 4","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"mark a","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"unmark a","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"todo","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"deadline","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"event","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"delete 4","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"delete 3","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"delete a","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"delete","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"deadline return book /by 2024-09-02 6pm","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"bye","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"java -classpath ../bin Talkie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":1,"-":37}}]
