[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    mainClass.set(\"talkie.Talkie\")","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"    archiveBaseName \u003d \"talkie\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":2,"-":39}},{"path":"src/main/java/talkie/Talkie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * The main class for the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code Talkie} class initializes the user interface, task list, and storage components. It handles loading and","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * saving tasks, and manages the main program loop where user commands are processed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"public class Talkie {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code Talkie} instance with the specified file path for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * Initializes the user interface, storage, and task list. Loads existing tasks from storage if available, otherwise","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * initializes an empty task list. Handles any exceptions related to loading data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    public Talkie(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"            tasks \u003d new TaskList(this.storage.loadData());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (TalkieException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"            ui.showTalkieException(e);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * Runs the main Talkie program loop.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays the welcome message, reads user commands, and processes them until an exit command is issued. Handles","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * any exceptions related to command execution and displays appropriate messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    public void runTalkie() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"        while (!isExit) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"            try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                String input \u003d this.ui.readCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"                Command c \u003d Parser.getCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                c.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"            } catch (TalkieException e) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"                System.out.println(e);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     * The main entry point for the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     * Initializes a {@code Talkie} instance with a specified file path and starts the Talkie program loop.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"        // Start of talkie.Talkie","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"        new Talkie(\"./data/talkie.Talkie.txt\").runTalkie();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":75,"-":2}},{"path":"src/main/java/talkie/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to exit the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * This command saves the current task list data to storage","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * and displays a goodbye message to the user before exiting.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the ByeCommand which saves the task list to storage","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * and displays a goodbye message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"            ui.byeMessage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"            System.out.println(\"Oops! Something went wrong when saving the data!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":38}},{"path":"src/main/java/talkie/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an abstract command in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * Commands are actions that the user can perform, such as adding tasks, deleting tasks, or exiting the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * Subclasses of {@code Command} must implement the {@code execute} method to define the specific action.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * Subclasses must also implement the {@code isExit} method to define whether the command will exit the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * This method must be implemented by all subclasses to define the specific behavior of the command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to interact with the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save or load task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieException If an error occurs during the execution of the command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws TalkieException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates whether the command will terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * Subclasses should override this method to return {@code true} if the command causes the application to exit.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the command ends the program, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":34}},{"path":"src/main/java/talkie/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents the different types of commands that can be issued in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * Each command type corresponds to a specific user action or task manipulation within the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"public enum CommandType {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"    BYE, LIST, DELETE,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"    MARK, UNMARK, TODO,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"    EVENT, DEADLINE, FIND","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":11}},{"path":"src/main/java/talkie/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to add a deadline task to the task list in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" * The command parses the user input to create a {@code Deadline} task with a description and a specific deadline date and time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code DeadlineCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and details of the deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code DeadlineCommand} by parsing the input to create a new {@code Deadline} task,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * adding it to the task list, and displaying an appropriate message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * If the input is invalid, such as a missing description or an incorrectly formatted date/time,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * an appropriate error message is displayed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If the command is missing a description or deadline.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws TalkieMissingArgumentException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2); // Split into type and the rest of the input","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"                String details \u003d parts[1]; // rest of the input (eg. from, to details)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"                String[] deadlineParts \u003d details.split(\"/by \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"                String description \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"                String by \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                Task newDeadline \u003d new Deadline(description, time);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                tasks.addTask(newDeadline);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"                ui.addMessage(newDeadline, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieMissingArgumentException(parts[0],","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"                        \"The \u0027description\u0027 and \u0027by\u0027 of deadline cannot be empty.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"            ui.wrongDateTimeFormatMessage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":78}},{"path":"src/main/java/talkie/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieInvalidArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieNoTaskFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to delete a task from the task list in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * The command parses the user input to determine which task to delete based on its index in the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code DeleteCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and the index of the task to be deleted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code DeleteCommand} by parsing the input to delete the specified task from the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * If the input is invalid, such as a missing or incorrect task index, appropriate exceptions are thrown.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException  If the command is missing the required task index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException      If the task index specified does not exist in the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieInvalidArgumentException  If the provided argument is not a valid integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"            throws TalkieMissingArgumentException, TalkieNoTaskFoundException, TalkieInvalidArgumentException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"        String[] temp \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if user included an argument","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(temp[0], \"The \u0027delete\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if user included the correct int argument","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"        } else if (this.isInteger(temp[1])) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"            int index \u003d Integer.parseInt(this.fullCommand.split(\" \")[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if the task is in the list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"            if (index \u003c\u003d tasks.size()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                ui.deleteMessage(task, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieNoTaskFoundException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieInvalidArgumentException(temp[0], \"The \u0027delete\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if a given input string can be parsed as an integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The string to be checked.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the input can be parsed as an integer; {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"    private boolean isInteger(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"            return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"            return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":88}},{"path":"src/main/java/talkie/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to add a new event task to the task list in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" * The command processes user input to create an event with a description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code EventCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and the details of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    public EventCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code EventCommand} by parsing the input to add a new event task to the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * The event includes a description, start time, and end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * If the input is invalid, such as missing or incorrectly formatted date/time, appropriate exceptions are thrown.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If the command is missing the required description, start time, or end time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws TalkieMissingArgumentException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2); // Split into command type and the rest of the input","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"                String details \u003d parts[1]; // Rest of the input (e.g., description, from, to details)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"                String[] eventParts \u003d details.split(\"/from | /to \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"                String description \u003d eventParts[0].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"                String from \u003d eventParts[1].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"                String to \u003d eventParts[2].trim();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                LocalDateTime startTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"                LocalDateTime endTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                if (startTime.isAfter(endTime)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"                    System.out.println(\"The end time must be after the start time!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"                    return;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"                Task newEvent \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"                tasks.addTask(newEvent);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"                ui.addMessage(newEvent, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieMissingArgumentException(parts[0],","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"                        \"The \u0027description\u0027, \u0027from\u0027, and \u0027to\u0027 of event cannot be empty.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"            ui.wrongDateTimeFormatMessage();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":84}},{"path":"src/main/java/talkie/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieInvalidArgumentException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code FindCommand} class processes a command that searches for tasks with descriptions matching a given keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * It requires the keyword as an argument and handles any errors related to missing or invalid arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code FindCommand} with the specified full command string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * Initializes the command with the full string provided by the user, which is used to parse and execute the find operation.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full command string input by the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the find command to search for tasks containing the specified keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * Splits the command string to extract the keyword and checks if it is provided correctly. If valid, it uses the","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * {@code Ui} component to display tasks matching the keyword. Throws exceptions for missing or invalid arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks The {@code TaskList} containing all the tasks to search within.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui The {@code Ui} component used to display search results.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The {@code Storage} component (not used in this method but included for method signature consistency).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If the keyword is not provided.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieInvalidArgumentException If the argument is not a valid string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"            throws TalkieMissingArgumentException, TalkieInvalidArgumentException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"        String[] temp \u003d this.fullCommand.split(\" \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if user included an argument","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(temp[0], \"The \u0027find\u0027 command requires a string as argument\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"        // Checks if the argument is a string","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp[1] !\u003d null) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"            String keyword \u003d temp[1];","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"            ui.findTasks(tasks, keyword);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieInvalidArgumentException(temp[0], \"The \u0027find\u0027 command requires a string as argument\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     * The {@code FindCommand} does not end the program, so this method always returns {@code false}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":76}},{"path":"src/main/java/talkie/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to list all tasks in the task list in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * The command triggers the display of the current list of tasks to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code ListCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    public ListCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code ListCommand} by displaying the current list of tasks to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data (not used in this command).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"        ui.listTasks(tasks);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":45}},{"path":"src/main/java/talkie/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieInvalidArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieNoTaskFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to mark a task as done in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * The command marks a specified task as completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code MarkCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and task index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public MarkCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code MarkCommand} by marking a specified task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieInvalidArgumentException If the argument provided is not a valid integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If no task index is provided.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException     If the specified task does not exist in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"            throws TalkieInvalidArgumentException, TalkieMissingArgumentException, TalkieNoTaskFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"        String[] temp \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if the user included an argument","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(temp[0], \"The \u0027mark\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if the user included the correct integer argument","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"        } else if (this.isInteger(temp[1])) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"            int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if the task is in the list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"            if (index \u003c\u003d tasks.size()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"                Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                task.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                ui.markMessage(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieNoTaskFoundException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieInvalidArgumentException(temp[0], \"The \u0027mark\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if a given string can be parsed as an integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The string to check.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the string can be parsed as an integer, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"    private boolean isInteger(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"            return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"            return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":89}},{"path":"src/main/java/talkie/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.ToDo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to create a new ToDo task in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * The command processes user input to add a new ToDo task with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code ToDoCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and task description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    public ToDoCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code ToDoCommand} by creating a new ToDo task with the given description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If the description of the ToDo task is missing.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws TalkieMissingArgumentException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2); // Split into type and the rest of the input","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"            String details \u003d parts[1]; // rest of the input (e.g., task description)","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"            Task newToDo \u003d new ToDo(details.trim());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"            tasks.addTask(newToDo);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"            ui.addMessage(newToDo, tasks.size());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(parts[0], \"The \u0027description\u0027 of todo cannot be empty.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":58}},{"path":"src/main/java/talkie/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.components.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieInvalidArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieMissingArgumentException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieNoTaskFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a command to mark a task as not done in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * The command reverts the completion status of a specified task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    private String fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a new {@code UnMarkCommand} with the full user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param fullCommand The full user input containing the command type and task index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public UnMarkCommand(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * Executes the {@code UnMarkCommand} by marking a specified task as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks   The task list containing all current tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * @param ui      The UI component used to display messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * @param storage The storage component used to save task data.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieInvalidArgumentException If the argument provided is not a valid integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieMissingArgumentException If no task index is provided.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException     If the specified task does not exist in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"            throws TalkieInvalidArgumentException, TalkieMissingArgumentException, TalkieNoTaskFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"        String[] temp \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if the user included an argument","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        if (temp.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieMissingArgumentException(temp[0], \"The \u0027unmark\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"        // Check if the user included the correct integer argument","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"        } else if (this.isInteger(temp[1])) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"            int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"            // Check if the task index is valid in the task list","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"            if (index \u003c\u003d tasks.size()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"                Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                task.markAsNotDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                ui.unMarkMessage(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"            } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieNoTaskFoundException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"        } else {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieInvalidArgumentException(temp[0], \"The \u0027unmark\u0027 command requires an integer as argument\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     * Indicates that this command does not terminate the application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code false}, as this command does not end the program.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if a given string can be parsed as an integer.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The string to check.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the string can be parsed as an integer, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"    private boolean isInteger(String input) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"            return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"            return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":89}},{"path":"src/main/java/talkie/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.command.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieUnknownCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * Parses user input and returns the corresponding {@link Command} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * This class is responsible for converting user input into specific command instances","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * based on the input command type.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"     * Parses the given user input to determine the corresponding {@code Command} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003eThis method extracts the command type from the user input and creates an instance","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * of the appropriate {@link Command} subclass based on the command type. If the command","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * type is not recognized, it throws a {@link TalkieUnknownCommandException}.\u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * @param input The user input containing the command and its arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A {@code Command} object corresponding to the user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieUnknownCommandException If the command type is not recognized.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public static Command getCommand(String input) throws TalkieUnknownCommandException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"            String inputCommand \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"            CommandType command \u003d CommandType.valueOf(inputCommand.toUpperCase());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"            switch (command) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"            case BYE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"            case LIST:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"                return new ListCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"            case DELETE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"                return new DeleteCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"            case MARK:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"                return new MarkCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"            case UNMARK:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"                return new UnMarkCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"            case TODO:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"                return new ToDoCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"            case DEADLINE:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"                return new DeadlineCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"            case EVENT:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"                return new EventCommand(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"            case FIND:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"                return new FindCommand(input);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"            default:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"                throw new TalkieUnknownCommandException(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieUnknownCommandException(input);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":55}},{"path":"src/main/java/talkie/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieNoTaskFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import java.io.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * Handles loading and saving of tasks to and from a file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code Storage} class is responsible for reading tasks from a file and","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":" * writing tasks to a file. It supports creating a new file if one does not exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    private String filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code Storage} object with the specified file path.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * Loads tasks from the file specified by {@code filePath}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * Reads each line from the file, parses it into a {@link Task} object, and adds it to an {@code ArrayList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * If the file does not exist, a new file is created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @return An {@code ArrayList} of tasks loaded from the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException If an error occurs while parsing a task entry.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    public ArrayList\u003cTask\u003e loadData() throws TalkieNoTaskFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"        File database \u003d new File(this.filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"            Scanner fileReader \u003d new Scanner(database);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"                String entry \u003d fileReader.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"                taskList.add(readEntry(entry));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"            this.createDatabase();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        return taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"     * Parses a task entry from a string and creates a {@link Task} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"     * @param entry The string containing task data in a specific format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The corresponding {@code Task} object.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws TalkieNoTaskFoundException If the task type is unknown or the format is incorrect.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"    private Task readEntry(String entry) throws TalkieNoTaskFoundException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"        String[] fields \u003d entry.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"        Task taskToBeAdded;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"        switch(fields[0]) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"        case \"T\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"            taskToBeAdded \u003d new ToDo(fields[2]);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"        case \"E\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"            taskToBeAdded \u003d new Event(fields[2],","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"                    LocalDateTime.parse(fields[3], formatter),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"                    LocalDateTime.parse(fields[4], formatter));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"        case \"D\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"            taskToBeAdded \u003d new Deadline(fields[2],","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"                    LocalDateTime.parse(fields[3], formatter));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"            break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"        default:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"            throw new TalkieNoTaskFoundException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"        if (Integer.parseInt(fields[1]) \u003d\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"            taskToBeAdded.markAsDone();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"        return taskToBeAdded;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"     * Creates a new database file if it does not already exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"     * Creates a directory for the file if it is missing, and then creates a new file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"    private void createDatabase() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"        File db \u003d new File(this.filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"        File dir \u003d new File(db.getParent());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jereeemyyyy"},"content":"        dir.mkdir();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jereeemyyyy"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jereeemyyyy"},"content":"            db.createNewFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jereeemyyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jereeemyyyy"},"content":"            System.out.println(\"Oops! Something went wrong when creating the database!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jereeemyyyy"},"content":"     * Saves the list of tasks to the file specified by {@code filePath}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jereeemyyyy"},"content":"     * Writes each task to the file, overwriting any existing content.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jereeemyyyy"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jereeemyyyy"},"content":"    public void saveData(TaskList taskList) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jereeemyyyy"},"content":"        FileWriter writer \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jereeemyyyy"},"content":"        BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jereeemyyyy"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jereeemyyyy"},"content":"            bufferedWriter.write(taskList.getTask(i).stringifyTask());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jereeemyyyy"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jereeemyyyy"},"content":"        bufferedWriter.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jereeemyyyy"},"content":"        writer.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":134}},{"path":"src/main/java/talkie/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.components;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.exception.TalkieException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import talkie.task.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * Handles user interactions and displays messages to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code Ui} class manages the display of various types of messages to the user,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":" * such as welcome messages, task addition, deletion, and error handling.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Enum representing different types of messages used by the {@code Ui} class.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    public enum MessageType {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"        HORIZONTAL_LINE(\"-------------------------------------------------------------------\"),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"        WELCOME_MESSAGE(HORIZONTAL_LINE.message + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Hello! I\u0027m talkie.Talkie, your friendly ChatBot.\\n\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"                + HORIZONTAL_LINE.message + \"\\n\"),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"        BYE_MESSAGE(HORIZONTAL_LINE.message + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"                + HORIZONTAL_LINE.message + \"\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"        private final String message;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"        MessageType(String message) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"            this.message \u003d message;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"        /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"         * Gets the message associated with the {@code MessageType}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"         *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"         * @return The message string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"         */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"        public String getMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"            return this.message;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"    // Scanner for input","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"    private Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        return this.input.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"     * Closes the {@code Scanner} used for user input.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"    public void closeInput() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"        this.input.close();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(MessageType.WELCOME_MESSAGE.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"    public void byeMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(MessageType.BYE_MESSAGE.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message indicating that the date/time format is incorrect.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"    public void wrongDateTimeFormatMessage() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please enter the time in the format of \u003cyyyy-MM-dd HHmm\u003e!\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"                + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message confirming that a task has been added to the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"     * @param t The task that was added.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"     * @param taskListSize The current size of the task list after addition.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"    public void addMessage(Task t, int taskListSize) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"        String taskWord \u003d (taskListSize \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"        String finalMessage \u003d MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"                + \"  \" + t + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Now you have \" + taskListSize + \" \" + taskWord + \" in the list.\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"                + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(finalMessage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message confirming that a task has been deleted from the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jereeemyyyy"},"content":"     * @param t The task that was deleted.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jereeemyyyy"},"content":"     * @param taskListSize The current size of the task list after deletion.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jereeemyyyy"},"content":"    public void deleteMessage(Task t, int taskListSize) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jereeemyyyy"},"content":"        String taskWord \u003d (taskListSize \u003e 1) ? \"tasks\" : \"task\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jereeemyyyy"},"content":"        String doneMessage \u003d MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Noted! I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jereeemyyyy"},"content":"                + \"  \" + t + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Now you have \" + taskListSize + \" \" + taskWord + \" in the list.\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jereeemyyyy"},"content":"                + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(doneMessage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a list of all tasks in the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jereeemyyyy"},"content":"    public void listTasks(TaskList tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jereeemyyyy"},"content":"        String listMessage \u003d \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jereeemyyyy"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jereeemyyyy"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jereeemyyyy"},"content":"            String description \u003d (i) + \". \" + currTask + \"\\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jereeemyyyy"},"content":"            listMessage +\u003d description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jereeemyyyy"},"content":"        String finalMessage \u003d MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jereeemyyyy"},"content":"                +  listMessage","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jereeemyyyy"},"content":"                + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(finalMessage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jereeemyyyy"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jereeemyyyy"},"content":"    public void markMessage(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jereeemyyyy"},"content":"        String doneMessage \u003d MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jereeemyyyy"},"content":"                + \" \" + task + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jereeemyyyy"},"content":"                + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(doneMessage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays a message confirming that a task has been marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jereeemyyyy"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jereeemyyyy"},"content":"    public void unMarkMessage(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jereeemyyyy"},"content":"        String undoneMessage \u003d MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jereeemyyyy"},"content":"                + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jereeemyyyy"},"content":"                + \" \" + task + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jereeemyyyy"},"content":"                + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(undoneMessage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jereeemyyyy"},"content":"     * Displays an error message when a {@link TalkieException} is encountered.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jereeemyyyy"},"content":"     * @param e The exception to be displayed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jereeemyyyy"},"content":"    public void showTalkieException(TalkieException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(String.format(\"%s\\n\", e));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jereeemyyyy"},"content":"     * Searches for tasks containing the specified keyword and displays the matching tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jereeemyyyy"},"content":"     * This method iterates through the provided {@code TaskList}, checks each task for the presence of the keyword,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jereeemyyyy"},"content":"     * and collects the tasks that match. It then displays the matching tasks or appropriate messages if no tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jereeemyyyy"},"content":"     * are found or if the task list is empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks The {@code TaskList} containing all tasks to search through.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jereeemyyyy"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jereeemyyyy"},"content":"    public void findTasks(TaskList tasks, String keyword) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jereeemyyyy"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jereeemyyyy"},"content":"            String emptyMessage \u003d MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jereeemyyyy"},"content":"                    + \"There are no tasks in your list! \\n\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jereeemyyyy"},"content":"                    + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jereeemyyyy"},"content":"            System.out.println(emptyMessage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList searchedList \u003d new TaskList();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jereeemyyyy"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jereeemyyyy"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jereeemyyyy"},"content":"            if (currTask.containsWord(keyword)) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jereeemyyyy"},"content":"                searchedList.addTask(currTask);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jereeemyyyy"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jereeemyyyy"},"content":"        if (searchedList.isEmpty()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jereeemyyyy"},"content":"            String noTaskMessage \u003d MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jereeemyyyy"},"content":"                    + \"There are no tasks found in your list! \\n\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jereeemyyyy"},"content":"                    + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jereeemyyyy"},"content":"            System.out.println(noTaskMessage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jereeemyyyy"},"content":"        StringBuilder searchedListMessage \u003d new StringBuilder();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jereeemyyyy"},"content":"        for (int i \u003d 1; i \u003c\u003d searchedList.size(); i++) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jereeemyyyy"},"content":"            Task searchedTask \u003d searchedList.getTask(i);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jereeemyyyy"},"content":"            String description \u003d (i) + \". \" + searchedTask + \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jereeemyyyy"},"content":"            searchedListMessage.append(description);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jereeemyyyy"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jereeemyyyy"},"content":"        String finalMessage \u003d MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jereeemyyyy"},"content":"                + searchedListMessage","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jereeemyyyy"},"content":"                + MessageType.HORIZONTAL_LINE.getMessage() + \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jereeemyyyy"},"content":"        System.out.println(finalMessage);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":224}},{"path":"src/main/java/talkie/exception/TalkieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * The base class for all exceptions in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code TalkieException} serves as the root of the exception hierarchy for the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * It extends {@code Exception} and provides a custom string representation for exceptions in this application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public abstract class TalkieException extends Exception {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a generic message indicating that an error has occurred.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the exception message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"        return \"OOPS!\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":24}},{"path":"src/main/java/talkie/exception/TalkieInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an exception thrown when an invalid argument is provided for a command in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code TalkieInvalidArgumentException} extends {@code TalkieException} and is used to indicate that","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * the provided arguments for a command are invalid. It also provides a hint for resolving the issue.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class TalkieInvalidArgumentException extends TalkieException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /** The command that had invalid arguments. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    protected String command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /** A hint for correcting the invalid arguments. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    protected String hint;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code TalkieInvalidArgumentException} with the specified command and hint.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param command The command with invalid arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param hint A hint for correcting the invalid arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public TalkieInvalidArgumentException(String command, String hint) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        this.hint \u003d hint;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a detailed message including the invalid command, a hint for correction,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * and a suggestion to try again.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the exception message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"        return \"-------------------------------------------------------------------\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"                + super.toString() + \" Your \" + this.command + \" has invalid arguments!\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Hint: \" + hint +\"\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please try again! :D\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"                + \"-------------------------------------------------------------------\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":46}},{"path":"src/main/java/talkie/exception/TalkieMissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an exception thrown when a command is missing required arguments in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code TalkieMissingArgumentException} extends {@code TalkieException} and is used to indicate that","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * a required argument for a command is missing. It also provides a hint for resolving the issue.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class TalkieMissingArgumentException extends TalkieException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /** The command that is missing required arguments. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    protected String command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /** A hint for correcting the missing arguments. */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    protected String hint;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code TalkieMissingArgumentException} with the specified command and hint.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param command The command with missing arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param hint A hint for correcting the missing arguments.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public TalkieMissingArgumentException(String command, String hint) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        this.hint \u003d hint;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a detailed message including the command with missing arguments, a hint for correction,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * and a suggestion to try again.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the exception message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"        return \"-------------------------------------------------------------------\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"                + super.toString() + \" Your \" + this.command + \" has missing arguments!\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Hint: \" + hint +\"\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please try again! :D\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"                + \"-------------------------------------------------------------------\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":46}},{"path":"src/main/java/talkie/exception/TalkieNoTaskFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an exception thrown when a task cannot be found in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code TalkieNoTaskFoundException} extends {@code TalkieException} and is used to indicate that","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * a specified task could not be located in the system. It provides a hint for the user to check the list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class TalkieNoTaskFoundException extends TalkieException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a detailed message indicating that the task could not be found, along with a hint","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * to use the \u0027list\u0027 command to check the list of tasks and a suggestion to try again.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the exception message.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"        return \"-------------------------------------------------------------------\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"                + super.toString() + \" I cannot find this task in my system!\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Hint: Use the command \u0027list\u0027 to check the list of tasks.\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please try again! :D\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"                + \"-------------------------------------------------------------------\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":29}},{"path":"src/main/java/talkie/exception/TalkieUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Exception thrown when an unrecognized command is encountered.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code TalkieUnknownCommandException} is used to indicate that the command provided by the user","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * is not recognized by the system.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class TalkieUnknownCommandException extends TalkieException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    protected String command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code TalkieUnknownCommandException} with the specified command.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * @param command The command that was not recognized.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    public TalkieUnknownCommandException(String command) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     * This method provides a detailed message indicating that the command was not recognized,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * along with a suggestion to try again.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string describing the exception.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"        return \"-------------------------------------------------------------------\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"                + super.toString() + \" I do not recognise the command, \" + this.command +  \".\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"                + \"Please try again! :D\\n\"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"                + \"-------------------------------------------------------------------\\n\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":39}},{"path":"src/main/java/talkie/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a deadline task in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * A {@code Deadline} task has a description and a deadline date/time by which the task needs to be completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code Deadline} with the specified description and deadline date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * @param desc The description of the deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * @param by The deadline date/time by which the task needs to be completed.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    public Deadline(String desc, LocalDateTime by) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"        super(desc);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     * Serializes the deadline task to a string format for storage or retrieval.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * The string format is as follows: \"D | status | description | deadline date/time\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representation of the deadline task for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    public String stringifyTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"        return String.format(\"D | %d | %s | %s\", super.getStatus() ? 1 : 0,","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"                super.getDesc(),","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     * The string includes the task\u0027s status icon, description, and the deadline date/time in the format \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the deadline task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"                + \" (by: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"                + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":57}},{"path":"src/main/java/talkie/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * Represents an event task in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * An {@code Event} task has a description and a time range indicating when the event starts and ends.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs an {@code Event} with the specified description, start date/time, and end date/time.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     * @param desc The description of the event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param from The start date/time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * @param to The end date/time of the event.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    public Event(String desc, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        super(desc);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * Serializes the event task to a string format for storage or retrieval.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     * The string format is as follows: \"E | status | description | start date/time | end date/time\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representation of the event task for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    public String stringifyTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"        return String.format(\"E | %d | %s | %s | %s\", super.getStatus() ? 1 : 0,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"                super.getDesc(),","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")),","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")));","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     * The string includes the task\u0027s status icon, description, start date/time, and end date/time in the format \"MMM dd yyyy HH:mm\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the event task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"                + \" (from: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"                + this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"                + \" to: \"","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"                + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"                + \")\";","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":63}},{"path":"src/main/java/talkie/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a task in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * {@code Task} is an abstract class that defines the common attributes and methods for all types of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * It provides functionality to manage the status and description of a task and requires subclasses to","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * implement the {@code stringifyTask} method to specify how the task should be serialized.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    protected String desc;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code Task} with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"    public Task(String desc) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"     * The string includes the task\u0027s status icon (either \"[X]\" for done or \"[ ]\" for not done) and its description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"        return this.getStatusIcon() + \" \" + this.desc;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"    public String getDesc() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"        return this.desc;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the task is done; {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"        return this.isDone;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"     * The icon is \"[X]\" if the task is done, or \"[ ]\" if the task is not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     * This method sets the task\u0027s status to done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"     * This method sets the task\u0027s status to not done.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jereeemyyyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if the task description contains the specified keyword.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jereeemyyyy"},"content":"     * This method is used to determine if the task matches a search criterion.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jereeemyyyy"},"content":"     * @param keyword The keyword to search for in the task description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the description contains the keyword; {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean containsWord(String keyword) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jereeemyyyy"},"content":"        return this.desc.contains(keyword);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jereeemyyyy"},"content":"     * Serializes the task to a string format.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jereeemyyyy"},"content":"     * This is an abstract method that must be implemented by subclasses to define how the task should be converted","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jereeemyyyy"},"content":"     * to a string representation for storage or other purposes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jereeemyyyy"},"content":"    public abstract String stringifyTask();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":114}},{"path":"src/main/java/talkie/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * Manages a list of tasks in the Talkie application.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code TaskList} class provides methods to add, remove, and access tasks. It maintains an internal list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" * of {@code Task} objects and supports various operations such as retrieving the size of the list and checking","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":" * if the list is empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code TaskList} with the specified list of tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * @param tasks An {@code ArrayList} of {@code Task} objects to initialize the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * The index is 1-based, so the first task is at index 1.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @param index The index of the task to retrieve (1-based).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The {@code Task} at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jereeemyyyy"},"content":"    public int size() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jereeemyyyy"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jereeemyyyy"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jereeemyyyy"},"content":"     * @param task The {@code Task} to add to the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jereeemyyyy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jereeemyyyy"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jereeemyyyy"},"content":"     * Removes and returns the task at the specified index.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jereeemyyyy"},"content":"     * The index is 1-based, so the first task is at index 1.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jereeemyyyy"},"content":"     * @param index The index of the task to remove (1-based).","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jereeemyyyy"},"content":"     * @return The {@code Task} that was removed from the list.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jereeemyyyy"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jereeemyyyy"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jereeemyyyy"},"content":"        return this.tasks.remove(index - 1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jereeemyyyy"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jereeemyyyy"},"content":"     * @return {@code true} if the list is empty, {@code false} otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jereeemyyyy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jereeemyyyy"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":87}},{"path":"src/main/java/talkie/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"/**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":" * Represents a task with no specific deadline or time, commonly referred to as a \"ToDo\".","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":" * The {@code ToDo} class extends the {@code Task} class and provides a specific implementation for","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":" * tasks that do not have a date or time associated with them.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":" */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"     * Constructs a {@code ToDo} task with the specified description.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"     * @param desc The description of the ToDo task.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"        super(desc);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"     * Serializes the ToDo task to a string format for storage or retrieval.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"     * The string format is as follows: \"T | status | description\", where \"status\" is 1 if the task is done and 0 otherwise.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representation of the todo task for storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    public String stringifyTask() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"        return String.format(\"T | %d | %s\", super.getStatus() ? 1 : 0, super.getDesc());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"     * Returns a string representation of the ToDo task for display purposes.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"     * The format is: \"[T] description\", where \"[T]\" is a label indicating the task type.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"     * @return A string representing the ToDo task for display.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jereeemyyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jereeemyyyy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":45}},{"path":"src/test/java/talkie/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"public class TaskListTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"    public void testGetTask() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test1 \u003d new ToDo(\"test\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"        taskList.addTask(test1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(test1, taskList.getTask(1), \"`getTask` should return the correct task from the list\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"    public  void testDeleteTask() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test1 \u003d new ToDo(\"test\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test2 \u003d new ToDo(\"test2\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"        taskList.addTask(test1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"        taskList.addTask(test2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(test2,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"                taskList.deleteTask(2),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"                \"`deleteTask` should delete and return the deleted task from the list\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"    public void testIsEmpty() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"        assertTrue(taskList.isEmpty(), \"`isEmpty` should return true if the list is empty\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":36}},{"path":"src/test/java/talkie/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"package talkie.task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"public class ToDoTest {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"    public void testStringifyTask() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test1 \u003d new ToDo(\"CS2103T Assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test2 \u003d new ToDo(\"CS2100 Assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"        test2.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(\"T | 0 | CS2103T Assignment\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jereeemyyyy"},"content":"                test1.stringifyTask(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jereeemyyyy"},"content":"                \"Stringify a uncompleted ToDo Task\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(\"T | 1 | CS2100 Assignment\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jereeemyyyy"},"content":"                test2.stringifyTask(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jereeemyyyy"},"content":"                \"Stringify a completed ToDo Task\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jereeemyyyy"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jereeemyyyy"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test1 \u003d new ToDo(\"CS2103T Assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jereeemyyyy"},"content":"        ToDo test2 \u003d new ToDo(\"CS2100 Assignment\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jereeemyyyy"},"content":"        test2.markAsDone();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jereeemyyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(\"[T][ ] CS2103T Assignment\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jereeemyyyy"},"content":"                test1.toString(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jereeemyyyy"},"content":"                \"String of an uncompleted ToDo Task\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jereeemyyyy"},"content":"        assertEquals(\"[T][X] CS2100 Assignment\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jereeemyyyy"},"content":"                test2.toString(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jereeemyyyy"},"content":"                \"String of a completed ToDo Task\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jereeemyyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jereeemyyyy"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jereeemyyyy"},"content":"todo sunday","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jereeemyyyy"},"content":"deadline return book /by 2024-08-02 1800","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jereeemyyyy"},"content":"event project meeting /from 2024-08-03 1300 /to 2024-08-03 1600","lastModifiedDate":"2024-08-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jereeemyyyy"},"content":"list","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jereeemyyyy"},"content":"mark 2","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jereeemyyyy"},"content":"unmark 2","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jereeemyyyy"},"content":"mark 4","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jereeemyyyy"},"content":"unmark 4","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jereeemyyyy"},"content":"mark a","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jereeemyyyy"},"content":"unmark a","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jereeemyyyy"},"content":"todo","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jereeemyyyy"},"content":"deadline","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jereeemyyyy"},"content":"event","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jereeemyyyy"},"content":"delete 4","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jereeemyyyy"},"content":"delete 3","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jereeemyyyy"},"content":"delete a","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jereeemyyyy"},"content":"delete","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jereeemyyyy"},"content":"deadline return book /by 2024-09-02 6pm","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jereeemyyyy"},"content":"bye","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jereeemyyyy"},"content":"java -classpath ../bin Talkie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jereeemyyyy":1,"-":37}}]
