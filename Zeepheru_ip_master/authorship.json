[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"# Torne","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"This is the chatbot `Torne`, short for `Torment Nexus`. ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"3. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"4. After that, locate the `src/main/java/Torne.java` file, right-click it, and choose `Run Torne.main()`","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"   to start the chatBot","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"-":9,"Zeepheru":9}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"# Torne User Guide","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"-":29,"Zeepheru":1}},{"path":"src/main/java/ChatOutput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"// import java.io.Console;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":" * class that handles text outputs for the chatbot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"public class ChatOutput {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"    private static final String BORDER_LINE \u003d \"-------------------------------------------------------------\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"    public static final String INDENT \u003d \"    \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zeepheru"},"content":"     * Takes in a text string, wraps it inside a pair of borderlines, and outputs it to the console","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"     * @param text text string to be outputed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zeepheru"},"content":"    public void writeText(String text) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"        String output \u003d BORDER_LINE + \"\\n\" + text + \"\\n\" + BORDER_LINE;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"        System.out.println(output);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zeepheru"},"content":"     * Outputs an error with the given text. The text will be prefixed by `ERROR:`, and","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"     * is formatted using ANSI codes to be red (not working, using System.err)","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zeepheru"},"content":"     * @param errorText text to be printed out as the error.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zeepheru"},"content":"    public void error(String errorText) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zeepheru"},"content":"        // TODO ANSI color codes no work","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zeepheru"},"content":"        String output \u003d \"\\\\u001B[31m ERROR:\" + errorText + \"\\\\u001B[0m\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zeepheru"},"content":"        System.err.println(errorText);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Zeepheru":33}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"import java.io.File;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"public class Storage {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"    private static final ChatOutput OUTPUT \u003d new ChatOutput();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"    private static final String TASKS_FILEPATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"     * Checks for the existence of the required storage directories and files. Creates them if they do not exist.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zeepheru"},"content":"     * @Return True if storage files had to be created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"    private Boolean checkAndCreateStorageFiles() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"        // first check for ./data","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zeepheru"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zeepheru"},"content":"        if (!folder.exists() || !folder.isDirectory()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zeepheru"},"content":"            // create folder","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zeepheru"},"content":"            folder.mkdirs();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zeepheru"},"content":"        // now check for file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zeepheru"},"content":"        File f \u003d new File(TASKS_FILEPATH);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zeepheru"},"content":"        if (!f.exists() || f.isDirectory()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zeepheru"},"content":"            try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zeepheru"},"content":"                // create empty file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zeepheru"},"content":"                f.createNewFile();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zeepheru"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.error(\"Could not create tasks file: \" + e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zeepheru"},"content":"            // return true","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zeepheru"},"content":"            return true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zeepheru"},"content":"        return false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zeepheru"},"content":"     * Loads task data from storage at \u003ccode\u003e./data/tasks.txt\u003c/code\u003e.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zeepheru"},"content":"     * If the directory or file does not exist, they are created.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zeepheru"},"content":"     * @return An ArrayList with the parsed tasks.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zeepheru"},"content":"    public ArrayList\u003cTask\u003e loadTaskData() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zeepheru"},"content":"        if (checkAndCreateStorageFiles()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zeepheru"},"content":"            // file had to be created - file is empty.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zeepheru"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zeepheru"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zeepheru"},"content":"        int errorTaskCount \u003d 0;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zeepheru"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zeepheru"},"content":"            File f \u003d new File(TASKS_FILEPATH);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zeepheru"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zeepheru"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zeepheru"},"content":"                try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zeepheru"},"content":"                    tasks.add(Task.fromStorageString(s.nextLine()));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zeepheru"},"content":"                } catch (TorneInvalidCommandException | TorneInvalidDataException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zeepheru"},"content":"                    errorTaskCount++;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zeepheru"},"content":"                }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zeepheru"},"content":"            // show error if there are error tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zeepheru"},"content":"            if (errorTaskCount \u003e 0) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.error(String.format(\"Warning: %d tasks could not be loaded.\", errorTaskCount));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zeepheru"},"content":"            return tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zeepheru"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.error(\"Task storage file not found: \" + e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zeepheru"},"content":"            return tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zeepheru"},"content":"     * Saves the list of tasks to the default text file","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zeepheru"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zeepheru"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zeepheru"},"content":"        // make sure storage files exist first","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zeepheru"},"content":"        checkAndCreateStorageFiles();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zeepheru"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zeepheru"},"content":"            FileWriter fw \u003d new FileWriter(TASKS_FILEPATH);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zeepheru"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zeepheru"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zeepheru"},"content":"                sb.append(task.toStorageString()).append(\"\\n\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zeepheru"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zeepheru"},"content":"            fw.close();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zeepheru"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.error(\"Could not write to task file: \" + e.getMessage());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Zeepheru":102}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":" * Class that encapsulates a task that can be added to `Torne`.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"public class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"    protected final String name;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"     * Creates a Task object from a given storage string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zeepheru"},"content":"     * @return Task created from the input string.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"     * @throws TorneInvalidDataException if the input string is invalid.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"    public static Task fromStorageString(String input) throws TorneInvalidDataException, TorneInvalidCommandException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zeepheru"},"content":"        String[] parts \u003d input.split(\" / \");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"            // min length is 3. If less than that, raise error","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"            throw new TorneInvalidDataException(\"Input task string does not have enough components\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zeepheru"},"content":"        boolean isTaskDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zeepheru"},"content":"        Task newTask;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zeepheru"},"content":"        // parse second component \"1\" / \"0\" for completion status","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zeepheru"},"content":"        switch (parts[1]) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zeepheru"},"content":"        case \"1\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zeepheru"},"content":"            isTaskDone \u003d true;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zeepheru"},"content":"        case \"0\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zeepheru"},"content":"            isTaskDone \u003d false;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zeepheru"},"content":"        default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zeepheru"},"content":"            throw new TorneInvalidDataException(\"Completion status is invalid.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zeepheru"},"content":"        // parse based on type","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zeepheru"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zeepheru"},"content":"        case \"T\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zeepheru"},"content":"            // TaskTodo","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zeepheru"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zeepheru"},"content":"                throw new TorneInvalidDataException(\"Invalid todo storage string.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zeepheru"},"content":"            newTask \u003d new TaskTodo(parts[2]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zeepheru"},"content":"        case \"D\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zeepheru"},"content":"            // TaskDeadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zeepheru"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zeepheru"},"content":"                throw new TorneInvalidDataException(\"Invalid deadline storage string.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zeepheru"},"content":"            newTask \u003d new TaskDeadline(parts[2], parts[3]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zeepheru"},"content":"        case \"E\":","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zeepheru"},"content":"            // TaskDeadline","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zeepheru"},"content":"            if (parts.length !\u003d 5) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zeepheru"},"content":"                throw new TorneInvalidDataException(\"Invalid event storage string.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zeepheru"},"content":"            newTask \u003d new TaskEvent(parts[2], parts[3], parts[4]);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zeepheru"},"content":"        default:","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zeepheru"},"content":"            throw new TorneInvalidDataException(\"Storage string task type code invalid.\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zeepheru"},"content":"        // set completion status","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zeepheru"},"content":"        newTask.isDone \u003d isTaskDone;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zeepheru"},"content":"        return newTask;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zeepheru"},"content":"    Task(String name) throws TorneInvalidCommandException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zeepheru"},"content":"        if (name \u003d\u003d null || name.isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zeepheru"},"content":"            throw new TorneInvalidCommandException(\"Task cannot have an empty name\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zeepheru"},"content":"        this.name \u003d name.trim();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zeepheru"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zeepheru"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zeepheru"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zeepheru"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zeepheru"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zeepheru"},"content":"        return isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zeepheru"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zeepheru"},"content":"        String status \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zeepheru"},"content":"        return String.format(\"[%s] %s\", status, name);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zeepheru"},"content":"     * Returns a string used to store the task in a local file.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zeepheru"},"content":"     * @return String representation of task used for local storage.","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zeepheru"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zeepheru"},"content":"        return name;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Zeepheru":101}},{"path":"src/main/java/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":" * Task with a deadline.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"public class TaskDeadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"    protected String by;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"    TaskDeadline(String name, String by) throws TorneInvalidCommandException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"        super(name);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"        // check if by is empty","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zeepheru"},"content":"        if (by \u003d\u003d null || by.isBlank()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"            throw new TorneInvalidCommandException(\"Option /by cannot be empty\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zeepheru"},"content":"        this.by \u003d by.trim();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zeepheru"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zeepheru"},"content":"        String status \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zeepheru"},"content":"        // format based on the toString output of `Task`","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zeepheru"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zeepheru"},"content":"        return String.format(","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zeepheru"},"content":"                \"%s / %d / %s / %s\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zeepheru"},"content":"                \"D\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zeepheru"},"content":"                isDone ? 1 : 0,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zeepheru"},"content":"                name,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zeepheru"},"content":"                by);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Zeepheru":35}},{"path":"src/main/java/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":" * Task that starts and ends at specific datetimes.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"public class TaskEvent extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"    protected String from;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"    protected String to;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"    TaskEvent(String name, String from, String to) throws TorneInvalidCommandException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"        super(name);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zeepheru"},"content":"        // now check from and to","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"        if (from \u003d\u003d null || to \u003d\u003d null || from.isBlank() || to.isBlank()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"            throw new TorneInvalidCommandException(\"Options /from and /to cannot be empty\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"        this.from \u003d from.trim();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"        this.to \u003d to.trim();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zeepheru"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zeepheru"},"content":"        String status \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zeepheru"},"content":"        // format based on the toString output of `Task`","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zeepheru"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zeepheru"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zeepheru"},"content":"        return String.format(","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zeepheru"},"content":"                \"%s / %d / %s / %s / %s\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zeepheru"},"content":"                \"E\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zeepheru"},"content":"                isDone ? 1 : 0,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zeepheru"},"content":"                name,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zeepheru"},"content":"                from,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zeepheru"},"content":"                to);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Zeepheru":38}},{"path":"src/main/java/TaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":" * Handles the list of tasks, as well as all operations concerning tasks.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":" * This class does not interface with input or output.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"public class TaskHandler {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"    TaskHandler(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zeepheru"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"    TaskHandler() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zeepheru"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zeepheru"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zeepheru"},"content":"     * @param task Task to be added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zeepheru"},"content":"        taskList.add(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zeepheru"},"content":"     * Returns the `Task` at the specified position in this list.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zeepheru"},"content":"     * @param index index of the desired task. index is in [0, n-1].","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zeepheru"},"content":"     * @return The task at the position.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zeepheru"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zeepheru"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zeepheru"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zeepheru"},"content":"        return taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zeepheru"},"content":"     * Removes the `Task` at the specified position in this list.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zeepheru"},"content":"     * @param index index of the desired task. index is in [0, n-1].","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zeepheru"},"content":"     * @return Returns the removed task.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zeepheru"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zeepheru"},"content":"        Task removed \u003d taskList.get(index);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zeepheru"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zeepheru"},"content":"        return removed;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zeepheru"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zeepheru"},"content":"        return taskList.size();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zeepheru"},"content":"     * Gets the list of tasks as a formatted string, with each task on a separate line.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zeepheru"},"content":"     * @return the list of tasks: 1. ___ \\n 2. ___ \\n ...","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zeepheru"},"content":"    public String getTaskListString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zeepheru"},"content":"        StringBuilder taskListString \u003d new StringBuilder();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zeepheru"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zeepheru"},"content":"            String itemized \u003d String.format(\"%d. %s\\n\", i+1, taskList.get(i));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zeepheru"},"content":"            taskListString.append(itemized);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zeepheru"},"content":"        return taskListString.toString().trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"Zeepheru":73}},{"path":"src/main/java/TaskTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"/**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":" * Task with no date/time attached.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":" */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"public class TaskTodo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"    TaskTodo(String name) throws TorneInvalidCommandException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"        super(name);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zeepheru"},"content":"        String status \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"        // format based on the toString output of `Task`","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zeepheru"},"content":"        return String.format(","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zeepheru"},"content":"                \"%s / %d / %s\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zeepheru"},"content":"                \"T\",","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zeepheru"},"content":"                isDone ? 1 : 0,","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"                name);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Zeepheru":25}},{"path":"src/main/java/Torne.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"import java.util.*;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":" * This is the main class for `Torne`.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":" * All the main commands are here.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"public class Torne {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"    private static final ChatOutput OUTPUT \u003d new ChatOutput();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"    private static TaskHandler taskHandler;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Zeepheru"},"content":"    private static Storage storage;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Zeepheru"},"content":"    private static final String[] NO_ARGS \u003d new String[0];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Zeepheru"},"content":"    private static final String[] DEFAULT_ARG \u003d {\"\"};","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Zeepheru"},"content":"    private static final Map\u003cString, String[]\u003e COMMANDS \u003d Map.of(","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Zeepheru"},"content":"            \"bye\", NO_ARGS,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Zeepheru"},"content":"            \"list\", NO_ARGS,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Zeepheru"},"content":"            \"help\", NO_ARGS,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"            \"mark\",DEFAULT_ARG,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Zeepheru"},"content":"            \"unmark\", DEFAULT_ARG,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Zeepheru"},"content":"            \"todo\", NO_ARGS,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Zeepheru"},"content":"            \"deadline\", new String[]{\"\", \"by\"},","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Zeepheru"},"content":"            \"event\", new String[]{\"\", \"from\", \"to\"},","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"            \"delete\", DEFAULT_ARG","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Zeepheru"},"content":"    );","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Zeepheru"},"content":"    private String helpMessage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Zeepheru"},"content":"     * Parses the string command and arguments that the user entered. The correct operation is then called. If the input","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Zeepheru"},"content":"     * is **invalid**, e.g. the command does not exist, nothing will be printed and the bot asks for another input.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Zeepheru"},"content":"     * Invalid inputs have their own handling processes.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Zeepheru"},"content":"     * @param input string input by the user","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Zeepheru"},"content":"    private void parseCommand(String input) throws TorneException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Zeepheru"},"content":"        // empty command - do nothing","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Zeepheru"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Zeepheru"},"content":"            return;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Zeepheru"},"content":"        // Split input by spaces","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Zeepheru"},"content":"        String[] parts \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Zeepheru"},"content":"        if (parts.length \u003d\u003d 0) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Zeepheru"},"content":"            // invalid - return","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Zeepheru"},"content":"            return;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Zeepheru"},"content":"        // get command - first no-space phrase","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Zeepheru"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Zeepheru"},"content":"        // command exists check:","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Zeepheru"},"content":"        // Check if input is a command, if not, give error message","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Zeepheru"},"content":"        if (!COMMANDS.containsKey(command)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Zeepheru"},"content":"            // Command is not found in COMMANDS","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Zeepheru"},"content":"            throw new TorneInvalidCommandException(String.format(\"Command %s is not valid.\", command));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Zeepheru"},"content":"        // now get available arguments based on command","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Zeepheru"},"content":"        List\u003cString\u003e availableArgs \u003d Arrays.asList(COMMANDS.get(command));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Zeepheru"},"content":"        // now handle arguments, I \"love\" REGEX","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Zeepheru"},"content":"        // args will be a string, string map","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Zeepheru"},"content":"        HashMap\u003cString, String\u003e argMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Zeepheru"},"content":"        // remove command from input","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Zeepheru"},"content":"        String argsStr \u003d input.substring(command.length());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Zeepheru"},"content":"        // Split string to get arguments + their argument values","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Zeepheru"},"content":"        String[] args \u003d argsStr.split(\"\\s(?\u003d/)|$\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Zeepheru"},"content":"        // add a default arg","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Zeepheru"},"content":"        // System.out.println(args.length);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Zeepheru"},"content":"        if (args.length \u003e 0 \u0026\u0026 !args[0].isEmpty() \u0026\u0026 args[0].charAt(0) !\u003d \u0027/\u0027) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Zeepheru"},"content":"            // the arg array is always nonEmpty, so, to determine the existence of a default arg,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Zeepheru"},"content":"            // we check if the first arg is nonEmpty does not start with a \u0027\\\u0027","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Zeepheru"},"content":"            argMap.put(\"\", args[0]);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Zeepheru"},"content":"            // System.out.println(\"Default arg added! - \" + args[0]);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Zeepheru"},"content":"        ","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Zeepheru"},"content":"        // go through the args list and add the other args","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Zeepheru"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Zeepheru"},"content":"            String argument \u003d args[i];","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Zeepheru"},"content":"            // split on first whitespace","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Zeepheru"},"content":"            String[] argParts \u003d args[i].split(\"\\\\s+\", 2);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Zeepheru"},"content":"            // TODO: what to do when only an argument flag provided - presumably that can be expected behavior...","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Zeepheru"},"content":"            // For now, raise an error","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Zeepheru"},"content":"            if (argParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Zeepheru"},"content":"                throw new TorneInvalidCommandException(\"No value entered for flag \" + argParts[0]);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Zeepheru"},"content":"            if (!availableArgs.contains(argParts[0].substring(1))) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Zeepheru"},"content":"                // argument flag is invalid for the given command","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Zeepheru"},"content":"                throw new TorneInvalidCommandException(","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Zeepheru"},"content":"                        String.format(\"Argument flag %s is invalid for command %s\", argParts[0], command));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Zeepheru"},"content":"            // add to argMap","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Zeepheru"},"content":"            argMap.put(argParts[0].substring(1), argParts[1].trim());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Zeepheru"},"content":"        // OUTPUT.writeText(String.valueOf(argMap));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Zeepheru"},"content":"        // NOW ON TO ACTUALLY MATCHING THE FUNCS","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Zeepheru"},"content":"        String defaultArg \u003d argMap.get(\"\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Zeepheru"},"content":"        switch (command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Zeepheru"},"content":"        case \"list\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Zeepheru"},"content":"            listTasks();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Zeepheru"},"content":"        case \"help\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Zeepheru"},"content":"            showHelp();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Zeepheru"},"content":"        case \"mark\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Zeepheru"},"content":"            mark(defaultArg);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Zeepheru"},"content":"        case \"unmark\":","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Zeepheru"},"content":"            unmark(defaultArg);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Zeepheru"},"content":"        case \"delete\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Zeepheru"},"content":"            deleteTask(defaultArg);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Zeepheru"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Zeepheru"},"content":"            addTaskTodo(defaultArg);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Zeepheru"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Zeepheru"},"content":"            addTaskDeadline(defaultArg, argMap.get(\"by\"));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Zeepheru"},"content":"        case \"event\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Zeepheru"},"content":"            addTaskEvent(defaultArg, argMap.get(\"from\"), argMap.get(\"to\"));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Zeepheru"},"content":"            break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Zeepheru"},"content":"        default:","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Zeepheru"},"content":"     * Shows a greeting message, to be shown when user initialises Torne.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Zeepheru"},"content":"    private void showGreeting() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Zeepheru"},"content":"        String greetingText \u003d \"\"\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Zeepheru"},"content":"Hello! I am","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Zeepheru"},"content":"  _______ ____  _____  _   _ ______\\s","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Zeepheru"},"content":" |__   __/ __ \\\\|  __ \\\\| \\\\ | |  ____|","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Zeepheru"},"content":"    | | | |  | | |__) |  \\\\| | |__  \\s","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Zeepheru"},"content":"    | | | |  | |  _  /| . ` |  __| \\s","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Zeepheru"},"content":"    | | | |__| | | \\\\ \\\\| |\\\\  | |____\\s","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Zeepheru"},"content":"    |_|  \\\\____/|_|  \\\\_\\\\_| \\\\_|______|","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Zeepheru"},"content":"                                   \\s","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Zeepheru"},"content":"short for Torment Nexus™, your F R I E N D L Y neighborhood chatbot :3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Zeepheru"},"content":"How may I help you today?\"\"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Zeepheru"},"content":"        OUTPUT.writeText(greetingText);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Zeepheru"},"content":"     * Prints a standard exit message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Zeepheru"},"content":"    private void showExitMessage() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Zeepheru"},"content":"        String exitText \u003d \"\"\"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Zeepheru"},"content":"Aww, bye to you as well :c\"\"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Zeepheru"},"content":"        OUTPUT.writeText(exitText);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Zeepheru"},"content":"     * Shows a help message to the user.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Zeepheru"},"content":"     * The help message lists out all available commands and their options","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Zeepheru"},"content":"    private void showHelp() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Zeepheru"},"content":"        if (helpMessage !\u003d null) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Zeepheru"},"content":"            // has already been generated","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.writeText(helpMessage);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Zeepheru"},"content":"            return;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Zeepheru"},"content":"        StringBuilder helpMessageBuilder \u003d new StringBuilder(\"This is the list of Torne commands and options:\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Zeepheru"},"content":"        for (var entry : COMMANDS.entrySet()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Zeepheru"},"content":"            String cmd \u003d entry.getKey();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Zeepheru"},"content":"            String[] args \u003d entry.getValue();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Zeepheru"},"content":"            helpMessageBuilder.append(\"\\n\").append(ChatOutput.INDENT).append(cmd);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Zeepheru"},"content":"            for (String arg : args) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Zeepheru"},"content":"                if (arg.isEmpty()) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Zeepheru"},"content":"                    // default arg","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Zeepheru"},"content":"                    helpMessageBuilder.append(\" [\u003cvalue\u003e]\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Zeepheru"},"content":"                    continue;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Zeepheru"},"content":"                }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Zeepheru"},"content":"                helpMessageBuilder.append(String.format(\" [/%s \u003cvalue\u003e]\", arg));","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Zeepheru"},"content":"        // memoize","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Zeepheru"},"content":"        helpMessage \u003d helpMessageBuilder.toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Zeepheru"},"content":"        OUTPUT.writeText(helpMessage);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Zeepheru"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TASK RELATED \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Zeepheru"},"content":"     * Adds a task and shows a message if the task was successfully added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Zeepheru"},"content":"     * @param task task that is to be added","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Zeepheru"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Zeepheru"},"content":"        taskHandler.addTask(task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Zeepheru"},"content":"        int count \u003d taskHandler.getTaskCount();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Zeepheru"},"content":"        String message \u003d \"Alright, I\u0027ll add this task:\\n\" + task","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Zeepheru"},"content":"                + String.format(\"\\nNow you have %d task\", count)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Zeepheru"},"content":"                + ((count \u003e 1) ? \"s!\" : \"!\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Zeepheru"},"content":"        OUTPUT.writeText(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Zeepheru"},"content":"     * Creates a new task with no date/time, with type `TaskTodo`.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Zeepheru"},"content":"     * @param name name of task to be added","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Zeepheru"},"content":"    private void addTaskTodo(String name) throws TorneException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Zeepheru"},"content":"        Task toAdd \u003d new TaskTodo(name);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Zeepheru"},"content":"        addTask(toAdd);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Zeepheru"},"content":"     * Creates a new task with a datetime as the deadline, with type `TaskDeadline`.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Zeepheru"},"content":"     * @param name name of task to be added","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Zeepheru"},"content":"     * @param by date/time to do the task by","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Zeepheru"},"content":"    private void addTaskDeadline(String name, String by) throws TorneException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Zeepheru"},"content":"        Task toAdd \u003d new TaskDeadline(name, by);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Zeepheru"},"content":"        addTask(toAdd);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Zeepheru"},"content":"     * Creates a new task that starts at a datetime and ends at a datetime,","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Zeepheru"},"content":"     * with type `TaskEvent`.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Zeepheru"},"content":"     * @param name name of task to be added","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Zeepheru"},"content":"     * @param from starting datetime","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Zeepheru"},"content":"     * @param to ending datetime","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Zeepheru"},"content":"    private void addTaskEvent(String name, String from, String to) throws TorneException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Zeepheru"},"content":"        Task toAdd \u003d new TaskEvent(name, from, to);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Zeepheru"},"content":"        addTask(toAdd);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Zeepheru"},"content":"     * Shows the lists of tasks to the user.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Zeepheru"},"content":"    private void listTasks() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Zeepheru"},"content":"        String message;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Zeepheru"},"content":"        if (taskHandler.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Zeepheru"},"content":"            message \u003d \"You currently have no tasks!\\nSo quiet...\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Zeepheru"},"content":"        } else {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Zeepheru"},"content":"            message \u003d String.format(\"You currently have %d tasks:\\n\", taskHandler.getTaskCount())","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Zeepheru"},"content":"                    + taskHandler.getTaskListString();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Zeepheru"},"content":"        OUTPUT.writeText(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Zeepheru"},"content":"     * Deletes the task at the specified index.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Zeepheru"},"content":"     * @param indexStr index of task to be marked as complete.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Zeepheru"},"content":"    private void deleteTask(String indexStr) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Zeepheru"},"content":"        if (indexStr \u003d\u003d null) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.error(\"No task index specified.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Zeepheru"},"content":"            return;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Zeepheru"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Zeepheru"},"content":"            int index \u003d Integer.parseInt(indexStr.trim()) - 1;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Zeepheru"},"content":"            if (index \u003c 0 || index \u003e\u003d taskHandler.getTaskCount()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Zeepheru"},"content":"                // TODO I\u0027m guessing task handler should be the one raising this exception! SAME AS THE OTHER TWO","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.error(\"Invalid task index. Out of range.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Zeepheru"},"content":"                return;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Zeepheru"},"content":"            Task removed \u003d taskHandler.removeTask(index);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Zeepheru"},"content":"            int count \u003d taskHandler.getTaskCount();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Zeepheru"},"content":"            String message \u003d \"Alright, I\u0027ll delete this task:\\n\" + removed","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Zeepheru"},"content":"                    + String.format(\"\\nNow you have %d task\", count)","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Zeepheru"},"content":"                    + ((count \u003e 1) ? \"s left!\" : \"left!\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.writeText(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Zeepheru"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.error(\"Invalid task index. It is not an integer.\");","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Zeepheru"},"content":"     * Marks a particular task as complete.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Zeepheru"},"content":"     * @param indexStr index of task to be marked as complete.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Zeepheru"},"content":"    private void mark(String indexStr) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Zeepheru"},"content":"        if (indexStr \u003d\u003d null) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.error(\"No task index specified.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Zeepheru"},"content":"            return;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Zeepheru"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Zeepheru"},"content":"            int index \u003d Integer.parseInt(indexStr.trim()) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Zeepheru"},"content":"            if (index \u003c 0 || index \u003e\u003d taskHandler.getTaskCount()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Zeepheru"},"content":"                // TODO I\u0027m guessing task handler should be the one raising this exception!","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.error(\"Invalid task index. Out of range.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"Zeepheru"},"content":"                return;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"Zeepheru"},"content":"            if (taskHandler.getTask(index).getIsDone()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.writeText(\"This task is already done, stop wasting my time.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"Zeepheru"},"content":"            } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"Zeepheru"},"content":"                taskHandler.getTask(index).markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.writeText(\"Marking this task as done :)\\n    \" + taskHandler.getTask(index));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"Zeepheru"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.error(\"Invalid task index. It is not an integer.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Zeepheru"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Zeepheru"},"content":"     * Marks a particular task as incomplete.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"Zeepheru"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"Zeepheru"},"content":"     * @param indexStr index of task to be marked as incomplete.","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"Zeepheru"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Zeepheru"},"content":"    private void unmark(String indexStr) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Zeepheru"},"content":"        if (indexStr \u003d\u003d null) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.error(\"No task index specified.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"Zeepheru"},"content":"            return;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"Zeepheru"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"Zeepheru"},"content":"            int index \u003d Integer.parseInt(indexStr.trim()) - 1;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"Zeepheru"},"content":"            if (index \u003c 0 || index \u003e\u003d taskHandler.getTaskCount()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"Zeepheru"},"content":"                // TODO I\u0027m guessing task handler should be the one raising this exception!","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.error(\"Invalid task index. Out of range\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"Zeepheru"},"content":"                return;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"Zeepheru"},"content":"            if (!taskHandler.getTask(index).getIsDone()) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.writeText(\"Excuse me, this task is already not done. I can\u0027t make it even less done.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"Zeepheru"},"content":"            } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"Zeepheru"},"content":"                taskHandler.getTask(index).markAsNotDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.writeText(\"Unmarking this task :(\\n    \" + taskHandler.getTask(index));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"Zeepheru"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"Zeepheru"},"content":"            OUTPUT.error(\"Invalid task index. It is not an integer.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"Zeepheru"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MAIN \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Zeepheru"},"content":"        Torne torne \u003d new Torne();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"Zeepheru"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"Zeepheru"},"content":"        String input;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"Zeepheru"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"Zeepheru"},"content":"        taskHandler \u003d new TaskHandler(storage.loadTaskData());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"Zeepheru"},"content":"        // greet user","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"Zeepheru"},"content":"        torne.showGreeting();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"Zeepheru"},"content":"        while (true) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"Zeepheru"},"content":"            // Read input from user","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"Zeepheru"},"content":"            input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"Zeepheru"},"content":"            // first check if it\u0027s an exit (`bye`) command","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"Zeepheru"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"Zeepheru"},"content":"                torne.showExitMessage();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"Zeepheru"},"content":"                // save tasks","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"Zeepheru"},"content":"                storage.saveTasks(taskHandler.getTaskList());","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"Zeepheru"},"content":"                break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"Zeepheru"},"content":"            // else, parse and handle the input :D","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"Zeepheru"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"Zeepheru"},"content":"                torne.parseCommand(input);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"Zeepheru"},"content":"            } catch (TorneException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"Zeepheru"},"content":"                OUTPUT.error(e.toString());","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"Zeepheru"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"Zeepheru"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"-":3,"Zeepheru":395}},{"path":"src/main/java/TorneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"public class TorneException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":"    TorneException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Zeepheru":5}},{"path":"src/main/java/TorneInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"public class TorneInvalidCommandException extends TorneException {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":"    TorneInvalidCommandException(String message) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"        super(message);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"        return \"Invalid command: \" + getMessage();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"Zeepheru":10}},{"path":"src/main/java/TorneInvalidDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"public class TorneInvalidDataException extends TorneException {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":"    TorneInvalidDataException(String message) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"        super(message);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"    public String toString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Zeepheru"},"content":"        return \"Invalid data: \" + getMessage();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Zeepheru"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Zeepheru"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Zeepheru":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Zeepheru"},"content":"list","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Zeepheru"},"content":"todo a","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Zeepheru"},"content":"deadline b /by day","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Zeepheru"},"content":"event c /from f /to s","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Zeepheru"},"content":"mark 2","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Zeepheru"},"content":"unmark 2","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Zeepheru"},"content":"delete 1","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"Zeepheru":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Zeepheru"},"content":"java -classpath ..\\bin Torne \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":20,"Zeepheru":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Zeepheru"},"content":"java -classpath ../bin Torne \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"Zeepheru":1}}]
