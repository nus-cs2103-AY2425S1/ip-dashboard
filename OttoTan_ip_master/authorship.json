[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"checkstyle {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"    mainClass.set(\u0027megamind.main.Megamind\u0027)","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"    archiveBaseName \u003d \"megamind\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"    archiveFileName \u003d \u0027megamind.jar\u0027","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":39,"OttoTan":8}},{"path":"src/main/java/megamind/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.exception;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":" * Exception thrown when an invalid command is encountered.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"     * Constructor for InvalidCommandException","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"     * @param message the message to be displayed","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"        super(message);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":16}},{"path":"src/main/java/megamind/exception/MissingParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.exception;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":" * Exception thrown when a missing parameter is encountered.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"public class MissingParameterException extends Exception {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"     * Constructor for MissingParameterException","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"     * @param message the message to be displayed","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"    public MissingParameterException(String message) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"        super(message);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":16}},{"path":"src/main/java/megamind/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.exception;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":" * Exception thrown when a task is not found.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"public class TaskNotFoundException extends Exception {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"     * Constructor for TaskNotFoundException","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"     * @param message the message to be displayed","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"    public TaskNotFoundException(String message) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"        super(message);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":16}},{"path":"src/main/java/megamind/main/Megamind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.main;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"import megamind.exception.InvalidCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"import megamind.exception.MissingParameterException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"import megamind.exception.TaskNotFoundException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"import megamind.parser.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"import megamind.storage.Storage;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"import megamind.task.Deadline;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"import megamind.task.Event;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"import megamind.task.List;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"import megamind.task.Todo;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"import megamind.ui.Ui;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":" * The `Megamind` class is the main entry point for the application.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":" * It initializes the necessary components and handles user commands.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":" * The class provides methods to run the program, process commands, and manage tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"public class Megamind {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"    private static final Storage storage \u003d new Storage();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"    private static List taskList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"        taskList \u003d new List(storage.loadTasks());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"        ui.greet();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"        run();","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"     * Runs the program.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"    public static void run() {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"        // Start a loop to read commands from the user","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"        while (true) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OttoTan"},"content":"            ui.showLine();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OttoTan"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OttoTan"},"content":"            String command \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OttoTan"},"content":"            try {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OttoTan"},"content":"                String action \u003d parser.parseCommand(command);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OttoTan"},"content":"                switch (action) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OttoTan"},"content":"                case \"bye\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OttoTan"},"content":"                    exit();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OttoTan"},"content":"                    return;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OttoTan"},"content":"                case \"list\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OttoTan"},"content":"                    ui.showMessage(taskList.toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OttoTan"},"content":"                case \"help\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OttoTan"},"content":"                    ui.showHelp();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OttoTan"},"content":"                case \"unmark\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OttoTan"},"content":"                    unmark(command);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"OttoTan"},"content":"                case \"mark\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"OttoTan"},"content":"                    mark(command);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"OttoTan"},"content":"                case \"todo\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"OttoTan"},"content":"                    addTodo(command);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"OttoTan"},"content":"                case \"deadline\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"OttoTan"},"content":"                    addDeadline(command);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"OttoTan"},"content":"                case \"event\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"OttoTan"},"content":"                    addEvent(command);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"OttoTan"},"content":"                case \"delete\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"OttoTan"},"content":"                    deleteTask(command);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"OttoTan"},"content":"                case \"find\":","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"OttoTan"},"content":"                    findTask(command);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"OttoTan"},"content":"                    break;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"OttoTan"},"content":"                default:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"OttoTan"},"content":"                    throw new InvalidCommandException(\"Unknown command. Use \"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"OttoTan"},"content":"                                                      + \"\u0027help\u0027 for a list of \"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"OttoTan"},"content":"                                                      + \"commands.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"OttoTan"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"OttoTan"},"content":"            } catch (InvalidCommandException | TaskNotFoundException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"OttoTan"},"content":"                     | MissingParameterException","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"OttoTan"},"content":"                     | DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"OttoTan"},"content":"                if (e instanceof DateTimeParseException) {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"OttoTan"},"content":"                    ui.showError(\"Invalid date/time format. Please use the \"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"OttoTan"},"content":"                                 + \"format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"OttoTan"},"content":"                } else {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"OttoTan"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"OttoTan"},"content":"                }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"OttoTan"},"content":"            }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"OttoTan"},"content":"     * Finds tasks that contain the keyword.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"OttoTan"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"OttoTan"},"content":"    public static void findTask(String command) throws InvalidCommandException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"OttoTan"},"content":"        String keyword \u003d parser.parseDescription(command, \"find\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"OttoTan"},"content":"        ui.showMessage(taskList.findTasks(keyword));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"OttoTan"},"content":"     * Exits the program.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"OttoTan"},"content":"    public static void exit() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"OttoTan"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"OttoTan"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"OttoTan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"OttoTan"},"content":"            ui.showError(\"Error saving tasks.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"OttoTan"},"content":"        } finally {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"OttoTan"},"content":"            ui.showExit();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"OttoTan"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"OttoTan"},"content":"     * If the task number is invalid, print an error message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"OttoTan"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"OttoTan"},"content":"     * @throws TaskNotFoundException   If the task is not found.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"OttoTan"},"content":"    public static void unmark(String command) throws InvalidCommandException,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"OttoTan"},"content":"            TaskNotFoundException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"OttoTan"},"content":"        int index \u003d parser.parseTaskIndex(command);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"OttoTan"},"content":"        boolean success \u003d taskList.markTaskAsNotDone(index);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"OttoTan"},"content":"        if (!success) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"OttoTan"},"content":"            throw new TaskNotFoundException(\"Task number does not exist.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"OttoTan"},"content":"        ui.showMarkTask(taskList.get(index), false);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"OttoTan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"OttoTan"},"content":"     * If the task number is invalid, print an error message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"OttoTan"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"OttoTan"},"content":"     * @throws TaskNotFoundException   If the task is not found.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"OttoTan"},"content":"    public static void mark(String command) throws InvalidCommandException,","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"OttoTan"},"content":"            TaskNotFoundException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"OttoTan"},"content":"        int index \u003d parser.parseTaskIndex(command);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"OttoTan"},"content":"        boolean success \u003d taskList.markTaskAsDone(index);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"OttoTan"},"content":"        if (!success) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"OttoTan"},"content":"            throw new TaskNotFoundException(\"Task number does not exist.\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"OttoTan"},"content":"        ui.showMarkTask(taskList.get(index), true);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"OttoTan"},"content":"     * Adds a to do task to the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"OttoTan"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException If the command is invalid (description","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"OttoTan"},"content":"     *                                 is empty).","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"OttoTan"},"content":"    public static void addTodo(String command) throws InvalidCommandException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"OttoTan"},"content":"        String description \u003d parser.parseDescription(command, \"todo\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"OttoTan"},"content":"        taskList.add(new Todo(description));","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"OttoTan"},"content":"        ui.showTaskAdded(taskList.get(taskList.size() - 1), taskList.size());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"OttoTan"},"content":"     * Adds a deadline task to the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"OttoTan"},"content":"     * If the deadline is not specified, print an error message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"OttoTan"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"OttoTan"},"content":"     * @throws MissingParameterException If the deadline is not specified.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException   If the command is invalid","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"OttoTan"},"content":"     *                                   (description and/or deadline is empty).","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"OttoTan"},"content":"    public static void addDeadline(String command) throws MissingParameterException, InvalidCommandException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"OttoTan"},"content":"        String[] words \u003d parser.parseDeadline(command);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"OttoTan"},"content":"        taskList.add(new Deadline(words[0], words[1]));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"OttoTan"},"content":"        ui.showTaskAdded(taskList.get(taskList.size() - 1), taskList.size());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"OttoTan"},"content":"     * Adds an event task to the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"OttoTan"},"content":"     * If the event start or end time is not specified, print an error message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"OttoTan"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"OttoTan"},"content":"    public static void addEvent(String command) throws MissingParameterException, InvalidCommandException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"OttoTan"},"content":"        String[] words \u003d parser.parseEvent(command);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"OttoTan"},"content":"        taskList.add(new Event(words[0], words[1], words[2]));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"OttoTan"},"content":"        ui.showTaskAdded(taskList.get(taskList.size() - 1), taskList.size());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"OttoTan"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"OttoTan"},"content":"     * If the task number is not specified, print an error message.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"OttoTan"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException If the command is invalid (task number","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"OttoTan"},"content":"     *                                 is missing).","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"OttoTan"},"content":"     * @throws TaskNotFoundException   If the task is not found.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"OttoTan"},"content":"    public static void deleteTask(String command) throws InvalidCommandException, TaskNotFoundException {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"OttoTan"},"content":"        int index \u003d parser.parseTaskIndex(command);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"OttoTan"},"content":"        boolean success \u003d taskList.delete(index);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"OttoTan"},"content":"        if (!success) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"OttoTan"},"content":"            throw new TaskNotFoundException(\"Task number does not exist.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"OttoTan"},"content":"        ui.showTaskDeleted(taskList.get(index));","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":216}},{"path":"src/main/java/megamind/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.parser;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import megamind.exception.InvalidCommandException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"import megamind.exception.MissingParameterException;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":" * The `Parser` class is responsible for parsing user commands.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":" * It provides methods to extract the action, task index, description, deadline, and event details from the commands.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"public class Parser {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"     * Parses the command and returns the action","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"     * @param command the command to be parsed","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"     * @return the action of the command","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"    public String parseCommand(String command) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"        return command.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"     * Parses the task index from the command","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"     * @param command the command to be parsed","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"     * @return the index of the task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException if the task number is missing or invalid","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"    public int parseTaskIndex(String command) throws InvalidCommandException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"            throw new InvalidCommandException(\"Task number is missing, please include it.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"        int index;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"            index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OttoTan"},"content":"            throw new InvalidCommandException(\"Invalid task number format.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"        return index;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OttoTan"},"content":"     * Parses the description of the task from the command","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OttoTan"},"content":"     * @param command The command to be parsed","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OttoTan"},"content":"     * @param keyword The keyword to be removed from the command","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OttoTan"},"content":"     * @return The description of the task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException If the description is missing","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OttoTan"},"content":"    public String parseDescription(String command, String keyword) throws InvalidCommandException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OttoTan"},"content":"        if (command.length() \u003c\u003d keyword.length() + 1) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OttoTan"},"content":"            throw new InvalidCommandException(\"The description cannot be empty.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OttoTan"},"content":"        return command.substring(keyword.length() + 1);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OttoTan"},"content":"     * Parses the date and time of the task from the command","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"OttoTan"},"content":"     * @param command The command to be parsed","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"OttoTan"},"content":"     * @return the description and deadline of the task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"OttoTan"},"content":"     * @throws MissingParameterException if command does not contain keyword \"/by\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException if the description or deadline is empty","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"OttoTan"},"content":"    public String[] parseDeadline(String command) throws MissingParameterException, InvalidCommandException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"OttoTan"},"content":"        if (!command.contains(\" /by \")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"OttoTan"},"content":"            throw new MissingParameterException(\"Please specify the deadline of the task.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"OttoTan"},"content":"        String[] words \u003d command.split(\" /by \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"OttoTan"},"content":"        words[0] \u003d words[0].substring(8);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"OttoTan"},"content":"        if (words[0].isEmpty()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"OttoTan"},"content":"            throw new InvalidCommandException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"OttoTan"},"content":"        if (words[1].isEmpty()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"OttoTan"},"content":"            throw new InvalidCommandException(\"The deadline of a task cannot be empty.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"OttoTan"},"content":"        words[0] \u003d words[0].trim();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"OttoTan"},"content":"        return words;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"OttoTan"},"content":"     * Parses the description, date, and time of the event from the command.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"OttoTan"},"content":"     * @param command The command to be parsed","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"OttoTan"},"content":"     * @return The description, date, and time of the event","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"OttoTan"},"content":"     * @throws MissingParameterException If the keywords \"/from\" or \"/to\" are missing","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"OttoTan"},"content":"     * @throws InvalidCommandException If the description, date, and time is missing.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"OttoTan"},"content":"    public String[] parseEvent(String command) throws MissingParameterException, InvalidCommandException {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"OttoTan"},"content":"        if (!command.contains(\" /from \") || !command.contains(\" /to \")) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"OttoTan"},"content":"            throw new MissingParameterException(\"Please specify the start and end time of the event.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"OttoTan"},"content":"        String[] last \u003d new String[3];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"OttoTan"},"content":"        String[] words \u003d command.split(\" /from \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"OttoTan"},"content":"        last[0] \u003d words[0].substring(6);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"OttoTan"},"content":"        words \u003d words[1].split(\" /to \");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"OttoTan"},"content":"        last[1] \u003d words[0];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"OttoTan"},"content":"        last[2] \u003d words[1];","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"OttoTan"},"content":"        if (last[0].isEmpty()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"OttoTan"},"content":"            throw new InvalidCommandException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"OttoTan"},"content":"        if (last[1].isEmpty()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"OttoTan"},"content":"            throw new InvalidCommandException(\"The start time of an event cannot be empty.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"OttoTan"},"content":"        if (last[2].isEmpty()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"OttoTan"},"content":"            throw new InvalidCommandException(\"The end time of an event cannot be empty.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"OttoTan"},"content":"        words[0] \u003d words[0].trim();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"OttoTan"},"content":"        return last;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"OttoTan":123}},{"path":"src/main/java/megamind/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.storage;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"import megamind.task.Task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":" * The `Storage` class handles the saving and loading of tasks to and from a file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":" * It ensures that tasks are persisted between program runs.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":" * The class provides methods to save tasks to a file and load tasks from a file.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"public class Storage {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"     * If the file doesn\u0027t exist, it is created.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"        // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"        File dataDir \u003d new File(\"data\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"            dataDir.mkdirs(); // Create the directory including any necessary parent directories","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"        // Save the tasks to the file","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(\"data/tasks.ser\"))) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"            System.out.println(\"Tasks have been saved successfully.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OttoTan"},"content":"     * If the file doesn\u0027t exist, an empty task list is initialized.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OttoTan"},"content":"     * If loading fails, an empty task list is initialized.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OttoTan"},"content":"     * If loading is successful, the tasks are loaded into the task list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OttoTan"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OttoTan"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OttoTan"},"content":"        // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OttoTan"},"content":"        File dataDir \u003d new File(\"data\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OttoTan"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OttoTan"},"content":"            dataDir.mkdirs(); // Create the directory including any necessary parent directories","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OttoTan"},"content":"        // Check if the file exists","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OttoTan"},"content":"        File taskFile \u003d new File(dataDir, \"tasks.ser\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OttoTan"},"content":"        if (!taskFile.exists()) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OttoTan"},"content":"            System.out.println(\"No saved tasks found.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OttoTan"},"content":"            return new ArrayList\u003c\u003e(); // Initialize an empty task list if the file doesn\u0027t exist","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OttoTan"},"content":"        // Load tasks from the file if it exists","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"OttoTan"},"content":"        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(taskFile))) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"OttoTan"},"content":"            System.out.println(\"Tasks have been loaded successfully.\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"OttoTan"},"content":"            return (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"OttoTan"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"OttoTan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"OttoTan"},"content":"            return new ArrayList\u003c\u003e(); // Initialize an empty task list if loading fails","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"OttoTan":70}},{"path":"src/main/java/megamind/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import java.io.Serial;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":" * The `Deadline` class represents a task with a specific deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":" * It extends the `Task` class and includes additional information about the deadline of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":" * The class provides methods to construct a deadline task and return its string representation.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"    @Serial","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"     * @param deadline    Deadline of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"     * @throws DateTimeParseException If the deadline is not in the correct format.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"    public Deadline(String description, String deadline) throws DateTimeParseException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, INPUT_FORMATTER);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"        return \"[D]\" + super.toString() + \" (BY: \" + deadline.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":38}},{"path":"src/main/java/megamind/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import java.io.Serial;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":" * The `Event` class represents an event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":" * It extends the `Task` class and includes additional information about the start and end times of the event.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":" * The class provides methods to construct an event task and return its string representation.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"    @Serial","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    private final LocalDateTime start;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"     * @param start       Start time of the event.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"     * @param end         End time of the event.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"     * @throws DateTimeParseException If the deadline is not in the correct format.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"    public Event(String description, String start, String end) throws DateTimeParseException {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"        this.start \u003d LocalDateTime.parse(start, INPUT_FORMATTER);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"        this.end \u003d LocalDateTime.parse(end, INPUT_FORMATTER);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OttoTan"},"content":"        return \"[E]\" + super.toString() + \" (FROM: \" + this.start.format(OUTPUT_FORMATTER)","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"               + \" TO: \" + this.end.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":42}},{"path":"src/main/java/megamind/task/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":" * The `List` class represents a collection of tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":" * It provides methods to add, delete, mark, and find tasks within the list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":" * The class also includes methods to get the size of the list and return its string representation.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"public class List {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"     * Constructor for the List class.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"    public List(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"     * @param task Task object that is to be added to the array list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"     * Returns the String representation of the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"     * @return String representation of the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OttoTan"},"content":"            list.append(i + 1).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OttoTan"},"content":"        return list.toString();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OttoTan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OttoTan"},"content":"     * @param index Index of the task to be marked as done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OttoTan"},"content":"     * @return True if the task is successfully marked as done, false otherwise.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OttoTan"},"content":"    public boolean markTaskAsDone(int index) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OttoTan"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OttoTan"},"content":"            tasks.get(index).markAsDone();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OttoTan"},"content":"            return true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OttoTan"},"content":"        } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OttoTan"},"content":"            return false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"OttoTan"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"OttoTan"},"content":"     * @param index Index of the task to be marked as not done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"OttoTan"},"content":"     * @return True if the task is successfully marked as not done, false otherwise.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"OttoTan"},"content":"    public boolean markTaskAsNotDone(int index) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"OttoTan"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"OttoTan"},"content":"            tasks.get(index).markAsNotDone();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"OttoTan"},"content":"            return true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"OttoTan"},"content":"        } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"OttoTan"},"content":"            return false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"OttoTan"},"content":"     * Returns the string representation of task at the specified index.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"OttoTan"},"content":"     * This is to ensure that the task is not modified unintentionally","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"OttoTan"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"OttoTan"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"OttoTan"},"content":"    public String get(int index) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"OttoTan"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"OttoTan"},"content":"     * Returns the size of the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"OttoTan"},"content":"     * @return Size of the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"OttoTan"},"content":"    public int size() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"OttoTan"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"OttoTan"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"OttoTan"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"OttoTan"},"content":"     * @return True if the task is successfully deleted, false otherwise.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"OttoTan"},"content":"    public boolean delete(int index) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"OttoTan"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"OttoTan"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"OttoTan"},"content":"            return true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"OttoTan"},"content":"        } else {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"OttoTan"},"content":"            return false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"OttoTan"},"content":"     * Finds tasks that contain the keyword.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"OttoTan"},"content":"     * @param keyword Keyword to be searched for in the tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"OttoTan"},"content":"     * @return List of tasks that contain the keyword.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"OttoTan"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"OttoTan"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"OttoTan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"OttoTan"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"OttoTan"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"OttoTan"},"content":"            }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"OttoTan"},"content":"        return foundTasks.isEmpty()","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"OttoTan"},"content":"                ? \"No tasks found.\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"OttoTan"},"content":"                : \"Here are the found tasks\\n\" + new List(foundTasks);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"OttoTan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"OttoTan"},"content":"     * Method is only used for the saving of tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"OttoTan"},"content":"     * @return List of tasks.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"OttoTan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"OttoTan"},"content":"        return tasks;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":140}},{"path":"src/main/java/megamind/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import java.io.Serial;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":" * The `Task` class represents a generic task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":" * It implements the `Serializable` interface to allow tasks to be serialized.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":" * The class provides methods to mark tasks as done or not done, and to get the task description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":" * It also includes methods to return the string representation of the task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"    protected static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"            .ofLocalizedDateTime(java.time.format.FormatStyle.MEDIUM);","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"    @Serial","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"    private final String description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OttoTan"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OttoTan"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OttoTan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OttoTan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OttoTan"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OttoTan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OttoTan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OttoTan"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OttoTan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OttoTan"},"content":"        return description;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":62}},{"path":"src/main/java/megamind/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import java.io.Serial;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":" * The `To do` class represents a to-do task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":" * It extends the `Task` class and provides a specific implementation for to-do tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":" * The class includes methods to construct a to-do task and return its string representation.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"    @Serial","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"     * Constructor for the to do class.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"        super(description);","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"    @Override","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"    public String toString() {","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":32}},{"path":"src/main/java/megamind/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.ui;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":" * The `Ui` class handles interactions with the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":" * It provides methods to display messages, errors, and task-related information.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":" * The class also includes methods to greet the user and show help information.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"public class Ui {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"     * Greets the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"    public void greet() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"        String logo \u003d \"\"\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"                  _____\\s","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"                 /     \\\\\\s","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"                | () () |","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"                 \\\\  ^  /\\s","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"                  |||||\\s","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"                  |||||\\s","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"                \"\"\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"        System.out.println(\"What\u0027s good, I\u0027m Megamind.\\nWhat can I do for you?\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"     * Shows the line separator.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"    public void showLine() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"     * Shows the message to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"     * @param message Message to be shown to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"        System.out.println(message);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OttoTan"},"content":"     * Shows the error message to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OttoTan"},"content":"     * @param errorMessage Error message to be shown to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OttoTan"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OttoTan"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OttoTan"},"content":"     * Shows the task added message to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OttoTan"},"content":"     * @param task      Task that has been added.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OttoTan"},"content":"     * @param taskCount Number of tasks in the list.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OttoTan"},"content":"    public void showTaskAdded(String task, int taskCount) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OttoTan"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OttoTan"},"content":"                           + \"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"OttoTan"},"content":"     * Shows the task deleted message to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"OttoTan"},"content":"     * @param task Task that has been deleted.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"OttoTan"},"content":"    public void showTaskDeleted(String task) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"OttoTan"},"content":"        System.out.println(\"Task has been deleted successfully:\\n\" + task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"OttoTan"},"content":"     * Shows the mark/unmark task message to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"OttoTan"},"content":"     *","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"OttoTan"},"content":"     * @param task   Task that has been marked.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"OttoTan"},"content":"     * @param isDone Boolean value indicating if the task is done.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"OttoTan"},"content":"    public void showMarkTask(String task, boolean isDone) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"OttoTan"},"content":"        String status \u003d isDone ? \"Good job! You\u0027ve completed a task:\\n\" : \"Alright, I\u0027ve marked it as not done:\\n\";","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"OttoTan"},"content":"        System.out.println(status + task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"OttoTan"},"content":"     * Shows the exit message to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"OttoTan"},"content":"    public void showExit() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"OttoTan"},"content":"        System.out.println(\"See you around!\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"OttoTan"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"OttoTan"},"content":"    /**","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"OttoTan"},"content":"     * Shows the help message to the user.","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"OttoTan"},"content":"     */","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"OttoTan"},"content":"    public void showHelp() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"OttoTan"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"OttoTan"},"content":"                All dates and times should be in the format: dd/MM/yyyy HHmm \\n","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"OttoTan"},"content":"                Here are the commands you can use:","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"OttoTan"},"content":"                1. list - List all tasks","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"OttoTan"},"content":"                2. todo \u003cdescription\u003e - Add a to-do task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"OttoTan"},"content":"                3. deadline \u003cdescription\u003e /by \u003cdeadline\u003e - Add a deadline task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"OttoTan"},"content":"                4. event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e - Add an event task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"OttoTan"},"content":"                5. mark \u003ctask number\u003e - Mark a task as done","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"OttoTan"},"content":"                6. unmark \u003ctask number\u003e - Mark a task as not done","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"OttoTan"},"content":"                7. delete \u003ctask number\u003e - Delete a task","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"OttoTan"},"content":"                8. bye - Exit the program\"\"\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"OttoTan":108}},{"path":"src/test/java/megamind/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"    public void constructor_success() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"            new Deadline(\"project meeting\", \"11/11/1111 1111\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"            assertEquals(\"Text \u002711/11/1111 1111\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"    public void constructor_invalidDateTimeFormat_exceptionThrown() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"            new Deadline(\"project meeting\", \"test\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"            assertEquals(\"Text \u0027test\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"        Deadline deadline \u003d new Deadline(\"project meeting\", \"11/11/1111 1111\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[D][ ] project meeting (BY: 11 Nov 1111, 11:11:00 am)\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"                deadline.toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"OttoTan":32}},{"path":"src/test/java/megamind/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"public class EventTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"    public void constructor_success() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"            new Event(\"project meeting\", \"11/11/1111 1111\", \"22/12/2222 2222\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"            assertEquals(\"Text \u002711/11/1111 1111\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"    public void constructor_invalidDateTimeFormat_exceptionThrown() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"        try {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"            new Event(\"project meeting\", \"test\", \"22/12/2222 2222\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"            assertEquals(\"Text \u0027test\u0027 could not be parsed at index 0\", e.getMessage());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"        Event event \u003d new Event(\"project meeting\", \"11/11/1111 1111\", \"22/12/2222 2222\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[E][ ] project meeting (FROM: 11 Nov 1111, 11:11:00 am TO: 22 Dec 2222, 10:22:00 pm)\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"                event.toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"OttoTan":32}},{"path":"src/test/java/megamind/task/ListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"public class ListTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"    public void testToString_empty() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"        List list \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"There are no tasks in your list.\", list.toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"    public void testToString_notEmpty() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"        List list \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"            list.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"        }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"1. [ ] task\\n2. [ ] task\\n3. [ ] task\\n\", list.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"        List list \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"        list.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"        list.markTaskAsDone(0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[X] task\", task.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"    public void testMarkTaskAsNotDone() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"OttoTan"},"content":"        List list \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"OttoTan"},"content":"        list.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"OttoTan"},"content":"        list.markTaskAsDone(0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"OttoTan"},"content":"        list.markTaskAsNotDone(0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[ ] task\", task.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"OttoTan"},"content":"    public void testAdd() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"OttoTan"},"content":"        List list \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"OttoTan"},"content":"        list.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"1. [ ] task\\n\", list.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"OttoTan"},"content":"    public void testDelete() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"OttoTan"},"content":"        List list \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"OttoTan"},"content":"        list.add(task);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"OttoTan"},"content":"        list.delete(0);","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"There are no tasks in your list.\", list.toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"OttoTan":61}},{"path":"src/test/java/megamind/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"public class TaskTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[ ] Test task\", task.toString(), \"Task description should be \u0027Test task\u0027\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"    public void testToString() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[ ] Test task\", task.toString(), \"toString should return \u0027Test task\u0027\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"OttoTan"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"OttoTan"},"content":"        task.markAsDone();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[X] Test task\", task.toString(), \"Task should be marked as done\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"OttoTan"},"content":"    public void testMarkAsNotDone() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"OttoTan"},"content":"        Task task \u003d new Task(\"Test task\");","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"OttoTan"},"content":"        task.markAsDone();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"OttoTan"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[ ] Test task\", task.toString(), \"Task should be marked as not done\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"OttoTan":36}},{"path":"src/test/java/megamind/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"package megamind.task;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"OttoTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"OttoTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"public class TodoTest {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"OttoTan"},"content":"    public void testStringConversion() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[T][ ] test\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"OttoTan"},"content":"                new Todo(\"test\").toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"OttoTan"},"content":"","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"OttoTan"},"content":"    @Test","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"OttoTan"},"content":"    public void testStringConversion2() {","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"OttoTan"},"content":"        assertEquals(\"[T][ ] 1111\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"OttoTan"},"content":"                new Todo(\"1111\").toString());","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"    }","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"OttoTan"},"content":"}","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"OttoTan":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"OttoTan"},"content":"bye","lastModifiedDate":"2024-08-21","isFullCredit":false}],"authorContributionMap":{"OttoTan":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"OttoTan"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"OttoTan"},"content":"javac -encoding ISO-8859-1 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"OttoTan"},"content":"java -classpath ..\\bin Megamind \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":18,"OttoTan":3}}]
