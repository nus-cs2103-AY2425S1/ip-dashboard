[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"# Mira project template","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"3. After that, locate the `src/main/java/Mira.java` file, right-click it, and choose `Run Mira.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"GavinSin":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"# Mira User Guide","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"GavinSin":1,"-":29}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":" * Represents a Deadline task that needs to be completed by a specific date/time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"    private final String by; // The deadline for the task","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * @param by          The deadline by which the task must be completed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the Deadline task,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * including its type, status icon, description, and deadline.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[D]\", status icon, description, and deadline.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":28}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":" * Represents an Event task that starts and ends at specific date/times.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"    private final String from; // The start date/time of the event","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"    private final String to;   // The end date/time of the event","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Event task with the specified description,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * start date/time, and end date/time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     * @param from        The start date/time of the event.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     * @param to          The end date/time of the event.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the Event task,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * including its type, status icon, description, start and end date/times.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[E]\", status icon, description, start and end date/times.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":32}},{"path":"src/main/java/Mira.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":" * Mira is a simple chatbot that echoes user commands and exits when the user types \"bye\".","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":" * It interacts with the user via the UI class, which handles input and output operations.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"public class Mira {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"    private final UI ui; // handle user interface","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    private final TaskList tasks; // Manages tasks","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    private boolean isRunning; // default is true","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    public Mira() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"        this.tasks \u003d new TaskList(this.ui);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * Runs the chatbot, continuously reading user commands and responding until the user types \"bye\".","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * The chatbot echoes all commands and displays a goodbye message when exiting.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    public void run() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        // show welcome message with multiline text","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"        this.ui.showMessage(\"Hello! I\u0027m Mira\\nWhat can I do for you?\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"        while (this.isRunning) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"            // read user input until a newline is entered","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"            String[] commandParts \u003d userInput.split(\" \", 2); // cam only split one time","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"            String command \u003d commandParts[0];","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"            String arguments \u003d commandParts.length \u003e 1 ? commandParts[1] : \"\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"            switch (command) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"                case \"bye\" -\u003e {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"                    this.ui.showMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"                    this.isRunning \u003d false;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"                }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"                case \"list\" -\u003e this.tasks.listTasks();","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"                case \"mark\" -\u003e {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"                    int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"                    this.tasks.markTask(index);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"                }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"                case \"unmark\" -\u003e {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"                    int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"                    this.tasks.unmarkTask(index);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"                }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"                case \"todo\" -\u003e this.tasks.addTask(new Todo(arguments));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"                case \"deadline\" -\u003e {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"                    String[] deadlineParts \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"                    if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"                        this.ui.showMessage(\"Invalid format. Use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"                        break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"                    String description \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"                    String by \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"                    this.tasks.addTask(new Deadline(description, by));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"                case \"event\" -\u003e {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"                    String[] eventParts \u003d arguments.split(\"/from|/to\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"                    if (eventParts.length !\u003d 3) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"                        this.ui.showMessage(\"Invalid format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"                        break;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"                    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"                    String description \u003d eventParts[0].trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"                    String from \u003d eventParts[1].trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"                    String to \u003d eventParts[2].trim();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"                    this.tasks.addTask(new Event(description, from, to));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"                }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"                default -\u003e this.ui.showMessage(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"     * The main method to start the Mira chatbot.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"        Mira mira \u003d new Mira();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GavinSin"},"content":"        mira.run();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"GavinSin":80}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"public class Task {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"    private final String description;  // The task\u0027s description","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"    private boolean isDone;            // Indicates if the task is completed","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * @param status True to mark the task as done, false to mark it as not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     * Returns the status icon representing whether the task is done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * An \"X\" indicates the task is done; a space indicates it is not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     * @return A string containing \"X\" if the task is done, otherwise a space.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the task, including its status icon.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s status icon followed by its description.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"GavinSin":47}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":" * TaskList handles adding and listing of tasks.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"public class TaskList {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"    private final Task[] tasks; // Array to store tasks","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"    private int taskCount;        // Number of tasks added","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    private final UI ui;          // UI for handling user interface interactions","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new TaskList with a fixed size to store up to 100 tasks.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * @param ui UI class object needed for user interface interactions.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    public TaskList(UI ui) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        this.tasks \u003d new Task[100];","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * Adds a new task to the list and displays a confirmation message.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"        if (taskCount \u003c tasks.length) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"            tasks[taskCount] \u003d task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"            taskCount++;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"            this.ui.showMessage(\"Got it. I\u0027ve added this task:\\n  \" + task +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"                    \"\\nNow you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        } else {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"            this.ui.showMessage(\"Task list is full. Cannot add more tasks.\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * Lists all the tasks currently stored in the task list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"    public void listTasks() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"        StringBuilder tasksList \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"            tasksList.append((i + 1)).append(\". \").append(tasks[i]);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"            if (i \u003c taskCount - 1) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"                tasksList.append(\"\\n\"); // Add newline only if it is not the last task","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"        this.ui.showMessage(tasksList.toString());","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to mark as done (1-based index).","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"        if (index \u003c\u003d 0 || index \u003e taskCount) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"            ui.showMessage(\"Invalid task number.\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"            return;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"        tasks[index - 1].setStatus(true);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"        this.ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks[index - 1]);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"     * Unmarks the specified task, setting it back to not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to unmark (1-based index).","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"        if (index \u003c\u003d 0 || index \u003e taskCount) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"            ui.showMessage(\"Invalid task number.\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"            return;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"        tasks[index - 1].setStatus(false);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"        this.ui.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n  \" + tasks[index - 1]);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"GavinSin":79}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":" * Represents a ToDo task without any date or time attached to it.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the ToDo task,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * including its type, status icon, and description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[T]\", status icon, and description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":25}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * UI handles all user interface interactions for the Mira chatbot,","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" * including reading commands, echoing user inputs, and displaying messages.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"public class UI {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     * Scanner object to read user input from the console.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    public UI() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     * Echoes the user\u0027s command by printing it within formatted lines.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     * @param command The command to be echoed.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"    public void echoCommand(String command) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        printLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        System.out.println(command);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        printLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Displays a message to the user within formatted lines.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"        printLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"        System.out.println(message);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        printLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"     * Prints a separator line used for formatting the UI output.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    private void printLine() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"GavinSin":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"todo read book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"deadline return book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Aug 6th 2pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"unmark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"java -classpath ..\\bin Mira \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"GavinSin":1,"-":20}}]
