[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"# Mira project template","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Mira_. Given below are instructions on how to use it.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"3. After that, locate the `src/main/java/Mira.java` file, right-click it, and choose `Run Mira.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"## Acknowledgements","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"1. I have written the required code myself, and use ChatGPT to generate alternative implementations, use to improve my own coding skills.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"2. I have referenced AB3 repository for code design inspiration.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"3. I have referenced the JavaFx tutorial guide for GUI implementation.","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"GavinSin":9,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"    mainClass.set(\"mira.Launcher\")","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    archiveBaseName \u003d \"mira\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"checkstyle {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"    enableAssertions \u003d false","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"GavinSin":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"# Mira User Guide","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"![Product Screenshot](Ui.png)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"Mira chatbot is your personal task assistant and helps manage expenses.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"## Installation","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"1. Download the jar from [release](https://github.com/GavinSin/ip/releases).","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"2. Download Java SDK version 17.0.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"3. Run command","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    ```bash","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    java -jar mira.jar","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    ```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"## Adding a Todo item","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"Adds a todo item with description to the task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"Example:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"todo read book","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"Returns a description of the todo item specified.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"  [T][] read book","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"## Adding an Event item","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"Adds an event item with start and end date to the task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"event \u003cdescription\u003e /from d/M/yyyy HHmm /to d/M/yyyy HHmm","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"Example:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"event project meeting /from 6/8/2019 1400 /to 6/8/2019 1600","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"Returns a description of the event item specified.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"  [E][] project meeting (06 Aug 2019,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"  2:00pm-4:00pm)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"## Adding a deadline item","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"Adds a deadline item with specified description and deadline to the task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"deadline \u003cdescription\u003e /by d/M/yyyy HHmm","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"Example:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"deadline return book /by 6/6/2019 1800","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"Returns a description of the deadline item specified.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"  [D][] return book (by: 06 Aug 2019, 6:00pm)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"## Listing all tasks in task list","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"List all tasks in the task list in the order time.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"Returns the task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"GavinSin"},"content":"1. [T][] read book","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"GavinSin"},"content":"2. [E][] project meeting (06 Aug 2019,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"GavinSin"},"content":"  2:00pm-4:00pm)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"GavinSin"},"content":"3. [D][] return book (by: 06 Aug 2019, 6:00pm)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"GavinSin"},"content":"## Deleting a task item","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"GavinSin"},"content":"Deletes a task item with the numbering in the task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"GavinSin"},"content":"delete \u003cnumber\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"GavinSin"},"content":"Example:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"GavinSin"},"content":"delete 3","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"GavinSin"},"content":"Returns a description of the deleted item specified and the numbers of tasks left.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"GavinSin"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"GavinSin"},"content":"  [D][] return book (by: 06 Aug 2019, 6:00pm)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"GavinSin"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"GavinSin"},"content":"## Mark a task item","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"GavinSin"},"content":"Mark a task item with the numbering in the task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"GavinSin"},"content":"mark \u003cnumber\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"GavinSin"},"content":"Example:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"GavinSin"},"content":"mark 2","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"GavinSin"},"content":"Returns a description of the marked item specified.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"GavinSin"},"content":"Nice. I\u0027ve marked this task as done:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"GavinSin"},"content":"  [T][X] read book","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"GavinSin"},"content":"## Unmark a task item","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"GavinSin"},"content":"Unmark a task item with the numbering in the task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"GavinSin"},"content":"unmark \u003cnumber\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"GavinSin"},"content":"Example:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"GavinSin"},"content":"unmark 2","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"GavinSin"},"content":"Returns a description of the unmarked item specified.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"GavinSin"},"content":"Nice. I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"GavinSin"},"content":"  [T][] read book","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"GavinSin"},"content":"## Find task items via keyword","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"GavinSin"},"content":"Find all associated task items with a keyword string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"GavinSin"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"GavinSin"},"content":"Example:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"GavinSin"},"content":"find book","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"GavinSin"},"content":"Returns a list of task items containing the keyword.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"GavinSin"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"GavinSin"},"content":"1. [T][] read book","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"GavinSin"},"content":"3. [D][] return book (by: 06 Aug 2019, 6:00pm)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"GavinSin"},"content":"## Adding an expense","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"GavinSin"},"content":"Adds an expense with specified description, category and amount in expense list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"GavinSin"},"content":"expense \u003cdescription\u003e /category \u003ccategory\u003e /amount \u003camount\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"GavinSin"},"content":"Example:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"GavinSin"},"content":"expense takoyaki /category food /amount 2.50","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"GavinSin"},"content":"Returns a description of the expense item specified.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"GavinSin"},"content":"Got it. I\u0027ve added this expense:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"GavinSin"},"content":"  [food] $2.50 - takoyaki","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"GavinSin"},"content":"Now you have 1 expenses in the list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"GavinSin"},"content":"## Listing expenses","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"GavinSin"},"content":"List all expenses in the expense list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"GavinSin"},"content":"list expenses","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"GavinSin"},"content":"Returns all description of the expenses in expense list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"GavinSin"},"content":"Here are your recorded expenses:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"GavinSin"},"content":"1. [food] $2.50 - takoyaki","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"GavinSin"},"content":"## Exiting command","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"GavinSin"},"content":"Format:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"GavinSin"},"content":"bye","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"GavinSin"},"content":"Returns goodbye message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"GavinSin"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"GavinSin"},"content":"```","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"GavinSin"},"content":"## Acknowledgements","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"GavinSin"},"content":"1. I have written the required code myself, and use ChatGPT to generate alternative implementations, use to improve my own coding skills.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"GavinSin"},"content":"2. I have referenced AB3 repository for code design inspiration.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"GavinSin"},"content":"3. I have referenced the JavaFx tutorial guide for GUI implementation.","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"GavinSin":176,"-":25}},{"path":"src/main/java/mira/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":" * Represents a Deadline task that needs to be completed by a specific date/time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    private static final DateTimeFormatter DEFAULT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    private final LocalDateTime by; // The deadline for the task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param by          The deadline by which the task must be completed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"        this.by \u003d LocalDateTime.parse(by, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Deadline task with the specified description, deadline and isDone.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     * @param by          The deadline by which the task must be completed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @param isDone      The status of the deadline.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    public Deadline(String description, String by, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        this.by \u003d LocalDateTime.parse(by, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Returns a string format of Deadline task to be saved for storage.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @return A specified format string for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"        return \"D | \" + super.toFileString() + \" | \" + this.by.format(DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"     * It includes its type, status icon, description, and deadline.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[D]\", status icon, description, and deadline.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, h:mma\"))","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"                + \")\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":58}},{"path":"src/main/java/mira/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    private void flip() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"    public static DialogBox getMiraDialog(String text, Image img) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"        db.flip();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"        return db;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"GavinSin":60}},{"path":"src/main/java/mira/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":" * Represents an Event task that starts and ends at specific date/times.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    private static final DateTimeFormatter DEFAULT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    private final LocalDateTime from; // The start datetime of the event","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final LocalDateTime to; // The end datetime of the event","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * It contains specified description, start, and end datetime.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * @param from        The start datetime of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @param to          The end datetime of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public Event(String description, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"        this.from \u003d LocalDateTime.parse(from, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"        this.to \u003d LocalDateTime.parse(to, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     * It contains specified description, start, and end datetime.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"     * @param from        The start date/time of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * @param to          The end date/time of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     * @param isDone      The status of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"    public Event(String description, String from, String to, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"        this.from \u003d LocalDateTime.parse(from, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"        this.to \u003d LocalDateTime.parse(to, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"     * Returns the string format of Event task to be saved for storage.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"     * @return A specified format string for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"        return \"E | \" + super.toFileString() + \" | \" + this.from.format(DEFAULT_FORMAT)","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"                + \" | \" + this.to.format(DEFAULT_FORMAT);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"     * It includes its type, status icon, description, start and end date/times.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[E]\", status icon, description, start and end date/times.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, h:mma\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"        boolean isSameDay \u003d this.from.toLocalDate().isEqual(this.to.toLocalDate());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"        String endDateTime \u003d isSameDay","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"                ? this.to.format(DateTimeFormatter.ofPattern(\"h:mma\")) // only show time","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"                : this.to.format(dateTimeFormatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"        String outputDateTime \u003d isSameDay","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"                ? \" (\" + this.from.format(dateTimeFormatter) + \"-\" + endDateTime + \")\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"                : \" (from: \" + this.from.format(dateTimeFormatter) + \" to: \" + endDateTime + \")\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"        return \"[E]\" + super.toString() + outputDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":73}},{"path":"src/main/java/mira/Expense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents an expense with a category, amount, and description.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class Expense {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    private final String category;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    private final double amount;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    private final String description;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Expense with the specified category, amount, and description.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     * @param category    The category of the expense (e.g., Food, Transport).","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * @param amount      The amount of the expense.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * @param description A short description of the expense.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    public Expense(String category, double amount, String description) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the expense.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     * @return The formatted string showing the category, amount, and description.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        return \"[\" + category + \"] $\" + amount + \" - \" + description;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"GavinSin":33}},{"path":"src/main/java/mira/ExpenseList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * Represents a list of expenses.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public class ExpenseList {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    private final ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * Constructs an empty ExpenseList.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    public ExpenseList() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        this.expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * Adds an expense to the list.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @param expense The expense to be added.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public void addExpense(Expense expense) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        expenses.add(expense);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * Returns the total number of expenses in the list.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @return The number of expenses.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    public int size() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        return expenses.size();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of all expenses in the list.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * @return A formatted string of all expenses.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    public String listExpenses() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"        for (int i \u003d 0; i \u003c expenses.size(); i++) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"            result.append(i + 1).append(\". \").append(expenses.get(i));","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"            if (i \u003c expenses.size() - 1) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"                result.append(\"\\n\"); // Add newline only if it is not the last task","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"        return result.toString();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"GavinSin":52}},{"path":"src/main/java/mira/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public class Launcher {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"GavinSin":13}},{"path":"src/main/java/mira/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":" * A GUI for Mira using FXML.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    private Mira mira \u003d new Mira(\"./data/mira.txt\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"            stage.setTitle(\"Mira Chatbot\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMira(mira); // inject the Duke instance","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"            stage.show();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"GavinSin":35}},{"path":"src/main/java/mira/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    private Mira mira;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    private Image miraImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaMira.png\"));","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * Initializes the UI components and sets up necessary bindings.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     * This method is called automatically when the associated FXML file is loaded.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"     * It binds the vertical scroll position of the {@code scrollPane} to the height of the {@code dialogContainer}","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"     * so that the scroll view automatically scrolls to the bottom when new messages are added.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     * Additionally, this method displays a welcome message from Mira in the dialog container","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * and sets a placeholder prompt text for the user input field.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @implNote The welcome message is added to the {@code dialogContainer} using the {@code DialogBox} utility,","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     *     and it includes an image representing Mira.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"        // show welcome message","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"                DialogBox.getMiraDialog(\"Hello! I\u0027m Mira\\nWhat can I do for you?\", miraImage)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"        );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"        userInput.setPromptText(\"Type here...\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"     * Injects the Mira instance","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"    public void setMira(Mira d) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"        mira \u003d d;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"    @FXML","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"        String response \u003d mira.getResponse(input);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"                DialogBox.getMiraDialog(response, miraImage)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"        );","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"GavinSin":75}},{"path":"src/main/java/mira/Mira.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" * Mira is a simple chatbot that echoes user commands and exits when the user types \"bye\".","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" * It interacts with the user via the Ui class, which handles input and output operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"public class Mira {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final Storage storage; // storage for saving, loading tasks","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    private TaskList tasks; // Manages tasks","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    private ExpenseList expenses;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new {@code Mira} instance, initializing the storage, and task list.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * This constructor attempts to load the tasks from the specified file path. If the tasks","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * cannot be loaded due to an error, it displays an appropriate message to the user and","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * initializes an empty task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * @param filePath The path to the file where tasks will be stored and loaded from.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     *                 If the file does not exist, it will be created.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    public Mira(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        } catch (MiraException | SecurityException | IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"        this.expenses \u003d new ExpenseList();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * Reads user commands and responding until the user types \"bye\".","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        Command command \u003d null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"            assert userInput !\u003d null : \"user input should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"            command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"            assert tasks !\u003d null : \"tasks should not be null\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"            command.setTaskList(tasks, expenses);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"            String commandResult \u003d command.execute();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"            if (command instanceof Savable savable) { // if command is Savable","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"                savable.save(storage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"            return commandResult;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"        } catch (MiraException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"            return e.getMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"            return \"Please provide a valid task number.\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"            return \"Please provide a valid task date: \u0027d/M/yyyy HHmm\u0027.\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"            return \"File path for storing of tasks is unusable.\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"GavinSin":66}},{"path":"src/main/java/mira/MiraException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents exceptions specific to the Mira chatbot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class MiraException extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new MiraException with the specified detail message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    public MiraException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":15}},{"path":"src/main/java/mira/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.command.AddExpenseCommand;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.command.Command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.command.DeadlineCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.command.DeleteCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import mira.command.EventCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"import mira.command.ExitCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"import mira.command.FindCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"import mira.command.ListCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"import mira.command.ListExpenseCommand;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"import mira.command.MarkCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"import mira.command.TodoCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"import mira.command.UnmarkCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":" * Represents a Parser class to parse user input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * Parses the user\u0027s input command and returns the corresponding {@link Command} object.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     * The method splits the input string into the command and its arguments,","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * and then maps it to the appropriate command class, such as {@link MarkCommand},","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * {@link UnmarkCommand}, {@link DeadlineCommand}, etc.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * @param fullCommand The full command string entered by the user.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     * @return The {@link Command} object corresponding to the user\u0027s input.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @throws MiraException If the command is not recognized or if the command arguments","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     *         are in an invalid format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    public static Command parse(String fullCommand) throws MiraException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2); // can only split one time","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"        String command \u003d commandParts[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"        String arguments \u003d commandParts.length \u003e 1 ? commandParts[1] : \"\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"        switch (command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"        case \"bye\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"        case \"list\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"            if (arguments.equals(\"expenses\")) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"                return new ListExpenseCommand();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"            return new ListCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"        case \"mark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"            int markIdx \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"            return new MarkCommand(markIdx);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"        case \"unmark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"            int unmarkIdx \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"            return new UnmarkCommand(unmarkIdx);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"        case \"delete\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"            int deleteIdx \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"            return new DeleteCommand(deleteIdx);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"            return new TodoCommand(arguments);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"            String[] deadlineParts \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"            if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"                throw new MiraException(\"Invalid format. Use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"            String deadlineDesc \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"            String by \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"            return new DeadlineCommand(deadlineDesc, by);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"        case \"event\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"            String[] eventParts \u003d arguments.split(\"/from|/to\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"            if (eventParts.length !\u003d 3) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"                throw new MiraException(\"Invalid format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"            String eventDesc \u003d eventParts[0].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"            String from \u003d eventParts[1].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"            String to \u003d eventParts[2].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"            return new EventCommand(eventDesc, from, to);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"        case \"expense\":","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"            String[] expenseParts \u003d arguments.split(\"/category|/amount\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"            if (expenseParts.length !\u003d 3) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"                throw new MiraException(\"Invalid format. Use: expense \u003cdescription\u003e /category \u003ccategory\u003e \"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GavinSin"},"content":"                        + \"/amount \u003camount\u003e\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"GavinSin"},"content":"            String expenseDesc \u003d expenseParts[0].trim();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"GavinSin"},"content":"            String category \u003d expenseParts[1].trim();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"GavinSin"},"content":"            String amountStr \u003d expenseParts[2].trim();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"GavinSin"},"content":"            double amount \u003d Double.parseDouble(amountStr);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"GavinSin"},"content":"            return new AddExpenseCommand(category, amount, expenseDesc);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"GavinSin"},"content":"        case \"find\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"GavinSin"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"GavinSin"},"content":"        default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"GavinSin"},"content":"            throw new MiraException(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":91}},{"path":"src/main/java/mira/Savable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * Represents an interface for commands that can be saved to storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public interface Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * Saves the command\u0027s state to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the command\u0027s state.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    void save(Storage storage) throws IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":16}},{"path":"src/main/java/mira/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.File;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"import java.util.List;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":" * Handles saving and loading tasks from a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @param filePath The path to the file where tasks will be saved and loaded from.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * Appends a single task to the storage file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @param task The task to be saved to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    public void saveTask(Task task) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath, true)) { // Append mode","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"            writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * Saves a list of tasks to the storage file, overwriting any existing content.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"            writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"        writer.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If an I/O error occurs during loading.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"     * @throws SecurityException If a permission error occurs during loading.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"     * @throws IllegalArgumentException If file content corrupts during loading.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"     * @throws MiraException If unsupported task type founds during loading.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, SecurityException, MiraException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"            file.createNewFile();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"            return tasks;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"            Task task \u003d createTaskFromFile(parts);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"            tasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"GavinSin"},"content":"        return tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"GavinSin"},"content":"     * Creates a Task object from its string representation in the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"GavinSin"},"content":"     * @param parts The parts of the string split by \" | \".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"GavinSin"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"GavinSin"},"content":"    private Task createTaskFromFile(String[] parts) throws MiraException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"GavinSin"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"GavinSin"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"GavinSin"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"GavinSin"},"content":"        switch (type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"GavinSin"},"content":"        case \"T\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"GavinSin"},"content":"            return new Todo(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"GavinSin"},"content":"        case \"D\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"GavinSin"},"content":"            return new Deadline(description, parts[3], isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"GavinSin"},"content":"        case \"E\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"GavinSin"},"content":"            return new Event(description, parts[3], parts[4], isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"GavinSin"},"content":"        default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"GavinSin"},"content":"            throw new MiraException(\"Invalid task type in file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":105}},{"path":"src/main/java/mira/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    private final String description; // The task\u0027s description","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    private boolean isDone; // Indicates if the task is completed","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Task with the specified description and isDone.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * @param status True to mark the task as done, false to mark it as not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     * Returns the status icon representing whether the task is done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"     * An \"X\" indicates the task is done; a space indicates it is not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"     * @return A string containing \"X\" if the task is done, otherwise a space.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"     * Returns the string format of task to be saved for storage.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"     * @return A specified format string for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the task, including its status icon.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s status icon followed by its description.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"     * Checks if the task\u0027s description contains the given keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"     * @return True if the description contains the keyword, otherwise false.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"GavinSin":79}},{"path":"src/main/java/mira/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * TaskList handles adding and listing of tasks.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public class TaskList {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    /* Array to store tasks */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new TaskList with empty list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * @param tasks The list of tasks to be managed by this TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     * Adds a new task to the list and displays a confirmation message.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to delete (1-based).","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"     * Lists all the tasks currently stored in the task list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"     * @return The string representation of the entire task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    public String listTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"        StringBuilder tasksList \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"            tasksList.append((i + 1)).append(\". \").append(tasks.get(i));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"                tasksList.append(\"\\n\"); // Add newline only if it is not the last task","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"        return tasksList.toString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to mark as done (1-based index).","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"        this.tasks.get(index - 1).setStatus(true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"     * Unmarks the specified task, setting it back to not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to unmark (1-based index).","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"        this.tasks.get(index - 1).setStatus(false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"GavinSin"},"content":"     * Finds and returns a list of tasks that contain the given keyword in their description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"GavinSin"},"content":"     * \u003cp\u003eThis method searches through the task list and collects all tasks that have the keyword","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"GavinSin"},"content":"     * in their descriptions. If no tasks are found, it returns a message indicating that no tasks","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"GavinSin"},"content":"     * matched the keyword. Otherwise, it returns a formatted string listing the matching tasks.\u003c/p\u003e","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"GavinSin"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"GavinSin"},"content":"     * @return A formatted string listing the tasks that match the keyword, or a message indicating","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"GavinSin"},"content":"     *         that no tasks were found.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"GavinSin"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"GavinSin"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"GavinSin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"GavinSin"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"GavinSin"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"GavinSin"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"GavinSin"},"content":"            return \"No tasks found with the keyword: \" + keyword;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"GavinSin"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"GavinSin"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"GavinSin"},"content":"            result.append(i + 1).append(\".\").append(matchingTasks.get(i));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"GavinSin"},"content":"            if (i \u003c matchingTasks.size() - 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"GavinSin"},"content":"                result.append(\"\\n\"); // Add newline only if it is not the last task","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"GavinSin"},"content":"        return result.toString();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"GavinSin"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to retrieve (1-based index).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"GavinSin"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"GavinSin"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index less than 1 || index larger than size()).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"GavinSin"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"GavinSin"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"GavinSin"},"content":"     * Returns the list of tasks managed by this TaskList.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"GavinSin"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"GavinSin"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"GavinSin"},"content":"        return this.tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"GavinSin"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"GavinSin"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"GavinSin"},"content":"    public int size() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"GavinSin"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"GavinSin":142}},{"path":"src/main/java/mira/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a ToDo task without any date or time attached to it.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Todo task with the specified description and isDone.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @param isDone The status of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * Returns the string format of Todo task to be saved for storage.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @return A specified format string for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * It includes its type, status icon, and description.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[T]\", status icon, and description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":47}},{"path":"src/main/java/mira/command/AddExpenseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.Expense;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * Represents a command to add an expense to the expense list.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public class AddExpenseCommand extends Command {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    private final Expense expense;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * Constructs an {@code AddExpenseCommand} with the specified category, amount, and description.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     * @param category    The category of the expense.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * @param amount      The amount of the expense.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * @param description A description of the expense.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    public AddExpenseCommand(String category, double amount, String description) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"        this.expense \u003d new Expense(category, amount, description);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by adding the expense to the expense list.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the expense has been added.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"        expenseList.addExpense(expense);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        return \"Got it. I\u0027ve added this expense:\\n  \" + expense","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"                + \"\\nNow you have \" + expenseList.size() + \" expenses in the list.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"GavinSin":34}},{"path":"src/main/java/mira/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.ExpenseList;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":" * Subclasses should implement specific command behaviors by overriding the {@code execute} method.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    /* TaskList to access lists of tasks */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    protected ExpenseList expenseList;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Sets the {@code TaskList} that this command will operate on.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param taskList The task list to be used by this command.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * Sets the task list and expense list for the command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     * @param taskList The task list to set.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * @param expenseList The expense list to set.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    public void setTaskList(TaskList taskList, ExpenseList expenseList) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        this.expenseList \u003d expenseList;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     * Executes the command.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating the result of the command execution.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"    public abstract String execute();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":41}},{"path":"src/main/java/mira/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"public class DeadlineCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final Deadline deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code DeadlineCommand} with the specified description and due date.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * @param by The due date of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"        this.deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by adding the deadline task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + deadline","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Saves the deadline task to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the task to.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        storage.saveTask(deadline);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":47}},{"path":"src/main/java/mira/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import mira.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" * Represents a command to delete a task in the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"public class DeleteCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final int index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code DeleteCommand} with the specified index.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by deleting the task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        Task removedTask \u003d taskList.getTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + removedTask","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Delete the specific task in storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to delete the task to.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":47}},{"path":"src/main/java/mira/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"public class EventCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final Event event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code EventCommand} with the specified description and due date.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * @param from The start date of the event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * @param to The end date of the event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"        this.event \u003d new Event(description, from, to);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by adding the event task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + event","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * Saves the event task to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the task to.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"        storage.saveTask(event);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":48}},{"path":"src/main/java/mira/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"     * Executes the command to exit the application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * @return An exit message.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * Checks whether the given command is an instance of {@code ExitCommand}.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * @param command The command to check.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @return {@code true} if the command is an {@code ExitCommand}; {@code false} otherwise.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":26}},{"path":"src/main/java/mira/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a command to find tasks containing a specific keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    private final String keyword;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code FindCommand} with the specified keyword to search for.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * Executes the find command by searching for tasks that contain the keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @return A string listing the tasks that match the search keyword.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"        return taskList.findTasks(keyword);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":27}},{"path":"src/main/java/mira/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by listing all tasks in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * @return A string representation of all tasks in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"        return taskList.listTasks();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":16}},{"path":"src/main/java/mira/command/ListExpenseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a command to list all expenses.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class ListExpenseCommand extends Command {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by listing all expenses in the expense list.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * @return A formatted string of all expenses.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        if (expenseList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"            return \"No expenses recorded yet.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        return \"Here are your recorded expenses:\\n\" + expenseList.listExpenses();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"GavinSin":20}},{"path":"src/main/java/mira/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"public class MarkCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    private final int index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code MarkCommand} with the specified index of the task to be marked.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to mark as done (1-based index).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by marking the specified task as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been marked as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        taskList.markTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.getTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * Saves the updated task list to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":44}},{"path":"src/main/java/mira/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import mira.Todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"public class TodoCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final Todo todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code TodoCommand} with the specified description of the todo task.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        this.todo \u003d new Todo(description);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by adding the todo task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + todo","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"                + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * Saves the todo task to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the task to.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"        storage.saveTask(todo);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":46}},{"path":"src/main/java/mira/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"public class UnmarkCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    private final int index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code UnmarkCommand} with the specified index of the task to be marked.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to mark as undone (1-based index).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by unmarking the specified task as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been marked as undone.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        taskList.unmarkTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskList.getTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * Saves the updated task list to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"GavinSin":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"mira.MainWindow\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"GavinSin":19}},{"path":"src/test/data/StorageTest/UnknownTaskTypeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"X | 0 | Invalid Task","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":1}},{"path":"src/test/data/StorageTest/ValidData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"T | 1 | read book","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"D | 0 | return book | 6/6/2019 1800","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"E | 0 | project meeting | 6/8/2019 1400 | 6/8/2019 1600","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":3}},{"path":"src/test/java/mira/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * Tests that `parse` throws `NumberFormatException` when a non-integer is provided for commands","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * like `mark`, `unmark`, and `delete`.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    public void testParseInt_throwsNumberFormatException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"            Parser.parse(\"mark abc\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * Tests that `parse` throws `MiraException` when an unknown command is provided.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    public void testParse_unknownCommand_throwsMiraException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"        MiraException exception \u003d assertThrows(MiraException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"            Parser.parse(\"unknownCommand\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"        assertEquals(\"I\u0027m sorry, I don\u0027t understand that command.\", exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"     * Tests that `parse` throws `MiraException` when the `deadline` command is provided without","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"     * the required `/by` format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    public void testParse_deadlineWithoutBy_throwsMiraException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"        MiraException exception \u003d assertThrows(MiraException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"            Parser.parse(\"deadline submit assignment\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"        assertEquals(\"Invalid format. Use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"     * Tests that `parse` throws `MiraException` when the `event` command is provided without","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"     * the required `/to` format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"    public void testParse_eventWithoutTo_throwsMiraException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"        MiraException exception \u003d assertThrows(MiraException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"            Parser.parse(\"event party /from Monday\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"        assertEquals(\"Invalid format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":57}},{"path":"src/test/java/mira/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"./src/test/data/StorageTest\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Test if createTaskFromFile throws MiraException with a specific message when unknown task type is found.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    public void testCreateTaskFromFile_unknownTaskType() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        String filePath \u003d TEST_DATA_FOLDER + \"/UnknownTaskTypeData.txt\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"        MiraException exception \u003d assertThrows(MiraException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"            storage.loadTasks();;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"        assertEquals(\"Invalid task type in file\", exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     * Test if createTaskFromFile successfully loads Todo, Deadline, and Event tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    public void testCreateTaskFromFile_successfulLoad() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"        String filePath \u003d TEST_DATA_FOLDER + \"/ValidData.txt\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"            ArrayList\u003cTask\u003e tasks \u003d storage.loadTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"                result.append(task.toFileString()).append(\"\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"            assertEquals(\"T | 1 | read book\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"                    + \"D | 0 | return book | 6/6/2019 1800\\n\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"                    + \"E | 0 | project meeting | 6/8/2019 1400 | 6/8/2019 1600\\n\", result.toString());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":50}},{"path":"src/test/java/mira/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import mira.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * Tests that MarkCommand throws IndexOutOfBoundsException for an invalid index (0).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    public void testMarkCommand_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        MarkCommand command \u003d new MarkCommand(0); // 0 is out of bounds for 1-based index","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        command.setTaskList(taskList);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        assertThrows(IndexOutOfBoundsException.class, command::execute);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"todo read book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"deadline return book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Aug 6th 2pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"unmark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Mira\\Mira.java","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"java -classpath ..\\bin mira.Mira \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"GavinSin":2,"-":19}}]
