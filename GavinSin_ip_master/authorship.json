[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"# Mira project template","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"3. After that, locate the `src/main/java/Mira.java` file, right-click it, and choose `Run Mira.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"GavinSin":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"    mainClass.set(\"mira.Mira\")","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    archiveBaseName \u003d \"mira\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"GavinSin":2,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"# Mira User Guide","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"GavinSin":1,"-":29}},{"path":"src/main/java/mira/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":" * Represents a Deadline task that needs to be completed by a specific date/time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    private final LocalDateTime by; // The deadline for the task","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    private final DateTimeFormatter DEFAULT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Deadline task with the specified description and deadline.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param by          The deadline by which the task must be completed.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"        this.by \u003d LocalDateTime.parse(by, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Deadline task with the specified description, deadline and isDone.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     * @param by          The deadline by which the task must be completed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @param isDone      The status of the deadline.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    public Deadline(String description, String by, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        this.by \u003d LocalDateTime.parse(by, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Return the string format of Deadline task to be saved for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @return A specified format string for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"        return \"D | \" + super.toFileString() + \" | \" + this.by.format(DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the Deadline task,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"     * including its type, status icon, description, and deadline.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[D]\", status icon, description, and deadline.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, h:mma\"))","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"                + \")\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":58}},{"path":"src/main/java/mira/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":" * Represents an Event task that starts and ends at specific date/times.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    private final LocalDateTime from; // The start datetime of the event","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    private final LocalDateTime to;   // The end datetime of the event","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final DateTimeFormatter DEFAULT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Event task with the specified description,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * start date/time, and end date/time.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * @param from        The start datetime of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @param to          The end datetime of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public Event(String description, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"        this.from \u003d LocalDateTime.parse(from, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"        this.to \u003d LocalDateTime.parse(to, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Event task with the specified description,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     * start date/time, and end date/time.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"     * @param from        The start date/time of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * @param to          The end date/time of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     * @param isDone      The status of the event.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"    public Event(String description, String from, String to, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"        this.from \u003d LocalDateTime.parse(from, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"        this.to \u003d LocalDateTime.parse(to, DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"     * Return the string format of Event task to be saved for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"     * @return A specified format string for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"        return \"E | \" + super.toFileString() + \" | \" + this.from.format(DEFAULT_FORMAT) +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"                \" | \" + this.to.format(DEFAULT_FORMAT);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the Event task,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"     * including its type, status icon, description, start and end date/times.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[E]\", status icon, description, start and end date/times.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, h:mma\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"        boolean isSameDay \u003d this.from.toLocalDate().isEqual(this.to.toLocalDate());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"        String endDateTime \u003d isSameDay ?","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"h:mma\")) // only show time","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"                : this.to.format(dateTimeFormatter);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"        String outputDateTime \u003d isSameDay ?","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"                \" (\" + this.from.format(dateTimeFormatter) + \"-\" + endDateTime + \")\"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"                : \" (from: \" + this.from.format(dateTimeFormatter) + \" to: \" + endDateTime + \")\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"        return \"[E]\" + super.toString() + outputDateTime;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":73}},{"path":"src/main/java/mira/Mira.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.command.Command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.command.ExitCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" * Mira is a simple chatbot that echoes user commands and exits when the user types \"bye\".","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":" * It interacts with the user via the Ui class, which handles input and output operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"public class Mira {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    private final Ui ui; // handle user interface","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    private final Storage storage; // storage for saving, loading tasks","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    private TaskList tasks; // Manages tasks","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    public Mira(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"        } catch (MiraException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"            ui.showMessage(\"Please make sure the directory has read and write permissions.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"            ui.showMessage(\"File path for storing of tasks is unusable.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     * Runs the chatbot, continuously reading user commands and responding until the user types \"bye\".","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * The chatbot echoes all commands and displays a goodbye message when exiting.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"    public void run() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"        // show welcome message with multiline text","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"        ui.showMessage(\"Hello! I\u0027m Mira\\nWhat can I do for you?\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        Command command \u003d null;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"        do {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"            try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"                // read user input until a newline is entered","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"                command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"                command.setTaskList(tasks);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"                String commandResult \u003d command.execute();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"                ui.showMessage(commandResult);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"                if (command instanceof Savable) { // if command is Savable","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"                    ((Savable) command).save(storage);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"            } catch (MiraException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"                ui.showMessage(\"Please provide a valid task number.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"                ui.showMessage(\"Please input a valid date: \u0027d/M/yyyy HHmm\u0027.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"                ui.showMessage(\"File path for storing of tasks is unusable.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"                ui.showMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"        } while (!ExitCommand.isExit(command));","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"     * The main method to start the Mira chatbot.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"        new Mira(\"./data/mira.txt\").run();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"GavinSin":76}},{"path":"src/main/java/mira/MiraException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents exceptions specific to the Mira chatbot.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class MiraException extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new MiraException with the specified detail message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    public MiraException(String message) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"        super(message);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":15}},{"path":"src/main/java/mira/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.command.Command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.command.DeadlineCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.command.DeleteCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import mira.command.EventCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import mira.command.ExitCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"import mira.command.ListCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"import mira.command.MarkCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"import mira.command.TodoCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"import mira.command.UnmarkCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"public class Parser {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    public static Command parse(String fullCommand) throws MiraException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2); // can only split one time","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        String command \u003d commandParts[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        String arguments \u003d commandParts.length \u003e 1 ? commandParts[1] : \"\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"        switch (command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"            case \"bye\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"            case \"list\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"                return new ListCommand();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"            case \"mark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"                int markIdx \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"                return new MarkCommand(markIdx);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"            case \"unmark\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"                int unmarkIdx \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"                return new UnmarkCommand(unmarkIdx);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"            case \"delete\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"                int deleteIdx \u003d Integer.parseInt(arguments);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"                return new DeleteCommand(deleteIdx);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"            case \"todo\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"                return new TodoCommand(arguments);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"            case \"deadline\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"                String[] deadlineParts \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"                if (deadlineParts.length !\u003d 2) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"                    throw new MiraException(\"Invalid format. Use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"                String deadlineDesc \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"                String by \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"                return new DeadlineCommand(deadlineDesc, by);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"            case \"event\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"                String[] eventParts \u003d arguments.split(\"/from|/to\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"                if (eventParts.length !\u003d 3) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"                    throw new MiraException(\"Invalid format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"                String eventDesc \u003d eventParts[0].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"                String from \u003d eventParts[1].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"                String to \u003d eventParts[2].trim();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"                return new EventCommand(eventDesc, from, to);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"            default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"                throw new MiraException(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":56}},{"path":"src/main/java/mira/Savable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * Represents an interface for commands that can be saved to storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public interface Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * Saves the command\u0027s state to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the command\u0027s state.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    void save(Storage storage) throws IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":16}},{"path":"src/main/java/mira/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.io.File;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"import java.util.List;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":" * Handles saving and loading tasks from a file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"public class Storage {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @param filePath The path to the file where tasks will be saved and loaded from.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * Appends a single task to the storage file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @param task The task to be saved to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    public void saveTask(Task task) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath, true)) { // Append mode","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"            writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * Saves a list of tasks to the storage file, overwriting any existing content.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     * @param tasks The list of tasks to be saved to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"            writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"        writer.close();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If an I/O error occurs during loading.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"     * @throws SecurityException If a permission error occurs during loading.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"     * @throws IllegalArgumentException If file content corrupts during loading.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"     * @throws MiraException If unsupported task type founds during loading.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, SecurityException, MiraException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"                Task task \u003d createTaskFromFile(parts);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"                tasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"        } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"            file.createNewFile();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"        return tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"GavinSin"},"content":"     * Creates a Task object from its string representation in the file.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"GavinSin"},"content":"     * @param parts The parts of the string split by \" | \".","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"GavinSin"},"content":"     * @return The corresponding Task object.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"GavinSin"},"content":"    private Task createTaskFromFile(String[] parts) throws MiraException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"GavinSin"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"GavinSin"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"GavinSin"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"GavinSin"},"content":"        switch (type) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"GavinSin"},"content":"            case \"T\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"GavinSin"},"content":"                return new Todo(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"GavinSin"},"content":"            case \"D\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"GavinSin"},"content":"                return new Deadline(description, parts[3], isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"GavinSin"},"content":"            case \"E\":","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"GavinSin"},"content":"                return new Event(description, parts[3], parts[4], isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"GavinSin"},"content":"            default:","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"GavinSin"},"content":"                throw new MiraException(\"Invalid task type in file\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":102}},{"path":"src/main/java/mira/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    private final String description;  // The task\u0027s description","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    private boolean isDone;            // Indicates if the task is completed","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Task with the specified description and isDone.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * @param status True to mark the task as done, false to mark it as not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     * Returns the status icon representing whether the task is done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"     * An \"X\" indicates the task is done; a space indicates it is not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"     * @return A string containing \"X\" if the task is done, otherwise a space.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"     * Return the string format of task to be saved for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"     * @return A specified format string for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the task, including its status icon.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s status icon followed by its description.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"GavinSin":69}},{"path":"src/main/java/mira/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * TaskList handles adding and listing of tasks.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public class TaskList {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"    private final ArrayList\u003cTask\u003e tasks; // Array to store tasks","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new TaskList with empty list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * Constructs a TaskList with the given list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @param tasks The list of tasks to be managed by this TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * Adds a new task to the list and displays a confirmation message.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to delete (1-based).","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        this.tasks.remove(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"     * Lists all the tasks currently stored in the task list.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"    public String listTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"        StringBuilder tasksList \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"            tasksList.append((i + 1)).append(\". \").append(tasks.get(i));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"            if (i \u003c tasks.size() - 1) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"                tasksList.append(\"\\n\"); // Add newline only if it is not the last task","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"        return tasksList.toString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"GavinSin"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to mark as done (1-based index).","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"GavinSin"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"GavinSin"},"content":"        this.tasks.get(index - 1).setStatus(true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"GavinSin"},"content":"     * Unmarks the specified task, setting it back to not done.","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to unmark (1-based index).","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"GavinSin"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"GavinSin"},"content":"        this.tasks.get(index - 1).setStatus(false);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"GavinSin"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to retrieve (1-based index).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"GavinSin"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"GavinSin"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 1 || index \u003e size()).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"GavinSin"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"GavinSin"},"content":"        return this.tasks.get(index - 1);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"GavinSin"},"content":"     * Returns the list of tasks managed by this mira.TaskList.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"GavinSin"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"GavinSin"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"GavinSin"},"content":"        return this.tasks;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"GavinSin"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"GavinSin"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"GavinSin"},"content":"    public int size() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"GavinSin"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"GavinSin":105}},{"path":"src/main/java/mira/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a ToDo task without any date or time attached to it.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Todo task with the specified description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * Constructs a new Todo task with the specified description and isDone.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @param isDone The status of the ToDo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        super(description, isDone);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * Return the string format of Todo task to be saved for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     * @return A specified format string for storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        return \"T | \" + super.toFileString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Returns a string representation of the ToDo task,","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * including its type, status icon, and description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     * @return The task\u0027s type \"[T]\", status icon, and description.","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":47}},{"path":"src/main/java/mira/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * Ui handles all user interface interactions for the Mira chatbot,","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" * including reading commands, and displaying messages.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"public class Ui {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * Scanner object to read user input from the console.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    public Ui() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * Reads a command from the user input.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     * Displays a message to the user within formatted lines.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        printLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"        System.out.println(message);","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"        printLine();","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * Prints a separator line used for formatting the Ui output.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    private void printLine() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"GavinSin":45}},{"path":"src/main/java/mira/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.TaskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":" * Represents an abstract command that can be executed.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":" * Subclasses should implement specific command behaviors by overriding the {@code execute} method.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     * Sets the {@code mira.TaskList} that this command will operate on.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * @param taskList The task list to be used by this command.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * Executes the command.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating the result of the command execution.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    public abstract String execute();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":27}},{"path":"src/main/java/mira/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.Deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" * Represents a command to add a deadline task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"public class DeadlineCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final Deadline deadline;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code mira.command.DeadlineCommand} with the specified description and due date.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     * @param by The due date of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    public DeadlineCommand(String description, String by) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"        this.deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by adding the deadline task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + deadline +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"                \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * Saves the deadline task to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the task to.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        storage.saveTask(deadline);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":47}},{"path":"src/main/java/mira/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Task;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"public class DeleteCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    private final int index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code mira.command.DeleteCommand} with the specified index.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by deleting the task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"        Task removedTask \u003d taskList.getTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + removedTask +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"                \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * Delete the specific task in storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to delete the task to.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":44}},{"path":"src/main/java/mira/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.Event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"public class EventCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    private final Event event;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code mira.command.EventCommand} with the specified description and due date.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * @param from The start date of the event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * @param to The end date of the event task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    public EventCommand(String description, String from, String to) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        this.event \u003d new Event(description, from, to);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by adding the event task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + event +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"                \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     * Saves the event task to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the task to.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"        storage.saveTask(event);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":45}},{"path":"src/main/java/mira/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"     * Executes the command to exit the application.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * @return An exit message.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * Checks whether the given command is an instance of {@code mira.command.ExitCommand}.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"     * @param command The command to check.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"     * @return {@code true} if the command is an {@code mira.command.ExitCommand}; {@code false} otherwise.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":26}},{"path":"src/main/java/mira/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by listing all tasks in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"     * @return A string representation of all tasks in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"        return taskList.listTasks();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":16}},{"path":"src/main/java/mira/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"public class MarkCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    private final int index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code mira.command.MarkCommand} with the specified index of the task to be marked.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to mark as done (1-based index).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by marking the specified task as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been marked as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        taskList.markTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.getTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * Saves the updated task list to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":44}},{"path":"src/main/java/mira/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import mira.Todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"public class TodoCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    private final Todo todo;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code mira.command.TodoCommand} with the specified description of the todo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"        this.todo \u003d new Todo(description);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by adding the todo task to the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been added.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + todo +","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"                \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * Saves the todo task to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the task to.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"        storage.saveTask(todo);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":46}},{"path":"src/main/java/mira/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.Savable;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import mira.Storage;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"/**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":" */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"public class UnmarkCommand extends Command implements Savable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    private final int index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"     * Constructs a {@code mira.command.UnmarkCommand} with the specified index of the task to be marked.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"     * @param index The index of the task to mark as undone (1-based index).","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"     * Executes the command by unmarking the specified task as done.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"     * @return A message indicating that the task has been marked as undone.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"    public String execute() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"        taskList.unmarkTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n  \" + taskList.getTask(index);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     * Saves the updated task list to the specified storage.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"     *","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"     * @param storage The storage to save the updated task list.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"     * @throws IOException If there is an error in file operations.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"    public void save(Storage storage) throws IOException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"GavinSin":44}},{"path":"src/test/java/mira/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * Tests that `parse` throws `NumberFormatException` when a non-integer is provided for commands","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     * like `mark`, `unmark`, and `delete`.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    public void testParseInt_throwsNumberFormatException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"            Parser.parse(\"mark abc\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"     * Tests that `parse` throws `MiraException` when an unknown command is provided.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    public void testParse_unknownCommand_throwsMiraException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"        MiraException exception \u003d assertThrows(MiraException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"            Parser.parse(\"unknownCommand\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"        assertEquals(\"I\u0027m sorry, I don\u0027t understand that command.\", exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"     * Tests that `parse` throws `MiraException` when the `deadline` command is provided without","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"     * the required `/by` format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"    public void testParse_deadlineWithoutBy_throwsMiraException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"        MiraException exception \u003d assertThrows(MiraException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"            Parser.parse(\"deadline submit assignment\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"        assertEquals(\"Invalid format. Use: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"     * Tests that `parse` throws `MiraException` when the `event` command is provided without","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"     * the required `/to` format.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"GavinSin"},"content":"    public void testParse_eventWithoutTo_throwsMiraException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"GavinSin"},"content":"        MiraException exception \u003d assertThrows(MiraException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"GavinSin"},"content":"            Parser.parse(\"event party /from Monday\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"GavinSin"},"content":"        assertEquals(\"Invalid format. Use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\",","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"GavinSin"},"content":"                exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":57}},{"path":"src/test/java/mira/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"public class StorageTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"./src/test/data/StorageTest\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"     * Test if createTaskFromFile throws MiraException with a specific message when unknown task type is found.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"    public void testCreateTaskFromFile_UnknownTaskType() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        String filePath \u003d TEST_DATA_FOLDER + \"/UnknownTaskTypeData.txt\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"        MiraException exception \u003d assertThrows(MiraException.class, () -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"            storage.loadTasks();;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"        });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"GavinSin"},"content":"        assertEquals(\"Invalid task type in file\", exception.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"GavinSin"},"content":"     * Test if createTaskFromFile successfully loads Todo, Deadline, and Event tasks.","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"GavinSin"},"content":"    public void testCreateTaskFromFile_SuccessfulLoad() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"GavinSin"},"content":"        String filePath \u003d TEST_DATA_FOLDER + \"/ValidData.txt\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"GavinSin"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"GavinSin"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"GavinSin"},"content":"            ArrayList\u003cTask\u003e tasks \u003d storage.loadTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"GavinSin"},"content":"            StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"GavinSin"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"GavinSin"},"content":"                result.append(task.toFileString()).append(\"\\n\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"GavinSin"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"GavinSin"},"content":"            assertEquals(\"T | 1 | read book\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"GavinSin"},"content":"                    \"D | 0 | return book | 6/6/2019 1800\\n\" +","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"GavinSin"},"content":"                    \"E | 0 | project meeting | 6/8/2019 1400 | 6/8/2019 1600\\n\", result.toString());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"GavinSin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"GavinSin"},"content":"            fail();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"GavinSin"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":47}},{"path":"src/test/java/mira/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"package mira.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"import mira.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"    /**","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"     * Tests that MarkCommand throws IndexOutOfBoundsException for an invalid index (0).","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"     */","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"    public void testMarkCommand_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"        MarkCommand command \u003d new MarkCommand(0); // 0 is out of bounds for 1-based index","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"        command.setTaskList(taskList);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"        assertThrows(IndexOutOfBoundsException.class, command::execute);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"GavinSin":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"GavinSin"},"content":"todo read book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"GavinSin"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"GavinSin"},"content":"deadline return book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"GavinSin"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Aug 6th 2pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"GavinSin"},"content":"join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"GavinSin"},"content":"todo join sports club","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"GavinSin"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"GavinSin"},"content":"unmark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"GavinSin"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"GavinSin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"GavinSin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"GavinSin"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"GavinSin"},"content":"bye","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"GavinSin":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"GavinSin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Mira\\Mira.java","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"GavinSin"},"content":"java -classpath ..\\bin mira.Mira \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"GavinSin":2,"-":19}}]
