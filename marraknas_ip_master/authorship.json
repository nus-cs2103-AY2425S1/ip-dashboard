[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"checkstyle {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"    mainClass.set(\"swbot.ui.Launcher\")","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"    archiveFileName \u003d \u0027swbot.jar\u0027","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":38,"marraknas":21}},{"path":"data/R2D2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"T | 0 | complete my 2103T assignment","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"D | 0 | submit Assignment 1 (2100)  | 12/9/2024 1300","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"E | 0 | event company get-together | 13/9/2024 1300 | 13/9/2024 2200","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"T | 0 | clean the house","lastModifiedDate":"2024-09-18","isFullCredit":false}],"authorContributionMap":{"marraknas":4}},{"path":"src/main/java/swbot/BuzzException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":" * The BuzzException class is a custom exception type used in the application to handle","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":" * specific error conditions related to the processing of tasks and user input.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":" * This exception is thrown when certain user inputs or operations do not conform to the expected format","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":" * or contain errors, such as incorrect date/time formatting in tasks.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"public class BuzzException extends Exception {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"    public BuzzException(String message) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"        super(message);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"marraknas":14}},{"path":"src/main/java/swbot/R2D2.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"import swbot.command.InputHandler;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"import swbot.command.Storage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":" * The R2D2 class represents a chatbot that processes user commands and maintains a list of tasks.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":" * It utilizes the Storage class for loading and saving tasks and the InputHandler class for processing commands.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"public class R2D2 {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"    private static final String FILE_PATH \u003d \"./data/R2D2.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"    private InputHandler c3po;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"     * Initializes a new R2D2 chatbot instance.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"     * Creates a Storage object for handling task persistence and","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"     * loads any existing tasks from the specified file path.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"     * Also initializes an InputHandler object for managing user input commands.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"    public R2D2() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e database \u003d storage.loadTasks();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"        this.c3po \u003d new InputHandler(database, storage);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"     * Processes the given user input and returns an appropriate response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"     * @param input the user input to be processed by the chatbot","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"     * @return the chatbot\u0027s response to the input","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"            response \u003d input.equals(\"bye\") ? \"Bye. Hope to see you again soon! *bzzzt*\\n\"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"                    : c3po.overallHandler(input);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"        } catch (BuzzException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"            response \u003d \" \" + e.getMessage() + \"\\n\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"        return response;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"marraknas":46}},{"path":"src/main/java/swbot/command/InputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.command;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"import swbot.BuzzException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Deadline;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Event;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Todo;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":" * A class that handles all the inputs given by the user and parses through them switching between","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":" * different commands from the user.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"public class InputHandler {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"    /* commands available in the chatbot */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"    private ArrayList\u003cTask\u003e data;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"     * Creates an inputHandler object that will take care of all the user inputs","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"     * @param data data to be sent to the output and where the chatbot stores the tasks","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"     * @param storage storage object which takes care of loading and saving tasks to the database","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"    public InputHandler(ArrayList\u003cTask\u003e data, Storage storage) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"        this.data \u003d data;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"     * Persists the current list of tasks to the storage medium.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"     * This method calls the `saveTasks` method from the `storage` object,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"     * which writes the tasks to an output file, ensuring that the task list","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"     * is saved and up-to-date.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"    private void saveTasks() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"        this.storage.saveTasks(data);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"     * Handles the majority of the user inputs through other functions in the InputHandler class","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"marraknas"},"content":"     * @param input user input that is being passed to the chatbot","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if any of the commands given by the user is not a valid one","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"marraknas"},"content":"    public String overallHandler(String input) throws BuzzException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"marraknas"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"marraknas"},"content":"        switch (command) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"marraknas"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"marraknas"},"content":"            saveTasks();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"marraknas"},"content":"            return this.markHandle(input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"marraknas"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"marraknas"},"content":"            saveTasks();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"marraknas"},"content":"            return this.unmarkHandle(input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"marraknas"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"marraknas"},"content":"            saveTasks();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"marraknas"},"content":"            return this.deleteHandle(input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"marraknas"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"marraknas"},"content":"            return getString();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"marraknas"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"marraknas"},"content":"            saveTasks();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"marraknas"},"content":"            return this.todoHandle(input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"marraknas"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"marraknas"},"content":"            saveTasks();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"marraknas"},"content":"            return this.deadlineHandle(input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"marraknas"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"marraknas"},"content":"            System.out.println(\"I AM HERE!\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"marraknas"},"content":"            saveTasks();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"marraknas"},"content":"            System.out.println(\"ALSO HERE?\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"marraknas"},"content":"            return this.eventHandle(input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"marraknas"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"marraknas"},"content":"            saveTasks();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"marraknas"},"content":"            return this.findHandle(input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"marraknas"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"marraknas"},"content":"            return this.helpHandle();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"marraknas"},"content":"        default:","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"GRRR! I do not know what that means. Try again! *bzzrg*\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"marraknas"},"content":"     * Generates a string representation of the tasks in the list, with each task preceded by its index.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"marraknas"},"content":"     * @return a formatted string of all tasks, each on a new line with an index.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"marraknas"},"content":"    private String getString() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"marraknas"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"marraknas"},"content":"        for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"marraknas"},"content":"            res.append((i + 1)).append(\".\").append(data.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"marraknas"},"content":"        return res.toString();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"marraknas"},"content":"     * Provides a help message showing the available commands for the chatbot.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"marraknas"},"content":"     * @return a string containing the help message with the list of available commands","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"marraknas"},"content":"    private String helpHandle() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"marraknas"},"content":"        return \"Welcome to the Help Page! Here are some commands you can use:\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"marraknas"},"content":"                + \"- list : To view all your tasks\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"marraknas"},"content":"                + \"- mark/unmark : To complete or unmark a task\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"marraknas"},"content":"                + \"- delete : To delete a task\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"marraknas"},"content":"                + \"- find : To find a task matching a keyword\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"marraknas"},"content":"                + \"- todo [task] : Add a todo task\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"marraknas"},"content":"                + \"- deadline [task] /by [date] : Add a task with a deadline\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"marraknas"},"content":"                + \"- event [task] /at [date] : Add an event\\n\"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"marraknas"},"content":"                + \"- help : Display this help page\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"marraknas"},"content":"     * Handles the \"mark\" command by parsing through it and ensuring that it is a valid index","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"marraknas"},"content":"     * @param input user input that is being passed to the chatbot","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if the index being asked to mark is out of range/ non existent","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"marraknas"},"content":"    public String markHandle(String input) throws BuzzException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"marraknas"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"marraknas"},"content":"        if (index \u003c 0 || index \u003e\u003d data.size()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"OOPS!!! The task doesn\u0027t exist *BEEP*\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"marraknas"},"content":"        data.get(index).setDone(true);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"marraknas"},"content":"        return \"Mission accomplished! *bzzt*\\n\" + data.get(index).toString();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"marraknas"},"content":"     * Handles the \"unmark\" command from the user and marks a task in the list as not done","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"marraknas"},"content":"     * @param input user input that is being passed to the chatbot","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if the index being asked to unmark is out of range/non-existent","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"marraknas"},"content":"    public String unmarkHandle(String input) throws BuzzException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"marraknas"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"marraknas"},"content":"        if (index \u003c 0 || index \u003e\u003d data.size()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"OOPS!!! The task doesn\u0027t exist *BEEP*\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"marraknas"},"content":"        data.get(index).setDone(false);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"marraknas"},"content":"        return \"Argh next time! *bzzt*\\n\" + data.get(index).toString();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"marraknas"},"content":"     * Handles the \"delete\" command from the user and deletes the specified task from the list","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"marraknas"},"content":"     * @param input user input that is being passed to the chatbot for deletion","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if the index being asked to delete is out of range or does not exist in the list","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"marraknas"},"content":"    public String deleteHandle(String input) throws BuzzException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"marraknas"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"marraknas"},"content":"        if (index \u003c 0 || index \u003e\u003d data.size()) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"OOPS!!! The task doesn\u0027t exist *BEEP*\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"marraknas"},"content":"        Task task \u003d data.remove(index);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"marraknas"},"content":"        return \"*POOF* Circuits fried! Deleted the mission.\\n\" + task.toString() + \"\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"marraknas"},"content":"                + \"You currently have \" + data.size() + \" missions available *reeeee*\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"marraknas"},"content":"     * Handles the \"todo\" type task from the user and adds it into the tasklist","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"marraknas"},"content":"     * @param input user input that is being passed to the chatbot to add to the list","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if the description of the task was not specified","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"marraknas"},"content":"    public String todoHandle(String input) throws BuzzException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"marraknas"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"NOOO! Description is empty *crash*\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"marraknas"},"content":"        Task task \u003d new Todo(input.substring(5));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"marraknas"},"content":"        data.add(task);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"marraknas"},"content":"        return \"Understood boss. Added!\\n\" + task.toString() + \"\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"marraknas"},"content":"                + \"You currently have \" + data.size() + \" missions available *reeeee*\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"marraknas"},"content":"     * Handles the addition of a \"deadline\" task into the list","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"marraknas"},"content":"     * @param input user input that is being passed to the chatbot to add as a deadline","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if the description of the deadline task is empty","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"marraknas"},"content":"    public String deadlineHandle(String input) throws BuzzException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"marraknas"},"content":"        String[] parts \u003d input.split(\"/by\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"marraknas"},"content":"        if (parts.length \u003c 2 || parts[0].length() \u003c\u003d 9) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"NOOO! Description is empty *crash*\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"marraknas"},"content":"        Task task \u003d new Deadline(parts[0].substring(9), parts[1].trim());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"marraknas"},"content":"        data.add(task);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"marraknas"},"content":"        return \"Understood boss. Added!\\n\" + task.toString() + \"\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"marraknas"},"content":"                + \"You currently have \" + data.size() + \" missions available *reeeee*\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"marraknas"},"content":"     * Handles the \"event\" task type and adds it into the list as an event","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"marraknas"},"content":"     * @param input user input that is being passed to the chatbot to add as an event","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if description of the event is empty","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"marraknas"},"content":"    public String eventHandle(String input) throws BuzzException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"marraknas"},"content":"        String[] parts \u003d input.split(\" /from | /to \");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"marraknas"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"Invalid event format. Correct format is: event description /from startTime \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"marraknas"},"content":"                    + \"/to endTime\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"marraknas"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"marraknas"},"content":"        String fromDateTime \u003d parts[1].trim();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"marraknas"},"content":"        String toDateTime \u003d parts[2].trim();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"marraknas"},"content":"        validate(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"marraknas"},"content":"        Task task \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"marraknas"},"content":"        data.add(task);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"marraknas"},"content":"        return \"Understood boss. Added!\\n\" + task.toString() + \"\\n\"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"marraknas"},"content":"                + \"You currently have \" + data.size() + \" missions available *reeeee*\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"marraknas"},"content":"     * Handles the find command by the user and tries to find the corresponding keyword.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"marraknas"},"content":"     * @param input user input provided to the chatbot","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if description is empty","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"marraknas"},"content":"    public String findHandle(String input) throws BuzzException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"marraknas"},"content":"        StringBuilder result \u003d new StringBuilder(\"I have found a few matches sir! *wooop*\\n\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"marraknas"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"NOOO! Description is empty *crash*\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"marraknas"},"content":"        String wordSearch \u003d input.substring(5).trim();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"marraknas"},"content":"        int tasks \u003d 1;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"marraknas"},"content":"        for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"marraknas"},"content":"            Task task \u003d data.get(i);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"marraknas"},"content":"            if (task.getDescription().contains(wordSearch)) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"marraknas"},"content":"                result.append(tasks).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"marraknas"},"content":"                tasks++;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"marraknas"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"marraknas"},"content":"        if (tasks \u003d\u003d 1) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"marraknas"},"content":"            return \"Sorry boss can\u0027t find anything :(\";","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"marraknas"},"content":"        return result.toString();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"marraknas"},"content":"     * Validates the description and time fields for an event.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"marraknas"},"content":"     * @param description the description of the event","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"marraknas"},"content":"     * @param fromDateTime the start date and time of the event","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"marraknas"},"content":"     * @param toDateTime the end date and time of the event","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if any of the provided fields are empty","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"marraknas"},"content":"    private void validate(String description, String fromDateTime, String toDateTime) throws BuzzException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"marraknas"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"marraknas"},"content":"        if (fromDateTime.isEmpty()) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"OOPS!!! The start time of an event cannot be empty.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"marraknas"},"content":"        if (toDateTime.isEmpty()) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"OOPS!!! The end time of an event cannot be empty.\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"marraknas":268}},{"path":"src/main/java/swbot/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.command;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"import java.io.File;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"import swbot.BuzzException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Deadline;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Event;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Todo;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":" * A class that takes care of loading and saving the tasks to the database of the chatbot","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":" * so that it can help remember what the user has added to the list in the form of an","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":" * output file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"public class Storage {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"    private String file;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"     * Creates a storage object that stores the file to be written and read upon by the chatbot","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"     * @param file file path that tells the program where to store the output task list","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"    public Storage(String file) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"     * Saves the tasks in the database to the output file and keeps track of it","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"     * @param database current list of tasks stored","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e database) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(this.file))) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"            for (Task task : database) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"                writer.println(task.toFileFormat());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"     * Loads the task into a database and then returns the new database","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"marraknas"},"content":"     * @return the new list of tasks after loading","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e database \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"marraknas"},"content":"        File file \u003d new File(this.file);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"marraknas"},"content":"        if (!file.exists() || file.length() \u003d\u003d 0) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"marraknas"},"content":"            return database;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"marraknas"},"content":"        File directory \u003d new File(file.getParent());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"marraknas"},"content":"        checkFile(file);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"marraknas"},"content":"        checkDirectory(directory);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"marraknas"},"content":"        loader(file, database);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"marraknas"},"content":"        return database;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"marraknas"},"content":"     * Checks if the file provided exists so that the loading of the tasks can be done","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"marraknas"},"content":"     * @param f File to load the tasks into","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"marraknas"},"content":"    private void checkFile(File f) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"marraknas"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"marraknas"},"content":"            try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"marraknas"},"content":"                f.createNewFile();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"marraknas"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"marraknas"},"content":"                System.out.println(\"ERROR: \" + e.getMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"marraknas"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"marraknas"},"content":"     * Checks if the file provided exists so that the loading of tasks can be done to","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"marraknas"},"content":"     * the directory","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"marraknas"},"content":"     * @param d File path provided for the directory","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"marraknas"},"content":"    private void checkDirectory(File d) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"marraknas"},"content":"        if (!d.exists()) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"marraknas"},"content":"            d.mkdirs();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"marraknas"},"content":"     * Loads the data collected from the user to the output file path","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"marraknas"},"content":"     * @param f File to store the data provided by the user","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"marraknas"},"content":"     * @param database to keep track of the tasks provided by the user","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"marraknas"},"content":"    private void loader(File f, ArrayList\u003cTask\u003e database) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"marraknas"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(this.file))) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"marraknas"},"content":"            String line \u003d \"\";","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"marraknas"},"content":"            fileParser(f, line, reader, database);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"marraknas"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"marraknas"},"content":"            System.out.println(\"ERROR: \" + e.getMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"marraknas"},"content":"     * Parses through the file and adds the tasks to the to do list in the output file","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"marraknas"},"content":"     * @param f File path to have the output to do list","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"marraknas"},"content":"     * @param line each line in the output file to read one by one","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"marraknas"},"content":"     * @param reader reads the next line as it goes","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"marraknas"},"content":"     * @param database to keep track of the tasks provided by the user","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"marraknas"},"content":"     * @throws IOException if the reading of the file has an issue","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"marraknas"},"content":"    private void fileParser(File f, String line, BufferedReader reader, ArrayList\u003cTask\u003e database)","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"marraknas"},"content":"            throws IOException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"marraknas"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"marraknas"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"marraknas"},"content":"            Task task \u003d null;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"marraknas"},"content":"            try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"marraknas"},"content":"                parserHandle(task, parts, database);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"marraknas"},"content":"            } catch (BuzzException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"marraknas"},"content":"                System.out.println(\"ERROR: \" + e.getMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"marraknas"},"content":"            }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"marraknas"},"content":"     * Handles the different types of commands provided by the user to load the","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"marraknas"},"content":"     * tasks afterward into the output file","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"marraknas"},"content":"     * @param task the current task being read by the program","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"marraknas"},"content":"     * @param parts breakdown of the text provided by the user","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"marraknas"},"content":"     * @param database to keep track of the tasks in the todo list currently","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if any of the creation of the tasks lead to an error regarding","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"marraknas"},"content":"     *                       descriptions and formatting","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"marraknas"},"content":"    private void parserHandle(Task task, String[] parts, ArrayList\u003cTask\u003e database) throws BuzzException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"marraknas"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"marraknas"},"content":"        case \"T\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"marraknas"},"content":"            task \u003d new Todo(parts[2]);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"marraknas"},"content":"            break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"marraknas"},"content":"        case \"D\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"marraknas"},"content":"            task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"marraknas"},"content":"            break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"marraknas"},"content":"        case \"E\":","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"marraknas"},"content":"            task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"marraknas"},"content":"            break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"marraknas"},"content":"        default:","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"marraknas"},"content":"            task \u003d task;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"marraknas"},"content":"            break;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"marraknas"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"marraknas"},"content":"            task.setDone(parts[1].equals(\"1\")); // Set the task\u0027s done status","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"marraknas"},"content":"            database.add(task); // Add task to the database","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"marraknas":162}},{"path":"src/main/java/swbot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.tasks;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"import swbot.BuzzException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":" * A type of task that lets the user create a deadline. A deadline task has","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":" * a date to finish by. It also has a description.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"    protected LocalDateTime date;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"     * Creates a deadline task with a description and takes in a date/time as a string and","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"     * parses through it, turning it into a LocalDateTime object to be stored.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"     * @param description name of the task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"     * @param date date to be completed by","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if formatting of the date string is wrong","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"    public Deadline(String description, String date) throws BuzzException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"        super(description);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"            this.date \u003d LocalDateTime.parse(date, dateTimeFormatter);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"WRONG!!! The date and time format should be d/M/yyyy HHmm \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"                    + \"(e.g., 5/10/2024 0500).\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"     * Returns a string in the readable format for the file that stores the tasklist","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"     * @return readable format for the date and time","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"                + this.date.format(dateTimeFormatter);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"marraknas"},"content":"     * Returns a string of the parsed date and time of the deadline event","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"marraknas"},"content":"     * @return string of the formatted date and time","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"marraknas"},"content":"    public String formatBy() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"marraknas"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"marraknas"},"content":"        return this.date.format(dateTimeFormatter);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"marraknas"},"content":"     * Returns a string describing the entire task with deadline date and time parsed","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"marraknas"},"content":"     * @return description and time for the task to be completed by","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"marraknas"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"marraknas"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"marraknas"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatBy() + \")\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"marraknas":65}},{"path":"src/main/java/swbot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.tasks;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"import swbot.BuzzException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":" * A type of task that lets the user create an event to plan for. An event task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":" * has a start date and an end date along with a description of what the event is.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"     * Creates an event task with description, startDate and an endDate","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"     * @param description describes the task to be done","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"     * @param startDate starting date of the event","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"     * @param endDate when the event ends","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"     * @throws BuzzException if the formatting of the date/time is wrong","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"    public Event(String description, String startDate, String endDate) throws BuzzException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"        super(description);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"            this.startDate \u003d LocalDateTime.parse(startDate, dateTimeFormatter);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"            this.endDate \u003d LocalDateTime.parse(endDate, dateTimeFormatter);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"            throw new BuzzException(\"WRONG!!! The date and time format should be d/M/yyyy HHmm \"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"                    + \"(e.g., 5/10/2024 0500).\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"     * Returns a string that is the readable format for the startDate","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"     * @return String that is in a readable format for the user","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"    public String formatStart() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"        return this.startDate.format(dateTimeFormatter);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"marraknas"},"content":"     * Returns a string that is the readable format for the endDate","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"     * @return String that is in a readable format for the user","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"marraknas"},"content":"    public String formatEnd() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"marraknas"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"        return this.endDate.format(dateTimeFormatter);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"marraknas"},"content":"     * Returns a string that is the date in a readable format for the output file.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"marraknas"},"content":"     * @return a full description of the task with readable format for the date","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"marraknas"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"marraknas"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"marraknas"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"marraknas"},"content":"                + this.startDate.format(dateTimeFormatter)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"marraknas"},"content":"                + \" | \" + this.endDate.format(dateTimeFormatter);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"marraknas"},"content":"     * Returns a string describing the entire task with the start and end specified","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"marraknas"},"content":"     * @return a description of the entire event task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"marraknas"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"marraknas"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"marraknas"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + formatStart() + \" to: \" + formatEnd() + \")\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"marraknas":78}},{"path":"src/main/java/swbot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.tasks;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":" * An abstract class that has methods that the inherited classes use.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":" * Event, Deadline and Todo are types of tasks that inherit from this","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":" * class.","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"    private String description;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"    private boolean isDone;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"     * Creates a task object that contains the description of the task itself","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"     * @param description description of the task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"     * Returns the status of the task (done/not done)","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"     * @return a string that represents if the task is done or not","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"     * Sets the status of the task to either done or not done","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"     * @param setter true or false based on what status to set for the task","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"    public void setDone(boolean setter) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"        this.isDone \u003d setter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"     * Converts the task object to a string format suitable for file storage.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"     * @return a string representing the task in a format that can be saved to a file","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"marraknas"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"     * @return a string representing the description of the task","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"marraknas"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"marraknas"},"content":"        return description;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"marraknas"},"content":"     * Indicates whether the task is completed.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"marraknas"},"content":"     * @return true if the task is completed, false otherwise.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"marraknas"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"marraknas"},"content":"        return isDone;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"marraknas"},"content":"     * Returns a string representing the task along with its status","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"marraknas"},"content":"     * @return string that shows if the task is done or not along with its description","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"marraknas"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"marraknas"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"marraknas"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"marraknas":74}},{"path":"src/main/java/swbot/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.tasks;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":" * Represents a Todo task which inherits from the Task class.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":" * A Todo is a task that does not have any specific date/time associated with it.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"     * Creates a Todo object that represents a task without any specific date/time associated with it.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"     * @param description description of the task","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"        super(description);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"     * Converts the Todo task to a specific file format.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"     * @return a formatted string representing the Todo task, including its type,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"     *         completion status, and description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"     * The string includes the type of task ([T]) along with","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"     * its status and description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"     * @return a string that represents the Todo task showing its type,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"     *         completion status, and description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"    public String toString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"marraknas":40}},{"path":"src/main/java/swbot/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"    @FXML","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"    @FXML","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"     * Initializes a DialogBox with the specified text and image.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"     * @param text the text to be displayed in the dialog box","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"     * @param img the image to be displayed in the dialog box","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"marraknas"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"    private void flip() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"marraknas"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"marraknas"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"marraknas"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"marraknas"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"marraknas"},"content":"     * Creates a DialogBox instance representing the user\u0027s dialog.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"marraknas"},"content":"     * @param text the text to be displayed in the dialog box","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"marraknas"},"content":"     * @param img the image to be displayed in the dialog box","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"marraknas"},"content":"     * @return a new DialogBox instance containing the provided text and image","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"marraknas"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"marraknas"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"marraknas"},"content":"     * Creates and returns a dialog box for Duke with the specified text and image.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"marraknas"},"content":"     * The dialog box is flipped such that the image appears on the left side.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"marraknas"},"content":"     * @param text the text to be displayed in the dialog box","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"marraknas"},"content":"     * @param img the image to be displayed in the dialog box","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"marraknas"},"content":"     * @return a DialogBox object designed for Duke\u0027s responses","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"marraknas"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"marraknas"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"marraknas"},"content":"        db.flip();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"marraknas"},"content":"        return db;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"marraknas":82}},{"path":"src/main/java/swbot/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"public class Launcher {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"     * The entry point of the application.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"     * This main method serves as a workaround to launch the JavaFX application.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"     * @param args the command line arguments passed to this application. These arguments are forwarded","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"     *             to the JavaFX Application launch method.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"marraknas":21}},{"path":"src/main/java/swbot/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"import swbot.R2D2;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":" * A GUI for R2D2 using FXML.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"    private R2D2 r2d2 \u003d new R2D2();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"     * Initializes and displays the main window of the application.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"     *              the application scene can be set","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"    @Override","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"        try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setR2D2(r2d2);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"            stage.show();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"marraknas":40}},{"path":"src/main/java/swbot/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot.ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"import swbot.R2D2;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"/**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":" */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"    @FXML","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"    @FXML","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"    @FXML","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"    @FXML","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"    private R2D2 r2d2;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Luke.png\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"    private Image r2d2Image \u003d new Image(this.getClass().getResourceAsStream(\"/images/r2d2.png\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"     * Initializes the main window by setting up the necessary bindings.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"     * Specifically, binds the vertical scroll value of the scroll pane","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"     * to the height property of the dialog container. This ensures that","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"     * the scroll pane scrolls to the bottom whenever new content is added","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"     * to the dialog container.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"    @FXML","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"    /** Injects the R2D2 instance */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"    public void setR2D2(R2D2 r) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"        r2d2 \u003d r;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"marraknas"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing R2D2\u0027s reply and then appends them to","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"marraknas"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"marraknas"},"content":"    @FXML","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"marraknas"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"marraknas"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"        String response \u003d r2d2.getResponse(input);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"marraknas"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"marraknas"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"marraknas"},"content":"                DialogBox.getDukeDialog(response, r2d2Image)","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"marraknas"},"content":"        );","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"marraknas"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"marraknas":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"                \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"                \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"marraknas":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"swbot.ui.MainWindow\"\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-11","isFullCredit":false}],"authorContributionMap":{"marraknas":19}},{"path":"src/test/java/swbot/SwbotTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"package swbot;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"marraknas"},"content":"import java.io.File;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"marraknas"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"marraknas"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"marraknas"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"marraknas"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"marraknas"},"content":"import swbot.command.InputHandler;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"marraknas"},"content":"import swbot.command.Storage;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Deadline;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Event;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"marraknas"},"content":"import swbot.tasks.Todo;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"marraknas"},"content":"public class SwbotTest {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"marraknas"},"content":"    public void mark_task_success() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"marraknas"},"content":"        Task task \u003d new Todo(\"test task\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"marraknas"},"content":"        task.setDone(true);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"marraknas"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"marraknas"},"content":"    public void deadline_dateTime_exceptionThrown() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"marraknas"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"marraknas"},"content":"            Task task \u003d new Deadline(\"do homework\", \"2 12 2004\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"marraknas"},"content":"        } catch (BuzzException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"marraknas"},"content":"            assertEquals(\"WRONG!!! The date and time format should be d/M/yyyy HHmm (e.g., 5/10/2024 0500).\",","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"marraknas"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"marraknas"},"content":"    public void deleteHandleTest_taskNotExist_throwsException() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"marraknas"},"content":"        Storage storage \u003d new Storage(\"/path/to/storage\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"marraknas"},"content":"        InputHandler inputHandler \u003d new InputHandler(data, storage);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"marraknas"},"content":"        String input \u003d \"delete 2\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"marraknas"},"content":"        assertThrows(BuzzException.class, () -\u003e inputHandler.deleteHandle(input));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"marraknas"},"content":"    public void deleteHandleTest_validInput_taskDeleted() throws BuzzException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Test todo\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"marraknas"},"content":"        Storage storage \u003d new Storage(\"/path/to/storage\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"marraknas"},"content":"        InputHandler inputHandler \u003d new InputHandler(data, storage);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"marraknas"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"marraknas"},"content":"        String expectedOutput \u003d \"*POOF* Circuits fried! Deleted the mission.\\n\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"marraknas"},"content":"                + \"[T][ ] Test todo\\n\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"marraknas"},"content":"                + \"You currently have 0 missions available *reeeee*\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"marraknas"},"content":"        assertEquals(expectedOutput, inputHandler.deleteHandle(input));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"marraknas"},"content":"    public void deleteHandleTest_negativeIndex_throwsException() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Test todo\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"marraknas"},"content":"        Storage storage \u003d new Storage(\"/path/to/storage\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"marraknas"},"content":"        InputHandler inputHandler \u003d new InputHandler(data, storage);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"marraknas"},"content":"        String input \u003d \"delete -1\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"marraknas"},"content":"        assertThrows(BuzzException.class, () -\u003e inputHandler.deleteHandle(input));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"marraknas"},"content":"    void testLoadTasks_emptyFile() throws IOException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"marraknas"},"content":"        PrintWriter writer \u003d new PrintWriter(\"emptyFile.txt\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"marraknas"},"content":"        writer.print(\"\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"marraknas"},"content":"        writer.close();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"marraknas"},"content":"        Storage storage \u003d new Storage(\"emptyFile.txt\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.loadTasks();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"marraknas"},"content":"        assertTrue(tasks.isEmpty());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"marraknas"},"content":"        // cleanup","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"marraknas"},"content":"        File file \u003d new File(\"emptyFile.txt\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"marraknas"},"content":"        file.delete();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"marraknas"},"content":"    public void toFileFormat_notDone_success() throws BuzzException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"marraknas"},"content":"        Event e \u003d new Event(\"Test Task\", \"5/10/2024 0500\", \"6/10/2024 1200\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"marraknas"},"content":"        assertEquals(\"E | 0 | Test Task | 5/10/2024 0500 | 6/10/2024 1200\", e.toFileFormat());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"marraknas"},"content":"    /**","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"marraknas"},"content":"     * This test checks if the method toFileFormat() correctly formats a string for an event task that is already done.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"marraknas"},"content":"     */","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"marraknas"},"content":"    public void toFileFormat_done_success() throws BuzzException {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"marraknas"},"content":"        Event e \u003d new Event(\"Test Task\", \"5/10/2024 0500\", \"6/10/2024 1200\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"marraknas"},"content":"        e.setDone(true);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"marraknas"},"content":"        assertEquals(\"E | 1 | Test Task | 5/10/2024 0500 | 6/10/2024 1200\", e.toFileFormat());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"marraknas"},"content":"    public void testGetResponseByeInput() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"marraknas"},"content":"        R2D2 bot \u003d new R2D2();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"marraknas"},"content":"        String response \u003d bot.getResponse(\"bye\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"marraknas"},"content":"        assertEquals(\"Bye. Hope to see you again soon! *bzzzt*\\n\", response);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"marraknas"},"content":"    public void testFindHandle_withNoMatchingTasks_returnsNoResultsErrorMessage() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Test task 1\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Test task 2\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Test task 3\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"marraknas"},"content":"        Storage storage \u003d new Storage(\"filePath\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"marraknas"},"content":"        InputHandler handler \u003d new InputHandler(data, storage);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"marraknas"},"content":"        String input \u003d \"find noMatch\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"marraknas"},"content":"        String expectedOutput \u003d \"Sorry boss can\u0027t find anything :(\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"marraknas"},"content":"        try {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"marraknas"},"content":"            String result \u003d handler.findHandle(input);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"marraknas"},"content":"            assertEquals(expectedOutput, result);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"marraknas"},"content":"        } catch (BuzzException e) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"marraknas"},"content":"            fail(\"Unexpected exception thrown: \" + e.getMessage());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"marraknas"},"content":"    public void testFindHandle_withMatchingTasks_returnsMatchedTasks() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Test task 1\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Test task 2\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Matched task\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"marraknas"},"content":"        Storage storage \u003d new Storage(\"filePath\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"marraknas"},"content":"        InputHandler handler \u003d new InputHandler(data, storage);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"marraknas"},"content":"        String input \u003d \"find Matched\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"marraknas"},"content":"        String expectedOutput \u003d \"I have found a few matches sir! *wooop*\\n1.[T][ ] Matched task\\n\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"marraknas"},"content":"        try {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"marraknas"},"content":"            String result \u003d handler.findHandle(input);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"marraknas"},"content":"            assertEquals(expectedOutput, result);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"marraknas"},"content":"        } catch (BuzzException e) {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"marraknas"},"content":"            fail(\"Unexpected exception thrown: \" + e.getMessage());","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"marraknas"},"content":"        }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"marraknas"},"content":"    public void testFindHandle_withEmptyDescription_throwsBuzzException() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"marraknas"},"content":"        data.add(new Todo(\"Test task 1\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"marraknas"},"content":"        Storage storage \u003d new Storage(\"filePath\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"marraknas"},"content":"        InputHandler handler \u003d new InputHandler(data, storage);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"marraknas"},"content":"        String input \u003d \"find \";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"marraknas"},"content":"        assertThrows(BuzzException.class, () -\u003e handler.findHandle(input),","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"marraknas"},"content":"                \"NOOO! Description is empty *crash*\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"marraknas"},"content":"    public void testMarkHandle_taskIndexOutOfRange() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"marraknas"},"content":"        Task task \u003d new Todo(\"do something\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"marraknas"},"content":"        data.add(task);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"marraknas"},"content":"        Storage mockStorage \u003d new Storage(\"mockfilePath\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"marraknas"},"content":"        InputHandler inputHandler \u003d new InputHandler(data, mockStorage);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"marraknas"},"content":"        assertThrows(BuzzException.class, () -\u003e inputHandler.markHandle(\"mark 2\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"marraknas"},"content":"    @Test","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"marraknas"},"content":"    public void testMarkHandle_invalidInput() {","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"marraknas"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"marraknas"},"content":"        Task task \u003d new Todo(\"do something\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"marraknas"},"content":"        data.add(task);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"marraknas"},"content":"        Storage mockStorage \u003d new Storage(\"mockfilePath\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"marraknas"},"content":"        InputHandler inputHandler \u003d new InputHandler(data, mockStorage);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"marraknas"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"marraknas"},"content":"        assertThrows(NumberFormatException.class, () -\u003e inputHandler.markHandle(\"mark invalidInput\"));","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"marraknas"},"content":"    }","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"marraknas"},"content":"}","lastModifiedDate":"2024-09-05","isFullCredit":false}],"authorContributionMap":{"marraknas":192}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marraknas"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"marraknas"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"marraknas"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"marraknas"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"marraknas"},"content":"todo watch movie","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"marraknas"},"content":"deadline finish homework /by Monday","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"marraknas":6}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"marraknas"},"content":"java -classpath ../bin R2D2 \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"-":37,"marraknas":1}}]
