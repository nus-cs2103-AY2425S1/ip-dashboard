[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"# Brock project template","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Brawl Stars character _Brock_. Given below are instructions on how to use it.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"## Quick Start","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"1. Ensure your device has Java `17` or above installed.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"2. Download the `.jar` file from [here](https://github.com/YangQF2002/ip/releases/tag/A-Release) ","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"3. Copy the `.jar` file to the folder you wish to use as the home folder for your chatbot.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"4. Open a command terminal, `cd` into the folder that the `.jar` file is located in.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"5. Type `java -jar brock.jar` to run the chatbot!","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"YangQF2002":8,"-":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"    mainClass.set(\"core/Launcher\")","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"    archiveBaseName \u003d \"brock\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    archiveFileName \u003d \"brock.jar\"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"checkstyle {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"YangQF2002":26,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"# Brock User Guide","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"![Screenshot of Brock chatbot](Ui.png) ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"Brock is a slightly unhinged chatbot, developed by a slightly unhinged individual. ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"It allows the user to effectively manage their tasks! ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"## Quick Start","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"1. Ensure your device has Java `17` or above installed.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"2. Download the `.jar` file from [here](https://github.com/YangQF2002/ip/releases/tag/A-Release) ","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"3. Copy the `.jar` file to the folder you wish to use as the home folder for your chatbot.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"4. Open a command terminal, `cd` into the folder that the `.jar` file is located in.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"5. Type `java -jar brock.jar` to run the chatbot!","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"## Features ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"### Add a todo task: `todo`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"Adds a new todo task that the chatbot tracks.  ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"Format: `todo \u003cdescription\u003e`  ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"Example: `todo borrow book`  ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"### Add a deadline task: `deadline`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"Adds a new deadline task that the chatbot tracks.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdue-date\u003e \u003c?due-time\u003e`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"- Due time is optional","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"- Due date must be in yyyy-mm-dd format","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"- Due date must not be before today","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"- Due time must be in 24hr format","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"Example: `deadline return book /by 2024-10-10 2300`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"### Add an event task: `event`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"Adds a new event task that the chatbot tracks.   ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"Format: `event \u003cdescription\u003e /from \u003cstart-date\u003e \u003c?start-time\u003e /to \u003cend-date\u003e \u003c?end-time\u003e`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"- Same general restrictions to date and time as `deadline` command","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"Example: `event Japan trip! /from 2024-10-10 /to 2024-10-20`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"### Mark a task as complete: `mark`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"Marks the specified task as being complete.  ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"Format: `mark \u003ctask-number\u003e`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"- The task number specified must exist ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"Example: `mark 1`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"### Un-mark a task as uncompleted: `unmark`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"Unmarks the specified task as being uncomplete.   ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"Format: `unmark \u003ctask-number\u003e`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"- The task number specified must exist ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"### List all existing tasks: `list`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"Lists all current tasks.   ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"Format: `list`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"- No additional parameters","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"Example: `list`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"### Find all matching tasks: `find`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"Finds and shows all tasks whose description contains the specified keyword.  ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"- Currently, only a single keyword is supported","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"- Description must contain that exact keyword (instead of partial substrings) ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"Example: `find borrow`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"### Delete an existing task: `delete`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"Deletes an existing task, meaning its no longer tracked by the chatbot.  ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"Format: `delete \u003ctask-number\u003e`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"- The task number specified must exist ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"Example: `delete 1`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"### Undo command: `undo`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"Undoes the previous valid command, if possible.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"As certain commands like `list` and `find` for example can\u0027t really be undone.   ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"Format: `undo`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"- No additional parameters","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"Example: `undo`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"### Exiting the chatbot: `bye`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"Exits the chatbot. No worries, your existing tasks will be saved!   ","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"Format: `bye`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"- No additional parameters","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"Example: `bye`","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"YangQF2002":76,"-":14}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":" * Represents a bye command entered by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with bye command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"    public ByeCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        return \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"                + \"Program will close now ...\"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot returns bye message and terminates.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"        return \"bye\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":45}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.util.Random;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" * Abstract class that defines a template for user commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    private static final String[] quirkyResponses \u003d {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"        \"\\nHEHEHEHA!\",","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"        \"\\nOH MAH GAWD!\",","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"        \"\\nBING CHILLING!\",","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"        \"\\nZHONG XINA!\",","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"        \"\\nAMAZING OwO!\",","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        \"\\nGOOD JOB OwO!\",","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        \"\\nLAO GAN MA!\"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    };","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    private final String command;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with user commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    protected Command(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"     * Breaks the command string down into words.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"     * @return Command words.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"    protected String[] processCommand() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"        return this.command.split(\" \");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     * Fetches the stored command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     * To be examined within the user command subclass.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     * @return Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"    protected String getCommand() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"        return this.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     * Runs the user command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage {@code TaskStorage} object that creates and interfaces with save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"     * @param tempStorage {@code TempStorage} object that stores info required to undo previous valid command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks {@code TaskList} object that stores the current tasks in an {@code ArrayList}.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"     * @return Response string after executing the command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If there are any issues with running the command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"    public abstract String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"            throws BrockException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"     * Gets the type associated with the command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     * @return Command type.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"    public abstract String getCommandType();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"     * Gets a randomly selected quirky response.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"     *      To append to back of generated response for each command.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     * @return Quirky response selected.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"    public String getQuirkyResponse() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        int randomIndex \u003d random.nextInt(quirkyResponses.length);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"        return quirkyResponses[randomIndex];","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":84}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.Deadline;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import utility.CommandUtility;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" * Represents a deadline command entered by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with deadline command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    public DeadlineCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * Gets the command description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWords Command words from which to extract description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     * @return Command description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If description is missing.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    private String getDescription(String[] commandWords) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        int commandLength \u003d commandWords.length;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        for (int i \u003d 1; i \u003c commandLength; i++) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"            if (commandWords[i].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"                break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"            description.append(commandWords[i])","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"                    .append(\" \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Description is missing!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        return description.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     * Gets the due datetime for deadline command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWords Command words from which to extract due datetime.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     * @return Due datetime.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If due datetime is missing.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"    private String getDueDateTime(String[] commandWords) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder dateTime \u003d new StringBuilder();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"        boolean isSeeingDateTime \u003d false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"        for (String word : commandWords) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"            if (isSeeingDateTime) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"                dateTime.append(word)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"                        .append(\" \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"            if (word.equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"                isSeeingDateTime \u003d true;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"        if (dateTime.isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Missing due date! Remember it is specified after /by!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"        return dateTime.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"     * Creates a {@code Deadline} object encapsulating details about the deadline task.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     * @return {@code Deadline} object.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If deadline missing description or due date.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"    private Task createDeadline() throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        String[] commandWords \u003d this.processCommand();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"        String description \u003d this.getDescription(commandWords);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"        String dueDateTime \u003d this.getDueDateTime(commandWords);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        String[] dateTimeValues \u003d CommandUtility.validateDateTime(dueDateTime,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"                CommandUtility.Context.DUE);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"        if (dateTimeValues.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"            return new Deadline(description,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"                    dateTimeValues[0]);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"            return new Deadline(description,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"                    dateTimeValues[0],","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"                    dateTimeValues[1]);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"     * Updates the save file with the deadline task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage Instance that interfaces with save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"     * @param deadlineTask Deadline task to be added to save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If writing to file fails.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"    private void updateSaveFile(TaskStorage taskStorage, TaskList tasks, Task deadlineTask) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(tasks.numTasks() + \". \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"                        + tasks.getTaskDetails(deadlineTask) + \u0027\\n\u0027,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"                true);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"     * Gets the chatbot response to deadline command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YangQF2002"},"content":"     * @param deadlineTask Deadline task created.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(TaskList tasks, Task deadlineTask) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YangQF2002"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YangQF2002"},"content":"                + \"  \" + tasks.getTaskDetails(deadlineTask) + \u0027\\n\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YangQF2002"},"content":"                + tasks.getTasksSummary()","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot checks if deadline command is valid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YangQF2002"},"content":"     * If so, it creates a {@code Deadlines} object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YangQF2002"},"content":"     * Adds it to {@code tasks}, writes it to save file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YangQF2002"},"content":"     * Returns a response indicating it has added the deadline task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If deadline command is invalid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YangQF2002"},"content":"        Task deadlineTask \u003d this.createDeadline();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YangQF2002"},"content":"        tasks.addToList(deadlineTask);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YangQF2002"},"content":"        tempStorage.setLastCreatedTaskNum(tasks.numTasks());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YangQF2002"},"content":"        this.updateSaveFile(taskStorage, tasks, deadlineTask);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(tasks, deadlineTask);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YangQF2002"},"content":"        return \"deadline\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":154}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import utility.CommandUtility;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" * Represents a delete command entered by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with delete command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the delete command is valid.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If command is missing a task number, has a wrong task number.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     *      Or, it is in the wrong format altogether.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"    private void validateDelete(TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        String[] commandWords \u003d this.processCommand();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        CommandUtility.validateLength(commandWords, \"Delete \");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        CommandUtility.validateTaskNumber(commandWords, tasks);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"     * Removes the deleted task from save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage Instance that interfaces with save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If writing to file fails.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"    private void updateSaveFile(TaskStorage taskStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        String remainingTasks \u003d tasks.listTasks();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(\"\", false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(remainingTasks, true);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     * Gets the chatbot response to delete command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     * @param deletedTaskDetails Details of the deleted task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(TaskList tasks, String deletedTaskDetails) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"                + \"  \" + deletedTaskDetails + \u0027\\n\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"                + tasks.getTasksSummary()","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot checks if delete command is valid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     * If so, it deletes the corresponding task from {@code tasks}, updates the save file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     * As well as return a response indicating successful deletion.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If delete command is invalid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"        this.validateDelete(tasks);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"        String command \u003d super.getCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"        int taskIndex \u003d CommandUtility.getTaskIndex(command);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"        Task deletedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        String deletedTaskDetails \u003d tasks.getTaskDetails(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"        tasks.removeFromList(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"        tempStorage.setLastDeletedTask(deletedTask);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        this.updateSaveFile(taskStorage, tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(tasks, deletedTaskDetails);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"        return \"delete\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":96}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.Event;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import utility.CommandUtility;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" * Represents an event command entered by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with event command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    public EventCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * Gets the command description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWords Command words from which to extract description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     * @return Command description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If description is missing.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    private String getDescription(String[] commandWords) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        int commandLength \u003d commandWords.length;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        for (int i \u003d 1; i \u003c commandLength; i++) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"            if (commandWords[i].equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"                break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"            description.append(commandWords[i])","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"                    .append(\" \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Description is missing!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        return description.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     * Checks the start datetime and end datetime.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     * @param startDateTime Start datetime to be checked.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     * @param endDateTime End datetime to be checked.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If check fails.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"    private void validateDateTimes(String startDateTime, String endDateTime) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"        if (startDateTime.isEmpty()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Missing start date! Remember it is specified after /from!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"        if (endDateTime.isEmpty()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Missing end date! Remember it is specified after /to!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        if (this.countWords(startDateTime) !\u003d this.countWords(endDateTime)) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Both start and end dates must either include or exclude a time!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     * Counts the number of words for each dateTime string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     * @param dateTime DateTime string of interest.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"     * @return Number of words.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"    private int countWords(String dateTime) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"        return dateTime.isEmpty() ? 0 : dateTime.split(\"\\\\s+\").length;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     * Gets the start dateTime and end dateTime values.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWords Command from which to extract values.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"     * @return Start and end values.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If validation of values fail.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"    private String[] getStartEndDateTimes(String[] commandWords) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder startDateTime \u003d new StringBuilder();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder endDateTime \u003d new StringBuilder();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"        boolean isSeeingStartDateTime \u003d false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"        boolean isSeeingEndDateTime \u003d false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"        for (String word : commandWords) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"            if (word.equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"                isSeeingStartDateTime \u003d true;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"                continue;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"            if (word.equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"                isSeeingStartDateTime \u003d false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"                isSeeingEndDateTime \u003d true;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"                continue;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"            if (isSeeingStartDateTime) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"                startDateTime.append(word)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"                        .append(\" \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"            if (isSeeingEndDateTime) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"                endDateTime.append(word)","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"                        .append(\" \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"        this.validateDateTimes(startDateTime.toString(),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"                endDateTime.toString());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"        return new String[]{startDateTime.toString(),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"                endDateTime.toString()};","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YangQF2002"},"content":"     * Creates an {@code Event} object encapsulating details about the event task.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YangQF2002"},"content":"     * @return {@code Event} object.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If event missing description, start date or end date.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YangQF2002"},"content":"     *      Or, if start and end dates are invalid.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YangQF2002"},"content":"    private Task createEvent() throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YangQF2002"},"content":"        String[] commandWords \u003d this.processCommand();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YangQF2002"},"content":"        String description \u003d this.getDescription(commandWords);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YangQF2002"},"content":"        String[] startEndDateTimes \u003d this.getStartEndDateTimes(commandWords);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YangQF2002"},"content":"        String[] startValues \u003d CommandUtility.validateDateTime(startEndDateTimes[0],","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YangQF2002"},"content":"                CommandUtility.Context.START);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YangQF2002"},"content":"        String[] endValues \u003d CommandUtility.validateDateTime(startEndDateTimes[1],","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YangQF2002"},"content":"                CommandUtility.Context.END);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YangQF2002"},"content":"        assert startValues.length \u003d\u003d endValues.length : \"Both start and end values must be of the same length.\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YangQF2002"},"content":"        if (startValues.length \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YangQF2002"},"content":"            return new Event(description,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YangQF2002"},"content":"                    startValues[0],","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YangQF2002"},"content":"                    endValues[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YangQF2002"},"content":"            return new Event(description,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YangQF2002"},"content":"                    startValues[0],","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YangQF2002"},"content":"                    startValues[1],","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YangQF2002"},"content":"                    endValues[0],","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YangQF2002"},"content":"                    endValues[1]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YangQF2002"},"content":"     * Updates save file with event task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage Instance that interfaces with save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YangQF2002"},"content":"     * @param eventTask Event task to be added to save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If writing to save file fails.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YangQF2002"},"content":"    private void updateSaveFile(TaskStorage taskStorage, TaskList tasks, Task eventTask) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(tasks.numTasks() + \". \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YangQF2002"},"content":"                        + tasks.getTaskDetails(eventTask) + \u0027\\n\u0027,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YangQF2002"},"content":"                true);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YangQF2002"},"content":"     * Gets chatbot response to event command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YangQF2002"},"content":"     * @param eventTask Event task created.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(TaskList tasks, Task eventTask) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YangQF2002"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YangQF2002"},"content":"                + \"  \" + tasks.getTaskDetails(eventTask) + \u0027\\n\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YangQF2002"},"content":"                + tasks.getTasksSummary()","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot checks if event command is valid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YangQF2002"},"content":"     * If so, it creates a {@code Event} object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YangQF2002"},"content":"     * Adds it to {@code tasks}, writes it to save file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YangQF2002"},"content":"     * Returns a response indicating it has added the event task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If event command is invalid","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YangQF2002"},"content":"        Task eventTask \u003d this.createEvent();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YangQF2002"},"content":"        tasks.addToList(eventTask);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YangQF2002"},"content":"        tempStorage.setLastCreatedTaskNum(tasks.numTasks());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YangQF2002"},"content":"        this.updateSaveFile(taskStorage, tasks, eventTask);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(tasks, eventTask);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YangQF2002"},"content":"        return \"event\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":202}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":" * Represents a find command entered by the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with find command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     * Checks the find command for a keyword.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWords Find command to be checked.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * @return Keyword, if any.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If keyword not found, or multiple keywords found.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    private String checkKeyword(String[] commandWords) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        int commandLength \u003d commandWords.length;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        if (commandLength \u003d\u003d 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Missing keyword!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        if (commandLength \u003e 2) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Please only specify a single keyword!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        return commandWords[1];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the find command is valid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"     * @return Keyword if its valid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If it is missing a keyword or has multiple keywords.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"    private String validateFindCommand() throws BrockException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"        String[] commandWords \u003d this.processCommand();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"        return this.checkKeyword(commandWords);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     * Gets the chatbot response to the find command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     * @param findResult Result of the find command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(String[] findResult) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"        String resultString \u003d findResult[0];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"        int numMatching \u003d Integer.parseInt(findResult[1]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"        String responseHeader \u003d numMatching \u003d\u003d 1","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"                ? \"Here is the matching task in your list:\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"                : \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"        String responseBody \u003d numMatching \u003d\u003d 0","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"                ? \"No matching tasks!\\n\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"                : resultString;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"        return responseHeader","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"                + responseBody","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot iterates through the list of tasks, finding matching tasks that contain the keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     * It then returns these matching tasks, if any.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If the find command is invalid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"        String keyword \u003d this.validateFindCommand();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        String[] findResult \u003d tasks.findMatchingTasks(keyword);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(findResult);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"        return \"find\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"YangQF2002":97}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":" * Represents a list command entered by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with list command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"     * Gets the chatbot response to list command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(TaskList tasks) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"        String tasksString \u003d tasks.listTasks();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        int totalTasks \u003d tasks.numTasks();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        String responseBody;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        if (totalTasks \u003d\u003d 0) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"            responseBody \u003d \"No current tasks!\\n\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"            responseBody \u003d tasksString;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"        return (totalTasks \u003d\u003d 1","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"                ? \"Here is the task in your list:\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"                : \"Here are the tasks in your list:\\n\")","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"                + responseBody","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot reads from task list, returns all the existing tasks.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(tasks);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        return \"list\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":64}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import utility.CommandUtility;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" * Represents a mark command entered by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with mark command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    public MarkCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the mark command is valid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If mark command is invalid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    private void validateMark(TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        String[] commandWords \u003d this.processCommand();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        CommandUtility.validateLength(commandWords, \"Mark \");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        CommandUtility.validateTaskNumber(commandWords, tasks);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"     * Updates the save file to reflect the marked task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage Instance that interfaces with the save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If writing to save file fails.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"    private void updateSaveFile(TaskStorage taskStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"        String tasksString \u003d tasks.listTasks();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(\"\", false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(tasksString, true);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     * Gets the chatbot response to the mark command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     * @param taskIndex Index of the marked task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(TaskList tasks, int taskIndex) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"                + \"  \" + tasks.getTaskDetails(taskIndex) + \u0027\\n\u0027","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot checks if mark command is valid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"     * If so, it marks the associated task in {@code tasks} and updates the save file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"     * Returns a response indicating it has successfully marked the task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If mark command is invalid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"        this.validateMark(tasks);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"        String command \u003d super.getCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"        int taskIndex \u003d CommandUtility.getTaskIndex(command);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"        boolean isSuccessful \u003d tasks.markTask(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Task has been marked already!\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"        tempStorage.setLastToggledTaskNum(taskIndex + 1);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"        this.updateSaveFile(taskStorage, tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(tasks, taskIndex);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"        return \"mark\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":95}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import task.ToDo;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" * Represents a todo command entered by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with todo command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    public TodoCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * Gets the command description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWords Command words from which to extract description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * @return Command description.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If description is missing.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"    private String getDescription(String[] commandWords) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        int commandLength \u003d commandWords.length;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        for (int i \u003d 1; i \u003c commandLength; i++) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"            description.append(commandWords[i])","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"                    .append(\" \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Description is missing!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"        return description.toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     * Creates an {@code ToDo} object encapsulating details about the todo task.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     * @return {@code ToDo} object.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If todo missing description.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"    private Task createTodo() throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"        String[] commandWords \u003d this.processCommand();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"        String description \u003d this.getDescription(commandWords);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"        return new ToDo(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     * Updates the save file with the todo task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage Instance that interfaces with save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"     * @param todoTask Todo task to be added.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If writing to save file fails.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"    private void updateSaveFile(TaskStorage taskStorage, TaskList tasks, Task todoTask) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(tasks.numTasks() + \". \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"                + tasks.getTaskDetails(todoTask) + \u0027\\n\u0027,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"                true);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"     * Gets the chatbot response to todo command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"     * @param todoTask Todo task created.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(TaskList tasks, Task todoTask) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"                + \"  \" + tasks.getTaskDetails(todoTask) + \u0027\\n\u0027","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"                + tasks.getTasksSummary()","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot checks if todo command is valid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"     * If so, it creates a {@code ToDo} object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"     * Adds it to {@code tasks}, writes it to save file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"     * Returns a response indicating it has added the todo task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If todo command is invalid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"        Task todoTask \u003d this.createTodo();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"        tasks.addToList(todoTask);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"        tempStorage.setLastCreatedTaskNum(tasks.numTasks());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"        this.updateSaveFile(taskStorage, tasks, todoTask);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(tasks, todoTask);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"        return \"todo\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":113}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import utility.CommandUtility;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" * Represents an unmark command entered by the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with unmark command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    public UnmarkCommand(String command) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the unmark command is valid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If the unmark command is invalid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    private void validateUnmark(TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        String[] commandWords \u003d this.processCommand();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        CommandUtility.validateLength(commandWords, \"Unmark \");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        CommandUtility.validateTaskNumber(commandWords, tasks);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"     * Update the save file to reflect the unmarked task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage Instance that interfaces with the save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If writing to save file fails.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"    private void updateSaveFile(TaskStorage taskStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"        String tasksString \u003d tasks.listTasks();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(\"\", false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(tasksString, true);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     * Gets the chatbot response to the unmark command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     * @param taskIndex Index of the unmarked task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(TaskList tasks, int taskIndex) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"                + \"  \" + tasks.getTaskDetails(taskIndex) + \u0027\\n\u0027","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"                + this.getQuirkyResponse();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot checks if unmark command is valid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"     * If so, it unmarks the associated task in {@code tasks} and updates the save file.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"     * Returns a response indicating it has successfully unmarked the task.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If unmark command is invalid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"        this.validateUnmark(tasks);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"        String command \u003d super.getCommand();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"        int taskIndex \u003d CommandUtility.getTaskIndex(command);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"        boolean isSuccessful \u003d tasks.unmarkTask(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Task has not been marked yet!\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"        tempStorage.setLastToggledTaskNum(taskIndex + 1);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"        this.updateSaveFile(taskStorage, tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(tasks, taskIndex);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"        return \"unmark\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":95}},{"path":"src/main/java/commands/undo/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands.undo;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.util.Map;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import commands.Command;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import commands.undo.managers.PrevCommandManager;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import commands.undo.managers.PrevCreateManager;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import commands.undo.managers.PrevDeleteManager;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"import commands.undo.managers.PrevToggleManager;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":" * Represents an undo command entered by the user.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    private static final Map\u003cString, PrevCommandManager\u003e PREV_CMD_MANAGERS \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"     * Stores the command string associated with undo command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command string.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    public UndoCommand(String command) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"        super(command);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"        PREV_CMD_MANAGERS.put(\"create\", new PrevCreateManager());","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        PREV_CMD_MANAGERS.put(\"delete\", new PrevDeleteManager());","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        PREV_CMD_MANAGERS.put(\"toggle\", new PrevToggleManager());","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the previous command is valid.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"     * @param tempStorage {@code TempStorage} object that stores info required to undo previous valid command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"     * @return The previous command, if it is valid.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If the previous command is invalid.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"    private String processPreviousCommand(TempStorage tempStorage) throws BrockException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"        String previousCommand \u003d tempStorage.getPreviousCommand();","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"        if (previousCommand \u003d\u003d null) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Previous command is invalid or does not exist, cannot be undone!\");","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        if (previousCommand.equals(\"undo\")) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Cannot undo twice in a row!\");","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"        return previousCommand;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     * Gets the category associated with the previous command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     * @param previousCommand The previous command to be examined.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     * @return The associated category.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If the command does not have an associated category.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"    private String getPrevCommandCategory(String previousCommand) throws BrockException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"        // CHECKSTYLE.OFF: Indentation","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"        return switch (previousCommand) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"            case \"mark\" -\u003e {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"                PREV_CMD_MANAGERS.get(\"toggle\").setIsMark(true);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"                yield \"toggle\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"            case \"unmark\" -\u003e {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"                PREV_CMD_MANAGERS.get(\"toggle\").setIsMark(false);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"                yield \"toggle\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"            case \"todo\", \"deadline\", \"event\" -\u003e \"create\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"            case \"delete\" -\u003e \"delete\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"            default -\u003e throw new BrockException(\"Previous valid command: \" + previousCommand + \" cannot be undone!\");","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"        };","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"        // CHECKSTYLE.ON: Indentation","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"     * Chatbot checks if undo command is valid.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"     * If so, it performs the necessary command to undo the previous command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"     * Returns a response showing more info about the undo.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If undo command is invalid.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"    public String execute(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"        String previousCommand \u003d this.processPreviousCommand(tempStorage);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"        String responseHeader \u003d \"Undoing previous valid command: \" + previousCommand + \" ...\\n\\n\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"        String responseBody;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"        String previousCommandCategory \u003d this.getPrevCommandCategory(previousCommand);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"        PrevCommandManager prevCommandManager \u003d PREV_CMD_MANAGERS.get(previousCommandCategory);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"        responseBody \u003d prevCommandManager.undoPrevCommand(taskStorage, tempStorage, tasks);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"        return responseHeader + responseBody;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"        return \"undo\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-22","isFullCredit":false}],"authorContributionMap":{"YangQF2002":107}},{"path":"src/main/java/commands/undo/managers/PrevCommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands.undo.managers;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":" * Abstract base class to provide a template for a previous command manager.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"public abstract class PrevCommandManager {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    protected static boolean isMark \u003d false;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * Undo the previous command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage {@code TaskStorage} object that creates and interfaces with save file.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     * @param tempStorage {@code TempStorage} object that stores info required to undo previous valid command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks {@code TaskList} object that stores the current tasks in an {@code ArrayList}.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"     * @return Returns the string response associated with undoing the previous command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If there is any issues with undoing.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    public abstract String undoPrevCommand(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks)","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"            throws BrockException;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    public void setIsMark(boolean isMark) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"        PrevCommandManager.isMark \u003d isMark;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-22","isFullCredit":false}],"authorContributionMap":{"YangQF2002":29}},{"path":"src/main/java/commands/undo/managers/PrevCreateManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands.undo.managers;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import commands.Command;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" * Class to undo previous command, if it is a todo/deadline/event command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"public class PrevCreateManager extends PrevCommandManager {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     * Specifically, undoes the previous todo/deadline/event command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    public String undoPrevCommand(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks)","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"            throws BrockException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"        int lastCreatedTaskNum \u003d tempStorage.getLastCreatedTaskNum();","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"        Command deleteCommand \u003d new DeleteCommand(\"delete \" + lastCreatedTaskNum);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"        return deleteCommand.execute(taskStorage, tempStorage, tasks);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-22","isFullCredit":false}],"authorContributionMap":{"YangQF2002":26}},{"path":"src/main/java/commands/undo/managers/PrevDeleteManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands.undo.managers;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" * Class to undo previous command, if it is a delete command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"public class PrevDeleteManager extends PrevCommandManager {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * Specifically, undoes the previous delete command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    public String undoPrevCommand(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks)","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"            throws BrockException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        Task lastDeletedTask \u003d tempStorage.getLastDeletedTask();","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"        tasks.addToList(lastDeletedTask);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"        this.updateSaveFile(taskStorage, tasks, lastDeletedTask);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"        return this.getResponse(lastDeletedTask, tasks);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     * Writes the restored task back into the save file.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStorage Instance that interfaces with save file.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"     * @param restoredTask Restored task to write into the save file.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If writing to file fails.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"    private void updateSaveFile(TaskStorage taskStorage, TaskList tasks, Task restoredTask) throws BrockException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        taskStorage.writeToFile(tasks.numTasks() + \". \"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"                + tasks.getTaskDetails(restoredTask) + \u0027\\n\u0027,","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"                true);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"     * Gets the chatbot response to undoing previous delete command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"     * @param lastDeletedTask Restored task.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks List of current {@code Task} objects.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     * @return Chatbot response.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"    private String getResponse(Task lastDeletedTask, TaskList tasks) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"        return \"Restoring deleted task...\\n\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"                + \"  \" + tasks.getTaskDetails(lastDeletedTask).trim() + \" restored!\\n\"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"                + tasks.getTasksSummary()","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"                + \"\\nLAO GAN MA!\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-22","isFullCredit":false}],"authorContributionMap":{"YangQF2002":54}},{"path":"src/main/java/commands/undo/managers/PrevToggleManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands.undo.managers;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import commands.Command;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import commands.MarkCommand;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" * Class to undo previous command, if it is a mark/unmark command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"public class PrevToggleManager extends PrevCommandManager {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     * Specifically, undoes the previous mark/unmark command.","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    public String undoPrevCommand(TaskStorage taskStorage, TempStorage tempStorage, TaskList tasks)","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"            throws BrockException {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"        int lastToggledTaskNum \u003d tempStorage.getLastToggledTaskNum();","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"        Command toggleCommand;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"        if (PrevCommandManager.isMark) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"            toggleCommand \u003d new UnmarkCommand(\"unmark \" + lastToggledTaskNum);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"            toggleCommand \u003d new MarkCommand(\"mark \" + lastToggledTaskNum);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        return toggleCommand.execute(taskStorage, tempStorage, tasks);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-22","isFullCredit":false}],"authorContributionMap":{"YangQF2002":32}},{"path":"src/main/java/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package controllers;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":" * Controller class for the DialogBox GUI.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    @FXML","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    @FXML","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    private Circle circle;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     * Constructs a new DialogBox element.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"     * @param text Text string within the element.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"     * @param img Image within the element.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"                    .getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"        // Approach was adopted from https://www.youtube.com/watch?v\u003d54fEFYx34vk","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"        // To display images as circles","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"        this.circle.setFill(new ImagePattern(img));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"        this.circle.getStyleClass().add(\"styled-circle\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     * Flips the contents within the DialogBox element.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     * Such that the ImageView is on the left and text is on the right.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"    private void flip() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"     * Changes the label color of Brock reply, if exception was caught.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     * @param isException Indicator if exception was caught.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"    private void setErrorStyle(boolean isException) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"        if (isException) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"            dialog.getStyleClass().add(\"error-reply\");","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     * Constructs a user dialog box.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     * @param text Text string within the dialog box.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"     * @param img Image within the dialog box.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"     * @return User dialog box element.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"     * Constructs a Brock dialog box.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"     * @param text Text string within the dialog box.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"     * @param isException Indicator if exception was caught.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"     * @param img Image within the dialog box.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"     * @return Brock dialog box element.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"    public static DialogBox getBrockDialog(String text, boolean isException, Image img) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"        db.flip();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"        db.setErrorStyle(isException);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"        return db;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"YangQF2002":101}},{"path":"src/main/java/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package controllers;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.util.Objects;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import core.Brock;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.control.ContentDisplay;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"import utility.Pair;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":" * Controller class for the main GUI.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    private static final double SCROLL_AMOUNT \u003d 0.0003;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"    @FXML","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"    @FXML","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    @FXML","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"    @FXML","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"    private Brock brock;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"    private final Image userImage \u003d","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"            new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"                    .getResourceAsStream(\"/images/DaUser.jpg\")));","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"    private final Image brockImage \u003d","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"            new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"                    .getResourceAsStream(\"/images/DaBrock.jpg\")));","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     * Initializes the controller class.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"    @FXML","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"        this.setupScroll();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"        this.userInput.setPromptText(\"Enter your command here!\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"        this.setupButtonIcon();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     * Sets up the scroll and auto-scroll mechanism;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"    private void setupScroll() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"        // Add listener function that listens to height of dialog container","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"        // When height increases (ie: user + brock dialog added), apply the listener function","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        // Auto-scroll to the very bottom","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"        this.dialogContainer.heightProperty().addListener((obs, oldBounds, newBounds) -\u003e","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"            scrollPane.setVvalue(scrollPane.getVmax())","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"        );","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"        // Add scroll callback function to dialog container","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"        // When dialog container is scrolled, apply the callback function","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"        // Scroll up/down by some amount","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"        this.dialogContainer.setOnScroll(event -\u003e {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"            double deltaY \u003d event.getDeltaY() * SCROLL_AMOUNT;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"            scrollPane.setVvalue(scrollPane.getVvalue() - deltaY);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"        });","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     * Creates a button icon within the send button.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"    private void setupButtonIcon() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"        // Approach was adopted from https://edencoding.com/how-to-add-an-image-to-a-button/","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        // To add an icon within the send button","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"        ImageView imageView \u003d new ImageView(Objects.requireNonNull(getClass()","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"                .getResource(\"/images/SendIcon.jpg\")).toExternalForm());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"        sendButton.setGraphic(imageView);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        sendButton.setContentDisplay(ContentDisplay.TOP);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"        imageView.fitWidthProperty()","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"                .bind(sendButton.widthProperty().divide(10));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"        imageView.setPreserveRatio(true);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"        // Prevent button from wrap to text + graphic size","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"        sendButton.setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"     * Injects the {@code Brock} instance.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"     * @param b {@code Brock} instance to be injected.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"    public void setBrock(Brock b) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"        this.brock \u003d b;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"     * Injects the {@code TaskList} instance.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"     * @param t {@code TaskList} instance to be injected.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"    public void setTasks(TaskList t) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"        this.tasks \u003d t;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"     * Shows initial Brock response from set up procedure on the GUI.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YangQF2002"},"content":"     * Which entails creating save file, loading from save file and welcome message.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YangQF2002"},"content":"     * @param response Initial Brock response to be displayed.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YangQF2002"},"content":"    public void showInitialResponse(String response) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YangQF2002"},"content":"        boolean isCorruption \u003d response.startsWith(\"[Corruption]\");","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YangQF2002"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YangQF2002"},"content":"                DialogBox.getBrockDialog(response, isCorruption, brockImage)","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YangQF2002"},"content":"        );","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YangQF2002"},"content":"     * Processes the raw command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YangQF2002"},"content":"     * @param rawCommand Raw command to be processed.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YangQF2002"},"content":"     * @return Processed command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YangQF2002"},"content":"    private String processCommand(String rawCommand) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YangQF2002"},"content":"        // Trim away leading \u0026 trailing whitespaces","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YangQF2002"},"content":"        // Replace multiple whitespaces with a single one","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YangQF2002"},"content":"        return rawCommand.trim()","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YangQF2002"},"content":"                .replaceAll(\" +\", \" \");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YangQF2002"},"content":"     * Shows both user input and Brock response on the GUI.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YangQF2002"},"content":"     * @param rawCommand Raw user input string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YangQF2002"},"content":"     * @param isException Indicator if exception was caught during response.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YangQF2002"},"content":"     * @param brockResponse Brock response string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YangQF2002"},"content":"    private void showBothDialog(String rawCommand, boolean isException, String brockResponse) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YangQF2002"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YangQF2002"},"content":"                DialogBox.getUserDialog(rawCommand, userImage),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YangQF2002"},"content":"                DialogBox.getBrockDialog(brockResponse, isException, brockImage)","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YangQF2002"},"content":"        );","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YangQF2002"},"content":"        this.userInput.clear();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YangQF2002"},"content":"     * Creates two dialog boxes, one showing user input and the other containing Brock\u0027s reply","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YangQF2002"},"content":"     * and then appends them to the dialog container.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YangQF2002"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YangQF2002"},"content":"    @FXML","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YangQF2002"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YangQF2002"},"content":"        String rawCommand \u003d userInput.getText();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YangQF2002"},"content":"        if (rawCommand.isBlank()) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YangQF2002"},"content":"            // User did not type anything (besides whitespaces)","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YangQF2002"},"content":"            // Don\u0027t bother handling!","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YangQF2002"},"content":"            return;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YangQF2002"},"content":"        String processedCommand \u003d this.processCommand(rawCommand);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YangQF2002"},"content":"        Pair\u003cBoolean, Pair\u003cBoolean, String\u003e\u003e responseResult \u003d this.brock","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YangQF2002"},"content":"                .respondToCommand(processedCommand, this.tasks);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YangQF2002"},"content":"        boolean isExit \u003d responseResult.getFirst();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YangQF2002"},"content":"        boolean isException \u003d responseResult.getSecond().getFirst();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YangQF2002"},"content":"        String brockResponse \u003d responseResult.getSecond().getSecond();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YangQF2002"},"content":"        this.showBothDialog(rawCommand, isException, brockResponse);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YangQF2002"},"content":"        // Exit after displaying the dialog boxes","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YangQF2002"},"content":"        // So that user can see the input + response first","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YangQF2002"},"content":"        if (isExit) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YangQF2002"},"content":"            this.exitProgram();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YangQF2002"},"content":"     * Exits the GUI application.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YangQF2002"},"content":"     * Approach was adapted from:","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YangQF2002"},"content":"     * \u003ca href\u003d\"https://github.com/nus-cs2103-AY2425S1/forum/issues/199#issuecomment-2333192757\"\u003e...\u003c/a\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YangQF2002"},"content":"    public void exitProgram() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YangQF2002"},"content":"        // Sets a 3-second delay before exiting","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YangQF2002"},"content":"        // To make it less abrupt","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YangQF2002"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YangQF2002"},"content":"        pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YangQF2002"},"content":"        pause.play();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"YangQF2002":194}},{"path":"src/main/java/core/Brock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package core;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import commands.Command;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import parser.Parser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"import utility.Pair;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":" * Class that represents the chatbot.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"public class Brock {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    private static final TaskStorage TASK_STORAGE \u003d new TaskStorage();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    private static final TempStorage TEMP_STORAGE \u003d new TempStorage();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    private static final Parser PARSER \u003d new Parser();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * Creates the save file.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * @return A boolean indicating if creation was successful,","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     *      as well as a string storing the response of this action.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"    protected Pair\u003cBoolean, String\u003e createSaveFile() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        boolean isSuccessful;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        String overallResponse;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"            String[] responses \u003d TASK_STORAGE.createFile();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"            isSuccessful \u003d true;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"            overallResponse \u003d responses[0] + \" | \" + responses[1];","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"            isSuccessful \u003d false;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"            overallResponse \u003d \"\"\"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"                    Error creating file!","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"                    Please re-run the program and try again!","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"                    Program will close now ...\"\"\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        return new Pair\u003c\u003e(isSuccessful, overallResponse);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     * Loads tasks from the save file.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     * @return The {@code TaskList tasks} that represents the existing {@code Task} objects,","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     *      as well as a string storing the response of this action.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"    protected Pair\u003cTaskList, String\u003e loadTasksFromFile() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"        TaskList tasks;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"        String overallResponse;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"            ArrayList\u003cTask\u003e prevTasks \u003d TASK_STORAGE.loadTasksFromFile();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"            tasks \u003d new TaskList(prevTasks);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"            overallResponse \u003d \"Successfully read from save file!\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"            tasks \u003d null;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"            overallResponse \u003d \"\"\"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"                    Unable to find the save file!","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"                    Please re-run the program and try again.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"                    Program will close now ...\"\"\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"        } catch (BrockException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"            // Save file was corrupted","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"            // Reset to blank file and proceed","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"            overallResponse \u003d \"[Corruption] \\n\" + e.getMessage();","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"        return new Pair\u003c\u003e(tasks, overallResponse);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     * Responds to a particular user command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"     * @param processedCommand The processed user command to respond to.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks The list of existing tasks.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"     * @return First boolean indicating if the program should be terminated (only on bye command),","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"     *      second boolean indicating if there was an exception caught,","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"     *      as well as a string storing the response to the command.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"    public Pair\u003cBoolean, Pair\u003cBoolean, String\u003e\u003e respondToCommand(String processedCommand, TaskList tasks) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"        boolean isExit;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"        boolean isException;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"        String overallResponse;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"        isExit \u003d processedCommand.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"        isException \u003d false;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"            Command commandObj \u003d PARSER.handleCommand(processedCommand);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"            overallResponse \u003d commandObj.execute(TASK_STORAGE, TEMP_STORAGE, tasks);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"            TEMP_STORAGE.setPreviousCommand(commandObj.getCommandType());","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"        } catch (BrockException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"            overallResponse \u003d e.getMessage();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"            isException \u003d true;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"        return new Pair\u003c\u003e(isExit, new Pair\u003c\u003e(isException, overallResponse));","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"YangQF2002":104}},{"path":"src/main/java/core/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package core;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"public class Launcher {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"     * Defines the entry point into the GUI application!","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"YangQF2002":15}},{"path":"src/main/java/core/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package core;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import controllers.MainWindow;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"import utility.Pair;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":" * A GUI for Brock using FXML.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    private static final Brock BROCK \u003d new Brock();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    private static final int MIN_HEIGHT \u003d 555;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    private static final int MIN_WIDTH \u003d 777;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * Handles the creation of the save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * @param mainController Controller tied to the main GUI view.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    private void handleCreateSaveFile(MainWindow mainController) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        // Creates the save file","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        Pair\u003cBoolean, String\u003e createResult \u003d BROCK.createSaveFile();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        Boolean isSuccessful \u003d createResult.getFirst();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        if (!isSuccessful) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"            mainController.exitProgram();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        // Show response to creating save file","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"        String createResponse \u003d createResult.getSecond();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"        String[] responseParts \u003d createResponse.split(\" \\\\| \");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"        String dirResponse \u003d responseParts[0];","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"        String fileResponse \u003d responseParts[1];","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"        mainController.showInitialResponse(dirResponse);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"        mainController.showInitialResponse(fileResponse);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     * Handles the loading of tasks from save file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     * @param mainController Controller tied to the main GUI view.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"    private void handleLoadFromSaveFile(MainWindow mainController) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"        // Load the tasks from the save file","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"        Pair\u003cTaskList, String\u003e loadResult \u003d BROCK.loadTasksFromFile();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"        TaskList tasks \u003d loadResult.getFirst();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"            mainController.exitProgram();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"        mainController.setTasks(tasks);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"        // Show response to loading tasks","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"        String loadResponse \u003d loadResult.getSecond();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"        mainController.showInitialResponse(loadResponse);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"     * Handles the displaying of welcome message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"     * @param mainController Controller tied to the main GUI view.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"    private void handleWelcomeMessage(MainWindow mainController) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"        String welcomeResponse \u003d \"Hello! I\u0027m Brock\\n\"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"                + \"HEHEHE XD\";","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"        mainController.showInitialResponse(welcomeResponse);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"     * Sets the GUI title and icon.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     * @param stage A platform of sorts, as the backbone for the GUI application.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"    private void setTitleAndIcon(Stage stage) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        stage.setTitle(\"Brock Chatbot\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"        Image programIcon \u003d new Image(\"images/ProgramIcon.jpg\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"        stage.getIcons().add(programIcon);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"     * Sets the GUI minimum dimensions.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"     * @param stage A platform of sorts, as the backbone for the GUI application.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"    private void setMinDimensions(Stage stage) {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"        stage.setMinHeight(MIN_HEIGHT);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"        stage.setMinWidth(MIN_WIDTH);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"     * Starts the GUI.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"     * @param stage A platform of sorts, as the backbone for the GUI application.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"            // Initialize stuff","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"                    .getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"            MainWindow mainController \u003d fxmlLoader.getController();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"            // Crux of setup","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"            mainController.setBrock(BROCK);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"            this.handleCreateSaveFile(mainController);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"            this.handleLoadFromSaveFile(mainController);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YangQF2002"},"content":"            this.handleWelcomeMessage(mainController);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YangQF2002"},"content":"            // Finish setup","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YangQF2002"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YangQF2002"},"content":"            this.setTitleAndIcon(stage);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YangQF2002"},"content":"            this.setMinDimensions(stage);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YangQF2002"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YangQF2002"},"content":"            stage.show();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YangQF2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YangQF2002"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"YangQF2002":126}},{"path":"src/main/java/exceptions/BrockException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package exceptions;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":" * Custom checked exception that the Chatbot can throw and catch.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"public class BrockException extends Exception {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"     * Stores the error message passed into the thrown exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"     * @param errorMessage Error message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    public BrockException(String errorMessage) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"        super(errorMessage);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"YangQF2002":15}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package parser;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.util.Map;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import commands.ByeCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import commands.Command;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import commands.DeadlineCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"import commands.EventCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"import commands.FindCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"import commands.ListCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"import commands.MarkCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"import commands.TodoCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"import commands.undo.UndoCommand;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":" * Class to identify user commands, and create associated {@code Command} objects.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"public class Parser {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    private static final Map\u003cString, Function\u003cString, Command\u003e\u003e COMMAND_OBJS \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * Initializes the various constructors for each command type.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"    public Parser() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"bye\", ByeCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"list\", ListCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"mark\", MarkCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"unmark\", UnmarkCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"delete\", DeleteCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"todo\", TodoCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"deadline\", DeadlineCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"event\", EventCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"find\", FindCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"        COMMAND_OBJS.put(\"undo\", UndoCommand::new);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"     * Gets the command type from the user command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     * @param command User command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     * @return Command type.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"    private String getCommandType(String command) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"        return parts[0].toLowerCase();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     * Creates an associated {@code Command} object, based on the identified command type.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"     * @param command User command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     * @return Associated command object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If user command is invalid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"    public Command handleCommand(String command) throws BrockException {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"        String commandType \u003d this.getCommandType(command);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        Function\u003cString, Command\u003e commandConstructor \u003d COMMAND_OBJS.get(commandType);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"        if (commandConstructor \u003d\u003d null) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Unrecognized command!\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"        return commandConstructor.apply(command);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":68}},{"path":"src/main/java/storage/task/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package storage.task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.io.File;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import java.util.Map;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"import storage.task.managers.DeadlineManager;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"import storage.task.managers.EventManager;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"import storage.task.managers.TaskManager;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"import storage.task.managers.TodoManager;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":" * Class to create, and interact with save file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"public class TaskStorage {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    private static final String FILE_PATH \u003d \"./src/main/java/data/saveFile.txt\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    private static final File SAVE_FILE \u003d new File(FILE_PATH);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    private static final Map\u003cCharacter, TaskManager\u003e TASK_MANAGERS \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     * Initializes the various task managers for each task type.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    public TaskStorage() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        TASK_MANAGERS.put(\u0027T\u0027, new TodoManager());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        TASK_MANAGERS.put(\u0027D\u0027, new DeadlineManager());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        TASK_MANAGERS.put(\u0027E\u0027, new EventManager());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"     * Resets the save file due to corrupted data.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     * @param description String describing the corruption.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException Always throws this exception, containing message about the corruption.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"     *                        To be bubbled up to the core.Brock.run() in the main class.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"    protected void resetSaveFile(String description) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        this.writeToFile(\"\", false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"        throw new BrockException(\"While reading from save file: \\n\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"                + description + \u0027\\n\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"                + \"Save file is corrupted. File has been reset!\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the taskString is valid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     * @param taskString Task string to be examined.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     * @return The components within the task string, if found to be valid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If its invalid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"    public String[] processTaskString(String taskString) throws BrockException {","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"        String[] taskComponents \u003d taskString.split(\"\\\\. \", 2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"        if (taskComponents.length \u003c 2) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"            this.resetSaveFile(\"Invalid task entry - missing task number!\");","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"        return taskComponents;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"     * Converts a task string into a corresponding {@code Task} object.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     * @param taskString Task string being passed in.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     * @return Corresponding {@code Task} object.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If task string is invalid.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"    private Task convertToTaskObject(String taskString) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"        String[] taskComponents \u003d this.processTaskString(taskString);","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"        String taskDetails \u003d taskComponents[1];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"        char taskType \u003d taskDetails.charAt(1);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"        char taskStatus \u003d taskDetails.charAt(4);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"        // Remove the [\u003ctype\u003e][\u003cstatus\u003e]","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"        // As we only want the task body","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        String taskBody \u003d taskDetails.substring(7);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"        TaskManager taskManager \u003d TASK_MANAGERS.get(taskType);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"        if (taskManager \u003d\u003d null) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"            this.resetSaveFile(\"Invalid task entry - unrecognized task type!\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"            return null;","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"        // CHECKSTYLE.OFF: Indentation","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"            return taskManager.convertToTaskObject(taskBody, taskStatus);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"        } catch (BrockException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"            // Enter this block if there are any save file corruptions","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"            // Get the description of save file corruption and pass into the reset function","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"            this.resetSaveFile(e.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"            return null;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"        // CHECKSTYLE.ON: Indentation","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"     * Converts all tasks in save file into corresponding {@code Task} objects.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"     * @return An {@code ArrayList\u003cTask\u003e} to store all objects.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If unable to find save file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws BrockException, FileNotFoundException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"        Scanner s \u003d new Scanner(SAVE_FILE);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"            String taskString \u003d s.nextLine();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"            Task task \u003d this.convertToTaskObject(taskString);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"            tasks.add(task);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YangQF2002"},"content":"        return tasks;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YangQF2002"},"content":"     * Handles the directory creation.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YangQF2002"},"content":"     * @return The message describing the directory creation operation.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YangQF2002"},"content":"    private String handleDirectory() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder dirResult \u003d new StringBuilder();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YangQF2002"},"content":"        String dirStatus;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YangQF2002"},"content":"        boolean isDirectoryMissing \u003d SAVE_FILE.getParentFile().mkdirs();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YangQF2002"},"content":"        if (!isDirectoryMissing) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YangQF2002"},"content":"            dirStatus \u003d \"Parent directories already exists!\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YangQF2002"},"content":"            dirStatus \u003d \"Parent directories successfully created!\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YangQF2002"},"content":"        dirResult.append(\"Creating parent directories for save file...\\n\")","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YangQF2002"},"content":"                .append(dirStatus);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YangQF2002"},"content":"        return dirResult.toString();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YangQF2002"},"content":"     * Handles the file creation.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YangQF2002"},"content":"     * @return The message describing the file creation operation.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YangQF2002"},"content":"     * @throws IOException If there are issues creating a new save file.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YangQF2002"},"content":"    private String handleFile() throws IOException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder fileResult \u003d new StringBuilder();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YangQF2002"},"content":"        String fileStatus;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YangQF2002"},"content":"        boolean isFileMissing \u003d SAVE_FILE.createNewFile();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YangQF2002"},"content":"        if (!isFileMissing) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YangQF2002"},"content":"            fileStatus \u003d \"Save file already exists!\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YangQF2002"},"content":"            fileStatus \u003d \"Save file successfully created\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YangQF2002"},"content":"        fileResult.append(\"Creating save file for tasks...\\n\")","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YangQF2002"},"content":"                .append(fileStatus);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YangQF2002"},"content":"        return fileResult.toString();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the save file and parent directories are present.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YangQF2002"},"content":"     * If they are not, create them accordingly.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YangQF2002"},"content":"     * @return {@code String[]} of size 2.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YangQF2002"},"content":"     *      First element is directory result, second element is file result.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YangQF2002"},"content":"     * @throws IOException If there were issues creating the files and folders.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YangQF2002"},"content":"    public String[] createFile() throws IOException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YangQF2002"},"content":"        String dirResultString \u003d this.handleDirectory();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YangQF2002"},"content":"        String fileResultString \u003d this.handleFile();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YangQF2002"},"content":"        return new String[]{dirResultString, fileResultString};","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YangQF2002"},"content":"     * Writes to the save file, to update it when there are new tasks or deleted tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YangQF2002"},"content":"     * @param writeContent The task to be written.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YangQF2002"},"content":"     * @param isAppendMode Option to append to existing content, or overwrite existing content.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If there are issues with writing to the file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YangQF2002"},"content":"    public void writeToFile(String writeContent, boolean isAppendMode) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YangQF2002"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH, isAppendMode);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YangQF2002"},"content":"            fw.write(writeContent);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YangQF2002"},"content":"            fw.close();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YangQF2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(e.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"YangQF2002":190}},{"path":"src/main/java/storage/task/managers/DeadlineManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package storage.task.managers;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import task.Deadline;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import utility.StorageUtility;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":" * Class to manage deadline strings in task storage.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"public class DeadlineManager extends TaskManager {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    private String[] processDeadlineBody(String deadlineBody) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"        String[] parts \u003d deadlineBody.split(\"\\\\(by: \", 2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Invalid deadline entry - missing due date!\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"        return parts;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"     * Validates the due dateTime of the deadline string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     * @param dateTime dateTime string to be verified.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * @return The due date and due time, separated out, if valid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If dateTime is invalid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"    private String[] processDueDateTime(String dateTime) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        String[] dateTimeParts \u003d dateTime.split(\", \");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        String dueDateString \u003d dateTimeParts.length \u003d\u003d 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"                ? StorageUtility.parseDate(StorageUtility.removeCloseBracket(dateTimeParts[0]))","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"                : StorageUtility.parseDate(dateTimeParts[0]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        String dueTimeString \u003d dateTimeParts.length \u003d\u003d 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"                ? \"\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"                : StorageUtility.removeCloseBracket(dateTimeParts[1])","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"                .replace(\":\", \"\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"        return new String[]{dueDateString, dueTimeString};","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"     * Creates a {@code Deadline} object corresponding to a deadline string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     * @param deadlineBody   String storing deadline description and due datetime.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     * @param deadlineStatus Character representing deadline status.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     * @return {@code Deadline} object created.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If date and time are invalid when constructing object.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     *                        (They should already be validated)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"    public Task convertToTaskObject(String deadlineBody, char deadlineStatus) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"        String[] parts \u003d this.processDeadlineBody(deadlineBody);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"        String description \u003d parts[0];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"        String dateTime \u003d parts[1];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"        String[] dueValues \u003d this.processDueDateTime(dateTime);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"        Task deadlineTask;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"        if (dueValues[1].isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"            // Due time is empty","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"            // Create deadline with no time","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"            deadlineTask \u003d new Deadline(description, dueValues[0]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"            // Due time is not empty","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"            // Create deadline with time","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"            deadlineTask \u003d new Deadline(description, dueValues[0], dueValues[1]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"        assert deadlineStatus \u003d\u003d \u0027X\u0027 | deadlineStatus \u003d\u003d \u0027 \u0027 : \"Invalid deadline status extracted.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"        if (deadlineStatus \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"            deadlineTask.markAsDone();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"        return deadlineTask;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"YangQF2002":76}},{"path":"src/main/java/storage/task/managers/EventManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package storage.task.managers;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import task.Event;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import utility.StorageUtility;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":" * Class to manage event strings in task storage.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"public class EventManager extends TaskManager {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"     * Checks the body of the event string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * @param eventBody EventBody to be checked.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * @return The event body, split into description and dateTime.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If the event body is invalid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    private String[] processEventBody(String eventBody) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        String[] parts \u003d eventBody.split(\"\\\\(from: \", 2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Invalid event entry - missing start date!\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"        return parts;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     * Checks the start dateTime of the event string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"     * @param startDateTime Start dateTime to be checked.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"     * @return The start date and start time, separated out, if valid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If start dateTime is invalid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"    private String[] processStartDateTime(String startDateTime) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"        String[] startDateTimeParts \u003d startDateTime.split(\", \");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        String startDateString \u003d StorageUtility.parseDate(startDateTimeParts[0]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"        String startTimeString \u003d startDateTimeParts.length \u003d\u003d 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"                ? \"\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"                : startDateTimeParts[1].replace(\":\", \"\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"        return new String[]{startDateString, startTimeString};","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     * Checks the end dateTime of the event string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     * @param endDateTime End dateTime to be checked.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     * @return The end date and end time, separated out, if valid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If end dateTime is invalid.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    private String[] processEndDateTime(String endDateTime) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"        String[] endDateTimeParts \u003d endDateTime.substring(4)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"                .split(\", \");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"        String endDateString \u003d endDateTimeParts.length \u003d\u003d 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"                ? StorageUtility.parseDate(StorageUtility.removeCloseBracket(endDateTimeParts[0]))","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"                : StorageUtility.parseDate(endDateTimeParts[0]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"        String endTimeString \u003d endDateTimeParts.length \u003d\u003d 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"                ? \"\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"                : StorageUtility.removeCloseBracket(endDateTimeParts[1])","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"                .replace(\":\", \"\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        return new String[]{endDateString, endTimeString};","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"     * Creates an {@code Event} object corresponding to an event string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"     * @param eventBody   String storing event description, as well as start and end datetime.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     * @param eventStatus Character representing event status.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     * @return {@code Event} object created.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If date and time are invalid when constructing object.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"     *                        (They should already be validated)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"    public Task convertToTaskObject(String eventBody, char eventStatus) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"        String[] parts \u003d this.processEventBody(eventBody);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"        String description \u003d parts[0];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"        String dateTime \u003d parts[1];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"        String[] dateTimeParts \u003d dateTime.split(\" \\\\| \", 2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        if (dateTimeParts.length \u003c 2) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Invalid event entry - missing start end date separator!\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        String[] startValues \u003d this.processStartDateTime(dateTimeParts[0]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"        String[] endValues \u003d this.processEndDateTime(dateTimeParts[1]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"        Task eventTask;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"        if (startValues[1].isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"            // Start time is empty","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"            // Create event with no time","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"            eventTask \u003d new Event(description, startValues[0], endValues[0]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"            // Start time is not empty","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"            // Create event with time","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"            eventTask \u003d new Event(description, startValues[0], startValues[1],","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"                    endValues[0], endValues[1]);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"        assert eventStatus \u003d\u003d \u0027X\u0027 | eventStatus \u003d\u003d \u0027 \u0027 : \"Invalid event status extracted.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"        if (eventStatus \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"            eventTask.markAsDone();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"        return eventTask;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"YangQF2002":106}},{"path":"src/main/java/storage/task/managers/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package storage.task.managers;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":" * Abstract base class to provide a template for a task manager.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"public abstract class TaskManager {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"     * Converts the task string into a task object.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"     * @param taskBody extracted from task string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * @param taskStatus extracted from task string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * @return Task object.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If conversion fails.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    public abstract Task convertToTaskObject(String taskBody, char taskStatus) throws BrockException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"YangQF2002":19}},{"path":"src/main/java/storage/task/managers/TodoManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package storage.task.managers;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import task.ToDo;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":" * Class to manage todo strings in task storage.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"public class TodoManager extends TaskManager {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"     * Creates a {@code ToDo} object corresponding to a todo string.","lastModifiedDate":"2024-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"     * @param todoBody   String storing todo description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * @param todoStatus Character representing todo status.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * @return {@code ToDo} object created.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    public Task convertToTaskObject(String todoBody, char todoStatus) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"        Task todoTask \u003d new ToDo(todoBody);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        assert todoStatus \u003d\u003d \u0027X\u0027 | todoStatus \u003d\u003d \u0027 \u0027 : \"Invalid todo status extracted.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        if (todoStatus \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"            todoTask.markAsDone();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"        return todoTask;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"YangQF2002":26}},{"path":"src/main/java/storage/temp/TempStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package storage.temp;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import task.Task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":" * A class that stores information required to undo the last valid command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"public class TempStorage {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"    private static String previousValidCommand;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"    private static int lastCreatedTaskNum;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"    private static int lastToggledTaskNum;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    private static Task lastDeletedTask;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * Retrieves the previous valid command executed.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     * @return the previous valid command as a String.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    public String getPreviousCommand() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        return TempStorage.previousValidCommand;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * Sets the previous valid command executed.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * @param previousCommand the valid command to be set as the previous valid command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    public void setPreviousCommand(String previousCommand) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        TempStorage.previousValidCommand \u003d previousCommand;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"     * Retrieves the task number of the last created task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"     * @return the task number of the last created task as an integer.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"    public int getLastCreatedTaskNum() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"        return TempStorage.lastCreatedTaskNum;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"     * Sets the task number of the last created task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"     * @param lastCreatedTaskNum the task number of the last created task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"    public void setLastCreatedTaskNum(int lastCreatedTaskNum) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"        TempStorage.lastCreatedTaskNum \u003d lastCreatedTaskNum;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"     * Retrieves the task number of the last toggled task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     * @return the task number of the last toggled task as an integer.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"    public int getLastToggledTaskNum() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"        return TempStorage.lastToggledTaskNum;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"     * Sets the task number of the last toggled task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"     * @param lastToggledTaskNum the task number of the last toggled task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"    public void setLastToggledTaskNum(int lastToggledTaskNum) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"        TempStorage.lastToggledTaskNum \u003d lastToggledTaskNum;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"     * Retrieves the last deleted task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"     * @return the last deleted task as a {@link Task}.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"    public Task getLastDeletedTask() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"        return TempStorage.lastDeletedTask;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     * Sets the last deleted task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"     * @param lastDeletedTask the task to be set as the last deleted task.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"    public void setLastDeletedTask(Task lastDeletedTask) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"        TempStorage.lastDeletedTask \u003d lastDeletedTask;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"YangQF2002":85}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" * Class representing a deadline task.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"    private final LocalTime dueTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     * Sets the deadline task description and due date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"     * A dummy value is given for due time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"     * Sets the deadline task status to be uncompleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"     * @param description Task description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     * @param dateTimeStrings {@code String[]} of date time strings","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If due date is invalid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    public Deadline(String description, String ...dateTimeStrings) throws BrockException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"            this.dueTime \u003d dateTimeStrings.length \u003d\u003d 1","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"                    ? LocalTime.MAX","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"                    : this.parseTime(dateTimeStrings[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"            this.dueDate \u003d LocalDate.parse(dateTimeStrings[0]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"            this.validateDateTime();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Values in due date string are not valid!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     * Converts due time from {@code String} to {@code LocalTime}.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"     * @param dueTimeString Due time as a {@code String}.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"     * @return Due time as a {@code LocalTime}.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"    private LocalTime parseTime(String dueTimeString) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"        String hours \u003d dueTimeString","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"                .substring(0, 2);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"        String minutes \u003d dueTimeString","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"                .substring(2);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"        return LocalTime.of(Integer.parseInt(hours),","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"                Integer.parseInt(minutes));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the due date is valid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"     * If due time is provided (ie: not a dummy), checks if it is valid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If they are not valid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"    private void validateDateTime() throws BrockException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"        if (this.dueDate.isBefore(today)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Due date cannot be earlier than today!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"        if (this.dueTime !\u003d LocalTime.MAX) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"            LocalTime now \u003d LocalTime.now();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"            if (this.dueDate.isEqual(today) \u0026\u0026 this.dueTime.isBefore(now)) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"                throw new BrockException(\"Due time cannot be earlier than now!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"        return \"D\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"    public String getExtraInfo() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"        String dueDateFormatted \u003d dueDate","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"                .format(formatter);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"        return \"(by: \" + dueDateFormatted","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"                + (dueTime \u003d\u003d LocalTime.MAX","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"                ? \"\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"                : \", \" + dueTime.toString())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"                + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"YangQF2002":95}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" * Class representing an event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"public class Event extends Task {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"     * Sets the event task description, start and end date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"     * A dummy value is given for start and end time.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"     * Sets the event task status to be uncompleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * @param description Task description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * @param dateTimeStrings {@code String[]} of date time strings","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If start and end dates are not valid.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    public Event(String description, String ...dateTimeStrings) throws BrockException {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        boolean isParseStartDateSuccessful \u003d false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"            // Dummy values for time","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"            this.startTime \u003d dateTimeStrings.length \u003d\u003d 2","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"                    ? LocalTime.MAX","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"                    : this.parseTime(dateTimeStrings[1]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"            this.endTime \u003d dateTimeStrings.length \u003d\u003d 2","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"                    ? LocalTime.MAX","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"                    : this.parseTime(dateTimeStrings[3]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"            this.startDate \u003d LocalDate.parse(dateTimeStrings[0]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"            isParseStartDateSuccessful \u003d true;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"            this.endDate \u003d dateTimeStrings.length \u003d\u003d 2","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"                    ? LocalDate.parse(dateTimeStrings[1])","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"                    : LocalDate.parse(dateTimeStrings[2]);","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"            this.validateDateTime();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"            if (isParseStartDateSuccessful) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"                throw new BrockException(\"End date string is not valid!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"            } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"                throw new BrockException(\"Start date string is not valid!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"     * Converts start/end time from {@code String} to {@code LocalTime}.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"     * @param timeString Time as a {@code String}.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"     * @return Time as a {@code LocalTime}.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"    private LocalTime parseTime(String timeString) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"        String hours \u003d timeString","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"                .substring(0, 2);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"        String minutes \u003d timeString","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"                .substring(2);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"        return LocalTime.of(Integer.parseInt(hours),","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"                Integer.parseInt(minutes));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the start/end date is valid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"     * If start/end time is provided (ie: not a dummy), checks if it is valid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If they are not valid.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"    private void validateDateTime() throws BrockException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"        if (this.startDate.isBefore(today)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Start date cannot be earlier than today!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"        if (this.endDate.isBefore(today)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"End date cannot be earlier than today!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"        if (this.endDate.isBefore(startDate)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"End date cannot be earlier than start date!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"        if (this.startTime \u003d\u003d LocalTime.MAX) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"            if (endDate.equals(startDate)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"                throw new BrockException(\"Without time specified,\"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"                        + \" end date must be after start date!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"            if (this.endDate.equals(startDate)","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"                    \u0026\u0026 !endTime.isAfter(startTime)) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"                throw new BrockException(\"End time must be after start time!\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"        return \"E\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YangQF2002"},"content":"    public String getExtraInfo() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YangQF2002"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YangQF2002"},"content":"        String startDateFormatted \u003d this.startDate","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YangQF2002"},"content":"                .format(formatter);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YangQF2002"},"content":"        String endDateFormatted \u003d this.endDate","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YangQF2002"},"content":"                .format(formatter);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YangQF2002"},"content":"        return \"(from: \" + startDateFormatted","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YangQF2002"},"content":"                + (this.startTime \u003d\u003d LocalTime.MAX","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YangQF2002"},"content":"                ? \" | \"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YangQF2002"},"content":"                : \", \" + this.startTime.toString() + \" | \")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YangQF2002"},"content":"                + \"to: \" + endDateFormatted","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YangQF2002"},"content":"                + (this.endTime \u003d\u003d LocalTime.MAX","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YangQF2002"},"content":"                ? \"\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YangQF2002"},"content":"                : \", \" + this.endTime.toString())","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YangQF2002"},"content":"                + \")\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"YangQF2002":131}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":" * Abstract base class to provide a template for a task object.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"    private final String description;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"     * Stores the task description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"     * Sets the task status to be uncompleted","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"    protected Task(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"     * Gets the task description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     * @return Description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"        return this.description;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"     * Sets the task status to be completed","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"     * Sets the task status to be uncompleted","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     * Gets the task status as an icon.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"     * @return Icon representing task status.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"        return this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     * Gets the type of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"     * @return Task type.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"     * Gets extra information about the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"     * (Eg: due date, start date)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"     * @return Extra information about the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"    public abstract String getExtraInfo();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"YangQF2002":67}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":" * Class to store {@code Task} objects.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"public class TaskList {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"     * Stores the list of tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks {@code ArrayList} of tasks to be stored.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"     * Counts the current number of tasks in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"     * @return the current number of tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    public int numTasks() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"                count +\u003d 1;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"            } else {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"                break;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"        return count;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"     * Marks a particular task in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     * @param taskIndex Index of the task to be marked.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"     * @return True if able to mark, false otherwise.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"    public boolean markTask(int taskIndex) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        assert taskIndex \u003c numTasks() : \"Invalid task index supplied for task to be marked.\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"        boolean isSuccessful;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"        if (task.getStatusIcon() \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"            isSuccessful \u003d false; // Has been marked already","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"            task.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"            isSuccessful \u003d true;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"        return isSuccessful;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"     * Unmarks a particular task in the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"     * @param taskIndex Index of the task to be unmarked.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"     * @return True if able to unmark, false otherwise.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"    public boolean unmarkTask(int taskIndex) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"        assert taskIndex \u003c numTasks() : \"Invalid task index supplied for task to be unmarked.\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"        Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"        boolean isSuccessful;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"        if (task.getStatusIcon() \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"            isSuccessful \u003d false; // Has not been marked yet","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"            task.markAsUndone();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"            isSuccessful \u003d true;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"        return isSuccessful;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"     * Adds a new task into the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"     * @param task New task to be added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"     * Removes an existing task from the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"     * @param taskIndex Index of the task to be removed.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"    public void removeFromList(int taskIndex) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"        assert taskIndex \u003c numTasks() : \"Invalid task index supplied for task to be removed.\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"        this.tasks.remove(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"     * Gets a particular task from the list.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"     * @param taskIndex Index of the task to be retrieved.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"     * @return The retrieved task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"        assert taskIndex \u003c numTasks() : \"Invalid task index supplied for task to be fetched.\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"        return this.tasks.get(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"     * Gets the details of a particular task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"     * @param task Task to get details of.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"     * @return Task details as a single string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"    public String getTaskDetails(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"        return \"[\" + task.getTaskType() + \"]\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"                + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YangQF2002"},"content":"                + task.getDescription()","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YangQF2002"},"content":"                + task.getExtraInfo();","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YangQF2002"},"content":"     * Gets the details of a particular task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YangQF2002"},"content":"     * @param taskIndex Index of the task to get details of.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YangQF2002"},"content":"     * @return Task details as a single string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YangQF2002"},"content":"    public String getTaskDetails(int taskIndex) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YangQF2002"},"content":"        assert taskIndex \u003c numTasks() : \"Invalid task index supplied for task whose details are to be fetched.\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YangQF2002"},"content":"        Task task \u003d this.getTask(taskIndex);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YangQF2002"},"content":"        return this.getTaskDetails(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YangQF2002"},"content":"     * Gets a summary of the total number of tasks.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YangQF2002"},"content":"     * @return Task summary as a single string.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YangQF2002"},"content":"    public String getTasksSummary() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YangQF2002"},"content":"        int totalTasks \u003d this.numTasks();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YangQF2002"},"content":"        return \"Now you have \"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YangQF2002"},"content":"                + totalTasks","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YangQF2002"},"content":"                + (totalTasks \u003d\u003d 1","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YangQF2002"},"content":"                ? \" task in the list.\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YangQF2002"},"content":"                : \" tasks in the list.\")","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YangQF2002"},"content":"                + \u0027\\n\u0027;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YangQF2002"},"content":"     * Lists the current tasks present, as a single string.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YangQF2002"},"content":"     * @return String representing all current tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YangQF2002"},"content":"    public String listTasks() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YangQF2002"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YangQF2002"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YangQF2002"},"content":"            result.append(taskNumber).append(\". \")","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YangQF2002"},"content":"                    .append(this.getTaskDetails(task)).append(\u0027\\n\u0027);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YangQF2002"},"content":"            taskNumber++;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YangQF2002"},"content":"        return result.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YangQF2002"},"content":"     * Checks if description of task matches the keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YangQF2002"},"content":"     * @param description Task description.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YangQF2002"},"content":"     * @param keyword Keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YangQF2002"},"content":"     * @return True if matches, false otherwise.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YangQF2002"},"content":"    private boolean isDescriptionMatching(String description, String keyword) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YangQF2002"},"content":"        String[] words \u003d description.split(\" \");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YangQF2002"},"content":"        return Arrays.stream(words)","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YangQF2002"},"content":"                .anyMatch(word -\u003e word.equals(keyword));","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YangQF2002"},"content":"     * Searches the task list for matching tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YangQF2002"},"content":"     * @param keyword Tasks must match this keyword.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YangQF2002"},"content":"     * @return {@code String[]}","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YangQF2002"},"content":"     *      , first element is the matching tasks as a string","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YangQF2002"},"content":"     *      , second element is the number of matching tasks.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YangQF2002"},"content":"    public String[] findMatchingTasks(String keyword) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YangQF2002"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YangQF2002"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YangQF2002"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YangQF2002"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YangQF2002"},"content":"            if (this.isDescriptionMatching(description, keyword)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YangQF2002"},"content":"                String taskDetails \u003d this.getTaskDetails(task);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YangQF2002"},"content":"                result.append(taskNumber).append(\". \")","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YangQF2002"},"content":"                        .append(taskDetails).append(\u0027\\n\u0027);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"YangQF2002"},"content":"                taskNumber++;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"YangQF2002"},"content":"        // After the iteration, if task number is for example 5","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"YangQF2002"},"content":"        // Then, there are actually only 4 matching tasks","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"YangQF2002"},"content":"        return new String[]{result.toString(), Integer.toString(taskNumber - 1)};","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"YangQF2002"},"content":"     * Clears all tasks in the task list.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"YangQF2002"},"content":"    public void clear() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"YangQF2002"},"content":"        this.tasks.clear();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":208}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package task;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":" * Class representing a todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"     * Stores the todo task description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"     * Sets the todo task status to be uncompleted.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"     * @param description Todo task description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"        return \"T\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"    public String getExtraInfo() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        return \"\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"YangQF2002":32}},{"path":"src/main/java/utility/CommandUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package utility;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" * Class with commonly used utility functions for commands","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" *      to reduce code duplication","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"public class CommandUtility {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * Enum used to represent due, start and end dateTimes.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * To help validate dateTimes of deadline and event commands.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    public enum Context {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"        DUE,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        START,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        END","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * Checks if a string holds an integer or not.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWord String to be checked.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     * @return True if string does not hold an integer, false otherwise.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"    public static boolean isNotInteger(String commandWord) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"            Integer.parseInt(commandWord);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        } catch (NumberFormatException | NullPointerException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"            return true;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        return false;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"     * Gets the task index of a {@code Task} object in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"     * From a command that specifies a task number.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"     * @param command Command to be examined.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"     * @return Task index obtained.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"    public static int getTaskIndex(String command) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"        char taskNumber \u003d command.charAt(command.length() - 1);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"        return Character.getNumericValue(taskNumber) - 1;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"YangQF2002"},"content":"     * Gets the label to be used in validating date and time.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"YangQF2002"},"content":"     * @param context       Indicates if method is looking at due dateTime, start dateTime or end dateTime.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"YangQF2002"},"content":"     * @return Label based on context.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"YangQF2002"},"content":"    private static String getLabel(Context context) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"YangQF2002"},"content":"        String label;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"YangQF2002"},"content":"        // CHECKSTYLE.OFF: Indentation","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"YangQF2002"},"content":"        label \u003d switch (context) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"YangQF2002"},"content":"            case DUE -\u003e \"Due \";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"YangQF2002"},"content":"            case START -\u003e \"Start \";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"YangQF2002"},"content":"            case END -\u003e \"End \";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"YangQF2002"},"content":"        };","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"YangQF2002"},"content":"        // CHECKSTYLE.ON: Indentation","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"YangQF2002"},"content":"        return label;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"YangQF2002"},"content":"     * Splits dateTimeString by space.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"YangQF2002"},"content":"     * @param dateTimeString String to be split.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"YangQF2002"},"content":"     * @return Split string.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"YangQF2002"},"content":"    private static String[] processDateTimeString(String dateTimeString) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"YangQF2002"},"content":"        return dateTimeString.trim()","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"YangQF2002"},"content":"                .split(\" \");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the dateString is valid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"YangQF2002"},"content":"     * @param dateString DateString to be checked.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"YangQF2002"},"content":"     * @param label Indicating if its due, start or end date.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If dateString is invalid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"YangQF2002"},"content":"    private static void validateDate(String dateString, String label) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"YangQF2002"},"content":"        String[] dateParts \u003d dateString.split(\"-\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"YangQF2002"},"content":"        if (dateParts.length !\u003d 3) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(label + \"date \u0026 time following \u003cyyyy-mm-dd\u003e format:\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"YangQF2002"},"content":"                    + label + \"date is not in the \u003cyyyy-mm-dd\u003e format!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the timeString is valid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"YangQF2002"},"content":"     * @param timeString TimeString to be checked.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"YangQF2002"},"content":"     * @param label Indicating if its due, start or end time.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If timeString is invalid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"YangQF2002"},"content":"    private static void validateTime(String timeString, String label) throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"YangQF2002"},"content":"        if (CommandUtility.isNotInteger(timeString)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(label + \"date \u0026 time following \u003cyyyy-mm-dd\u003e \u003c24hr-time\u003e format:\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"YangQF2002"},"content":"                    + label + \"time is not a number!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"YangQF2002"},"content":"            try {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"YangQF2002"},"content":"                LocalTime.parse(timeString,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"YangQF2002"},"content":"                        java.time.format.DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"YangQF2002"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"YangQF2002"},"content":"                throw new BrockException(\"Time must be in HHmm format and between 0000 and 2359!\");","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"YangQF2002"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"YangQF2002"},"content":"     * Checks if the dateTime string given is valid or not.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"YangQF2002"},"content":"     * @param dateTimeString String representing dateTime.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"YangQF2002"},"content":"     * @param context        Indicates if method is looking at due dateTime, start dateTime or end dateTime.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"YangQF2002"},"content":"     * @return Validated date and time strings separately.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If dateTime string is invalid.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"YangQF2002"},"content":"    public static String[] validateDateTime(String dateTimeString, Context context)","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"YangQF2002"},"content":"            throws BrockException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"YangQF2002"},"content":"        String label \u003d CommandUtility.getLabel(context);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"YangQF2002"},"content":"        String[] dateTimeParts \u003d processDateTimeString(dateTimeString);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"YangQF2002"},"content":"        String dateStringFinal;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"YangQF2002"},"content":"        String timeStringFinal \u003d \"\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"YangQF2002"},"content":"        if (dateTimeParts.length \u003e 2) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(String.format(\"Valid %s date \u0026 time must follow one of the below formats:\\n\",","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"YangQF2002"},"content":"                    label.toLowerCase())","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"YangQF2002"},"content":"                    + \"\u003cyyyy-mm-dd\u003e OR\\n\"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"YangQF2002"},"content":"                    + \"\u003cyyyy-mm-dd\u003e \u003c24hr-time\u003e\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"YangQF2002"},"content":"        if (dateTimeParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"YangQF2002"},"content":"            String timeString \u003d dateTimeParts[1];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"YangQF2002"},"content":"            validateTime(timeString, label);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"YangQF2002"},"content":"            timeStringFinal \u003d timeString;","lastModifiedDate":"2024-09-11","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"YangQF2002"},"content":"        String dateString \u003d dateTimeParts[0];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"YangQF2002"},"content":"        validateDate(dateString, label);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"YangQF2002"},"content":"        dateStringFinal \u003d dateString;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"YangQF2002"},"content":"        if (timeStringFinal.isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"YangQF2002"},"content":"            return new String[]{dateStringFinal};","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"YangQF2002"},"content":"        } else {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"YangQF2002"},"content":"            return new String[]{dateStringFinal, timeStringFinal};","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"YangQF2002"},"content":"     * Checks if length is valid (for mark, unmark or delete).","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWords Command to be checked.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"YangQF2002"},"content":"     * @param label String indication of which command it is.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If length is not valid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"YangQF2002"},"content":"    public static void validateLength(String[] commandWords, String label) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"YangQF2002"},"content":"        int commandLength \u003d commandWords.length;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"YangQF2002"},"content":"        if (commandLength \u003d\u003d 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Missing task number!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"YangQF2002"},"content":"        if (commandLength \u003e 2 || CommandUtility.isNotInteger(commandWords[1])) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(label","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"YangQF2002"},"content":"                    + \" command is in the form \"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"YangQF2002"},"content":"                    + label","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"YangQF2002"},"content":"                    + \" \u003ctask-number\u003e!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"YangQF2002"},"content":"     * Checks if task number specified is valid (for mark, unmark or delete).","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"YangQF2002"},"content":"     * @param commandWords Command to be checked.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"YangQF2002"},"content":"     * @param tasks {@code TaskList} object that stores the current tasks in an {@code ArrayList}.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"YangQF2002"},"content":"     * @throws BrockException If task number is not valid.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"YangQF2002"},"content":"    public static void validateTaskNumber(String[] commandWords, TaskList tasks) throws BrockException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"YangQF2002"},"content":"        int taskNumber \u003d Integer.parseInt(commandWords[1]);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"YangQF2002"},"content":"        int totalTasks \u003d tasks.numTasks();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"YangQF2002"},"content":"        if (taskNumber \u003e totalTasks || taskNumber \u003c 1) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Task number does not exist!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"YangQF2002":192}},{"path":"src/main/java/utility/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package utility;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":" * A pair class to hold two objects of different types.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":" *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":" * @param \u003cT\u003e First object, of type T.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":" * @param \u003cU\u003e Second object, of type U.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"    private final T first;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"    private final U second;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"     * Creates a {@code Pair} object.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * @param first First item it holds.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     * @param second Second item it holds.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    public Pair(T first, U second) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        this.first \u003d first;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        this.second \u003d second;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"     * Gets the first item in the {@code Pair} object","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"     * @return The first item.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"    public T getFirst() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        return first;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"     * Gets the second item in the {@code Pair} object","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"     * @return The second item.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"    public U getSecond() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"        return second;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"YangQF2002":41}},{"path":"src/main/java/utility/StorageUtility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package utility;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":" * Class with commonly used utility functions for storage","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":" *      to reduce code duplication.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"public class StorageUtility {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"     * Removes closing bracket from the body string of each task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"     * So that the correct date or time can be extracted for deadline and event tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"     * @param target String fragment with closing bracket to be removed.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"     * @return String without the closing bracket.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"    public static String removeCloseBracket(String target) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"        int length \u003d target.length();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"        char lastChar \u003d target.charAt(length - 1);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"        if (lastChar !\u003d \u0027)\u0027) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Invalid deadline/event entry - missing closing bracket!\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"        // Substring from start to the second last index","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"        return target.substring(0, length - 1);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"     * Parses date from \"MMM dd yyyy format\" into \"yyyy-mm-dd\" format.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"     * @param targetDate Date string to be parsed.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"     * @return Parsed date string.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"    public static String parseDate(String targetDate) throws BrockException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"            return LocalDate.parse(targetDate, dateFormatter)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"                    .toString();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"            throw new BrockException(\"Invalid deadline/event entry - date format is wrong!\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"YangQF2002":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"        \u003cCircle fx:id\u003d\"circle\" radius\u003d\"50.0\" pickOnBounds\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"YangQF2002":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controllers.MainWindow\"\u003e","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"265.0\" AnchorPane.bottomAnchor\u003d\"7.0\" AnchorPane.leftAnchor\u003d\"7.0\" AnchorPane.rightAnchor\u003d\"135.0\" /\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"280.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"120.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"7.0\" AnchorPane.rightAnchor\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vbarPolicy\u003d\"NEVER\" prefHeight\u003d\"541.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"49.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"YangQF2002":19}},{"path":"src/test/java/commands/BaseCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"import storage.task.TaskStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"import storage.temp.TempStorage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"import task.TaskList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"public abstract class BaseCommandTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"    protected static final TaskStorage TASK_STORAGE \u003d new TaskStorage();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"    protected static final TempStorage TEMP_STORAGE \u003d new TempStorage();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"    protected static final TaskList TASKS \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    @BeforeAll","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    public static void createSaveFile() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"            TASK_STORAGE.createFile();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"    @AfterEach","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"    public void resetFileAndTasks() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"        try {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"            TASK_STORAGE.writeToFile(\"\", false);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"            TASKS.clear();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        } catch (BrockException e) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"        }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"    protected String removeQuirkyResponse(String rawOutput) {","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"        int lastNewLineIndex \u003d rawOutput.lastIndexOf(\"\\n\");","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"        return rawOutput.substring(0, lastNewLineIndex);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"YangQF2002":42}},{"path":"src/test/java/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"public class ListCommandTest extends BaseCommandTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"    private static final ListCommand LIST_COMMAND \u003d new ListCommand(\"list\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    public void execute_singleTask_correctResponse() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"        TodoCommand tc \u003d new TodoCommand(\"todo borrow book\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"        assertDoesNotThrow(() -\u003e tc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"                Here is the task in your list:","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"                1. [T][ ] borrow book\\s","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"                \"\"\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"        String rawOutput \u003d LIST_COMMAND.execute(TASK_STORAGE, TEMP_STORAGE, TASKS);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        String processedOutput \u003d this.removeQuirkyResponse(rawOutput);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"        assertEquals(expectedOutput, processedOutput);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    public void execute_noTask_correctResponse() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"                Here are the tasks in your list:","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"                No current tasks!","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"                \"\"\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        String rawOutput \u003d LIST_COMMAND.execute(TASK_STORAGE, TEMP_STORAGE, TASKS);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"        String processedOutput \u003d this.removeQuirkyResponse(rawOutput);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        assertEquals(expectedOutput, processedOutput);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"YangQF2002":35}},{"path":"src/test/java/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"public class MarkCommandTest extends BaseCommandTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    public void execute_missingNumber_throwsException() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"        MarkCommand mc \u003d new MarkCommand(\"mark\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"        assertThrows(BrockException.class, () -\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"                mc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    public void execute_invalidNumber_throwsException() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        MarkCommand mc \u003d new MarkCommand(\"mark 5\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"        assertThrows(BrockException.class, () -\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"                mc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"    public void execute_unmarkedTask_marksTask() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"        TodoCommand tc \u003d new TodoCommand(\"todo borrow book\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        assertDoesNotThrow(() -\u003e tc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"                Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"                  [T][X] borrow book\\s","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"                \"\"\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"        // Local variable in function must be final / effectively final!","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"        // By making it an array, it satisfies this","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"        final String[] temp \u003d new String[1];","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"        MarkCommand mc \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"            String rawOutput \u003d mc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"            String processedOutput \u003d this.removeQuirkyResponse(rawOutput);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"            temp[0] \u003d processedOutput;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        });","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"        assertEquals(expectedOutput, temp[0]);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"YangQF2002":47}},{"path":"src/test/java/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"package commands;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"YangQF2002"},"content":"import exceptions.BrockException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"YangQF2002"},"content":"public class UnmarkCommandTest extends BaseCommandTest {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"YangQF2002"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"YangQF2002"},"content":"    public void execute_missingNumber_throwsException() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"YangQF2002"},"content":"        UnmarkCommand uc \u003d new UnmarkCommand(\"unmark\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"YangQF2002"},"content":"        assertThrows(BrockException.class, () -\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"YangQF2002"},"content":"                uc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"YangQF2002"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"YangQF2002"},"content":"    public void execute_invalidNumber_throwsException() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"YangQF2002"},"content":"        UnmarkCommand uc \u003d new UnmarkCommand(\"unmark 5\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"YangQF2002"},"content":"        assertThrows(BrockException.class, () -\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"YangQF2002"},"content":"                uc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"YangQF2002"},"content":"    @Test","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"YangQF2002"},"content":"    public void execute_markedTask_unmarksTask() {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"YangQF2002"},"content":"        TodoCommand tc \u003d new TodoCommand(\"todo borrow book\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"YangQF2002"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"YangQF2002"},"content":"            tc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"YangQF2002"},"content":"            MarkCommand mc \u003d new MarkCommand(\"mark 1\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"YangQF2002"},"content":"            mc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"YangQF2002"},"content":"        });","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"YangQF2002"},"content":"        String expectedOutput \u003d \"\"\"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"YangQF2002"},"content":"                OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"YangQF2002"},"content":"                  [T][ ] borrow book\\s","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"YangQF2002"},"content":"                \"\"\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"YangQF2002"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"YangQF2002"},"content":"        // Local variable in function must be final / effectively final!","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"YangQF2002"},"content":"        // By making it an array, it satisfies this","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"YangQF2002"},"content":"        final String[] temp \u003d new String[1];","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"YangQF2002"},"content":"        UnmarkCommand uc \u003d new UnmarkCommand(\"unmark 1\");","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"YangQF2002"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"YangQF2002"},"content":"            String rawOutput \u003d uc.execute(TASK_STORAGE, TEMP_STORAGE, TASKS);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"YangQF2002"},"content":"            String processedOutput \u003d this.removeQuirkyResponse(rawOutput);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"YangQF2002"},"content":"            temp[0] \u003d processedOutput;","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"YangQF2002"},"content":"        });","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"YangQF2002"},"content":"        assertEquals(expectedOutput, temp[0]);","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"YangQF2002"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"YangQF2002"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false}],"authorContributionMap":{"YangQF2002":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YangQF2002"},"content":"todo borrow book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"YangQF2002"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"YangQF2002"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"YangQF2002"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"YangQF2002"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"YangQF2002"},"content":"unmark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"YangQF2002"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"YangQF2002"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"YangQF2002":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"YangQF2002"},"content":"javac  -cp ..\\src\\main\\java\\Brock.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"YangQF2002"},"content":"java -classpath ..\\bin Brock \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"YangQF2002":2,"-":19}}]
