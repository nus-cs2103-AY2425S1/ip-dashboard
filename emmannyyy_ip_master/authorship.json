[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"# monique.monique project template","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"3. After that, locate the `src/main/java/monique.monique.java` file, right-click it, and choose `Run monique.monique.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"emmannyyy":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"checkstyle {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"    archiveFileName \u003d \"Monique.jar\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"    archiveBaseName \u003d \"Monique\"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"application {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"    mainClass.set(\"monique.Launcher\")","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":28,"-":37}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"# monique.monique User Guide","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"emmannyyy":1,"-":29}},{"path":"src/main/java/monique/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":" * Represents a dialog box in the user interface that displays a text message and an associated image.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":" * The dialog box is created with an image and text, and it can be styled differently for the user and for Monique.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"     * Initializes a new {@code DialogBox} with the specified text and image.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"     * This constructor loads the FXML layout and sets up the dialog box with the provided content.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"     * @param text the text to be displayed in the dialog box","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"     * @param img the image to be displayed in the dialog box","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"        Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     * Reverses the order of the children nodes in the dialog box and aligns the box to the top left.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     * This method is used to flip the dialog box when styling the dialog for Monique.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"    private void flip() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"     * Creates a dialog box for the user with a light blue background.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"     * @param s the text to be displayed in the dialog box","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"     * @param i the image to be displayed in the dialog box","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"     * @return a {@code DialogBox} instance styled for the user","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"    public static DialogBox getUserDialog(String s, Image i) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"        DialogBox db \u003d new DialogBox(s, i);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"        //create blue background for userDialog","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"        BackgroundFill userBg \u003d new BackgroundFill(","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"                Color.LIGHTBLUE,","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"                new CornerRadii(10),","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"                new Insets(10, 10, 10, 10)","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"        );","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"        db.setBackground(new Background(userBg));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"        return db;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"emmannyyy"},"content":"     * Creates a dialog box for Monique with a light green background and flips the dialog box for correct alignment.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"emmannyyy"},"content":"     * @param s the text to be displayed in the dialog box","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"emmannyyy"},"content":"     * @param i the image to be displayed in the dialog box","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"emmannyyy"},"content":"     * @return a {@code DialogBox} instance styled for Monique","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"emmannyyy"},"content":"    public static DialogBox getMoniqueDialog(String s, Image i) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"emmannyyy"},"content":"        DialogBox db \u003d new DialogBox(s, i);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"emmannyyy"},"content":"        //create blue background for userDialog","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"emmannyyy"},"content":"        BackgroundFill dukeBg \u003d new BackgroundFill(","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"emmannyyy"},"content":"                Color.LIGHTGREEN,","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"emmannyyy"},"content":"                new CornerRadii(10),","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"emmannyyy"},"content":"                new Insets(10, 10, 10, 10)","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"emmannyyy"},"content":"        );","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"emmannyyy"},"content":"        db.setBackground(new Background(dukeBg));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"emmannyyy"},"content":"        db.flip();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"emmannyyy"},"content":"        return db;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"emmannyyy":110}},{"path":"src/main/java/monique/GuideText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eGuideText\u003c/code\u003e class stores a guide text message that informs users how to use the commands","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * in the Monique application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"public class GuideText {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"    //this file is created to store the long string message to inform users how to use the commands","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"     * A constant string that provides detailed instructions on how to use various commands in the Monique application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"     * It covers commands such as listing tasks, marking/unmarking tasks, adding tasks with deadlines or events,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"     * and deleting tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    public static final String GUIDE \u003d \"\"\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    Here are the following commands:","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"            1. To list out current things on your todo list, type \"list\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"            2. To mark or unmark out an item as complete/incomplete, type \"mark\"/\"unmark\" followed by the item","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"            number. Note that this is done on 1-based indexing","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"            For example, \"mark 1\" will mark item 1 as complete.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"            Similarly, \"unmark 2\" will mark item 2 as incomplete.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"            3. To exit, type \"bye\"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"            4. To create a \"todo\" item, type \"todo\" followed by the item description","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"            e.g: \"todo do homework\" adds \"do homework\" as an todo task.","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"            5. To create a \"deadline\" item, type \"deadline\" followed by the item description, and finally","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"            followed by a deadline \"/by deadline\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"            6. To create an \"event\" item, type \"event\" followed by the item description, and followed by a start time \"/from start time\", and finally followed by an end time \"/to end time\".","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    e.g: \"event CS2103 lecture /from \u003cfrom date\u003e /to \u003cto date\u003e\" adds an event for CS2103 lecture, from some \u003cfrom date\u003e to some \u003cto date\u003e. Note that the acceptable date format is","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    either: M/d/yyyy HHmm, M/d/yyyy, M-d-yyyy HHmm or M-d-yyyy.","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"                7. To delete an item, type \"delete\" followed by the item number.\"\"\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"emmannyyy":41}},{"path":"src/main/java/monique/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" * A launcher class for starting the JavaFX application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":" * This class serves as an entry point to the application by launching the {@code Main} class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":" * It is used to work around classpath issues that might arise when running the JavaFX application directly.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"public class Launcher {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"     * The main method to launch the JavaFX application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"     * It calls the {@code Application.launch()} method to start the {@code Main} class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"     * @param args command-line arguments passed to the application","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"emmannyyy":21}},{"path":"src/main/java/monique/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" * The main entry point for the JavaFX application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * This class extends {@code Application} and sets up the primary stage for the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" * It initializes the main window and displays it to the user.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"     * The main entry point for the JavaFX application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     * This method is called by the JavaFX runtime to start the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * It sets up the primary stage, initializes the main window, and shows it.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     * @param stage the primary stage for this application, onto which scenes can be set","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"            MainWindow mainWindow \u003d new MainWindow(stage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"            Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"            stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"            mainWindow.showWelcomeMessage();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"            stage.show(); // Render the stage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"emmannyyy":35}},{"path":"src/main/java/monique/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":" * Controller class for the main GUI of the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":" * This class is responsible for managing the interactions between the user interface components,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":" * handling user input, and updating the display with responses from the Monique chatbot.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"    private Monique monique;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    private Image moniqueImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/monique.png\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gigachad.jpg\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"    private Stage stage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a MainWindow instance with the given stage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     * Initializes the FXML components and sets up the Monique instance.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"     * @param stage the primary stage for this application","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    public MainWindow(Stage stage) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"            setMonique(new Monique(FILE_PATH));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     * Initializes the ScrollPane to automatically scroll to the bottom as new messages are added.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"     * Displays a welcome message from the Monique instance in the dialog container.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"        String welcomeMessage \u003d monique.getWelcomeMessage();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"        dialogContainer.getChildren().add(DialogBox.getMoniqueDialog(welcomeMessage, moniqueImage));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"     * Injects the Monique instance into this controller.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"     * @param monique the Monique instance to be used by this controller","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"    public void setMonique(Monique monique) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"        this.monique \u003d monique;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"     * Handles user input by creating dialog boxes for user and Monique\u0027s replies,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"emmannyyy"},"content":"     * appends them to the dialog container, and clears the user input field.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"emmannyyy"},"content":"     * If the response is a goodbye message, the application will close after a short delay.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"emmannyyy"},"content":"    @FXML","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"emmannyyy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"emmannyyy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"emmannyyy"},"content":"        String response \u003d monique.getResponse(input);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"emmannyyy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"emmannyyy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"emmannyyy"},"content":"                DialogBox.getMoniqueDialog(response, moniqueImage)","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"emmannyyy"},"content":"        );","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"emmannyyy"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"emmannyyy"},"content":"        if (response.equalsIgnoreCase(monique.getUi().showGoodbye())) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"emmannyyy"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"emmannyyy"},"content":"            pause.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"emmannyyy"},"content":"            pause.play();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"emmannyyy":106}},{"path":"src/main/java/monique/Monique.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.MoniqueException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import monique.parser.Parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eMonique\u003c/code\u003e class represents the main class of the Monique application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":" * It initializes the necessary components such as the user interface, storage, and task list,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":" * and manages the flow of the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Monique {","lastModifiedDate":"2024-08-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"    //This version uses and implements checkstyle","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eMonique\u003c/code\u003e object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     * Initializes the user interface, storage system, and task list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     * from the specified file path.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     * @param filePath The file path for loading the task list data.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * @throws IOException If an input or output exception occurs during file handling.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    public Monique(String filePath) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"        this.taskList \u003d new TaskList(storage.loadData());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"     * Processes the user input by parsing it into a command, executing the command,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"     * and returning an appropriate response. If the command is inactive, a goodbye message","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"     * is returned. If an exception is thrown during command execution, the advice from the","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     * exception is returned.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     * @param input the user input string to be processed","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"     * @return the response generated based on the input, command execution, or exception advice","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"            if (!c.isActive()) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"                return ui.showGoodbye();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"            return c.getResponse(ui);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"        } catch (MoniqueException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"            return e.advice();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-08-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the welcome message to be displayed when the application starts.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     * @return the welcome message from the Ui instance","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"        return ui.showWelcome();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the Ui instance associated with this Monique instance.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"     * @return the Ui instance","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"    public Ui getUi() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"        return this.ui;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-08-14","isFullCredit":false}],"authorContributionMap":{"emmannyyy":74,"-":3}},{"path":"src/main/java/monique/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * This command adds a specified \u003ccode\u003eTask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e and informs the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" * \u003ccode\u003eUi\u003c/code\u003e about the addition.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    private final Task task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     * Constructs an \u003ccode\u003eAddCommand\u003c/code\u003e with the specified task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * @param task the task to be added to the task list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"        super();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * Executes the add command by adding the task to the task list and updating the UI.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e where the task will be added","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance used to display messages","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance used to manage data persistence","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"        ui.addMessage(this.task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     * @return true, indicating that the command is active","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"     * Returns the task associated with this command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"     * @return the task to be added","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"    public Task getTask() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"        return this.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"     * Generates a response string based on the task information and the user interface.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     * This method utilizes the provided {@link Ui} instance to create and return a response message","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     * related to the current task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface instance used to generate the response message","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"     * @return a string response generated by the {@link Ui} instance for the current task","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"        return ui.addMessage(this.task);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":68}},{"path":"src/main/java/monique/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" * This command saves the current task list to storage and displays a goodbye message to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a \u003ccode\u003eByeCommand\u003c/code\u003e object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"        super();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     * Executes the exit command by saving the task list to storage and displaying a goodbye message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e containing the tasks to be saved","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance used to display the goodbye message","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance used to manage data persistence","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     * Uses UI to return the goodbye string","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     * @return goodbye string","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     * @return false, indicating that the chatbot will terminate after the bye command","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":47}},{"path":"src/main/java/monique/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.MoniqueException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" * Represents an abstract command in the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * Commands define operations that can be executed, and each command must implement","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" * how it interacts with the task list, user interface, and storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"public abstract class Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"     * Subclasses must implement this method to define specific command behavior.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e to interact with during execution","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance used for interacting with the user","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance used for data persistence","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     * @throws MoniqueException if an error occurs during command execution","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws MoniqueException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * @return true if the bot remains active after the command, false otherwise","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    public abstract boolean isActive();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     * Returns a string response after the command is executed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     * @return the response string","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    public abstract String getResponse(Ui ui);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":37}},{"path":"src/main/java/monique/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.DeleteException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * Represents a command to delete a specific task from the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" * The command identifies a task by its index and removes it from the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"    private final int taskNum;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    private String deleteMessage \u003d \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e with the specified task index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     * @param taskNum the index of the task to be deleted","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"        super();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     * Executes the delete command, which involves removing a task from the task list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * and updating the user interface and storage accordingly.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e from which the task will be deleted","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance used for notifying the user","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance used for data persistence","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     * @throws DeleteException if the task index is out of range or invalid","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DeleteException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"        if (this.taskNum \u003e tasks.getNumItems() - 1 || this.taskNum \u003c 0) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"            throw new DeleteException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"        Task deletedTask \u003d tasks.getTask(this.taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"        sb.append(ui.deleteMessage(deletedTask, tasks));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"        tasks.deleteTask(this.taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"        this.deleteMessage \u003d sb.toString();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"     * @return true since bot should remain active after delete commands","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"     * Compares this \u003ccode\u003eDeleteCommand\u003c/code\u003e instance with another object for equality.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     * Two \u003ccode\u003eDeleteCommand\u003c/code\u003e instances are considered equal if their task numbers are the same.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     * @param obj the object to be compared with this \u003ccode\u003eDeleteCommand\u003c/code\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     * @return true if the objects are equal, false otherwise","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"        // Check if the object is compared with itself","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"            return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"        // Check if the object is an instance of DeleteCommand","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"        if (obj instanceof DeleteCommand other) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"            // Compare taskNum of both objects","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"            return this.taskNum \u003d\u003d other.taskNum;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"        // If obj is not an instance of DeleteCommand, return false","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"        return false;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the response message for a delete operation.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"     * This method returns the message associated with the deletion of a task, which","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"     * was previously set in the command execution.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface instance (not used in this method)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"     * @return a string response containing the message related to the delete operation","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"emmannyyy"},"content":"        return this.deleteMessage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":97}},{"path":"src/main/java/monique/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import java.util.List;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":" * Represents a command to find tasks in the task list based on a search key.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":" * This command searches for tasks that contain a specified search key in their description","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":" * and provides the search results to the user interface.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    private final String[] searchKeys;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    private String foundResults \u003d \"\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a {@code FindCommand} with the specified search key.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     * Uses a variable number of arguments","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * @param searchKeys the keys to search for in task descriptions","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    //Overloaded Constructor","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    public FindCommand(String ...searchKeys) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"        super();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"        assert searchKeys.length \u003e 0;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"        this.searchKeys \u003d searchKeys;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"     * Executes the find command, searching for tasks that contain the search key","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"     * in their description and updating the UI with the results.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the task list to search through","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface for displaying search results","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the storage used to save the tasks (not used in this method)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"        // Create a stream that filters tasks based on searchKeys","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"        List\u003cTask\u003e resultList \u003d tasks.getTaskList().stream()","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"                .filter(task -\u003e Arrays.stream(searchKeys)","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"                        .anyMatch(searchKey -\u003e task.getDescription()","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"                        .contains(searchKey)))","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"        this.foundResults \u003d ui.showFindResults((ArrayList\u003cTask\u003e) resultList);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether the command is active.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     * @return true, as the find command is always active","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"        return true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the response message from the find command execution.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface instance (not used in this method)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing the results of the find operation","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"        return this.foundResults;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"emmannyyy":78}},{"path":"src/main/java/monique/command/GuideCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.MarkException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * Represents a command to display a guide or help text to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" * This command provides information about available commands and their usage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"public class GuideCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a \u003ccode\u003eGuideCommand\u003c/code\u003e instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     * This constructor initializes the command without any additional parameters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"    public GuideCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"        super();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     * Executes the guide command, which involves calling the ui to print the guide text to the console.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     * This provides the user with information on how to use various commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e (not used in this command)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance (not used in this command)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance (not used in this command)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * @throws MarkException this command does not throw any exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MarkException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"        ui.printGuide();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"     * @return true since bot should remain active after the guide command","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the response message from the execution of the GuideCommand.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface instance used to get the guide text","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing the guide information provided by the UI","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"        return ui.printGuide();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":55}},{"path":"src/main/java/monique/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":" * This command prints all tasks with their respective indices to the console.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    private String listResult \u003d \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a \u003ccode\u003eListCommand\u003c/code\u003e instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * This constructor initializes the command without any additional parameters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"    public ListCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"        super();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     * Executes the list command, which involves printing all tasks in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     * Each task is displayed with its index in the list. If the task list is empty,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * an empty list message is shown using the \u003ccode\u003eUi\u003c/code\u003e instance.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e containing tasks to be listed","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance used to display the empty list message","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance (not used in this command)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks on your list:\\n\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"        IntStream.range(0, tasks.getNumItems())","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"                .forEach(i -\u003e {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"                    sb.append((i + 1)).append(\".\").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"                });","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"        if (tasks.getNumItems() \u003d\u003d 0) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"            this.listResult \u003d ui.emptyListMessage();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"        } else {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"            this.listResult \u003d sb.toString();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"     * @return true since bot should remain active after the list command","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the response message from the execution of the ListCommand.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface instance used to format the list results (not used in this method)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing the result of the list command","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"        return this.listResult;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":65}},{"path":"src/main/java/monique/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.MarkException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" * Represents a command to mark a specific task as complete in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * This command updates the status of a task to completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    public static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"    private final int taskNum;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    private String markMessage \u003d \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a \u003ccode\u003eMarkCommand\u003c/code\u003e instance with the specified task number.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * This constructor initializes the command with the task number to be marked.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     * @param taskNum the index of the task to be marked as complete","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"        super();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * Executes the mark command, which involves marking a specific task as complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * If the specified task number is invalid (i.e., out of range), a \u003ccode\u003eMarkException\u003c/code\u003e is thrown.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     * After marking the task, a message indicating the completion status is displayed using","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     * the \u003ccode\u003eUi\u003c/code\u003e instance","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e containing tasks to be marked","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance used to display the mark message","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance (not used in this command)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"     * @throws MarkException if the task number is invalid","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MarkException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"        if (this.taskNum \u003e tasks.getNumItems() - INDEX_OFFSET || this.taskNum \u003c 0) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"            throw new MarkException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"        assert (this.taskNum \u003c tasks.getNumItems());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"        tasks.markTask(this.taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"        this.markMessage \u003d ui.markMessage(tasks.getTask(this.taskNum));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"     * @return true since bot should remain active after the list command","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the response message from the execution of the MarkCommand.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface instance used to format the mark message (not used in this method)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing the mark message from the command execution","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"        return this.markMessage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":69}},{"path":"src/main/java/monique/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.MoniqueException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.UnknownCommandException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * Represents a command for handling unknown or invalid commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" * This command is used when the input command does not match any recognized commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     * @return true since bot should remain active after the Unknown Command","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     * Executes the UnknownCommand, which throws an \u003ccode\u003eUnknownCommandException\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     * This exception indicates that the command is unknown or invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e (not used in this command)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance (not used in this command)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance (not used in this command)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     * @throws MoniqueException always throws \u003ccode\u003eUnknownCommandException\u003c/code\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MoniqueException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"        throw new UnknownCommandException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"     * Determines if two \u003ccode\u003eUnknownCommand\u003c/code\u003e instances are equal.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"     * All instances of \u003ccode\u003eUnknownCommand\u003c/code\u003e are considered equal.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     * @param obj the object to be compared","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     * @return true if the object is an instance of \u003ccode\u003eUnknownCommand\u003c/code\u003e or the same instance, false otherwise","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"        // Check if the object is compared with itself","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"            return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"        // Check if the object is an instance of UnknownCommand","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"        return obj instanceof UnknownCommand; // All UnknownCommand instances are considered equal","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the response message for an unknown command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface instance used to format the response (not used in this method)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing the advice message for an unknown command from the {@link UnknownCommandException}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"        return new UnknownCommandException().advice();","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":66}},{"path":"src/main/java/monique/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.MarkException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" * Represents a command for unmarking a task in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * This command is used to change the status of a task from completed to not completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    public static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"    private final int taskNum;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    private String unmarkMessage \u003d \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     * Constructs an \u003ccode\u003eUnmarkCommand\u003c/code\u003e with the specified task number.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * @param taskNum the index of the task to unmark","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"        super();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * Executes the \u003ccode\u003eUnmarkCommand\u003c/code\u003e by unmarking the task at the specified index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     * Throws \u003ccode\u003eMarkException\u003c/code\u003e if the task number is invalid.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e to operate on","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the \u003ccode\u003eUi\u003c/code\u003e instance to handle user interactions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     * @param storage the \u003ccode\u003eStorage\u003c/code\u003e instance to manage data persistence","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     * @throws MarkException if the task number is out of range or invalid","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws MarkException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"        if (this.taskNum \u003e tasks.getNumItems() - INDEX_OFFSET || this.taskNum \u003c 0) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"            throw new MarkException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"        assert (this.taskNum \u003c tasks.getNumItems());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"        tasks.unmarkTask(this.taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"        this.unmarkMessage \u003d ui.unmarkMessage(tasks.getTask(this.taskNum));","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"     * Returns whether this chatbot will be active after the command executes.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"     * @return true since bot should remain active after the UnMark Command","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"    public boolean isActive() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"        return true;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the response message for an unmark command.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"     * @param ui the user interface instance used to format the response (not used in this method)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing the unmark message associated with this command","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"    public String getResponse(Ui ui) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"        return this.unmarkMessage;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":64}},{"path":"src/main/java/monique/exception/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eDeleteException\u003c/code\u003e class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" * when an error related to deleting an item occurs. It extends from \u003ccode\u003eMoniqueException\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"public class DeleteException extends MoniqueException {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eDeleteException\u003c/code\u003e with a default detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"     * The message indicates that the item number is not allowed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    public DeleteException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"        super(\"Delete Exception: Item Number is not allowed\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * Provides advice on how to handle a delete-related exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing advice for handling the delete exception, indicating that the item to be deleted does not exist.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    public String advice() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"        return \"Delete-related Exception. You have tried to delete an item which does not exist.\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"emmannyyy":26}},{"path":"src/main/java/monique/exception/IllegalDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eIllegalDateFormatException\u003c/code\u003e class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * when an invalid date format is encountered. It extends from \u003ccode\u003eMoniqueException\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"public class IllegalDateFormatException extends MoniqueException {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eIllegalDateFormatException\u003c/code\u003e with a default detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"     * The message indicates that the date format provided is illegal.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"    public IllegalDateFormatException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"        super(\"Illegal Date Format\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     * Provides advice on how to handle an illegal date format exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing advice for handling the exception, indicating that the date-time format used is incorrect and providing guidance to use the correct format.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    public String advice() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"        return \"You have tried to create an Event without using proper \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"                + \"date-time formats. Please try again, with the correct input format\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"emmannyyy":27}},{"path":"src/main/java/monique/exception/MarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eMarkException\u003c/code\u003e class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * when an operation related to marking or unmarking tasks fails. It extends from \u003ccode\u003eMoniqueException\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"public class MarkException extends MoniqueException {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eMarkException\u003c/code\u003e with a default detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"     * The message indicates that an item number related to marking is not allowed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"    public MarkException() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"        super(\"Mark Exception: Item Number is not allowed\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * Provides advice on how to handle a mark-related exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing advice for handling the exception, indicating that the operation failed because the","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     *      item either does not exist or is already in the desired marked/unmarked state.","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    public String advice() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"        return \"Mark-related Exception. You have tried to mark an item which does not exist, \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"               + \"or unmark something that is already unmarked.\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"emmannyyy":29}},{"path":"src/main/java/monique/exception/MoniqueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eMoniqueException\u003c/code\u003e class is an abstract base class for all custom exceptions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * in the Monique application. It extends the built-in \u003ccode\u003eException\u003c/code\u003e class.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" * This class is used to represent errors specific to the Monique application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"public abstract class MoniqueException extends Exception {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eMoniqueException\u003c/code\u003e with the specified detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"     * @param message The detail message to be associated with this exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    public MoniqueException(String message) {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * Provides advice on how to handle this exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     * Subclasses are expected to implement this method to give specific instructions","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     * or tips to the user on how to resolve the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing advice on handling the exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    public abstract String advice();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"emmannyyy":26}},{"path":"src/main/java/monique/exception/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eParseException\u003c/code\u003e class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" * when there is an error parsing a command, usually due to missing arguments.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":" * It extends from \u003ccode\u003eMoniqueException\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"public class ParseException extends MoniqueException {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"     * The \u003ccode\u003eParseException\u003c/code\u003e class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"     * when there is an error parsing a command, usually due to missing arguments.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"     * It extends from \u003ccode\u003eMoniqueException\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    public ParseException() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"        super(\"Error parsing, missing arguments\");","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     * Provides advice on how to handle this exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     * This method returns a message informing the user to re-enter commands using the correct template","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     * and suggests entering \u0027/commands\u0027 to find out command templates.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing advice on how to handle the parsing exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"    public String advice() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"        return \"Parsing Exception. Please re-enter commands using the correct template. To find out \"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"               + \"command templates, please enter \u0027/commands\u0027\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"emmannyyy":32}},{"path":"src/main/java/monique/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.exception;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eUnknownCommandException\u003c/code\u003e class represents an exception that is thrown","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * when an unknown command is entered by the user. It extends the \u003ccode\u003eMoniqueException\u003c/code\u003e","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" * class and provides specific advice related to unknown commands.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"public class UnknownCommandException extends MoniqueException {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eUnknownCommandException\u003c/code\u003e with a default detail message.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"        super(\"Unknown Command Exception\");","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * Provides advice on how to handle the exception.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * In this case, it advises the user that an unknown command was entered","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     * and suggests using \u0027/commands\u0027 to find out the available commands.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     * @return a string containing advice on handling the unknown command exception.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    public String advice() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"        return \"You have entered an unknown command. Please find out available commands by using \u0027/commands\u0027\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-19","isFullCredit":false}],"authorContributionMap":{"emmannyyy":28}},{"path":"src/main/java/monique/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.parser;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.IllegalDateFormatException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eDateParser\u003c/code\u003e class provides functionality to parse and interpret date and time","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":" * strings into {@link LocalDateTime} objects. It supports various date formats and can handle","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":" * specific cases such as \"tomorrow\" with optional times.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"public class DateParser {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"    public static final String DATE_PATTERN \u003d \"\\\\d{1,2}[/\\\\-]\\\\d{1,2}[/\\\\-]\\\\d{4}( \\\\d{4})?\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"    public static final String DAY_PATTERN \u003d \"(?i)(mon|tue|wed|thu|fri|sat|sun|monday|tuesday|wednesday|\"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"                                             + \"thursday|friday|saturday|sunday)( \\\\d{4})?( \\\\d{1,2}(am|pm))?\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    public static final int WEEK_OFFSET \u003d 7;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     * Enum for supported date formats.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    public enum DateFormatType {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"        TYPE1_SLASH(\"M/d/yyyy[ HHmm]\"),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"        TYPE1_DASH(\"M-d-yyyy[ HHmm]\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"        private final String pattern;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"        DateFormatType(String pattern) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"            this.pattern \u003d pattern;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"        /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"         * Retrieves the pattern associated with the date format type.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"         *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"         * @return The pattern string.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"         */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"        public String getPattern() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"            return pattern;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"        /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"         * Determines the appropriate {@link DateFormatType} based on the provided date string.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"         *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"         * @param date The date string to check.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"         * @return The {@link DateFormatType} that matches the format of the date string.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"         * @throws IllegalDateFormatException If the date string does not match any known format.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"         */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"        public static DateFormatType getType(String date) throws IllegalDateFormatException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"            if (date.contains(\"/\")) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"                return TYPE1_SLASH;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"            } else if (date.contains(\"-\")) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"                return TYPE1_DASH;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"            } else {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"                throw new IllegalDateFormatException();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"     * Enum for days of the week, mapping to {@link DayOfWeek} enum.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"    public enum DayOfWeekEnum {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"        MONDAY(DayOfWeek.MONDAY),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"        TUESDAY(DayOfWeek.TUESDAY),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"        WEDNESDAY(DayOfWeek.WEDNESDAY),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"        THURSDAY(DayOfWeek.THURSDAY),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"        FRIDAY(DayOfWeek.FRIDAY),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"        SATURDAY(DayOfWeek.SATURDAY),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"        SUNDAY(DayOfWeek.SUNDAY);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"        private final DayOfWeek dayOfWeek;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"        DayOfWeekEnum(DayOfWeek dayOfWeek) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"            this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"        /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"         * Retrieves the {@link DayOfWeek} associated with this enum constant.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"         *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"         * @return The {@link DayOfWeek} instance.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"         */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"        public DayOfWeek getDayOfWeek() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"            return dayOfWeek;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"emmannyyy"},"content":"        /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"emmannyyy"},"content":"         * Converts a string representation of a day of the week to its corresponding {@link DayOfWeekEnum}.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"emmannyyy"},"content":"         *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"emmannyyy"},"content":"         * @param day The string representation of the day.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"emmannyyy"},"content":"         * @return The matching {@link DayOfWeekEnum}.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"emmannyyy"},"content":"         * @throws IllegalDateFormatException If the string does not match any known day of the week.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"emmannyyy"},"content":"         */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"emmannyyy"},"content":"        public static DayOfWeekEnum fromString(String day) throws IllegalDateFormatException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"emmannyyy"},"content":"            switch (day.toLowerCase()) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"emmannyyy"},"content":"            case \"mon\": case \"monday\": return MONDAY;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"emmannyyy"},"content":"            case \"tue\": case \"tuesday\": return TUESDAY;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"emmannyyy"},"content":"            case \"wed\": case \"wednesday\": return WEDNESDAY;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"emmannyyy"},"content":"            case \"thu\": case \"thursday\": return THURSDAY;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"emmannyyy"},"content":"            case \"fri\": case \"friday\": return FRIDAY;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"emmannyyy"},"content":"            case \"sat\": case \"saturday\": return SATURDAY;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"emmannyyy"},"content":"            case \"sun\": case \"sunday\": return SUNDAY;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"emmannyyy"},"content":"            default: throw new IllegalDateFormatException();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"emmannyyy"},"content":"     * Parses the given date string into a {@link LocalDateTime} object.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"emmannyyy"},"content":"     * Supports specific cases such as \"tomorrow\" and various date formats.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"emmannyyy"},"content":"     * @param originalString The date string to parse.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"emmannyyy"},"content":"     * @return The parsed {@link LocalDateTime} object.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"emmannyyy"},"content":"     * @throws IllegalDateFormatException If the date string does not match any known format.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"emmannyyy"},"content":"    public static LocalDateTime getDateTimeString(String originalString) throws IllegalDateFormatException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"emmannyyy"},"content":"        try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"emmannyyy"},"content":"            // Check for the special \"tomorrow\" case with optional time","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"emmannyyy"},"content":"            if (originalString.toLowerCase().startsWith(\"tomorrow\")) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"emmannyyy"},"content":"                String timePart \u003d originalString.substring(\"tomorrow\".length()).trim();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"emmannyyy"},"content":"                LocalDate tomorrowDate \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"emmannyyy"},"content":"                if (!timePart.isEmpty()) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"emmannyyy"},"content":"                    return parseTime(tomorrowDate, timePart);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"emmannyyy"},"content":"                return tomorrowDate.atStartOfDay();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"emmannyyy"},"content":"            if (originalString.matches(DATE_PATTERN)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"emmannyyy"},"content":"                return parseType1(originalString);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"emmannyyy"},"content":"            } else if (originalString.matches(DAY_PATTERN)) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"emmannyyy"},"content":"                return parseType2(originalString);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"emmannyyy"},"content":"            } else {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"emmannyyy"},"content":"                throw new IllegalDateFormatException();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"emmannyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"emmannyyy"},"content":"            throw new IllegalDateFormatException();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"emmannyyy"},"content":"    private static LocalDateTime parseType1(String originalString) throws IllegalDateFormatException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"emmannyyy"},"content":"        DateFormatType dateFormatType \u003d DateFormatType.getType(originalString);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"emmannyyy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormatType.getPattern());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"emmannyyy"},"content":"        // Parse date using the determined pattern and extract the LocalDateTime","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"emmannyyy"},"content":"        return LocalDateTime.parse(originalString, formatter);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"emmannyyy"},"content":"    private static LocalDateTime parseType2(String originalString) throws IllegalDateFormatException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"emmannyyy"},"content":"        String[] parts \u003d originalString.toLowerCase().split(\" \");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"emmannyyy"},"content":"        DayOfWeekEnum dayEnum \u003d DayOfWeekEnum.fromString(parts[0]);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"emmannyyy"},"content":"        LocalDate nearestDate \u003d getNextDayOfWeek(dayEnum.getDayOfWeek());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"emmannyyy"},"content":"        if (parts.length \u003e 1) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"emmannyyy"},"content":"            String timePart \u003d parts[1];","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"emmannyyy"},"content":"            if (parts.length \u003e 2) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"emmannyyy"},"content":"                timePart +\u003d \" \" + parts[2]; // Handle time in AM/PM format","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"emmannyyy"},"content":"            return parseTime(nearestDate, timePart);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"emmannyyy"},"content":"        return nearestDate.atStartOfDay();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"emmannyyy"},"content":"    private static LocalDate getNextDayOfWeek(DayOfWeek dayOfWeek) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"emmannyyy"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"emmannyyy"},"content":"        int daysUntilNext \u003d dayOfWeek.getValue() - today.getDayOfWeek().getValue();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"emmannyyy"},"content":"        if (daysUntilNext \u003c 0) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"emmannyyy"},"content":"            daysUntilNext +\u003d WEEK_OFFSET;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"emmannyyy"},"content":"        return today.plusDays(daysUntilNext);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"emmannyyy"},"content":"    private static LocalDateTime parseTime(LocalDate date, String timeString) throws IllegalDateFormatException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"emmannyyy"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h[mm]a\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"emmannyyy"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"emmannyyy"},"content":"        try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"emmannyyy"},"content":"            LocalTime localTime \u003d LocalTime.parse(timeString.toLowerCase(), timeFormatter);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"emmannyyy"},"content":"            dateTime \u003d date.atTime(localTime);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"emmannyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"emmannyyy"},"content":"            throw new IllegalDateFormatException();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"emmannyyy"},"content":"        return dateTime;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-09-10","isFullCredit":false}],"authorContributionMap":{"emmannyyy":188}},{"path":"src/main/java/monique/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import java.util.Set;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import monique.command.AddCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import monique.command.ByeCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"import monique.command.Command;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"import monique.command.DeleteCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"import monique.command.FindCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"import monique.command.GuideCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"import monique.command.ListCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"import monique.command.MarkCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"import monique.command.UnknownCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"import monique.command.UnmarkCommand;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.IllegalDateFormatException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.ParseException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"import monique.task.ToDo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eParser\u003c/code\u003e class processes user input and returns the corresponding \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":" * It handles various commands and task types, parsing the input to create appropriate command objects.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    private static final Set\u003cString\u003e commands \u003d Set.of(\"list\", \"mark\", \"unmark\", \"bye\", \"/commands\", \"delete\", \"find\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    private static final Set\u003cString\u003e taskTypes \u003d Set.of(\"todo\", \"deadline\", \"event\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    private static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     * Parses the given command string and returns the corresponding \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     * The method identifies the command type and creates the appropriate command object with the provided parameters.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"     * @param fullCommand The full command string to be parsed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"     * @return The \u003ccode\u003eCommand\u003c/code\u003e object corresponding to the parsed command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"        String firstWord \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"        boolean hasSecondWord \u003d fullCommand.split(\" \").length \u003e 1;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d null;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"        if (commands.contains(firstWord)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"            switch (firstWord) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"            case \"bye\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"                command \u003d new ByeCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"                break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"            case \"list\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"                command \u003d new ListCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"                break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"            case \"mark\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"                //minus one bc 0-based indexing","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"                try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"                    if (!hasSecondWord) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"                        throw new ParseException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"                    int taskNum \u003d Integer.parseInt(fullCommand.split(\"mark \")[1]) - INDEX_OFFSET;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"                    command \u003d new MarkCommand(taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"                    pe.advice();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"                } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"                    System.out.println(\"you have tried to use an invalid number\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"                break;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"            case \"unmark\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"                try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"                    if (!hasSecondWord) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"                        throw new ParseException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"                    int taskNum \u003d Integer.parseInt(fullCommand.split(\"unmark \")[1]) - INDEX_OFFSET;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"                    command \u003d new UnmarkCommand(taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"                    pe.advice();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"                } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"                    System.out.println(\"you have tried to use an invalid number\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"                break;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"            case \"/commands\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"                command \u003d new GuideCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"                break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"emmannyyy"},"content":"            case \"delete\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"emmannyyy"},"content":"                try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"emmannyyy"},"content":"                    if (!hasSecondWord) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"emmannyyy"},"content":"                        throw new ParseException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"emmannyyy"},"content":"                    int taskNum \u003d Integer.parseInt(fullCommand.split(\"delete \")[1]) - INDEX_OFFSET;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"emmannyyy"},"content":"                    command \u003d new DeleteCommand(taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"emmannyyy"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"emmannyyy"},"content":"                    pe.advice();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"emmannyyy"},"content":"                } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"emmannyyy"},"content":"                    System.out.println(\"you have tried to use an invalid number\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"emmannyyy"},"content":"                break;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"emmannyyy"},"content":"            case \"find\": {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"emmannyyy"},"content":"                try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"emmannyyy"},"content":"                    if (!hasSecondWord) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"emmannyyy"},"content":"                        throw new ParseException();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"emmannyyy"},"content":"                    String[] searchKeys \u003d fullCommand.split(\"find \")[1].split(\" \");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"emmannyyy"},"content":"                    command \u003d new FindCommand(searchKeys);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"emmannyyy"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"emmannyyy"},"content":"                    pe.advice();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"emmannyyy"},"content":"            break;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"emmannyyy"},"content":"            default:","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"emmannyyy"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + firstWord);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"emmannyyy"},"content":"        } else if (taskTypes.contains(firstWord)) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"emmannyyy"},"content":"            //add to taskList","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"emmannyyy"},"content":"            switch (firstWord) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"emmannyyy"},"content":"            case \"todo\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"emmannyyy"},"content":"                try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"emmannyyy"},"content":"                    String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"emmannyyy"},"content":"                    if (words.length \u003c\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"emmannyyy"},"content":"                        throw new ParseException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"emmannyyy"},"content":"                    String description \u003d String.join(\" \", Arrays.copyOfRange(words, 1, words.length));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"emmannyyy"},"content":"                    Task taskToAdd \u003d new ToDo(description);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"emmannyyy"},"content":"                    command \u003d new AddCommand(taskToAdd);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"emmannyyy"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"emmannyyy"},"content":"                    pe.advice();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"emmannyyy"},"content":"                break;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"emmannyyy"},"content":"            case \"deadline\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"emmannyyy"},"content":"                try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"emmannyyy"},"content":"                    String[] parts \u003d fullCommand.split(\"/by\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"emmannyyy"},"content":"                    if (parts.length \u003c\u003d 1) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"emmannyyy"},"content":"                        throw new ParseException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"emmannyyy"},"content":"                    String byString \u003d parts[1].trim();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"emmannyyy"},"content":"                    LocalDateTime by \u003d DateParser.getDateTimeString(byString);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"emmannyyy"},"content":"                    String[] commandAndDescription \u003d parts[0].trim().split(\" \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"emmannyyy"},"content":"                    String description \u003d commandAndDescription.length \u003e 1 ? commandAndDescription[1] : \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"emmannyyy"},"content":"                    Task taskToAdd \u003d new Deadline(description, false, by);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"emmannyyy"},"content":"                    command \u003d new AddCommand(taskToAdd);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"emmannyyy"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"emmannyyy"},"content":"                    pe.advice();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"emmannyyy"},"content":"                } catch (IllegalDateFormatException idee) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"emmannyyy"},"content":"                    idee.advice();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"emmannyyy"},"content":"                break;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"emmannyyy"},"content":"            case \"event\": {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"emmannyyy"},"content":"                try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"emmannyyy"},"content":"                    String[] fromSplit \u003d fullCommand.split(\"/from\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"emmannyyy"},"content":"                    if (fromSplit.length !\u003d 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"emmannyyy"},"content":"                        throw new ParseException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"emmannyyy"},"content":"                    String[] toSplit \u003d fromSplit[1].split(\"/to\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"emmannyyy"},"content":"                    if (toSplit.length !\u003d 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"emmannyyy"},"content":"                        throw new ParseException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"emmannyyy"},"content":"                    String[] commandAndDescription \u003d fromSplit[0].trim().split(\" \", 2);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"emmannyyy"},"content":"                    String description \u003d commandAndDescription.length \u003e 1 ? commandAndDescription[1] : \"\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"emmannyyy"},"content":"                    String fromDateString \u003d toSplit[0].trim();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"emmannyyy"},"content":"                    LocalDateTime fromDate \u003d DateParser.getDateTimeString(fromDateString);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"emmannyyy"},"content":"                    String toDateString \u003d toSplit[1].trim();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"emmannyyy"},"content":"                    LocalDateTime toDate \u003d DateParser.getDateTimeString(toDateString);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"emmannyyy"},"content":"                    Task taskToAdd \u003d new Event(description, false, fromDate, toDate);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"emmannyyy"},"content":"                    command \u003d new AddCommand(taskToAdd);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"emmannyyy"},"content":"                    break;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"emmannyyy"},"content":"                } catch (ParseException pe) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"emmannyyy"},"content":"                    pe.advice();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"emmannyyy"},"content":"                } catch (IllegalDateFormatException idee) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"emmannyyy"},"content":"                    idee.advice();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"emmannyyy"},"content":"            break;","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"emmannyyy"},"content":"            default:","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"emmannyyy"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + firstWord);","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"emmannyyy"},"content":"        return command !\u003d null ? command : new UnknownCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":186}},{"path":"src/main/java/monique/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.io.EOFException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eStorage\u003c/code\u003e class handles the reading from and writing to a file that stores serialized","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":" * \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":" * It provides methods to save and load tasks, and ensures that the file for storage exists.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    private final File dbFile;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eStorage\u003c/code\u003e object with the specified file path.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * Initializes the file for storage, creating it if it does not exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * @param filePath The path of the file to be used for storage.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * @throws IOException If an I/O error occurs while creating the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"        this.dbFile \u003d this.getDbFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"     * Returns the \u003ccode\u003eFile\u003c/code\u003e object representing the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"     * Creates the file and its parent directories if they do not exist.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"     * @return The \u003ccode\u003eFile\u003c/code\u003e object representing the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     * @throws IOException If an I/O error occurs while creating the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"    public File getDbFile() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"        File dbFile \u003d new File(String.valueOf(Paths.get(this.filePath)));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"        if (!dbFile.exists()) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"            dbFile.getParentFile().mkdirs();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"            dbFile.createNewFile();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"        assert dbFile.exists();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"        return dbFile;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"     * Each task is serialized and written to the file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(this.getDbFile());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"                objectOutputStream.writeObject(task);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"            objectOutputStream.close();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"     * Loads the list of tasks from the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"     * Deserializes each task and adds it to the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"     * If the file is empty or does not exist, an empty list is returned.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"     * @return The list of tasks loaded from the storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"    public ArrayList\u003cTask\u003e loadData() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"        try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(this.getDbFile());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"            ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"            Object obj;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"            while (true) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"                try {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"                    obj \u003d objectInputStream.readObject();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"emmannyyy"},"content":"                    if (obj instanceof Task) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"emmannyyy"},"content":"                        taskList.add((Task) obj);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"emmannyyy"},"content":"                    } else {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"emmannyyy"},"content":"                        System.err.println(\"Unexpected objects found in database\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"emmannyyy"},"content":"                    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"emmannyyy"},"content":"                } catch (EOFException ex) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"emmannyyy"},"content":"                    break;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"emmannyyy"},"content":"                }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"emmannyyy"},"content":"        } catch (EOFException eof) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"emmannyyy"},"content":"            //empty database from the start","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"emmannyyy"},"content":"            return taskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"emmannyyy"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"emmannyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"emmannyyy"},"content":"        return taskList;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"emmannyyy":108}},{"path":"src/main/java/monique/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eDeadline\u003c/code\u003e class represents a task with a specific deadline.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" * It extends the \u003ccode\u003eTask\u003c/code\u003e class and includes a due date for the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    private static final String FORMAT_STRING \u003d \"[D][%s] %s (by: %s)\";","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eDeadline\u003c/code\u003e object with the specified description,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * completion status, and due date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     * @param isComplete The completion status of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     * @param by The due date of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    public Deadline(String description, boolean isComplete, LocalDateTime by) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"        super(description , isComplete);","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"     * Returns a string representation of the \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * The format is: \"[D][status] description (by: date)\" where status is \"X\" if the task is complete,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     * and the date is formatted as \"MMM d yyyy\".","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"        return String.format(FORMAT_STRING, this.isComplete() ? \"X\" : \" \",","lastModifiedDate":"2024-09-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"                    this.getDescription() , this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     * Marks the \u003ccode\u003eDeadline\u003c/code\u003e task as complete and returns a new \u003ccode\u003eDeadline\u003c/code\u003e object","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     * with the updated status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"     * @return A new \u003ccode\u003eDeadline\u003c/code\u003e object with the status marked as complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"    public Deadline mark() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"        return new Deadline(this.getDescription(), true, this.by);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"     * Unmarks the \u003ccode\u003eDeadline\u003c/code\u003e task as incomplete and returns a new \u003ccode\u003eDeadline\u003c/code\u003e object","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"     * with the updated status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"     * @return A new \u003ccode\u003eDeadline\u003c/code\u003e object with the status marked as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"    public Deadline unmark() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"        return new Deadline(this.getDescription(), false, this.by);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"     * Returns the due date of the \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"     * @return The due date of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"        return this.by;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-16","isFullCredit":false}],"authorContributionMap":{"emmannyyy":74}},{"path":"src/main/java/monique/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eEvent\u003c/code\u003e class represents a task with a specific time range.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":" * It extends the \u003ccode\u003eTask\u003c/code\u003e class and includes a start date and an end date for the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"    private static final String FORMATSTRING \u003d \"[E][%s] %s (from:%s to: %s)\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eEvent\u003c/code\u003e object with the specified description,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     * completion status, start date, and end date.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     * @param isComplete The completion status of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    public Event(String description, boolean isComplete, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"        super(description, isComplete);","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     * Returns a string representation of the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     * The format is: \"[E][status] description (from: start_date to: end_date)\" where status is \"X\" if the","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     * task is complete,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"     * and the dates are formatted as \"MMM d yyyy\".","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"        return String.format(FORMATSTRING, this.isComplete() ? \"X\" : \" \" , this.getDescription(),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm\")),","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hhmm\")));","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"     * Marks the \u003ccode\u003eEvent\u003c/code\u003e task as complete and returns a new \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"     * with the updated status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"     * @return A new \u003ccode\u003eEvent\u003c/code\u003e object with the status marked as complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"    public Event mark() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"        return new Event(this.getDescription(), true , this.from, this.to);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"     * Unmarks the \u003ccode\u003eEvent\u003c/code\u003e task as incomplete and returns a new \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     * with the updated status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     * @return A new \u003ccode\u003eEvent\u003c/code\u003e object with the status marked as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"    public Event unmark() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"        return new Event(this.getDescription(), false, this.from, this.to);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"     * Returns the start date of the \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"     * @return The start date of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"        return this.from;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"     * Returns the end date of the \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"     * @return The end date of the event.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"        return this.to;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-16","isFullCredit":false}],"authorContributionMap":{"emmannyyy":85}},{"path":"src/main/java/monique/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eTask\u003c/code\u003e class represents a general task with a description and a completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * This is an abstract class, meant to be extended by specific types of tasks such as","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" * * \u003ccode\u003eDeadline\u003c/code\u003e and \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"public abstract class Task implements java.io.Serializable {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"    private final String description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"    private final boolean isComplete;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eTask\u003c/code\u003e object with the specified description and sets the task as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eTask\u003c/code\u003e object with the specified description and completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * @param isComplete The completion status of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    public Task(String description, boolean isComplete) {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eTask\u003c/code\u003e object with an empty description and sets the task as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    public Task() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"        this(\"\");","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     * Marks the \u003ccode\u003eTask\u003c/code\u003e as complete and returns a new instance of the task with the updated status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     * This is an abstract method and must be implemented by subclasses.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"     * @return A new \u003ccode\u003eTask\u003c/code\u003e object with the status marked as complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"    public abstract Task mark();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"     * Unmarks the \u003ccode\u003eTask\u003c/code\u003e as incomplete and returns a new instance of the task with the updated status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"     * This is an abstract method and must be implemented by subclasses.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"     * @return A new \u003ccode\u003eTask\u003c/code\u003e object with the status marked as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"    public abstract Task unmark();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"     * Returns the description of the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"        return this.description;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"     * Returns the completion status of the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"     * @return True if the task is complete, false otherwise.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"    public boolean isComplete() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"        return isComplete;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-16","isFullCredit":false}],"authorContributionMap":{"emmannyyy":74}},{"path":"src/main/java/monique/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eToDo\u003c/code\u003e class represents a specific type of task that does not have any associated dates.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":" * It extends the \u003ccode\u003eTask\u003c/code\u003e class and includes only a description and completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"    private static final String FORMATSTRING \u003d \"[T][%s] %s\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eToDo\u003c/code\u003e object with the specified description and sets the task as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"     * @param description The description of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"        super(description);","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eToDo\u003c/code\u003e object with the specified description and completion status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     * @param description The description of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     * @param isComplete The completion status of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    public ToDo(String description, boolean isComplete) {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"        super(description, isComplete);","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eToDo\u003c/code\u003e object with an empty description and sets the task as complete by default.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    public ToDo() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"        this(\"\", true);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"     * Returns a string representation of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"     * The format is: \"[T][status] description\" where status is \"X\" if the task is complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     * @return A string representation of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"    public String toString() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"        return String.format(FORMATSTRING, this.isComplete() ? \"X\" : \" \", this.getDescription());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"     * Marks the \u003ccode\u003eToDo\u003c/code\u003e task as complete and returns a new instance of the \u003ccode\u003eToDo\u003c/code\u003e task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"     * with the updated status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"     * @return A new \u003ccode\u003eToDo\u003c/code\u003e object with the status marked as complete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"    public ToDo mark() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"        return new ToDo(this.getDescription(), true);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"     * Unmarks the \u003ccode\u003eToDo\u003c/code\u003e task as incomplete and returns a new instance of the \u003ccode\u003eToDo\u003c/code\u003e task","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     * with the updated status.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"     * @return A new \u003ccode\u003eToDo\u003c/code\u003e object with the status marked as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"    @Override","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"    public ToDo unmark() {","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"        return new ToDo(this.getDescription(), false);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-16","isFullCredit":false}],"authorContributionMap":{"emmannyyy":72}},{"path":"src/main/java/monique/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.tasklist;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eTaskList\u003c/code\u003e class manages a list of tasks in the Monique application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":" * It provides operations to add, delete, mark, and unmark tasks, as well as retrieve","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":" * tasks and the total number of tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eTaskList\u003c/code\u003e object with the specified list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"     * @param taskList An \u003ccode\u003eArrayList\u003c/code\u003e of tasks to initialize the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     * Deletes a task from the task list based on its index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"     * @param taskNum The index of the task to be deleted (0-based).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"        this.taskList.remove(taskNum);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     * Marks a task as completed based on its index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"     * @param taskNum The index of the task to be marked as completed (0-based).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"    public void markTask(int taskNum) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"        this.taskList.set(taskNum, taskList.get(taskNum).mark());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"     * Unmarks a task as incomplete based on its index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"     * @param taskNum The index of the task to be unmarked as incomplete (0-based).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"    public void unmarkTask(int taskNum) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"        this.taskList.set(taskNum, taskList.get(taskNum).unmark());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the entire task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"        return this.taskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves a task from the task list based on its index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"     * @param i The index of the task to retrieve (0-based).","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"        return this.taskList.get(i);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the total number of tasks in the task list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"    public int getNumItems() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":87}},{"path":"src/main/java/monique/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"import monique.GuideText;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Task;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"/**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":" * The \u003ccode\u003eUi\u003c/code\u003e class handles all user interactions for the Monique application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":" * It is responsible for displaying messages, reading user input, and providing feedback","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":" * on the actions performed on tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":" */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"    public static final int INDEX_OFFSET \u003d 1;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"    private final BufferedReader br;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"     * Constructs a new \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"     * Initializes the \u003ccode\u003eBufferedReader\u003c/code\u003e for reading user input from the console.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    public Ui() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"        this.br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"     * Displays a message confirming the addition of a task.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"     * @return A confirmation message including the added task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    public String addMessage(Task task) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"        return \"added: \" + task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"     * Displays a message confirming the deletion of a task and the current number of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"     * @return A confirmation message including the deleted task and the updated task count.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    public String deleteMessage(Task task, TaskList tasks) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"        return \"deleted: \" + task + \".\\nYou now have \" + (tasks.getNumItems() - INDEX_OFFSET) + \" tasks in the list\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"     * Displays a message confirming that a task has been marked as completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"     * @param task The task that was marked as completed.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"     * @return A confirmation message including the marked task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"    public String markMessage(Task task) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"        return \"Nice lah.. Great job on doing work! I\u0027ve marked it: \" + task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"     * Displays a message confirming that a task has been unmarked as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"     * @param task The task that was unmarked as incomplete.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"     * @return A confirmation message including the unmarked task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"    public String unmarkMessage(Task task) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"        return \"ok... I\u0027ve unmarked:\" + task;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"     * Displays a welcome message when the Monique application starts.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"     * @return A welcome message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"        return \"Hello, I am Monique,\\nI am your personal assistant :)\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"     * Displays a goodbye message when the Monique application exits.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"     * @return A goodbye message.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"        return \"Goodbye! Have a great day! This window will close in 3 seconds\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"emmannyyy"},"content":"     * Displays a message indicating that the task list is empty.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"emmannyyy"},"content":"     * @return A message indicating that the task list is empty.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"emmannyyy"},"content":"    public String emptyListMessage() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"emmannyyy"},"content":"        return \"There are no tasks in your List :)\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"emmannyyy"},"content":"     * Displays the search results for tasks that match a given search query.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"emmannyyy"},"content":"     * If the provided list of tasks is empty, a message indicating no matches is returned.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"emmannyyy"},"content":"     * Otherwise, it returns a string with each matching task in the list, numbered sequentially.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"emmannyyy"},"content":"     * @param resultList the list of tasks that match the search query","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"emmannyyy"},"content":"     * @return A message listing the matching tasks or indicating no matches.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"emmannyyy"},"content":"    public String showFindResults(ArrayList\u003cTask\u003e resultList) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"emmannyyy"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"emmannyyy"},"content":"        if (resultList.isEmpty()) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"emmannyyy"},"content":"            return \"There are no tasks matching your search\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"emmannyyy"},"content":"        } else {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"emmannyyy"},"content":"            sb.append(\"Here are the matching tasks on your list:\\n\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"emmannyyy"},"content":"            for (int i \u003d 0; i \u003c resultList.size(); i++) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"emmannyyy"},"content":"                sb.append(String.valueOf(i + INDEX_OFFSET)).append(\". \").append(resultList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"emmannyyy"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"emmannyyy"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"emmannyyy"},"content":"        return sb.toString();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"emmannyyy"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"emmannyyy"},"content":"     * Retrieves the guide text for the application.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"emmannyyy"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"emmannyyy"},"content":"     * @return The guide text from \u003ccode\u003eGuideText.GUIDE\u003c/code\u003e.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"emmannyyy"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"emmannyyy"},"content":"    public String printGuide() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"emmannyyy"},"content":"        return GuideText.GUIDE;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":126}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"emmannyyy":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e \u003c!--This is important, and it is used for","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"            setting our controller to this fxml file.  !--\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"emmannyyy":20}},{"path":"src/test/java/monique/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"import monique.exception.MarkException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"import monique.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"import monique.task.ToDo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"import monique.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"import monique.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"        tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"        ui \u003d new Ui(); // Assuming Ui can be instantiated directly","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"        storage \u003d new Storage(\"data/tasks.txt\"); // Assuming a valid path","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    public void isActive_basicTestCase_true() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(new MarkCommand(1).isActive());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"    public void execute_validTaskNumber_marksTask() throws MarkException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"        Task task \u003d new ToDo(\"Test Task\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"        MarkCommand command \u003d new MarkCommand(0);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(tasks.getTask(0).isComplete());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"    public void execute_invalidTaskNumber_throwsMarkException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"        MarkCommand command \u003d new MarkCommand(10);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"        assertThrows(MarkException.class, () -\u003e command.execute(tasks, ui, storage));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"    public void execute_negativeTaskNumber_throwsMarkException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"        MarkCommand command \u003d new MarkCommand(-1);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"        assertThrows(MarkException.class, () -\u003e command.execute(tasks, ui, storage));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":57}},{"path":"src/test/java/monique/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"package monique.parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"import monique.command.AddCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"import monique.command.ByeCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"import monique.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"emmannyyy"},"content":"import monique.command.ListCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"emmannyyy"},"content":"import monique.command.UnknownCommand;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"emmannyyy"},"content":"import monique.task.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"emmannyyy"},"content":"import monique.task.ToDo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"public class ParserTest {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"    public void parse_withEmptyString_unknownCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"        assertEquals(new UnknownCommand(), Parser.parse(\"\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"emmannyyy"},"content":"    void testParseByeCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d Parser.parse(\"bye\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(command instanceof ByeCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"emmannyyy"},"content":"    void testParseListCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d Parser.parse(\"list\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(command instanceof ListCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"emmannyyy"},"content":"    void testParseAddTodoCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d Parser.parse(\"todo read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(((AddCommand) command).getTask() instanceof ToDo); // Assuming getTask() is defined","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"emmannyyy"},"content":"        assertEquals(((AddCommand) command).getTask().getDescription(), \"read a book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"emmannyyy"},"content":"    void testParseAddDeadlineCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d Parser.parse(\"deadline return book /by 8/28/2024\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(((AddCommand) command).getTask() instanceof Deadline);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"emmannyyy"},"content":"        assertEquals(((AddCommand) command).getTask().getDescription(), \"return book\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"emmannyyy"},"content":"        assertEquals(((Deadline) ((AddCommand) command).getTask()).getBy(),","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"emmannyyy"},"content":"                LocalDate.parse(\"8/28/2024\", DateTimeFormatter.ofPattern(\"M/d/yyyy\")));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"emmannyyy"},"content":"    void testParseAddEventCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d Parser.parse(\"event project meeting /from 8/28/2024 /to 8/29/2024\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(command instanceof AddCommand);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(((AddCommand) command).getTask() instanceof Event);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"emmannyyy"},"content":"        assertEquals(((AddCommand) command).getTask().getDescription(), \"project meeting\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"emmannyyy"},"content":"        assertEquals(((Event) ((AddCommand) command).getTask()).getFrom(), LocalDate.parse(\"8/28/2024\", DateTimeFormatter.ofPattern(\"M/d/yyyy\")));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"emmannyyy"},"content":"        assertEquals(((Event) ((AddCommand) command).getTask()).getTo(), LocalDate.parse(\"8/29/2024\", DateTimeFormatter.ofPattern(\"M/d/yyyy\")));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"emmannyyy"},"content":"    void testParseInvalidMarkCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d Parser.parse(\"mark\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(command instanceof UnknownCommand); // Assuming error handling falls back to UnknownCommand","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"emmannyyy"},"content":"    void testParseInvalidDeleteCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d Parser.parse(\"delete abc\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(command instanceof UnknownCommand); // Assuming error handling falls back to UnknownCommand","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"emmannyyy"},"content":"    @Test","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"emmannyyy"},"content":"    void testParseInvalidEventCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"emmannyyy"},"content":"        Command command \u003d Parser.parse(\"event project meeting /from Monday\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"emmannyyy"},"content":"        assertTrue(command instanceof UnknownCommand); // Assuming error handling falls back to UnknownCommand","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"emmannyyy"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"emmannyyy"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"emmannyyy":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"emmannyyy"},"content":"list","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"emmannyyy"},"content":"todo do work","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"emmannyyy"},"content":"event school /from tomorrow 1pm /to 5pm evening","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"emmannyyy"},"content":"deadline complete SE homework /by 6pm","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"emmannyyy"},"content":"list","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"emmannyyy"},"content":"mark 1","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"emmannyyy"},"content":"mark 2","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"emmannyyy"},"content":"mark 3","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"emmannyyy"},"content":"list","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"emmannyyy"},"content":"unmark 1","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"emmannyyy"},"content":"unmark 2","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"emmannyyy"},"content":"bye","lastModifiedDate":"2024-08-16","isFullCredit":false}],"authorContributionMap":{"emmannyyy":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"emmannyyy"},"content":"java -classpath ..\\bin monique.monique \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"emmannyyy"},"content":"REM remove trailing spaces from both files","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"emmannyyy"},"content":"powershell -command \"(Get-Content ACTUAL.TXT) | ForEach-Object { $_.TrimEnd() } | Set-Content ACTUAL.TXT\"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"emmannyyy"},"content":"powershell -command \"(Get-Content EXPECTED.TXT) | ForEach-Object { $_.TrimEnd() } | Set-Content EXPECTED.TXT\"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"emmannyyy"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"emmannyyy"},"content":"REM convert line endings of both files to UNIX format","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"emmannyyy"},"content":"REM dos2unix ACTUAL.TXT","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"emmannyyy"},"content":"REM dos2unix EXPECTED.TXT","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-08-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"emmannyyy":9,"-":21}}]
