[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"    mainClass.set(\"mryapper.MrYapper\")","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"    archiveBaseName \u003d \"mryapper\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"awdse22":2,"-":39}},{"path":"src/main/java/mryapper/MrYapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import mryapper.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"import mryapper.exception.IllegalTaskException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import mryapper.exception.InvalidSyntaxException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"import mryapper.parser.Parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"import mryapper.storagemanager.StorageManager;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"import mryapper.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"import mryapper.ui.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":" * Contains the main program of the ChatBot. Running the main program initializes","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":" * the ChatBot and runs the ChatBot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"public class MrYapper {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"    private static final String TASK_DATA_PATH \u003d \"src/data/tasks.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"    private final StorageManager storageManager;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"     * Initializes the ChatBot with the given data file path.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"     * The file path is relative and if no data file exists, a new","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"     * data .txt file will be created automatically.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"     * @param filePath The relative file path of data file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"    public MrYapper(String filePath) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"        this.storageManager \u003d new StorageManager(filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"            this.tasks \u003d storageManager.retrieveData();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"            System.out.println(\" An error occurred when creating a new data file :(\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"     * Runs the ChatBot until the \"bye\" command is executed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"    public void run() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"        boolean conversationIsOngoing \u003d false;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"        if (tasks !\u003d null \u0026\u0026 storageManager !\u003d null) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"            ui.showGreeting();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"            conversationIsOngoing \u003d true;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"        while (conversationIsOngoing) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"            try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"                ui.showLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"                Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"                conversationIsOngoing \u003d !c.execute(tasks, ui, storageManager);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"            } catch (IllegalTaskException | InvalidSyntaxException | IllegalArgumentException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"                ui.send(e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"            ui.showLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"        ui.close();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"        new MrYapper(TASK_DATA_PATH).run();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"awdse22":66,"-":2}},{"path":"src/main/java/mryapper/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import mryapper.storagemanager.StorageManager;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"import mryapper.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import mryapper.ui.Ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"@FunctionalInterface","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"public interface Command {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"    public boolean execute(TaskList tasks, Ui ui, StorageManager storageManager);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"awdse22":11}},{"path":"src/main/java/mryapper/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import mryapper.parser.DateTimeParser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"import mryapper.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import mryapper.task.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"import mryapper.task.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"import mryapper.task.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":" * Contains class methods to create all the commands of the Chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"public class CommandList {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"     * Returns a command which creates a \"to do\" task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"     * @return A command which creates the task to do when executed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"    public static Command addTodoTask(String description) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"            Task newTask \u003d new Todo(description);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"            tasks.add(newTask);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"            ui.send(String.format(\" Task added successfully!\\n   %s\\n Now you have %d tasks in the list\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"                    newTask, tasks.count()));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"            tasks.saveToStorage(storage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"            return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"     * Returns a command which creates a task with deadline.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"     * @return A command which creates the deadline task when executed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"    public static Command addDeadlineTask(String description, String deadline) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"            Task newTask \u003d new Deadline(description, DateTimeParser.parseDateTime(deadline));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"            tasks.add(newTask);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"            ui.send(String.format(\" Task added successfully!\\n   %s\\n Now you have %d tasks in the list\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"                    newTask, tasks.count()));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"            tasks.saveToStorage(storage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"            return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"     * Returns a command which creates an event task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"     * @param start The starting time or/and date of the event.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"     * @param end The ending time or/and date of the event.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"     * @return A command which creates the event task when executed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"    public static Command addEventTask(String description, String start, String end) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"            Task newTask \u003d new Event(description,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"                    DateTimeParser.parseDateTime(start),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"                    DateTimeParser.parseDateTime(end));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"            tasks.add(newTask);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"            ui.send(String.format(\" Task added successfully!\\n   %s\\n Now you have %d tasks in the list\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"                    newTask, tasks.count()));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"            tasks.saveToStorage(storage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awdse22"},"content":"            return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awdse22"},"content":"     * Returns a command which deletes the task from the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awdse22"},"content":"     * @param taskNumber The index of the task to remove, counting from 1.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awdse22"},"content":"     * @return A command which deletes a task from the given task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awdse22"},"content":"    public static Command deleteTask(int taskNumber) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awdse22"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awdse22"},"content":"                Task deletedTask \u003d tasks.remove(taskNumber);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awdse22"},"content":"                ui.send(String.format(\" Task deleted successfully!\\n   %s\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awdse22"},"content":"                        + \"Now you have %d tasks in the list\", deletedTask, tasks.count()));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awdse22"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awdse22"},"content":"                String errorMessage \u003d String.format(\" There is no such task!\\n \"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awdse22"},"content":"                        + \"You currently have %d tasks in your list\", tasks.count());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awdse22"},"content":"                ui.send(errorMessage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awdse22"},"content":"            return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awdse22"},"content":"     * Returns the command which displays all the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awdse22"},"content":"     * @return A command which displays the tasks in the given TaskList when executed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awdse22"},"content":"    public static Command listTasks() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awdse22"},"content":"            ui.send(tasks.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awdse22"},"content":"            return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awdse22"},"content":"     * Returns a command which searches all tasks matching the keywords in the input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awdse22"},"content":"     * @param searchInput The search input from the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awdse22"},"content":"     * @return A command which displays all the task containing keywords in the search input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"awdse22"},"content":"    public static Command findTask(String searchInput) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awdse22"},"content":"            ArrayList\u003cTask\u003e searchResult \u003d tasks.searchTasks(searchInput);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awdse22"},"content":"            if (searchResult.isEmpty()) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awdse22"},"content":"                ui.send(\" None of the tasks match your search results!\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awdse22"},"content":"                return false;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awdse22"},"content":"            ui.send(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"awdse22"},"content":"            for (int i \u003d 0; i \u003c searchResult.size(); i++ ) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"awdse22"},"content":"                int taskNumber \u003d i + 1;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awdse22"},"content":"                ui.send(\" \" + taskNumber + \".\" + searchResult.get(i).toString());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"awdse22"},"content":"            return false;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"awdse22"},"content":"     * Returns the command which marks the task as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"awdse22"},"content":"     * @param taskNumber The index of the task in the TaskList counting from 1.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"awdse22"},"content":"     * @return A command which marks the task under the given index of the given TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"awdse22"},"content":"    public static Command markTask(int taskNumber) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"awdse22"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"awdse22"},"content":"                ui.send(\"Nice! I have marked this task as done:\\n   \"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"awdse22"},"content":"                        + tasks.mark(taskNumber));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"awdse22"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"awdse22"},"content":"                String errorMessage \u003d String.format(\" There is no such task!\\n \"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"awdse22"},"content":"                        + \"You currently have %d tasks in your list\", tasks.count());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"awdse22"},"content":"                ui.send(errorMessage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"awdse22"},"content":"            return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"awdse22"},"content":"     * Returns the command which marks the task as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"awdse22"},"content":"     * @param taskNumber The index of the task in the TaskList counting from 1.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"awdse22"},"content":"     * @return A command which unmarks the task under the given index of the given TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"awdse22"},"content":"    public static Command unmarkTask(int taskNumber) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"awdse22"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"awdse22"},"content":"                ui.send(\"OK, I\u0027ve marked this task as not done yet:\\n   \"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"awdse22"},"content":"                        + tasks.unmark(taskNumber));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"awdse22"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"awdse22"},"content":"                String errorMessage \u003d String.format(\" There is no such task!\\n \"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"awdse22"},"content":"                        + \"You currently have %d tasks in your list\", tasks.count());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"awdse22"},"content":"                ui.send(errorMessage);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"awdse22"},"content":"            return false;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"awdse22"},"content":"     * Returns a command which makes the Chatbot say the goodbye message/","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"awdse22"},"content":"     * @return A command which displays the goodbye message and tells the Chatbot to exit.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"awdse22"},"content":"    public static Command bye() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"awdse22"},"content":"        return (tasks, ui, storage) -\u003e {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"awdse22"},"content":"            ui.showGoodbye();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"awdse22"},"content":"            return true;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"awdse22"},"content":"        };","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"awdse22":178}},{"path":"src/main/java/mryapper/exception/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.exception;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"public class IllegalTaskException extends Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"    private String taskType;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"    private String baseMessage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"    public IllegalTaskException(String taskType, String baseMessage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"        super();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"        this.baseMessage \u003d baseMessage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"    public String getMessage() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"        String errorMessage \u003d baseMessage + \"\\n\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"        switch (taskType) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"            case \"todo\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"                errorMessage +\u003d \" To add a todo task, I need the task description\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"                        + \" e.g. todo read CS2103T notes\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"                break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"            case \"deadline\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"                errorMessage +\u003d \" I need one description and deadline using \\\"/by\\\"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"                        + \" e.g. deadline CS2103T project /by Dec 31st\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"                break;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"            case \"event\":","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"                errorMessage +\u003d \" I need one description, start and end time using \\\"/from\\\" and \\\"/to\\\"\\n\"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"                        + \" e.g. event project meeting /from Mon 2pm /to 4pm\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"        return errorMessage;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"awdse22":30}},{"path":"src/main/java/mryapper/exception/InvalidFileDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.exception;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"public class InvalidFileDataException extends Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"    private String errorMessage;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"    public InvalidFileDataException(String errorMessage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"        super(errorMessage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"awdse22":9}},{"path":"src/main/java/mryapper/exception/InvalidSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.exception;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"public class InvalidSyntaxException extends Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"    public InvalidSyntaxException(String errorMessage) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"        super(errorMessage);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"    public String getMessage() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"        return \" Your syntax is incorrect!\\n\" + super.getMessage();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"awdse22":13}},{"path":"src/main/java/mryapper/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":" * Responsible for parsing the user input into a common date and time format.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"public class DateTimeParser {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"    private static final DateTimeFormatter STANDARD_FORMAT \u003d","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"HH:mm dd MMM yyyy\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"    private static final DateTimeFormatter[] DATE_FORMATTERS \u003d new DateTimeFormatter[]{","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]yyyy-MM-dd\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]yyyy-MM-d\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]yyyy/MM/dd\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]yyyy/MM/d\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]yyyy/MM/dd\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]yyyy/MM/d\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]yyyy.MM.dd\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]yyyy.MM.d\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]yyyy.MM.dd\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]yyyy.MM.d\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]yyyy MMM dd\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]yyyy MMM d\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]yyyy MMM dd\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]yyyy MMM d\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]dd.MM.yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]d.MM.yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]dd.MM.yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]d.MM.yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]dd-MM-yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]d-MM-yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]dd-MM-yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]d-MM-yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]dd/MM/yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]d/MM/yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]dd/MM/yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]d/MM/yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]dd MMM yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HH:mm ]d MMM yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]dd MMM yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"            DateTimeFormatter.ofPattern(\"[HHmm ]d MMM yyyy\"),","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"    };","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"     * Attempts to parse a date and time and change it to a common format.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"     * Returns the input string if the parsing fails.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"     * @param dateTimeString The string to be parsed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"     * @return The date and time in \"HHmm dd MMM yyyy\" format or the input string if parsing fails.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"    public static String parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATTERS) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"            try {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"                String newString \u003d dateTime.format(STANDARD_FORMAT);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"                System.out.println(newString);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"                return newString;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"                // Continue to the next formatter if parsing fails","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"        return dateTimeString;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"awdse22":67}},{"path":"src/main/java/mryapper/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import mryapper.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"import mryapper.command.CommandList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import mryapper.exception.IllegalTaskException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"import mryapper.exception.InvalidSyntaxException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":" * Responsible for parsing the inputs sent from the user to the Chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"public class Parser {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"     * Parses the string user input into a command.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"     * @return The command to be executed based on the user input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"     * @throws IllegalTaskException If the user attempts to create a task without valid parameters.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"     * @throws InvalidSyntaxException If the input\u0027s syntax does not match any commands correctly.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"    public static Command parse(String userInput) throws IllegalTaskException, InvalidSyntaxException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"        String[] processedInput \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"        String command \u003d processedInput[0];","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"        switch (command) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"        case \"bye\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"            return CommandList.bye();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"        case \"list\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"            return CommandList.listTasks();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"        case \"delete\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"                if (processedInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"                    throw new InvalidSyntaxException(\" You have to give me a valid task number!\\n\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"                            + \" e.g. delete 2\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"                } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"                    int taskNumber \u003d Integer.parseInt(processedInput[1]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"                    return CommandList.deleteTask(taskNumber);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"                }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"                // if the string after the mark command is not an integer","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"                        \" You have to give me a valid task number!\\n e.g. delete 2\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"            case \"find\":","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"                if (processedInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"                    throw new InvalidSyntaxException(\" You need to enter a search input!\\n\"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"                            + \" e.g. find do project\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"                } else {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"                    return CommandList.findTask(processedInput[1]);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"                }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"        case \"mark\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"                if (processedInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"                    throw new InvalidSyntaxException(","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"                            \" You have to give me a valid task number!\\n e.g. mark 2\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"                } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"                    int taskNumber \u003d Integer.parseInt(processedInput[1]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"                    return CommandList.markTask(taskNumber);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"                }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"                // if the string after the mark command is not an integer","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"                        \" You have to give me a valid task number!\\n e.g. mark 2\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"        case \"unmark\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"            try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"                if (processedInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awdse22"},"content":"                    throw new InvalidSyntaxException(","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awdse22"},"content":"                            \" You have to give me a valid task number!\\n e.g. unmark 2\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awdse22"},"content":"                } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awdse22"},"content":"                    int taskNumber \u003d Integer.parseInt(processedInput[1]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awdse22"},"content":"                    return CommandList.unmarkTask(taskNumber);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awdse22"},"content":"                }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awdse22"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awdse22"},"content":"                // if the string after the mark command is not an integer","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awdse22"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awdse22"},"content":"                        \" You have to give me a valid task number!\\n e.g. unmark 2\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awdse22"},"content":"        case \"todo\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awdse22"},"content":"            if (processedInput.length \u003c 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(command, \" You need to provide the task details!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awdse22"},"content":"            return CommandList.addTodoTask(processedInput[1]);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awdse22"},"content":"        case \"deadline\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awdse22"},"content":"            if (processedInput.length \u003c 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(command, \" You need to provide the task details!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awdse22"},"content":"            String[] deadlineParams \u003d processedInput[1].split(\"/by\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awdse22"},"content":"            if (deadlineParams.length !\u003d 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(\"deadline\",","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awdse22"},"content":"                        \" I\u0027ll need you to format your details properly\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awdse22"},"content":"            String deadlineDescription \u003d deadlineParams[0].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awdse22"},"content":"            String deadlineTime \u003d deadlineParams[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awdse22"},"content":"            if (deadlineDescription.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(\"deadline\", \" Your description cannot be empty!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awdse22"},"content":"            } else if (deadlineTime.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(\"deadline\", \" Your deadline cannot be empty!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awdse22"},"content":"            return CommandList.addDeadlineTask(deadlineDescription, deadlineTime);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awdse22"},"content":"        case \"event\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awdse22"},"content":"            if (processedInput.length \u003c 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(command, \" You need to provide the task details!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awdse22"},"content":"            String[] eventParams \u003d processedInput[1].split(\"/from\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awdse22"},"content":"            if (eventParams.length !\u003d 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(\"event\",","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"awdse22"},"content":"                        \" I\u0027ll need you to format your details properly\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awdse22"},"content":"            String[] eventTimings \u003d eventParams[1].trim().split(\"/to\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awdse22"},"content":"            if (eventTimings.length !\u003d 2) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(\"event\",","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awdse22"},"content":"                        \" I\u0027ll need you to format your details properly\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awdse22"},"content":"            String eventDescription \u003d eventParams[0].trim();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"awdse22"},"content":"            String eventStart \u003d eventTimings[0].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"awdse22"},"content":"            String eventEnd \u003d eventTimings[1].trim();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awdse22"},"content":"            if (eventDescription.isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(\"event\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"awdse22"},"content":"                        \" Your description cannot be empty!\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awdse22"},"content":"            } else if (eventStart.isEmpty()) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(\"event\",","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awdse22"},"content":"                        \" Your start time cannot be empty!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"awdse22"},"content":"            } else if (eventEnd.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"awdse22"},"content":"                throw new IllegalTaskException(\"event\",","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awdse22"},"content":"                        \" Your end time cannot be empty!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"awdse22"},"content":"            return CommandList.addEventTask(eventDescription, eventStart, eventEnd);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"awdse22"},"content":"        default:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"awdse22"},"content":"            throw new InvalidSyntaxException(\" Hmm... I\u0027m not sure what you\u0027re trying to do :(\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"awdse22":138}},{"path":"src/main/java/mryapper/storagemanager/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.storagemanager;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import mryapper.exception.InvalidFileDataException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"import mryapper.task.TaskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import mryapper.task.Task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"import mryapper.task.Deadline;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"import mryapper.task.Todo;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"import mryapper.task.Event;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"import java.io.File;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":" * Manages saving and loading data between the Chatbot and data file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"public class StorageManager {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"     * Initializes the storage manager with the given file path.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"     * @param filePath The relative file path of the data txt file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"    public StorageManager(String filePath) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"     * Retrieves and reads the data file under the file path.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"     * If there is no data file in the file path, this method then creates a new data file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"     * @return The list of tasks stored in the data file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"     * @throws IOException If an error occurred while creating a new data file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"    public TaskList retrieveData() throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"        File taskData \u003d new File(filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"            if (!taskData.exists()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"                throw new InvalidFileDataException(\" It seems that there isn\u0027t a data file!\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"            Scanner dataFileReader \u003d new Scanner(taskData);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"            while (dataFileReader.hasNextLine()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"                taskList.add(readTaskData(dataFileReader.nextLine()));","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"            dataFileReader.close();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"            return new TaskList(taskList);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidFileDataException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"            System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"            boolean fileCreationSuccessful \u003d taskData.createNewFile();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"            if (fileCreationSuccessful) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"                System.out.println(\" A new data file has been created successfully\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"                return new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"            } else {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"                return null;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"     * Saves the ArrayList of tasks into the data file in the file path.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"     * @param tasks The list of tasks to be saved into data file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awdse22"},"content":"     * @throws IOException If an error occurred while saving the data.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awdse22"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awdse22"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awdse22"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awdse22"},"content":"            fw.write(task.getDataString());","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awdse22"},"content":"        fw.close();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awdse22"},"content":"    // reads the task data from the data file and adds task into the task ArrayList","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awdse22"},"content":"    private Task readTaskData(String taskData) throws InvalidFileDataException {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awdse22"},"content":"            String[] processedData \u003d taskData.split(\" \\\\|\\\\|\\\\| \");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awdse22"},"content":"            Task task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awdse22"},"content":"            String taskDescription \u003d processedData[2];","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awdse22"},"content":"            switch (processedData[0]) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awdse22"},"content":"            case \"T\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awdse22"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awdse22"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awdse22"},"content":"            case \"D\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awdse22"},"content":"                task \u003d new Deadline(taskDescription, processedData[3]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awdse22"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awdse22"},"content":"            case \"E\":","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awdse22"},"content":"                task \u003d new Event(taskDescription, processedData[3], processedData[4]);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awdse22"},"content":"                break;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awdse22"},"content":"            default:","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awdse22"},"content":"                throw new InvalidFileDataException(taskData);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awdse22"},"content":"            boolean taskIsDone;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awdse22"},"content":"            taskIsDone \u003d Integer.parseInt(processedData[1]) \u003e 0;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awdse22"},"content":"            if (taskIsDone) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awdse22"},"content":"                task.markAsDone();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awdse22"},"content":"            return task;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awdse22"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awdse22"},"content":"            throw new InvalidFileDataException(\" The data file is not in the correct format :(\\n\");","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"awdse22":110}},{"path":"src/main/java/mryapper/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":" * A type of task which has a deadline.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"    private final String deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"     * Creates a task with a deadline.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"    public String getDataString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"        return String.format(\"D ||| %d ||| %s ||| %s\\n\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"                this.getStatus(), this.getDescription(), this.deadline);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"        String deadlineString \u003d String.format(\" (by: %s)\", deadline);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"        return \"[D]\" + super.toString() + deadlineString;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"awdse22":31}},{"path":"src/main/java/mryapper/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":" * An event task that occurs within the specified time.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"    private final String eventStart;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"    private final String eventEnd;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"     * Creates an event task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"     * @param start The starting time or date of the event in string.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"     * @param end The ending time or date of the event in string.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"        this.eventStart \u003d start;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"        this.eventEnd \u003d end;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"    public String getDataString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"        return String.format(\"E ||| %d ||| %s ||| %s ||| %s\\n\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"                this.getStatus(), this.getDescription(), this.eventStart, this.eventEnd);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"        String detailsString \u003d String.format(\" (from: %s | to: %s)\", eventStart, eventEnd);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"        return \"[E]\" + super.toString() + detailsString;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"awdse22":33}},{"path":"src/main/java/mryapper/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":" * Contains all common functions and properties for tasks created by the ChatBot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":" * All tasks have a description and can be marked as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"public abstract class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"    private final String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"     * Creates a task with the given description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"     * Returns 1 if the task is done and 0 otherwise.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"     * @return 1 or 0 based on whether the task is done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"    public int getStatus() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"     * Returns a status icon to show whether the task is done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"     * @return \"X\" if the task is done and \" \" if the task isn\u0027t.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"        return this.description;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"     * Returns the string following the format of how the task is stored in the data file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"     * @return The string to be written when storing the task in data text file.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"     * Checks whether the task description has all keywords in the search input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"     * @param searchInput The search input from the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"     * @return Whether all keywords are contained in the task description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awdse22"},"content":"    public boolean hasKeywords(String searchInput) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awdse22"},"content":"        String[] keywords \u003d searchInput.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awdse22"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awdse22"},"content":"        String[] descriptionKeywords \u003d this.description.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awdse22"},"content":"        boolean hasMissingKeyword \u003d false;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awdse22"},"content":"        while (!hasMissingKeyword \u0026\u0026 i \u003c keywords.length) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awdse22"},"content":"            String keyword \u003d keywords[i].toLowerCase();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awdse22"},"content":"            boolean hasKeyword \u003d false;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awdse22"},"content":"            for (String word : descriptionKeywords) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awdse22"},"content":"                if (keyword.equals(word.toLowerCase())) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awdse22"},"content":"                    hasKeyword \u003d true;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awdse22"},"content":"                    break;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awdse22"},"content":"                }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awdse22"},"content":"            if (!hasKeyword) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awdse22"},"content":"                return false;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awdse22"},"content":"            i +\u003d 1;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awdse22"},"content":"        return !hasMissingKeyword;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awdse22"},"content":"    // gets the string data to be written in the data file","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awdse22"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-level-9","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awdse22"},"content":"    public abstract String getDataString();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awdse22"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awdse22"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"awdse22":99}},{"path":"src/main/java/mryapper/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import mryapper.storagemanager.StorageManager;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":" * Contains an ArrayList of tasks and all the necessary functions for the task list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"public class TaskList {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"     * Creates an empty task list with the capacity of 100 tasks.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"    public TaskList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"     * Creates an empty task list containing the tasks in the given ArrayList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"     * @param taskList An ArrayList of Task to be contained by the TaskList.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"     * Remove the task from the list with the given index.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"     * @param taskNumber The index of the task to remove starting from 1.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"     * @return The task that has been removed.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"    public Task remove(int taskNumber) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"        return taskList.remove(taskNumber - 1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"     * Counts the number of task in the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"     * @return The number of task in the list.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"    public int count() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"     * Marks the task with the given index as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"     * @param taskNumber The index of the task starting from 1.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"     * @return The task that has been marked as done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"    public Task mark(int taskNumber) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"        task.markAsDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awdse22"},"content":"        return task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awdse22"},"content":"     * Marks the task with the given index as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awdse22"},"content":"     * @param taskNumber The index of the task starting from 1.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awdse22"},"content":"     * @return The task that has been marked as not done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awdse22"},"content":"    public Task unmark(int taskNumber) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awdse22"},"content":"        Task task \u003d taskList.get(taskNumber - 1);","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awdse22"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awdse22"},"content":"        return task;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awdse22"},"content":"     * Saves the current list of tasks into the given storage.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awdse22"},"content":"     * @param storage The storage to save the list of tasks to.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awdse22"},"content":"    public void saveToStorage(StorageManager storage) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awdse22"},"content":"            storage.saveTasks(this.taskList);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awdse22"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awdse22"},"content":"            System.out.println(\" Something went wrong when saving your changes to the task list :(\");","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awdse22"},"content":"     * Searches and returns an ArrayList of task containing all the keywords in the string.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awdse22"},"content":"     * @param str Search input for task descriptions.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awdse22"},"content":"     * @return An ArrayList containing task with all the keywords in their description.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awdse22"},"content":"    public ArrayList\u003cTask\u003e searchTasks(String str) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awdse22"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awdse22"},"content":"        for (int i \u003d 0; i \u003c this.count(); i++ ) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awdse22"},"content":"            Task task \u003d this.taskList.get(i);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awdse22"},"content":"            if (task.hasKeywords(str)) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awdse22"},"content":"                result.add(task);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awdse22"},"content":"        return result;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awdse22"},"content":"    public String toString() {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awdse22"},"content":"        int listSize \u003d this.count();","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awdse22"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awdse22"},"content":"            return \"You do not have any tasks!\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"awdse22"},"content":"        String listInString \u003d \"\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"awdse22"},"content":"        for (int i \u003d 0; i \u003c listSize; i +\u003d 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awdse22"},"content":"            String taskString \u003d String.format(\" %d.%s\", i + 1, taskList.get(i));","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"awdse22"},"content":"            listInString +\u003d taskString;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"awdse22"},"content":"            if (i \u003c listSize - 1) {","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awdse22"},"content":"                listInString +\u003d \"\\n\";","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awdse22"},"content":"            }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"awdse22"},"content":"        return listInString;","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-30","isFullCredit":false}],"authorContributionMap":{"awdse22":130}},{"path":"src/main/java/mryapper/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":" * A task that is to be done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"     * Creates a task that is to be done.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"    public String getDataString() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"        return String.format(\"T ||| %d ||| %s\\n\",","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"                this.getStatus(), this.getDescription());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"awdse22":26}},{"path":"src/main/java/mryapper/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.ui;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"/**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":" * A class in charge of the user interface and sending messages to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":" */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"public class Ui {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"    private static final String GREETING_MESSAGE \u003d \" Hello! I\u0027m MrYapper\\n\"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"            + \" What can I do for you?\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"    private static final String GOODBYE_MESSAGE \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"     * Initializes the scanner and user interface of the Chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"    public Ui() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"     * Reads the next user input.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"     * @return The user input in the form of a string.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"     * Closes the scanner used to read user inputs.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"    public void close() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"        scanner.close();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"     * Sends a message of the user using println.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"     * @param message The message to be sent to the user.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"    public void send(String message) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"        System.out.println(message);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"     * Prints out the line separator around the messages sent by the Chatbot.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"    public void showLine() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"     * Makes the Chatbot send the greeting/hello message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"    public void showGreeting() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"        showLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"        send(GREETING_MESSAGE);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"        showLine();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"     * Makes the Chatbot send the goodbye message.","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"        send(GOODBYE_MESSAGE);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"awdse22":68}},{"path":"src/test/java/mryapper/MrYapperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"public class MrYapperTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"    public void dummyMrYapperTest() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"awdse22":12}},{"path":"src/test/java/mryapper/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.parser;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import mryapper.command.Command;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"import mryapper.exception.IllegalTaskException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import mryapper.exception.InvalidSyntaxException;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"public class ParserTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"    public void testBye() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"            // successful parsing","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"bye\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"            fail(\"An exception is shown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"    public void testList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"            // successful parsing","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"list\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"            fail(\"An exception is shown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"    public void testDelete() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"        // successful parsing","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"delete 2\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"            fail(\"An exception has been thrown instead\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"        // No argument provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"delete\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidSyntaxException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your syntax is incorrect!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"                    + \" You have to give me a valid task number!\\n e.g. delete 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"        // Extra space but wrong syntax","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"delete \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidSyntaxException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your syntax is incorrect!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"                    + \" You have to give me a valid task number!\\n e.g. delete 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"        // Argument provided has non-numerical characters","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"delete 1a\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You have to give me a valid task number!\\n e.g. delete 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awdse22"},"content":"        // Argument provided is not an integer","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"delete 1.1\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You have to give me a valid task number!\\n e.g. delete 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awdse22"},"content":"    public void testMark() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awdse22"},"content":"        // successful parsing","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"mark 2\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awdse22"},"content":"            fail(\"An exception has been thrown instead\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awdse22"},"content":"        // No argument provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"mark\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidSyntaxException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your syntax is incorrect!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awdse22"},"content":"                    + \" You have to give me a valid task number!\\n e.g. mark 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awdse22"},"content":"        // Extra space but wrong syntax","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"mark \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidSyntaxException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your syntax is incorrect!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awdse22"},"content":"                    + \" You have to give me a valid task number!\\n e.g. mark 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"awdse22"},"content":"        // Argument provided has non-numerical characters","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"mark 2x\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You have to give me a valid task number!\\n e.g. mark 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"awdse22"},"content":"        // Argument provided is not an integer","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"mark 1.1\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You have to give me a valid task number!\\n e.g. mark 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"awdse22"},"content":"    public void testUnmark() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"awdse22"},"content":"        // successful parsing","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"unmark 2\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"awdse22"},"content":"            fail(\"An exception has been thrown instead\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"awdse22"},"content":"        // no number provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"unmark\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidSyntaxException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your syntax is incorrect!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"awdse22"},"content":"                    + \" You have to give me a valid task number!\\n e.g. unmark 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"awdse22"},"content":"        // Extra space but wrong syntax","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"unmark \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidSyntaxException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your syntax is incorrect!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"awdse22"},"content":"                    + \" You have to give me a valid task number!\\n e.g. unmark 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"awdse22"},"content":"        // Argument provided has non-numerical characters","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"unmark 2x\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You have to give me a valid task number!\\n e.g. unmark 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"awdse22"},"content":"        // Argument provided is not an integer","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"unmark 1.1\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You have to give me a valid task number!\\n e.g. unmark 2\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"awdse22"},"content":"    public void testTodo() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"awdse22"},"content":"        // successful parsing","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"todo some todo task\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"awdse22"},"content":"            fail(\"An exception has been thrown instead\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"awdse22"},"content":"        // no description provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"todo \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You need to provide the task details!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"awdse22"},"content":"                    + \" To add a todo task, I need the task description\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"awdse22"},"content":"                    + \" e.g. todo read CS2103T notes\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"awdse22"},"content":"    public void testDeadline() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"awdse22"},"content":"        // successful parsing","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"deadline some task /by Sunday\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"awdse22"},"content":"            fail(\"An exception has been thrown instead\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"awdse22"},"content":"        // no details provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"deadline \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You need to provide the task details!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"awdse22"},"content":"                    + \" I need one description and deadline using \\\"/by\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"awdse22"},"content":"                    + \" e.g. deadline CS2103T project /by Dec 31st\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"awdse22"},"content":"        // no parameters provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"deadline /by  \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" I\u0027ll need you to format your details properly\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"awdse22"},"content":"                    + \" I need one description and deadline using \\\"/by\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"awdse22"},"content":"                    + \" e.g. deadline CS2103T project /by Dec 31st\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"awdse22"},"content":"        // no description provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"deadline /by june\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your description cannot be empty!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"awdse22"},"content":"                    + \" I need one description and deadline using \\\"/by\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"awdse22"},"content":"                    + \" e.g. deadline CS2103T project /by Dec 31st\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"awdse22"},"content":"        // no deadline provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"deadline some task /by \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" I\u0027ll need you to format your details properly\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"awdse22"},"content":"                    + \" I need one description and deadline using \\\"/by\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"awdse22"},"content":"                    + \" e.g. deadline CS2103T project /by Dec 31st\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"awdse22"},"content":"    public void testEvent() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"awdse22"},"content":"        // successful parsing","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"awdse22"},"content":"                    Parser.parse(\"event something /from 1 pm /to 2 pm\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"awdse22"},"content":"            fail(\"An exception has been thrown instead\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"awdse22"},"content":"        // no details provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"awdse22"},"content":"                    Parser.parse(\"event \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" You need to provide the task details!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"awdse22"},"content":"                    + \" I need one description, start and end time using \\\"/from\\\" and \\\"/to\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"awdse22"},"content":"                    + \" e.g. event project meeting /from Mon 2pm /to 4pm\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"awdse22"},"content":"        // invalid syntax","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"awdse22"},"content":"                    Parser.parse(\"event something /from 3 pm\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" I\u0027ll need you to format your details properly\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"awdse22"},"content":"                            + \" I need one description, start and end time using \\\"/from\\\" and \\\"/to\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"awdse22"},"content":"                            + \" e.g. event project meeting /from Mon 2pm /to 4pm\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"awdse22"},"content":"        // invalid syntax","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"awdse22"},"content":"                    Parser.parse(\"event something /to 5 pm\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" I\u0027ll need you to format your details properly\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"awdse22"},"content":"                            + \" I need one description, start and end time using \\\"/from\\\" and \\\"/to\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"awdse22"},"content":"                            + \" e.g. event project meeting /from Mon 2pm /to 4pm\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"awdse22"},"content":"        // invalid syntax","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class,","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"awdse22"},"content":"                    Parser.parse(\"event something /to 5 pm /from 3 pm\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" I\u0027ll need you to format your details properly\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"awdse22"},"content":"                            + \" I need one description, start and end time using \\\"/from\\\" and \\\"/to\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"awdse22"},"content":"                            + \" e.g. event project meeting /from Mon 2pm /to 4pm\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"awdse22"},"content":"        // no description provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"event /from 3 pm /to 5 pm\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your description cannot be empty!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"awdse22"},"content":"                    + \" I need one description, start and end time using \\\"/from\\\" and \\\"/to\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"awdse22"},"content":"                    + \" e.g. event project meeting /from Mon 2pm /to 4pm\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"awdse22"},"content":"        // no start time provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"event something /from /to 5 pm\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your start time cannot be empty!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"awdse22"},"content":"                            + \" I need one description, start and end time using \\\"/from\\\" and \\\"/to\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"awdse22"},"content":"                            + \" e.g. event project meeting /from Mon 2pm /to 4pm\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"awdse22"},"content":"        // no start time provided","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"event something /from 3 pm /to  \"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"awdse22"},"content":"        } catch (IllegalTaskException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" I\u0027ll need you to format your details properly\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"awdse22"},"content":"                            + \" I need one description, start and end time using \\\"/from\\\" and \\\"/to\\\"\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"awdse22"},"content":"                            + \" e.g. event project meeting /from Mon 2pm /to 4pm\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"awdse22"},"content":"    public void testUnknownCommand() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"something\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidSyntaxException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your syntax is incorrect!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"awdse22"},"content":"                            + \" Hmm... I\u0027m not sure what you\u0027re trying to do :(\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"awdse22"},"content":"            assertInstanceOf(Command.class, Parser.parse(\"LIST\"));","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"awdse22"},"content":"        } catch (InvalidSyntaxException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"awdse22"},"content":"            assertEquals(\" Your syntax is incorrect!\\n\"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"awdse22"},"content":"                            + \" Hmm... I\u0027m not sure what you\u0027re trying to do :(\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"awdse22"},"content":"                    e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"awdse22"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"awdse22"},"content":"            fail(\"Wrong exception has been thrown: \" + e);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"awdse22":415}},{"path":"src/test/java/mryapper/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"    public void testMarkAndUnmark() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"        Task testTask \u003d new Deadline(\"mark and unmark test\", \"today\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"        // marking a task as done","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"        testTask.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"[D][X] mark and unmark test (by: today)\", testTask.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"        // marking a task as not done","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"        testTask.markAsNotDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"[D][ ] mark and unmark test (by: today)\", testTask.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"    public void testDeadlineDataString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"        Task testTask \u003d new Deadline(\"data string test\", \"tomorrow \");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"        // unmarked task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"D ||| 0 ||| data string test ||| tomorrow \\n\", testTask.getDataString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"        // marked task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"        testTask.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"D ||| 1 ||| data string test ||| tomorrow \\n\", testTask.getDataString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"awdse22":31}},{"path":"src/test/java/mryapper/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"public class EventTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"    public void testMarkAndUnmark() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"        Task testTask \u003d new Event(\"mark and unmark test\", \"3 pm\", \"5 pm\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"        // marking a task as done","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"        testTask.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"[E][X] mark and unmark test (from: 3 pm | to: 5 pm)\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"                testTask.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"        // marking a task as not done","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"        testTask.markAsNotDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"[E][ ] mark and unmark test (from: 3 pm | to: 5 pm)\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"                testTask.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"    public void testDeadlineDataString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"        Task testTask \u003d new Event(\"data string test\", \"31 Aug\", \"5 Sep\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"        // unmarked task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"E ||| 0 ||| data string test ||| 31 Aug ||| 5 Sep\\n\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"                testTask.getDataString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"        // marked task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"        testTask.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"E ||| 1 ||| data string test ||| 31 Aug ||| 5 Sep\\n\",","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"                testTask.getDataString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"awdse22":35}},{"path":"src/test/java/mryapper/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"public class TaskListTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"    public void testString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"        // Empty task list","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"You do not have any tasks!\", new TaskList().toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"        // Task list containing 2 stub tasks","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"        Task markedStub \u003d new TaskStub();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"        markedStub.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"        testList.add(new TaskStub());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"        testList.add(markedStub);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"        TaskList taskList \u003d new TaskList(testList);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"        assertEquals(\" 1.[ ] stub\\n 2.[X] stub\", taskList.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"    public void testAdd() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"        // test adding task to taskList","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"        taskList.add(new TaskStub());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"        assertEquals(\" 1.[ ] stub\", taskList.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"awdse22"},"content":"    public void testRemove_success() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"awdse22"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"awdse22"},"content":"        testList.add(new TaskStub());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"awdse22"},"content":"        TaskList taskList \u003d new TaskList(testList);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"awdse22"},"content":"        // test removing task from taskList","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"awdse22"},"content":"        taskList.remove(1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"You do not have any tasks!\", taskList.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"awdse22"},"content":"    public void testRemove_exceptionThrown() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"awdse22"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"awdse22"},"content":"        testList.add(new TaskStub());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"awdse22"},"content":"        TaskList taskList \u003d new TaskList(testList);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"awdse22"},"content":"        // removing task number 0","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"awdse22"},"content":"            taskList.remove(0);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"awdse22"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"awdse22"},"content":"            assertEquals(\"Index -1 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"awdse22"},"content":"        // removing task number 2 which does not exist","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"awdse22"},"content":"            taskList.remove(2);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"awdse22"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"awdse22"},"content":"            assertEquals(\"Index 1 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"awdse22"},"content":"    public void testCount() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"awdse22"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"awdse22"},"content":"        // No task in list","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"awdse22"},"content":"        assertEquals(0, taskList.count());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"awdse22"},"content":"        // 2 tasks in list","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"awdse22"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"awdse22"},"content":"        testList.add(new TaskStub());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"awdse22"},"content":"        testList.add(new TaskStub());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"awdse22"},"content":"        TaskList taskListWithTasks \u003d new TaskList(testList);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"awdse22"},"content":"        assertEquals(2, taskListWithTasks.count());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"awdse22"},"content":"    public void testMarkAndUnmark_success() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"awdse22"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"awdse22"},"content":"        testList.add(new TaskStub());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"awdse22"},"content":"        TaskList taskList \u003d new TaskList(testList);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"awdse22"},"content":"        // Marking","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"awdse22"},"content":"        taskList.mark(1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"awdse22"},"content":"        assertEquals(\" 1.[X] stub\", taskList.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"awdse22"},"content":"        // Unmarking","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"awdse22"},"content":"        taskList.unmark(1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"awdse22"},"content":"        assertEquals(\" 1.[ ] stub\", taskList.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"awdse22"},"content":"    public void testMarkAndUnmark_exceptionThrown() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"awdse22"},"content":"        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"awdse22"},"content":"        testList.add(new TaskStub());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"awdse22"},"content":"        TaskList taskList \u003d new TaskList(testList);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"awdse22"},"content":"        // Marking task 0","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"awdse22"},"content":"            taskList.mark(0);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"awdse22"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"awdse22"},"content":"            assertEquals(\"Index -1 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"awdse22"},"content":"        // Marking non-existent task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"awdse22"},"content":"            taskList.mark(2);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"awdse22"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"awdse22"},"content":"            assertEquals(\"Index 1 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"awdse22"},"content":"        //  Unmarking task 0","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"awdse22"},"content":"            taskList.unmark(0);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"awdse22"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"awdse22"},"content":"            assertEquals(\"Index -1 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"awdse22"},"content":"        //  Unmarking non-existent task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"awdse22"},"content":"        try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"awdse22"},"content":"            taskList.unmark(2);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"awdse22"},"content":"            fail();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"awdse22"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"awdse22"},"content":"            assertEquals(\"Index 1 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"awdse22"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"awdse22":137}},{"path":"src/test/java/mryapper/task/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"    public TaskStub() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"        super(\"stub\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"    public String getDataString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"        return \"\";","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"    @Override","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"    public String toString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"        return String.format(\"[%s] stub\", super.getStatusIcon());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"awdse22":17}},{"path":"src/test/java/mryapper/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"package mryapper.task;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"public class TodoTest {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"    public void testMarkAndUnmark() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"        Task testTask \u003d new Todo(\"mark and unmark test\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"awdse22"},"content":"        // marking a task as done","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"awdse22"},"content":"        testTask.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"[T][X] mark and unmark test\", testTask.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"awdse22"},"content":"        // marking a task as not done","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"        testTask.markAsNotDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"[T][ ] mark and unmark test\", testTask.toString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"awdse22"},"content":"    @Test","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"awdse22"},"content":"    public void testTodoDataString() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"awdse22"},"content":"        Task testTask \u003d new Todo(\"data string test\");","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"awdse22"},"content":"        // unmarked task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"T ||| 0 ||| data string test\\n\", testTask.getDataString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"awdse22"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"awdse22"},"content":"        // marked task","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"awdse22"},"content":"        testTask.markAsDone();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"awdse22"},"content":"        assertEquals(\"T ||| 1 ||| data string test\\n\", testTask.getDataString());","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"awdse22"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"awdse22"},"content":"}","lastModifiedDate":"2024-09-01","isFullCredit":false}],"authorContributionMap":{"awdse22":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awdse22"},"content":"hello","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"awdse22"},"content":"todo read notes","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"awdse22"},"content":"deadline individual project /by Sunday","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"awdse22"},"content":"event cs2100 tutorial /from Tuesday 1 pm /to 2 pm","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"awdse22"},"content":"list","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"awdse22"},"content":"mark 1","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"awdse22"},"content":"mark 2","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"awdse22"},"content":"list","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"awdse22"},"content":"unmark 1","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"awdse22"},"content":"list","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"awdse22"},"content":"bye","lastModifiedDate":"2024-08-25","isFullCredit":false}],"authorContributionMap":{"awdse22":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"awdse22"},"content":"java -classpath ..\\bin MrYapper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"awdse22":1,"-":20}}]
