[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"    mainClass.set(\"nebula.ui.Launcher\")","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"    archiveBaseName \u003d \"nebula\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rithanisk":17,"-":39}},{"path":"src/main/java/nebula/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Deadline;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Parser;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     * Constructs an {@code AddDeadlineCommand} object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"     * @param description The command description containing details about the deadline task to be added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    public AddDeadlineCommand(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"     * Executes the add deadline command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * Parses the task description and deadline from the command, creates a new deadline task,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * and adds it to the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The task list to which the new deadline task will be added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component to display the result of adding the deadline task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage component (not used in this method).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If an I/O error occurs during any file operations (e.g., saving the task list).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"        String command \u003d getDescription();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"        String taskInformation \u003d Parser.splitCommandAndTaskDescription(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"        String taskDescriptionDeadline \u003d Parser.splitDeadlineCommand(taskInformation)[0];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"        String taskDeadline \u003d Parser.splitDeadlineCommand(taskInformation)[1];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"        Task newDeadline \u003d new Deadline(taskDescriptionDeadline, taskDeadline);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"        String addedDeadline \u003d tasks.addTask(newDeadline);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"        return addedDeadline;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"     * @return false since adding a Deadline Task does not exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"        return false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":56}},{"path":"src/main/java/nebula/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Event;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Parser;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     * Constructs an AddEventCommand object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"     * @param description The command description containing details about the event task to be added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    public AddEventCommand(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"     * Executes the add event command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * Parses the task description, start time, and end time from the command, creates a new event task,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * and adds it to the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The task list to which the new event task will be added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component to display the result of adding the event task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage component (not used in this method).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If an I/O error occurs during any file operations (e.g., saving the task list).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"        String command \u003d getDescription();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"        String taskInfo \u003d Parser.splitCommandAndTaskDescription(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"        String taskDescriptionEvent \u003d Parser.splitEventCommand(taskInfo)[0];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"        String startInfo \u003d Parser.splitEventCommand(taskInfo)[1];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"        String endInfo \u003d Parser.splitEventCommand(taskInfo)[2];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"        String taskStart \u003d Parser.splitCommandAndTaskDescription(startInfo);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"        String taskEnd \u003d Parser.splitCommandAndTaskDescription(endInfo);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"        Task newEvent \u003d new Event(taskDescriptionEvent, taskStart, taskEnd);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"        String addedEvent \u003d tasks.addTask(newEvent);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"        return addedEvent;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"     * @return false since adding an Event Task does not exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"        return false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":60}},{"path":"src/main/java/nebula/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Todo;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Parser;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"     * Constructs an AddTodoCommand object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     * @param description The command description containing the details of the Todo Task to be added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     * Executes the add Todo command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"     * Parses the task description from the command, creates a new Todo Task,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"     * and adds it to the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The task list to which the new Todo Task will be added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component to display the result of adding the todo task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage component (not used in this method).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"        String command \u003d getDescription();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"        String taskDescription \u003d Parser.splitCommandAndTaskDescription(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"        Task newTodo \u003d new Todo(taskDescription);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"        String addedTodo \u003d tasks.addTask(newTodo);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"        return addedTodo;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"     * @return false since adding a Todo Task does not exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"        return false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":51}},{"path":"src/main/java/nebula/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"     * Constructs a ByeCommand object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     * @param description The command description (not used in this command).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"    public ByeCommand(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"     * Executes the bye command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     * Displays a goodbye message and saves the current task list to a text file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The task list to be saved (not used directly in this method).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component to display the goodbye message.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage component used to save the task list to a file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If an I/O error occurs during saving the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"        storage.saveTaskListToTextFile(TaskList.getTaskList());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"        return ui.goodbye();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"     * @return true since the bye command exits the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"        return true;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":44}},{"path":"src/main/java/nebula/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"public abstract class Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"    private String description;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"     * Constructs a Command object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     * @param description The description of the command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    public Command(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     * Executes the command with the given task list, UI, and storage.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The list of tasks to be manipulated by the command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component to display messages to the user.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage to save any changes made to the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If an I/O error occurs while executing the command or saving changes.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will cause the application to exit.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"     * @return true if the application should exit after executing the command and false otherwise.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     * Returns the description of this command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"     * @return A string representing the command\u0027s description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"    public String getDescription() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"        return description;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":46}},{"path":"src/main/java/nebula/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Parser;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"     * Constructs a DeleteCommand object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"     * @param description The command description containing the task number to be deleted.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"    public DeleteCommand(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"     * Executes the delete command on the specified task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"     * This method deletes the task at the task number parsed from the command description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The task list from which the task will be deleted.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component to display the result of the delete operation.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage component (not used in this method).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"        String command \u003d getDescription();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"        int taskNum \u003d Parser.splitCommandAndTaskNumber(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"        return tasks.deleteTask(taskNum);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"     * @return false since the delete command does not exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"        return false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":44}},{"path":"src/main/java/nebula/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Parser;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"    public FindCommand(String description) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command to display the list of tasks that match the keyword.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param ui      The UI component that handles displaying the task list.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param storage The storage component (not used in this method).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"        String command \u003d getDescription();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"        String keyword \u003d Parser.splitCommandAndTaskDescription(command);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"        for (int i \u003d 0; i \u003c tasks.getTaskListLength(); i++) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"            if ((task.getDescription()).contains(keyword)) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"            return ui.displayNoMatchingTasks();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"        } else {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"            return ui.displayMatchingTasks(matchingTasks);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return false since the list command does not exit the application.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"        return false;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"rithanisk":43,"-":12}},{"path":"src/main/java/nebula/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"     * Constructs a ListCommand object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"     * @param description The command description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    public ListCommand(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"     * Executes the command to display the list of tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The list of tasks (not used in this method).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component that handles displaying the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage component (not used in this method).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"        return ui.displayList();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"     * @return false since the list command does not exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"        return false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":38}},{"path":"src/main/java/nebula/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Parser;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"     * Constructs a MarkCommand object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     * @param description The command description containing the task number to mark.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    public MarkCommand(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     * Executes the mark command on the specified task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"     * Marks the task at the task number parsed from the command as done.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The task list where the task will be marked.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component for user interaction.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage component for saving the task list after marking the task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If an I/O error occurs when saving the updated task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"        String command \u003d getDescription();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"        int taskNum \u003d Parser.splitCommandAndTaskNumber(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"        return tasks.markTask(taskNum);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"     * @return false since the mark command does not exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"        return false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":47}},{"path":"src/main/java/nebula/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Parser;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"     * Constructs an UnmarkCommand object with the specified description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     * @param description The command description containing the task number to unmark.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    public UnmarkCommand(String description) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     * Executes the unmark command on the specified task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"     * Marks the task at the task number parsed from the command as not done.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * @param tasks   The task list where the task will be unmarked.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * @param ui      The UI component for user interaction.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     * @param storage The storage component for saving the task list after unmarking the task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If an I/O error occurs when saving the updated task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"        String command \u003d getDescription();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"        int taskNum \u003d Parser.splitCommandAndTaskNumber(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"        return tasks.unmarkTask(taskNum);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     * Indicates whether this command will exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"     * @return false since the unmark command does not exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"        return false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":47}},{"path":"src/main/java/nebula/exception/NebulaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.exception;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"public class NebulaException extends Exception {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"     * Constructs a NebulaException with the specified error message","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"     * @param error The String description of the error message","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"    public NebulaException(String error) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"        super(error);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"rithanisk":12}},{"path":"src/main/java/nebula/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.exception.NebulaException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Deadline;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Event;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Todo;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"import java.io.*;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"public class Storage {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    String path;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"            \u003d DateTimeFormatter.ofPattern(\"MMMM d, yyyy HH:mm\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"            \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * @param filePath The path to the file to be used for storage.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"     * Reads a text file and converts its contents into a list of tasks. The method","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"     * parses each line to create the appropriate task objects and adds them to the list.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"     * @return An ArrayList of tasks read from the file.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     * @throws RuntimeException If an I/O error occurs or if the file format is incorrect.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"    public ArrayList\u003cTask\u003e textFileToArrayList() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"            FileReader fr \u003d new FileReader(path);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"            String textLine;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"            while ((textLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                writeTaskToArrayList(listOfTasks, textLine);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            br.close();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            fr.close();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return listOfTasks;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Writes a task from a given text line into an ArrayList of tasks.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param listOfTasks the ArrayList of Task objects to which the task will be added.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param textLine the string representation of the task to be parsed and added.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void writeTaskToArrayList(ArrayList\u003cTask\u003e listOfTasks, String textLine) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"        String[] parts \u003d textLine.split(\"\\\\|\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithanisk"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithanisk"},"content":"            parts[i] \u003d parts[i].trim();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithanisk"},"content":"        boolean isDone \u003d \"1\".equals(parts[0]);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithanisk"},"content":"        char taskSymbol \u003d parts[1].charAt(1);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Task task \u003d createTask(taskSymbol, parts, isDone);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            listOfTasks.add(task);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates a Task based on the specified task symbol and properties","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param taskSymbol a character representing the type of task (\u0027T\u0027, \u0027D\u0027, or \u0027E\u0027).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param parts an array of strings containing task details.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param isDone a boolean indicating whether the task is marked as done.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @return","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Task createTask(char taskSymbol, String[] parts, boolean isDone) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithanisk"},"content":"        switch (taskSymbol) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithanisk"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                return createTodoTask(parts, isDone);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                return createDeadlineTask(parts, isDone);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                return createEventTask(parts, isDone);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                System.out.println(\"Unknown task type: \" + taskSymbol);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Creates a Todo Task based on the provided parts and completion status.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param parts the array of strings containing task details","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param isDone a boolean indicating whether the task is marked as done.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @return the created Todo Task object, or null if the parts are insufficient.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Task createTodoTask(String[] parts, boolean isDone) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rithanisk"},"content":"        if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Task task \u003d new Todo(parts[2]);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rithanisk"},"content":"            task.setDone(isDone);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return task;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Creates a Deadline Task based on the provided parts and completion status.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param parts an array of strings containing task details","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @param isDone a boolean indicating whether the task is marked as done.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @return the created Deadline Task object, or null if the parts are insufficient.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public Task createDeadlineTask(String[] parts, boolean isDone) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rithanisk"},"content":"        if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rithanisk"},"content":"            String deadlineDescription \u003d parts[2];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rithanisk"},"content":"            String dueDate \u003d parts[3];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rithanisk"},"content":"            String formattedDueDate \u003d convertDate(dueDate);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Task task \u003d new Deadline(deadlineDescription, formattedDueDate);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rithanisk"},"content":"            task.setDone(isDone);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return task;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Creates an Event Task based on the provided parts and completion status","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param parts the array of strings containing task details.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param isDone a boolean indicating whether the task is marked as done.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @return the created Event Task object, or null if the parts are insufficient","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public Task createEventTask(String[] parts, boolean isDone) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rithanisk"},"content":"        if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rithanisk"},"content":"            String eventDescription \u003d parts[2];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rithanisk"},"content":"            String startEndDate \u003d parts[3];","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rithanisk"},"content":"            // Split start and end dates","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rithanisk"},"content":"            String[] dates \u003d startEndDate.split(\"-\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rithanisk"},"content":"            if (dates.length \u003d\u003d 2) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rithanisk"},"content":"                String startDate \u003d dates[0].trim();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rithanisk"},"content":"                String endDate \u003d dates[1].trim();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rithanisk"},"content":"                String formattedStartDate \u003d convertDate(startDate);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rithanisk"},"content":"                String formattedEndDate \u003d convertDate(endDate);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                Task task \u003d new Event(eventDescription,","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rithanisk"},"content":"                        formattedStartDate, formattedEndDate);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rithanisk"},"content":"                task.setDone(isDone);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"                return task;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rithanisk"},"content":"     * Converts a date string from one format to another. This method parses","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rithanisk"},"content":"     * the provided date string using a predefined input format and then formats it","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rithanisk"},"content":"     * into a different predefined output format.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rithanisk"},"content":"     * @param dateStr the date string to be converted","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rithanisk"},"content":"     * @return the date string formatted to the target format","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rithanisk"},"content":"     * @throws IllegalArgumentException if the provided date string is","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rithanisk"},"content":"     * not in the expected format","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rithanisk"},"content":"    public String convertDate(String dateStr) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rithanisk"},"content":"        // Parse the date string using the original format","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rithanisk"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rithanisk"},"content":"            dateTime \u003d LocalDateTime.parse(dateStr, OUTPUT_FORMAT);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rithanisk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rithanisk"},"content":"            throw new IllegalArgumentException(\"Date string is not in the expected format: \" + dateStr, e);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rithanisk"},"content":"        // Format the LocalDateTime object to the target format","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"rithanisk"},"content":"        return dateTime.format(DATE_TIME_FORMAT);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"rithanisk"},"content":"     * Loads tasks from the file located at the given path.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"rithanisk"},"content":"     * @return the TaskList containing the tasks loaded from the file.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"rithanisk"},"content":"     * @throws NebulaException if the file does not exist or cannot be accessed.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"rithanisk"},"content":"    public ArrayList\u003cTask\u003e load() throws NebulaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"rithanisk"},"content":"        Path nebulaTextFile \u003d Paths.get(path);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"rithanisk"},"content":"        if (Files.exists(nebulaTextFile)) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"rithanisk"},"content":"            return textFileToArrayList();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"rithanisk"},"content":"        } else {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(\"File doesn\u0027t exist!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"rithanisk"},"content":"     * Saves a list of tasks to a text file in the \"data\" directory. The tasks are saved","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"rithanisk"},"content":"     * in a format where each line contains the task\u0027s status, type, and description,","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"rithanisk"},"content":"     * followed by additional details for specific task types. If the \"data\" directory","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"rithanisk"},"content":"     * does not exist, it will be created.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"rithanisk"},"content":"     * @param listOfTasks The list of tasks to be saved to the file.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"rithanisk"},"content":"    public void saveTaskListToTextFile(ArrayList\u003cTask\u003e listOfTasks) throws IOException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"rithanisk"},"content":"        File dataDirectory \u003d new File(\"./data\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"rithanisk"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"            dataDirectory.mkdirs();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"rithanisk"},"content":"        File taskFile \u003d new File(dataDirectory, \"nebulaTaskList.txt\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"rithanisk"},"content":"        FileWriter fw \u003d new FileWriter(taskFile);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"rithanisk"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"            writeTask(task, fw);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Writes the details of a Task to a FileWriter in a specific format","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * @param task the Task object to be written to the file (of type Todo, Deadline, or Event).","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * @param fw the FileWriter object used to write the task to the file.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * @throws IOException if an I/O error occurs while writing to the file.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void writeTask(Task task, FileWriter fw) throws IOException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"rithanisk"},"content":"        String isMarked \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"rithanisk"},"content":"        String taskSymbol \u003d task.getTaskSymbol();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"rithanisk"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"rithanisk"},"content":"        String taskData \u003d isMarked + \" | \" + taskSymbol + \" | \" + taskDescription;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"rithanisk"},"content":"        if(task instanceof Deadline) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"rithanisk"},"content":"            taskData +\u003d \" | \" + ((Deadline) task).getDeadline();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"rithanisk"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"rithanisk"},"content":"            taskData +\u003d \" | \" + ((Event) task).getStart() + \"-\" + ((Event) task).getEnd();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"rithanisk"},"content":"        fw.write(taskData + \"\\n\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":166,"-":97}},{"path":"src/main/java/nebula/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"            \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     * Constructs a Deadline task with the specified description and deadline","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     * @param description The description of the task provided by the user","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"     * @param deadline The deadline of the task provided by the user","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"        this.deadline \u003d parseDateTimeOrDate(deadline);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * Parses the input date string and returns a LocalDateTime object. If it","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * contains only a date without time, appends \"00:00\" to default the","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     * time to midnight.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     * @param dateStr The deadline of the task provided by the user","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     * @return A LocalDateTime object to be assigned to the deadline field","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"    private LocalDateTime parseDateTimeOrDate(String dateStr) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"        assert dateStr !\u003d null \u0026\u0026 !dateStr.isEmpty() : \"Date string cannot be null or empty\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"            // Try parsing with date and time","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"            return LocalDateTime.parse(dateStr, DATE_TIME_FORMAT);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"            try {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"                // If parsing without time, append \"T00:00\" to default the time to midnight","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"                return LocalDateTime.parse(dateStr + \" 00:00\", DATE_TIME_FORMAT);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"                throw new IllegalArgumentException(\"Invalid date format: \" + dateStr);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"     * The string includes a \"[D]\" prefix to indicate that this is a Deadline task,","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"     * followed by the string representation provided by the Task superclass.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"     * @return A string in the format: \"[D] \u003csuper.toString()\u003e\"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"        return this.getTaskSymbol()","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"                + \" \" + super.toString() + \" (by: \" + getDeadline() + \")\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithanisk"},"content":"     * Returns the taskSymbol for the Deadline object","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithanisk"},"content":"     * @return A string with the taskSymbol","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"        return super.getTaskSymbol() + \"[D]\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithanisk"},"content":"     * Returns the deadline formatted as \"Month Date, Year\".","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithanisk"},"content":"     * @return The formatted deadline as a {@code String}.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithanisk"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithanisk"},"content":"        if (this.deadline \u003d\u003d null) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithanisk"},"content":"            return \"No deadline set\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithanisk"},"content":"        // Define the desired date format","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithanisk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM d, yyyy HH:mm\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithanisk"},"content":"        // Format the LocalDate object","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithanisk"},"content":"        return this.deadline.format(formatter);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rithanisk":85}},{"path":"src/main/java/nebula/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"            \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     * Constructs an Event task with the specified description, start time, and end time","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     * @param description The description of the task provided by the user","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"     * @param start The start time of the task provided by the user","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"     * @param end The end time of the task provided by the user","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"        this.start \u003d parseDateTimeOrDate(start);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"        this.end \u003d parseDateTimeOrDate(end);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     * Parses the input date string and returns a LocalDateTime object. If it","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * contains only a date without time, appends \"00:00\" to default the","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     * time to midnight.","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"     * @param dateStr The start or end date of the task provided by the user","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"     * @return A LocalDateTime object to be assigned to the start and end fields","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    private LocalDateTime parseDateTimeOrDate(String dateStr) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"        assert dateStr !\u003d null \u0026\u0026 !dateStr.isEmpty() : \"Date string cannot be null or empty\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"            // Try parsing with date and time","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"            return LocalDateTime.parse(dateStr, DATE_TIME_FORMAT);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"            try {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"                // If parsing without time, append \"T00:00\" to default the time to midnight","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"                return LocalDateTime.parse(dateStr + \" 00:00\", DATE_TIME_FORMAT);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"                throw new IllegalArgumentException(\"Invalid date format: \" + dateStr);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"     * The string includes a \"[E]\" prefix to indicate that this is an Event task,","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"     * followed by the string representation provided by the Task superclass.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"     * @return A string in the format: \"[E] \u003csuper.toString()\u003e\"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"        return this.getTaskSymbol() + \" \" + super.toString()","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithanisk"},"content":"                + \" (from: \" + getStart() + \" to: \" + getEnd() + \")\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithanisk"},"content":"     * Returns the taskSymbol for the Event object","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"     * @return A string with the taskSymbol","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithanisk"},"content":"        return super.getTaskSymbol() + \"[E]\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithanisk"},"content":"     * Returns the start date formatted as \"Month Date, Year\".","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithanisk"},"content":"     * @return The formatted start date as a {@code String}.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithanisk"},"content":"    public String getStart() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithanisk"},"content":"        if (this.start \u003d\u003d null) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithanisk"},"content":"            return \"No start date set\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithanisk"},"content":"        // Define the desired date format","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithanisk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM d, yyyy HH:mm\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithanisk"},"content":"        // Format the LocalDate object","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithanisk"},"content":"        return this.start.format(formatter);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithanisk"},"content":"     * Returns the end date formatted as \"Month Date, Year\".","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithanisk"},"content":"     * @return The formatted end date as a {@code String}.","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithanisk"},"content":"    public String getEnd() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithanisk"},"content":"        if (this.end \u003d\u003d null) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithanisk"},"content":"            return \"No deadline set\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithanisk"},"content":"        // Define the desired date format","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithanisk"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM d, yyyy HH:mm\");","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithanisk"},"content":"        // Format the LocalDate object","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithanisk"},"content":"        return this.end.format(formatter);","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rithanisk":102}},{"path":"src/main/java/nebula/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"public class Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"    private final String description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"     * Constructs a Task with the specified description","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"     * The task is initialized with the given description and is marked as not done","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"     * @param description The description of the task provided by the user","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    public Task (String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"     * Returns the description of this task","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"     * @return The description of the task","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"        return this.description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * Checks if the task has been completed","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     * @return true if the task is completed, false otherwise","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"        return this.isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"     * Sets the completion status of the task","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     * @param isDone true to mark the task as completed, false to mark it as not completed","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"     * Returns the status icon representing the completion state of the task","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"     * Returns \"X\" if the task is completed, otherwise returns \" \"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"     * @return A string representing the status icon of the task","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"     * Returns a string representation of the object which includes the","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"     * status icon and the description of the object","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"     * @return A string in the format: \"[\u003cstatusIcon\u003e] \u003cdescription\u003e\"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithanisk"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithanisk"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"     * Returns empty string","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"     * @return An empty string","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithanisk"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithanisk"},"content":"        return \"\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rithanisk":73}},{"path":"src/main/java/nebula/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"public class TaskList {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"    private static int length;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"    private Ui ui;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"     * Constructs a TaskList with an initial capacity of 100 tasks","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     * The TaskList is initialized with an empty array of Tasks,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     * a length of 0, and a new Ui instance","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"        taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"        assert listOfTasks !\u003d null : \"Given list of tasks should not be null\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"        taskList \u003d listOfTasks;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     * Returns the list of tasks represented by the TaskList","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"     * @return An array of Task objects representing the current list of tasks","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"        return taskList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     * Returns the number of tasks currently in the TaskList","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"     * @return The number of tasks in the TaskList","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"    public static int getTaskListLength() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"        assert taskList !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"        return taskList.size();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"     * Adds a new task to the TaskList","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"     * @param task The Task object to be added to the TaskList","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"        assert task !\u003d null : \"Task to be added should not be null\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"        taskList.add(task);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"        return ui.displayAddedTask(task);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithanisk"},"content":"     * Marks a task as completed based on its index in the TaskList","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithanisk"},"content":"     * @param taskNum The index of the task (1-based) to be marked as completed","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithanisk"},"content":"     * @return A string message indicating the result of the marking operation","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"    public String markTask(int taskNum) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"        assert taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size() : \"Task number should be within valid range\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"        Task t \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"        assert t !\u003d null : \"Task retrieved should not be null\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"        if (t.isDone()){","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithanisk"},"content":"            return ui.displayAlreadyMarkedTask();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithanisk"},"content":"        t.setDone(true);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"        return ui.displayMarkedTask(t);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithanisk"},"content":"     * Unmarks a task as not completed based on its index in the TaskList","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithanisk"},"content":"     * @param taskNum The index of the task (1-based) to be unmarked","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithanisk"},"content":"     * @return A string message indicating the result of the unmarking operation","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithanisk"},"content":"    public String unmarkTask(int taskNum) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithanisk"},"content":"        assert taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size() : \"Task number should be within valid range\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithanisk"},"content":"        Task t \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithanisk"},"content":"        assert t !\u003d null : \"Task to be deleted should not be null\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithanisk"},"content":"        if (!t.isDone()){","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithanisk"},"content":"            return ui.displayAlreadyUnmarkedTask();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithanisk"},"content":"        t.setDone(false);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithanisk"},"content":"        return ui.displayUnmarkedTask(t);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithanisk"},"content":"     * Deletes the specified task from the TaskList","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithanisk"},"content":"     * @param taskNum The task number of the Task Object to be deleted from the TaskList","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithanisk"},"content":"    public String deleteTask(int taskNum) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithanisk"},"content":"        assert taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size() : \"Task number should be within valid range\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithanisk"},"content":"        System.out.println(taskNum);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithanisk"},"content":"        Task t \u003d taskList.get(taskNum - 1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithanisk"},"content":"        taskList.remove(taskNum - 1);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rithanisk"},"content":"        return ui.displayDeletedTask(t);","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rithanisk"},"content":"     * Returns the specified task from the TaskList","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rithanisk"},"content":"     * @param taskNum The task number of the Task Object to be returned","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rithanisk"},"content":"    public Task getTask(int taskNum) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rithanisk"},"content":"        assert taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size() : \"Task number should be within valid range\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rithanisk"},"content":"        Task t \u003d taskList.get(taskNum);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rithanisk"},"content":"        return t;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rithanisk":116}},{"path":"src/main/java/nebula/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"/**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":" * Enum representing the different nebula.task.Task Types","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":" */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"public enum TaskType {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"    TODO, DEADLINE, EVENT, UNKNOWN","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":8}},{"path":"src/main/java/nebula/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"     * Constructs a Todo task with the specified description","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"     * The task is initialized with the given description","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"     * @param description The description of the task provided by the user","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"     * The string includes a \"[T]\" prefix to indicate that this is a Todo task,","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"     * followed by the string representation provided by the Task superclass.","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"     * @return A string in the format: \"[T] \u003csuper.toString()\u003e\"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"        return this.getTaskSymbol() + \" \" + super.toString();","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     * Returns the taskSymbol for the Todo object","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     * @return A string with the taskSymbol","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"        return super.getTaskSymbol() + \"[T]\";","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rithanisk":38}},{"path":"src/main/java/nebula/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"    @FXML","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    @FXML","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a DialogBox with the specified text, image, and FXML layout.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param text the text to be displayed in the dialog box;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param img the image to be displayed in the dialog box;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"    private void flip() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a user dialog with the specified text and image.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param text the text to be displayed in the user dialog box.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param img the image to be displayed in the user dialog box.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return a DialogBox instance representing the user dialog.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates a Nebula DialogBox with the specified text and image","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param text the text to be displayed in the Nebula dialog box.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param img the image to be displayed in the Nebula dialog box.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @return a DialogBox instance representing the Nebula dialog.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static DialogBox getNebulaDialog(String text, Image img) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithanisk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithanisk"},"content":"        db.flip();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithanisk"},"content":"        return db;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"rithanisk":60,"-":21}},{"path":"src/main/java/nebula/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"public class Launcher {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"rithanisk":12}},{"path":"src/main/java/nebula/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A GUI for Nebula using FXML.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"    private Nebula nebula \u003d new Nebula(\"./data/nebulaTaskList.txt\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Sets up the primary stage for the application","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * the application scene can be set.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * primary stages.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"    @Override","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setNebula(nebula);  // inject the Nebula instance","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"            stage.show();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"rithanisk":31,"-":10}},{"path":"src/main/java/nebula/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"/**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":" */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    @FXML","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    @FXML","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    @FXML","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"    @FXML","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    private Button sendButton;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"    private Nebula nebula;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Image nebulaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaNebula.jpeg\"));","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes the Nebula chatbot","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    @FXML","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"        initializeChatbot();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /** Injects the Nebula instance */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setNebula(Nebula n) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"        nebula \u003d n;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the Nebula chatbot with the greeting message","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"    private void initializeChatbot() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"        Nebula nebula \u003d new Nebula(\"./data/nebulaTaskList.txt\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"        // Display the greeting message at startup","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"        String greeting \u003d nebula.start();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DialogBox.getNebulaDialog(greeting, nebulaImage)","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"        );","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Neubla\u0027s reply and then appends them to","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithanisk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithanisk"},"content":"    @FXML","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithanisk"},"content":"    // Then handle user inputs normally with the getResponse method","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"        String response \u003d nebula.getResponse(input);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                DialogBox.getNebulaDialog(response, nebulaImage)","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithanisk"},"content":"        );","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithanisk"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"rithanisk":64,"-":12}},{"path":"src/main/java/nebula/ui/Nebula.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.exception.NebulaException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.command.Command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import java.io.*;","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"public class Nebula {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    private Ui ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"    private Parser parser;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"    private Storage storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"     * Constructs a new Nebula instance.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"     * Initializes the user interface, storage, task list, and parser.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"     * @param filePath The path of the file where task data is stored.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"    public Nebula(String filePath) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"        } catch (NebulaException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"        parser \u003d new Parser(filePath, tasks);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"     * Continuously reads user commands, processes them, and executes the corresponding actions","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"     * until the exit command is given.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If there is an issue reading from or writing to files.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"        System.out.println(ui.greeting());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"        while(!isExit) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"            try {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                assert fullCommand !\u003d null \u0026\u0026 !fullCommand.trim().isEmpty()","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        : \"Command should not be null or empty\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"                assert c !\u003d null : \"Parsed command should not be null\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"            } catch (NebulaException e) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithanisk"},"content":"     * The entry point of the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithanisk"},"content":"     * Initializes the Nebula application with the provided file path and starts it.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithanisk"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithanisk"},"content":"     * @throws IOException If there is an issue during the execution of the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"        new Nebula(\"./data/nebulaTaskList.txt\").run();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithanisk"},"content":"     * Starts the application by displaying a greeting.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithanisk"},"content":"     * This method can be called once when the application starts in a GUI environment.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithanisk"},"content":"     * @return The greeting message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithanisk"},"content":"    public String start() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithanisk"},"content":"        return ui.greeting();  // Return greeting message for display in the GUI","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithanisk"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithanisk"},"content":"     * Parses and processes the input to execute the appropriate commands.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithanisk"},"content":"     * @param input The user\u0027s chat message as input.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithanisk"},"content":"     * @return The response generated by executing the corresponding command.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithanisk"},"content":"    public String getResponse(String input) throws IOException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithanisk"},"content":"        assert input !\u003d null \u0026\u0026 !input.trim().isEmpty() : \"Input should not be null or empty\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithanisk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithanisk"},"content":"            Command c \u003d Parser.parse(input);  // Parse the input command","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithanisk"},"content":"            assert c !\u003d null;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithanisk"},"content":"            response \u003d c.execute(tasks, ui, storage);  // Execute the command and return the response","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithanisk"},"content":"        } catch (NebulaException e) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithanisk"},"content":"            response \u003d e.getMessage();  // If there\u0027s an error, return the error message","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithanisk"},"content":"        return response;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rithanisk":100,"-":2}},{"path":"src/main/java/nebula/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.command.*;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.exception.NebulaException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskType;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"public class Parser {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"            \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"    private static final DateTimeFormatter DATE_FORMAT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"            \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"    private static Ui ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    private static Storage storage;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"     * Constructs a new Parser instance.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"     * Initializes the user interface and storage, and sets the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"     * @param filePath The path to the file where task data is stored.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"     * @param tasks    The TaskList containing current tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"    public Parser (String filePath, TaskList tasks) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"     * Parses a command string input by the user and returns the corresponding Command object.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"     * It handles commands like \"bye\", \"list\", \"mark\", \"unmark\", \"delete\", and task creation commands.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"     * @param command The full command string entered by the user.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"     * @return The Command object that corresponds to the user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"     * @throws NebulaException If the command is invalid or improperly formatted.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"    public static Command parse(String command) throws NebulaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"        assert command !\u003d null : \"Command input should not be null\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"        if(command.equals(\"bye\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"            return new ByeCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"        else if(command.equals(\"list\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"            return new ListCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"        else if(command.startsWith(\"mark\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"            validateCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"            return new MarkCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"        else if(command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"            validateCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithanisk"},"content":"            return new UnmarkCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithanisk"},"content":"        else if(command.startsWith(\"delete\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithanisk"},"content":"            validateCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithanisk"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"        else if(command.startsWith(\"find\")) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"            validateCommand(command);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"            return new FindCommand(command);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        else if(command.startsWith(\"help\")) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new HelpCommand(command);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"        else {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithanisk"},"content":"            validateCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithanisk"},"content":"            TaskType taskType \u003d parseTaskType(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assert taskType !\u003d TaskType.UNKNOWN : \"TaskType should not be UNKNOWN\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithanisk"},"content":"            switch (taskType) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithanisk"},"content":"                case TODO:","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithanisk"},"content":"                    return new AddTodoCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithanisk"},"content":"                case DEADLINE:","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithanisk"},"content":"                    return new AddDeadlineCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithanisk"},"content":"                case EVENT:","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithanisk"},"content":"                    return new AddEventCommand(command);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithanisk"},"content":"        assert false : \"Command should be handled in one of the cases\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithanisk"},"content":"        return null;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithanisk"},"content":"     * Validates the user\u0027s input for the correct format and content","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithanisk"},"content":"     * @param command  the user input command","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithanisk"},"content":"     * @throws NebulaException if the command is invalid or improperly formatted","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithanisk"},"content":"    public static void validateCommand(String command) throws NebulaException {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithanisk"},"content":"        assert command !\u003d null \u0026\u0026 !command.isEmpty() : \"Command should not be null or empty\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithanisk"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithanisk"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(\"Please enter a command!\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rithanisk"},"content":"        } else if (!(command.startsWith(\"todo\") || command.startsWith(\"deadline\")","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rithanisk"},"content":"                || command.startsWith(\"event\") || command.startsWith(\"mark\")","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rithanisk"},"content":"                || command.startsWith(\"unmark\") || command.startsWith(\"delete\")","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rithanisk"},"content":"                || command.startsWith(\"list\") || command.startsWith(\"bye\")","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                || command.startsWith(\"find\") || command.startsWith(\"help\"))) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(ui.displayUnknownCommandException());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rithanisk"},"content":"        } else if (command.startsWith(\"mark\") || command.startsWith(\"unmark\")","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rithanisk"},"content":"                || command.startsWith(\"delete\")) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rithanisk"},"content":"            parseMarkUnMarkDelete(command);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rithanisk"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rithanisk"},"content":"            parseFind(command);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rithanisk"},"content":"        } else {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rithanisk"},"content":"            String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rithanisk"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rithanisk"},"content":"                throw new NebulaException(ui.displayUnknownMessageException());","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rithanisk"},"content":"            String description \u003d parts[1].trim();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rithanisk"},"content":"            if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rithanisk"},"content":"                parseDeadline(description);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rithanisk"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rithanisk"},"content":"                parseEvent(description);","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses the mark, unmark, and delete commands to ensure they are inputted correctly.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @param command The command string containing the command and task number.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws NebulaException If the command is invalid or the task number is not recognized.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rithanisk"},"content":"    private static void parseMarkUnMarkDelete(String command) throws NebulaException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rithanisk"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rithanisk"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(ui.displayUnknownTaskNumberException());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rithanisk"},"content":"            int taskIndex \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rithanisk"},"content":"            assert taskIndex \u003e\u003d0 : \"Task index must be non-negative\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rithanisk"},"content":"            if (taskIndex \u003c 0 || taskIndex \u003e\u003d TaskList.getTaskListLength()) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rithanisk"},"content":"                throw new NebulaException(ui.displayNonexistentTaskNumberException());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rithanisk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(ui.displayUnknownTaskNumberException());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses the find command to extract a single keyword for searching tasks.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param command The command string containing the find action and keyword.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws NebulaException If the command is missing a keyword or contains multiple keywords.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rithanisk"},"content":"    private static void parseFind(String command) throws NebulaException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rithanisk"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rithanisk"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(ui.displayUnknownMessageException());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rithanisk"},"content":"        String[] keywords \u003d parts[1].trim().split(\"\\\\s+\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rithanisk"},"content":"        assert keywords.length \u003d\u003d 1 : \"Find command should have exactly one keyword\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rithanisk"},"content":"        if (keywords.length !\u003d 1) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(ui.displayOneKeywordException());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Parses a Deadline task description to ensure it is formatted properly.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @param description The description string for the deadline task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @throws NebulaException NebulaException If the description is missing the due date or","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * formatted incorrectly.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rithanisk"},"content":"    private static void parseDeadline(String description) throws NebulaException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rithanisk"},"content":"        if (!description.contains(\"/by\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(ui.displayUnknownDeadlineException());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rithanisk"},"content":"            String[] parts2 \u003d description.split(\"/by\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            String taskDescription \u003d parts2[0].trim();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"                throw new NebulaException(\"The deadline task description cannot be empty!\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rithanisk"},"content":"            String dueDate \u003d parts2[1].trim();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rithanisk"},"content":"            assert dueDate !\u003d null : \"Deadline date should not be null\";","lastModifiedDate":"2024-09-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rithanisk"},"content":"            if (!isValidDate(dueDate)) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rithanisk"},"content":"                throw new NebulaException(\"Warning: Deadline date \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                        + \"is not in the correct format (yyyy-mm-dd HH:mm).\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Parses an Event task description to ensure it is formatted properly.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * @param description The description string for the Event task.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * @throws NebulaException NebulaException If the description is missing the start/end date or","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * formatted incorrectly.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"rithanisk"},"content":"    private static void parseEvent(String description) throws NebulaException {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"rithanisk"},"content":"        if (!description.contains(\"/from\") || !description.contains(\"/to\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"rithanisk"},"content":"            throw new NebulaException(ui.displayUnknownEventTimingException());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"rithanisk"},"content":"        } else {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"rithanisk"},"content":"            String[] parts2 \u003d description.split(\"/from\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            String eventDescription \u003d parts2[0].trim();","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (eventDescription.isEmpty()) {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"                throw new NebulaException(\"The event description cannot be empty!\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"rithanisk"},"content":"            String timingPart \u003d parts2[1].trim();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"rithanisk"},"content":"            String[] dates \u003d timingPart.split(\"/to\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"rithanisk"},"content":"            if (dates.length \u003c 2) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"rithanisk"},"content":"                throw new NebulaException(ui.displayUnknownEventTimingException());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"rithanisk"},"content":"            String startDate \u003d dates[0].trim();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"rithanisk"},"content":"            String endDate \u003d dates[1].trim();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"rithanisk"},"content":"            if (!isValidDate(startDate) || !isValidDate(endDate)) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"rithanisk"},"content":"                throw new NebulaException(\"Warning: Event dates\"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"                        + \" are not in the correct format (yyyy-mm-dd HH:mm).\");","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"rithanisk"},"content":"     * Validates if the provided date string is in a valid date format","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"rithanisk"},"content":"     * @param dateStr the date string to be validated. It can be in either of two formats","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"rithanisk"},"content":"     * @return A boolean representing whether the date string is in a valid format","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"rithanisk"},"content":"    private static boolean isValidDate(String dateStr) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"rithanisk"},"content":"        try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"rithanisk"},"content":"            LocalDateTime.parse(dateStr, DATE_TIME_FORMAT);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"rithanisk"},"content":"            return true;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"rithanisk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"rithanisk"},"content":"            try {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"rithanisk"},"content":"                LocalDate.parse(dateStr, DATE_FORMAT);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"rithanisk"},"content":"                return true;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"rithanisk"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"rithanisk"},"content":"                return false;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"rithanisk"},"content":"     * Splits the command string to extract the task number","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"rithanisk"},"content":"     * @param command The command string containing the command and task number","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"rithanisk"},"content":"     * @return The task number as an integer","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"rithanisk"},"content":"    public static int splitCommandAndTaskNumber(String command) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"rithanisk"},"content":"        String taskNum \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"rithanisk"},"content":"        return Integer.parseInt(taskNum);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"rithanisk"},"content":"     * Splits the command string to extract the task description","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"rithanisk"},"content":"     * @param command The command string containing the command and task description","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"rithanisk"},"content":"     * @return The task description as a String","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"rithanisk"},"content":"    public static String splitCommandAndTaskDescription(String command) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"rithanisk"},"content":"        return command.split(\" \", 2)[1];","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"rithanisk"},"content":"     * Splits the command string to extract the","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"rithanisk"},"content":"     * @param command The command string containing the command, task description, and deadline","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"rithanisk"},"content":"     * @return The task deadline as a String","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"rithanisk"},"content":"    public static String[] splitDeadlineCommand(String command) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"rithanisk"},"content":"        return command.split(\"/by \", 2);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"rithanisk"},"content":"     * @param command The command string containing the command, task description,","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"rithanisk"},"content":"     *                event start time, and event end time","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"rithanisk"},"content":"     * @return The event start and end time as a String","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"rithanisk"},"content":"    public static String[] splitEventCommand(String command) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-24","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"rithanisk"},"content":"        return command.split(\" /\", 3);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"rithanisk"},"content":"     * Determines the TaskType based on the command prefix","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"rithanisk"},"content":"     * @param command the input command string","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"rithanisk"},"content":"     * @return the corresponding TaskType, or unknown TaskType if unrecognized","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"rithanisk"},"content":"    public static TaskType parseTaskType(String command) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"rithanisk"},"content":"        if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"rithanisk"},"content":"            return TaskType.TODO;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"rithanisk"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"rithanisk"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"rithanisk"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"rithanisk"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"rithanisk"},"content":"        } else {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"rithanisk"},"content":"            return TaskType.UNKNOWN;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"rithanisk":267,"-":45}},{"path":"src/main/java/nebula/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.ui;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.task.Task;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"public class Ui {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"//    private static final String DIVIDER \u003d \"---------------------------------------------------\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"    private static  final String GREETING \u003d \"Hello! I\u0027m Nebula, what can I do for you today?\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    private static  final String GOODBYE \u003d \"Bye! Hope to see you again soon :)\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    private static final String MARKED \u003d \"Nice! This task has successfully been marked:\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"    private static final String UNMARKED \u003d \"Nice! This task has successfully been unmarked:\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"    private static final String ALREADY_MARKED \u003d \"This task has already been marked!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"    private static final String ALREADY_UNMARKED \u003d \"This task has already been unmarked!\";","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String UNKNOWN_COMMAND \u003d \"OOPS! Unknown command! Please enter \u0027help\u0027\"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \" for a list of commands I support!\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    private static final String UNKNOWN_TASK_NUMBER \u003d \"The mark/unmark/delete command \" +","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \"requires a task number!\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    private static final String NONEXISTENT_TASK_NUMBER \u003d \"The task number provided \" +","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"            \"does not exist.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String UNKNOWN_DESCRIPTION \u003d \"The command requires a description!\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"    private static final String UNKNOWN_DEADLINE \u003d \"The deadline task description \" +","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"            \"must contain \u0027/by\u0027 followed by the deadline date.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"    private static final String UNKNOWN_EVENT_TIMING \u003d \"The event task description \" +","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"            \"must contain \u0027/from\u0027 and \u0027/to\u0027 with the respective start and end times.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"    private static final String ONE_KEYWORD \u003d \"Please enter exactly one keyword for the \u0027find\u0027 command.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"    private static final String NO_MATCHING_TASKS \u003d \"No matching tasks found.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"     * Returns the greeting message to be displayed to the user","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"     * @return A string containing the greeting message","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"    public String greeting() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"        return GREETING;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"rithanisk"},"content":"     * Returns the goodbye message to be displayed to the user","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"rithanisk"},"content":"     * @return A string containing the goodbye message","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"rithanisk"},"content":"    public String goodbye() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"rithanisk"},"content":"        return GOODBYE;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"rithanisk"},"content":"     * Returns a message indicating that a new task has been added","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"rithanisk"},"content":"     * @param task The task that was added","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"rithanisk"},"content":"     * @return A string containing the message that a task was added","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"rithanisk"},"content":"     * with the task description","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"rithanisk"},"content":"    public String displayAddedTask(Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"rithanisk"},"content":"        return \"Got it! I\u0027ve added this task:\" + \"\\n\"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"rithanisk"},"content":"                + \"  \" + task.toString() + \"\\n\" + \"Now you have \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"rithanisk"},"content":"                + TaskList.getTaskListLength()","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"rithanisk"},"content":"                + (TaskList.getTaskListLength() \u003d\u003d 1","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"rithanisk"},"content":"                    ? \" task \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"rithanisk"},"content":"                    : \" tasks \") + \"in the list.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"rithanisk"},"content":"     * Returns a string representation of the current task list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"rithanisk"},"content":"     * @return A string containing the formatted list of tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"rithanisk"},"content":"     * If the list is empty, a message indicating that the list is empty is returned","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"rithanisk"},"content":"    public String displayList() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"rithanisk"},"content":"        String displayList \u003d \"Here are the tasks in your list:\" + \"\\n\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"rithanisk"},"content":"        int taskLength \u003d TaskList.getTaskListLength();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"rithanisk"},"content":"        ArrayList\u003cTask\u003e list \u003d TaskList.getTaskList();","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"rithanisk"},"content":"        if(taskLength \u003d\u003d 0) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"rithanisk"},"content":"            return \"Your task list is empty!\";","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"rithanisk"},"content":"        for (int i \u003d 0; i \u003c taskLength; i++) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"rithanisk"},"content":"            displayList +\u003d (i + 1) + \". \" + list.get(i).toString();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"rithanisk"},"content":"            if(i \u003c taskLength - 1) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"rithanisk"},"content":"                displayList +\u003d \"\\n\";","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"rithanisk"},"content":"        return displayList;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"rithanisk"},"content":"     * Returns a message indicating that a task has been marked as completed","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"rithanisk"},"content":"     * @param task The task that has been marked as completed","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"rithanisk"},"content":"     * @return A string containing the message \"marked\" along with the task","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"rithanisk"},"content":"     * description and its status icon","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"rithanisk"},"content":"    public String displayMarkedTask(Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"rithanisk"},"content":"        return MARKED + \"\\n\" + \"  \" + task.toString();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"rithanisk"},"content":"     * Returns a message indicating that a task was already marked as completed","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"rithanisk"},"content":"     * @return A string containing a message indicating that the task was already marked","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"rithanisk"},"content":"    public String displayAlreadyMarkedTask() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"rithanisk"},"content":"        return ALREADY_MARKED;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"rithanisk"},"content":"     * Returns a message indicating that a task has been unmarked","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"rithanisk"},"content":"     * @param task The task that has been unmarked","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"rithanisk"},"content":"     * @return A string containing the message \"unmarked\" along with the task","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"rithanisk"},"content":"     * description and its status icon","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"rithanisk"},"content":"    public String displayUnmarkedTask(Task task) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"rithanisk"},"content":"        return UNMARKED + \"\\n\" + \"  \" + task.toString();","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"rithanisk"},"content":"     * Returns a message indicating that a task was already unmarked","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"rithanisk"},"content":"     * @return A string containing a message indicating that the task was already unmarked","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"rithanisk"},"content":"    public String displayAlreadyUnmarkedTask() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"rithanisk"},"content":"        return ALREADY_UNMARKED;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"rithanisk"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"rithanisk"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"rithanisk"},"content":"     * @return A string message confirming the deletion of the task and showing the current number of tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"rithanisk"},"content":"    public String displayDeletedTask(Task task) {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"rithanisk"},"content":"        return \"Noted. I\u0027ve removed this task:\" + \"\\n\" + \" \"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"rithanisk"},"content":"                + task.toString() + \"\\n\" + \"Now you have \" + TaskList.getTaskListLength()","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"rithanisk"},"content":"                + (TaskList.getTaskListLength() \u003d\u003d 1 ? \" task \" : \" tasks \")","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"rithanisk"},"content":"                + \"in the list.\";","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"rithanisk"},"content":"     * Displays an error message when an unknown command is entered.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"rithanisk"},"content":"     * @return A string message indicating that the command is unknown.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"rithanisk"},"content":"    public String displayUnknownCommandException() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"rithanisk"},"content":"        return UNKNOWN_COMMAND;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"rithanisk"},"content":"     * Displays an error message when the task number entered by the user is unknown.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"rithanisk"},"content":"     * @return A string message indicating that the task number is unknown.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"rithanisk"},"content":"    public String displayUnknownTaskNumberException() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"rithanisk"},"content":"        return UNKNOWN_TASK_NUMBER;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"rithanisk"},"content":"     * Displays an error message when the user enters a task number that does not exist.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"rithanisk"},"content":"     * @return A string message indicating that the task number does not exist.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"rithanisk"},"content":"    public String displayNonexistentTaskNumberException() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"rithanisk"},"content":"        return NONEXISTENT_TASK_NUMBER;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"rithanisk"},"content":"     * Displays an error message when the task description is unknown or missing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"rithanisk"},"content":"     * @return A string message indicating that the task description is unknown.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"rithanisk"},"content":"    public String displayUnknownMessageException() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"rithanisk"},"content":"        return UNKNOWN_DESCRIPTION;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"rithanisk"},"content":"     * Displays an error message when the deadline of a task is unknown or improperly formatted.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"rithanisk"},"content":"     * @return A string message indicating that the deadline is unknown or incorrect.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"rithanisk"},"content":"    public String displayUnknownDeadlineException() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"rithanisk"},"content":"        return UNKNOWN_DEADLINE;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"rithanisk"},"content":"     * Displays an error message when the event timing is unknown or improperly formatted.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"rithanisk"},"content":"     * @return A string message indicating that the event timing is unknown or incorrect.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"rithanisk"},"content":"    public String displayUnknownEventTimingException() {","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"rithanisk"},"content":"        return UNKNOWN_EVENT_TIMING;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Displays a message when no matching tasks have been found with the find command.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * @return A string message indicating no matching tasks were found.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"rithanisk"},"content":"    public String displayNoMatchingTasks() {return NO_MATCHING_TASKS;}","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Displays a list of tasks that match the user inputted find keyword","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @param matchingTasks An ArrayList of Task objects that match the find keyword","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @return A string message listing the matching tasks","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"rithanisk"},"content":"    public String displayMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"rithanisk"},"content":"        String displayList \u003d \"Here are the matching tasks in your list:\" + \"\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"rithanisk"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"rithanisk"},"content":"            displayList +\u003d (i + 1) + \". \" + matchingTasks.get(i).toString();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"rithanisk"},"content":"            if (i \u003c matchingTasks.size() - 1) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"rithanisk"},"content":"                displayList +\u003d \"\\n\"; // Add a newline between tasks but not after the last task","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"rithanisk"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"rithanisk"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"rithanisk"},"content":"        return displayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * Displays a list of supported commands for the chatbot.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * @return A string message outlining all the commands the chatbot can handle.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public String displayCommands() {","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        String commands \u003d \"\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        commands +\u003d \"These are the commands I support!\\n\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        commands +\u003d \"1. list - Lists the tasks in your task list\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        commands +\u003d \"2. bye - Ends the conversation with the chatbot\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        commands +\u003d \"3. todo - Adds a Todo Task to your task list (Format: Todo \u003ctask name\u003e)\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        commands +\u003d \"4. deadline - Adds a Deadline Task to your task list \"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"                + \"(Format: deadline \u003ctask name\u003e /by \u003cdue date in dd-mm-yyyy hh:mm\u003e)\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        commands +\u003d \"5. Event - Adds a Event Task to your task list \"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"                + \"(Format: event \u003ctask name\u003e /from \u003cdue date in dd-mm-yyyy hh:mm\u003e\"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"                + \" /to \u003cdue date in dd-mm-yyyy hh:mm\u003e)\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        commands +\u003d \"7. mark - Marks a task as completed (Format: mark \u003ctask number\u003e)\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"        commands +\u003d \"8. unmark - Marks a task as not completed (Format: unmark \u003ctask number\u003e)\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        commands +\u003d \"9. delete - Deletes a task from the task list (Format: delete \u003ctask number\u003e)\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        commands +\u003d \"10. find - Finds tasks that contain a specific keyword (Format: find \u003ckeyword\u003e)\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        commands +\u003d \"11. help - Shows a list of commands this chatbot supports\\n\";","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return commands;","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * Returns a messsage indicating that only one keyword is expected.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * @return A string containing the exception message for the one keyword requirement.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"rithanisk"},"content":"    public String displayOneKeywordException() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"rithanisk"},"content":"        return ONE_KEYWORD;","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"rithanisk"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"rithanisk"},"content":"     * Reads a command input by the user from the console.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"rithanisk"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"rithanisk"},"content":"     * @return The command string entered by the user.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"rithanisk"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"rithanisk"},"content":"    public String readCommand() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"rithanisk"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"rithanisk"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"rithanisk"},"content":"        return command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * Displays error message to the console.","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * @param errorMessage The error that is displayed to the console","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-09-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"rithanisk"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"rithanisk"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-01","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"rithanisk":224,"-":49}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"rithanisk":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"nebula.ui.MainWindow\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false}],"authorContributionMap":{"rithanisk":19}},{"path":"src/test/java/nebula/command/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.command;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.exception.NebulaException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.task.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import nebula.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"    Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    @Test","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    public void addTodo_success() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"        // Create an AddTodoCommand with a description for a task","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"        AddTodoCommand command \u003d new AddTodoCommand(\"todo laundry\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"        // Execute the command and capture any outputs (if the command returns anything)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"        // Assert that the task was added to the task list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"        assertEquals(1, TaskList.getTaskListLength()); // Check that one task was added","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"        assertEquals(\"laundry\", tasks.getTask(0)); // Verify the task description is correct","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":30}},{"path":"src/test/java/nebula/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.task;  //same package as the class being tested","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"public class EventTest {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"    @Test","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"    public void createEvent_success() {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"        assertEquals(new Event(\"birthday party\", \"2024-09-12 12:30\", \"2024-09-12 04:30\").toString(),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"                \"[E] [ ] birthday party (from: September 12, 2024 12:30 to: September 12, 2024 04:30)\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"        assertEquals(new Event(\"math lecture\", \"2024-10-12\", \"2024-10-12\").toString(),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"                \"[E] [ ] math lecture (from: October 12, 2024 00:00 to: October 12, 2024 00:00)\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"        assertEquals(new Event(\"bus tour\", \"2024-10-09\", \"2024-10-09 22:00\").toString(),","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"                \"[E] [ ] bus tour (from: October 9, 2024 00:00 to: October 9, 2024 22:00)\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"    @Test","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"    public void createEvent_failure(){","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"        IllegalArgumentException thrown \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"            new Event(\"birthday party\", \"2024-09-12 12:30\", \"2024-09-12 4:30\");","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"        });","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"        assertEquals(\"Invalid date format: 2024-09-12 4:30\", thrown.getMessage());","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-15","isFullCredit":false}],"authorContributionMap":{"rithanisk":29}},{"path":"src/test/java/nebula/ui/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"package nebula.ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"import nebula.command.AddTodoCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"import nebula.exception.NebulaException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"import nebula.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"rithanisk"},"content":"public class ParserTest {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"rithanisk"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"rithanisk"},"content":"    public void parser_success() throws NebulaException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"rithanisk"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"rithanisk"},"content":"        assertEquals(new AddTodoCommand(\"todo do laundry\").getDescription(),","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"rithanisk"},"content":"                Parser.parse(\"todo do laundry\").getDescription());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"rithanisk"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"rithanisk"},"content":"    public void unknownMessage_failure() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"rithanisk"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"        NebulaException thrown \u003d assertThrows(NebulaException.class, () -\u003e {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"rithanisk"},"content":"            Parser.parse(\"todo\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"rithanisk"},"content":"        });","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"rithanisk"},"content":"        assertEquals(ui.displayUnknownMessageException(), thrown.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"rithanisk"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"rithanisk"},"content":"    public void missingTaskNumber_failure() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"rithanisk"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"rithanisk"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"rithanisk"},"content":"        NebulaException thrown \u003d assertThrows(NebulaException.class, () -\u003e {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"rithanisk"},"content":"            Parser.parse(\"mark\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"rithanisk"},"content":"        });","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"rithanisk"},"content":"        assertEquals(ui.displayUnknownTaskNumberException(), thrown.getMessage());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"rithanisk"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"rithanisk"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"rithanisk":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rithanisk"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"rithanisk"},"content":"todo watch lecture recording","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"rithanisk"},"content":"todo eat breakfast","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"rithanisk"},"content":"deadline buy birthday gift /by Friday September 6th 2024","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"rithanisk"},"content":"event friend\u0027s birthday! /from Saturday 1pm /to Saturday 4pm","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"rithanisk"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"rithanisk"},"content":"mark 2","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"rithanisk"},"content":"mark 1","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"rithanisk"},"content":"list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"rithanisk"},"content":"bye","lastModifiedDate":"2024-08-31","isFullCredit":false}],"authorContributionMap":{"rithanisk":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"rithanisk"},"content":"java -classpath ../bin Nebula \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"rithanisk":1,"-":37}}]
