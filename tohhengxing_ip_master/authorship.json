[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"    mainClass.set(\"Wojak\")","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"tohhengxing":1,"-":40}},{"path":"src/main/java/Wojak.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"import java.io.File;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import controllers.InputParser;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import controllers.commands.Command;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"import controllers.errors.InvalidCommandError;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"import controllers.errors.InvalidInputError;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"import lib.DbDriverInterface;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"import lib.FileDbDriver;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"import models.*;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":"public class Wojak {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"                \" Hello! I\u0027m Wojak\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        InputParser parser \u003d new InputParser();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"        DbDriverInterface dbDriver \u003d new FileDbDriver();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"        TaskList taskList \u003d new TaskList(dbDriver);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"            String nextLine \u003d sc.nextLine();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"                Command command \u003d parser.parse(nextLine);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"                command.execute(taskList);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"                System.out.println(e);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-20","isFullCredit":false}],"authorContributionMap":{"tohhengxing":37}},{"path":"src/main/java/controllers/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"import controllers.commands.*;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"import controllers.errors.*;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"import models.Deadline;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"import models.Event;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"import models.Todo;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" * The {@code InputParser} class is responsible for parsing user input and converting","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":" * it into executable {@code Command} objects for the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":" * This class handles various commands such as adding tasks, marking tasks, deleting tasks,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":" * and exiting the program.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eIt identifies the type of command and creates the appropriate command object,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":" * throwing errors if the input is invalid or the command doesn\u0027t exist.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"public class InputParser {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"     * Parses the given user input and converts it into an executable {@code Command}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"     * Based on the input, this method returns the appropriate command for execution,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"     * or throws an error if the input is invalid or unrecognized.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * @param cmd The string input provided by the user.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * @return The appropriate {@code Command} object to execute.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     * @throws InvalidInputError If the input is malformed or incomplete.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     * @throws InvalidCommandError If the command does not exist.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    public Command parse(String cmd) throws InvalidInputError, InvalidCommandError {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        if (isByeCommand(cmd)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"        } else if (isMarkCommand(cmd)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"                String[] parts \u003d cmd.split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"                int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"                return new MarkTaskCommand(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"                throw new InvalidInputError(\"Invalid input for mark!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"        } else if (isListCommand(cmd)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"            return new ListCommand();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"        } else if (isDeleteCommand(cmd)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"                String[] parts \u003d cmd.split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"                int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"                return new DeleteTaskCommand(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"                throw new InvalidInputError(\"Invalid input for delete!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"        } else if (isFindCommand(cmd)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"            try {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"                String[] parts \u003d cmd.split(\" \");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"                String taskName \u003d parts[1];","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tohhengxing"},"content":"                return new FindCommand(taskName);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tohhengxing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tohhengxing"},"content":"                throw new InvalidInputError(\"Invalid input for delete!\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tohhengxing"},"content":"        } else if (isUnmarkCommand(cmd)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tohhengxing"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tohhengxing"},"content":"                String[] parts \u003d cmd.split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tohhengxing"},"content":"                int index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tohhengxing"},"content":"                return new UnmarkTaskCommand(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tohhengxing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tohhengxing"},"content":"                throw new InvalidInputError(\"Invalid input for unmark!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tohhengxing"},"content":"        } else if (isTodoCommand(cmd)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tohhengxing"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tohhengxing"},"content":"                Todo newTask \u003d new Todo(cmd.substring(5));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tohhengxing"},"content":"                return new AddTodoCommand(newTask);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tohhengxing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tohhengxing"},"content":"                throw new InvalidInputError(\"Invalid input for todo!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tohhengxing"},"content":"        } else if (isDeadlineCommand(cmd)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tohhengxing"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tohhengxing"},"content":"                String description \u003d extractStringBetweenTwoSubStrings(cmd, \"deadline\", \"/by\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tohhengxing"},"content":"                String by \u003d extractStringFromSubstringToEnd(cmd, \"/by\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tohhengxing"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tohhengxing"},"content":"                return new AddDeadlineCommand(deadline);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tohhengxing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tohhengxing"},"content":"                throw new InvalidInputError(\"Invalid input for deadline!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tohhengxing"},"content":"        } else if (isEventCommand(cmd)) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tohhengxing"},"content":"            try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tohhengxing"},"content":"                String description \u003d extractStringBetweenTwoSubStrings(cmd, \"event\", \"/from\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tohhengxing"},"content":"                String from \u003d extractStringBetweenTwoSubStrings(cmd, \"/from\", \"/to\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tohhengxing"},"content":"                String to \u003d extractStringFromSubstringToEnd(cmd, \"/to\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tohhengxing"},"content":"                Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tohhengxing"},"content":"                return new AddEventCommand(event);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tohhengxing"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tohhengxing"},"content":"                throw new InvalidInputError(\"Invalid input for event!\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tohhengxing"},"content":"        } else {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tohhengxing"},"content":"            String errorString \u003d String.format(\"%s doesn\u0027t exist as a command\", cmd);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tohhengxing"},"content":"            throw new InvalidCommandError(errorString);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tohhengxing"},"content":"     * Checks if the input string is a valid \"mark\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input string to check.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the input is a valid \"mark\" command, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tohhengxing"},"content":"    private boolean isMarkCommand(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tohhengxing"},"content":"        String markRegex \u003d \"mark (100|[1-9]|[1-9][0-9])\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tohhengxing"},"content":"        Pattern markPattern \u003d Pattern.compile(markRegex);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tohhengxing"},"content":"        Matcher markMatcher \u003d markPattern.matcher(command);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tohhengxing"},"content":"        return markMatcher.matches();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tohhengxing"},"content":"     * Checks if the input string is a valid \"unmark\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input string to check.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the input is a valid \"unmark\" command, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tohhengxing"},"content":"    private boolean isUnmarkCommand(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tohhengxing"},"content":"        String unmarkRegex \u003d \"unmark (100|[1-9]|[1-9][0-9])\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tohhengxing"},"content":"        Pattern unmarkPattern \u003d Pattern.compile(unmarkRegex);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tohhengxing"},"content":"        Matcher unmarkMatcher \u003d unmarkPattern.matcher(command);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tohhengxing"},"content":"        return unmarkMatcher.matches();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tohhengxing"},"content":"     * Checks if the input string is a \"list\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input string to check.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the input is a \"list\" command, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tohhengxing"},"content":"    private boolean isListCommand(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tohhengxing"},"content":"        return command.equals(\"list\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tohhengxing"},"content":"     * Checks if the input string is a \"bye\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input string to check.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the input is a \"bye\" command, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tohhengxing"},"content":"    private boolean isByeCommand(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tohhengxing"},"content":"        return command.equals(\"bye\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tohhengxing"},"content":"     * Checks if the input string is a \"todo\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input string to check.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the input is a \"todo\" command, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tohhengxing"},"content":"    private boolean isTodoCommand(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tohhengxing"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tohhengxing"},"content":"        return parts[0].equals(\"todo\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tohhengxing"},"content":"     * Checks if the input string is a \"deadline\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input string to check.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the input is a \"deadline\" command, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tohhengxing"},"content":"    private boolean isDeadlineCommand(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tohhengxing"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tohhengxing"},"content":"        return parts[0].equals(\"deadline\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tohhengxing"},"content":"    private boolean isFindCommand(String command) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tohhengxing"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tohhengxing"},"content":"        return parts[0].equals(\"find\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tohhengxing"},"content":"     * Checks if the input string is an \"event\" command.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input string to check.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the input is an \"event\" command, {@code false} otherwise.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tohhengxing"},"content":"    private boolean isEventCommand(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tohhengxing"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tohhengxing"},"content":"        return parts[0].equals(\"event\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tohhengxing"},"content":"     * Checks if the input string is a valid \"delete\" command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input string to check.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the input is a valid \"delete\" command, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tohhengxing"},"content":"    private boolean isDeleteCommand(String command) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tohhengxing"},"content":"        String deleteRegex \u003d \"delete (100|[1-9]|[1-9][0-9])\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tohhengxing"},"content":"        Pattern deletePattern \u003d Pattern.compile(deleteRegex);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tohhengxing"},"content":"        Matcher deleteMatcher \u003d deletePattern.matcher(command);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tohhengxing"},"content":"        return deleteMatcher.matches();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tohhengxing"},"content":"     * Extracts the substring between two specified substrings in the input command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input command string.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"tohhengxing"},"content":"     * @param prefix The prefix marking the start of the substring.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"tohhengxing"},"content":"     * @param byMarker The marker marking the end of the substring.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"tohhengxing"},"content":"     * @return The extracted substring.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"tohhengxing"},"content":"    private String extractStringBetweenTwoSubStrings(String command, String prefix, String byMarker) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"tohhengxing"},"content":"        int taskStartIndex \u003d command.indexOf(prefix) + prefix.length();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"tohhengxing"},"content":"        int byIndex \u003d command.indexOf(byMarker);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"tohhengxing"},"content":"        return command.substring(taskStartIndex+1, byIndex);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"tohhengxing"},"content":"     * Extracts the substring from the specified prefix to the end of the input command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"tohhengxing"},"content":"     * @param command The input command string.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"tohhengxing"},"content":"     * @param prefix The prefix marking the start of the substring.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"tohhengxing"},"content":"     * @return The extracted substring.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"tohhengxing"},"content":"    private String extractStringFromSubstringToEnd(String command, String prefix) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"tohhengxing"},"content":"        int taskStartIndex \u003d command.indexOf(prefix) + prefix.length();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"tohhengxing"},"content":"        return command.substring(taskStartIndex+1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":218}},{"path":"src/main/java/controllers/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.Task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to add a {@code Deadline} task to the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * The {@code AddDeadlineCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * adds a new {@code Deadline} task to the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command adds the deadline task to the list and prints a confirmation message.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    private Task task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     * Constructs an {@code AddDeadlineCommand} with the specified {@code Deadline} task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * @param task The {@code Deadline} task to be added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    public AddDeadlineCommand(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to add the {@code Deadline} task to the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * It adds the task and prints a confirmation message with the task\u0027s description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} to which the deadline task is added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"                \"added: \" + this.task.getDescription() + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":38}},{"path":"src/main/java/controllers/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.Event;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to add an {@code Event} task to the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * The {@code AddEventCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * adds a new {@code Event} task to the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command adds the event task to the list and prints a confirmation message.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    private Event task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     * Constructs an {@code AddEventCommand} with the specified {@code Event} task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * @param task The {@code Event} task to be added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    public AddEventCommand(Event task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to add the {@code Event} task to the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * It adds the task and prints a confirmation message with the task\u0027s description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} to which the event task is added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"                \"added: \" + this.task.getDescription() + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":38}},{"path":"src/main/java/controllers/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.Task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to add a generic {@code Task} to the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * The {@code AddTaskCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * adds a new {@code Task} to the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command adds a task to the list and prints a confirmation message.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"public class AddTaskCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    private Task task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     * Constructs an {@code AddTaskCommand} with the specified {@code Task}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to add the {@code Task} to the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * It adds the task and prints a confirmation message with the task\u0027s description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} to which the task is added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"                \"added: \" + this.task.getDescription() + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":38}},{"path":"src/main/java/controllers/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.Task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import models.Todo;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to add a {@code Todo} task to the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * The {@code AddTodoCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * adds a new {@code Todo} task to the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command adds a task to the list and prints a confirmation message.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"public class AddTodoCommand implements Command {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"    private Todo task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     * Constructs an {@code AddTodoCommand} with the specified {@code Todo} task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     * @param task The {@code Todo} task to be added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"    public AddTodoCommand(Todo task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to add the {@code Todo} task to the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * It adds the task and prints a confirmation message with the task\u0027s description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} to which the task is added.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"                \"added: \" + this.task.getDescription() + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":39}},{"path":"src/main/java/controllers/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to exit the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * The {@code ByeCommand} class implements the {@code Command} interface","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * and terminates the program when executed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command prints a farewell message and exits the application.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to terminate the program.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"     * It prints a farewell message and calls {@code System.exit(0)} to close the application.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList}, though not used in this command.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"                \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"                        \"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"        System.exit(0);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":27}},{"path":"src/main/java/controllers/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"public interface Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"    void execute(TaskList taskList);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":7}},{"path":"src/main/java/controllers/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.Task;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to delete a task from the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * The {@code DeleteTaskCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * removes a task at the specified index from the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command removes the task and prints the description of the removed task.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    private int index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code DeleteTaskCommand} with the specified task index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * @param index The index of the task to delete (1-based index).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to delete the task at the specified index in the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * It removes the task and prints a confirmation message along with the task\u0027s description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} from which the task is removed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"        Task task \u003d taskList.removeTask(this.index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"                \"Removed: \" + task.getDescription() + \"\\n\" +","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":38}},{"path":"src/main/java/controllers/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import models.Task;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to find tasks in the task management system.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * The {@code FindCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * displays a command tasks in the {@code TaskList}.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command retrieves and prints the found tasks.\u003c/p\u003e","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    private String taskName;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code FindCommand} with the specified search string.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"     * @param task The name of the task to find .","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    public FindCommand(String task) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to find a task in all tasks in the {@code TaskList}.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     * It prints the found tasks to the console.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} from which tasks are retrieved and displayed.","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(\"This are some possible tasks found\");","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"            if (task.getDescription().contains(this.taskName)) {","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"                System.out.println(task);","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-08","isFullCredit":false}],"authorContributionMap":{"tohhengxing":46}},{"path":"src/main/java/controllers/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to list all tasks in the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * The {@code ListCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * displays all tasks in the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command retrieves and prints the current list of tasks.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to list all tasks in the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"     * It prints the task list to the console.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} from which tasks are retrieved and displayed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        System.out.println(taskList.listTasks());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":24}},{"path":"src/main/java/controllers/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to mark a task as completed in the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * The {@code MarkTaskCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * marks a task at the specified index in the {@code TaskList} as completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command attempts to mark a task as done and handles any errors related","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * to invalid task indices.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"public class MarkTaskCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    private int index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code MarkTaskCommand} with the specified task index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * @param index The index of the task to mark as completed (1-based index).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    public MarkTaskCommand(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to mark the task at the specified index in the {@code TaskList} as completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * If the index is valid, the task is marked as done, and the task details are printed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * If the index is out of bounds, an error message is printed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} on which the command operates.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"            taskList.markTask(index - 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(taskList.getTask(this.index - 1));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"index out of bounds\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":44}},{"path":"src/main/java/controllers/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.commands;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import models.TaskList;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":" * Represents a command to unmark a task as not completed in the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * The {@code UnmarkTaskCommand} class implements the {@code Command} interface and","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * unmarks a task at the specified index in the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis command attempts to mark a task as not completed and handles any errors","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * related to invalid task indices.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"public class UnmarkTaskCommand implements Command {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    private int index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     * Constructs an {@code UnmarkTaskCommand} with the specified task index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * @param index The index of the task to unmark (1-based index).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    public UnmarkTaskCommand(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     * Executes the command to unmark the task at the specified index in the {@code TaskList}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * If the index is valid, the task is marked as not done, and the task details are printed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * If the index is out of bounds, an error message is printed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     * @param taskList The {@code TaskList} on which the command operates.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        try {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"            taskList.unmarkTask(index - 1);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(taskList.getTask(this.index - 1));","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"index out of bounds\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":44}},{"path":"src/main/java/controllers/errors/InvalidCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.errors;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"public class InvalidCommandError extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"    public InvalidCommandError(String msg) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"        super(msg);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":9}},{"path":"src/main/java/controllers/errors/InvalidInputError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package controllers.errors;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"public class InvalidInputError extends Exception {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"    public InvalidInputError(String msg) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"        super(msg);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":9}},{"path":"src/main/java/lib/ActiveRecord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package lib;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"public class ActiveRecord {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"    public DbDriverInterface dbDriver;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"    public ActiveRecord(DbDriverInterface dbDriver) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"        this.dbDriver \u003d dbDriver;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tohhengxing":11}},{"path":"src/main/java/lib/DbDriverInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package lib;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"public interface DbDriverInterface {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"    void save(String rawString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"    String read();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tohhengxing":7}},{"path":"src/main/java/lib/FileDbDriver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package lib;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"import static java.lang.System.exit;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * The {@code FileDbDriver} class implements the {@code DbDriverInterface} and provides","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" * file-based database functionality for reading and writing data to a file called \"db.txt\".","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":" * It ensures that the file exists and handles basic file operations such as reading, writing, and initialization.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"public class FileDbDriver implements DbDriverInterface {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     * Initializes the database by checking for the existence of the \"db.txt\" file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * If the file doesn\u0027t exist, it creates one. The contents of the file are then returned as a string.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"     * @return The contents of the \"db.txt\" file as a string, or an empty string if an error occurs.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    public String init() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"            Path currentWorkingDirectory \u003d Paths.get(\"\").toAbsolutePath();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"            Path parentDirectory \u003d currentWorkingDirectory.getParent();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"            Path dbFilePath \u003d parentDirectory.resolve(\"db.txt\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"            // Check if the file exists","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"            if (!Files.exists(dbFilePath)) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"                Files.createFile(dbFilePath);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"            return Files.readString(dbFilePath);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"            System.err.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"            exit(1);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"            exit(1);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"        return \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"     * Saves the given string to the \"db.txt\" file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"     * If the file doesn\u0027t exist, it creates one before writing to it.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"     * @param rawString The string content to be saved to the file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"    public void save(String rawString) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"        try {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"            Path currentWorkingDirectory \u003d Paths.get(\"\").toAbsolutePath();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"            Path dbFilePath \u003d currentWorkingDirectory.resolve(\"db.txt\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"            // Check if the file exists","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"            if (!Files.exists(dbFilePath)) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"                Files.createFile(dbFilePath);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"            Files.write(dbFilePath, rawString.getBytes());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tohhengxing"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tohhengxing"},"content":"     * Reads the contents of the \"db.txt\" file.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tohhengxing"},"content":"     * If the file doesn\u0027t exist, it returns an empty string.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tohhengxing"},"content":"     * @return The contents of the \"db.txt\" file as a string, or an empty string if the file doesn\u0027t exist or an error occurs.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tohhengxing"},"content":"    public String read() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tohhengxing"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tohhengxing"},"content":"            Path currentWorkingDirectory \u003d Paths.get(\"\").toAbsolutePath();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tohhengxing"},"content":"            Path dbFilePath \u003d currentWorkingDirectory.resolve(\"db.txt\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tohhengxing"},"content":"            if (!Files.exists(dbFilePath)) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tohhengxing"},"content":"                return \"\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tohhengxing"},"content":"            return Files.readString(dbFilePath);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tohhengxing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tohhengxing"},"content":"            return \"\";","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-09-02","isFullCredit":false}],"authorContributionMap":{"tohhengxing":81}},{"path":"src/main/java/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package models;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * Represents a task with a deadline in the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * A {@code Deadline} task has a description, a deadline date, and a completion status.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * It also handles parsing and formatting of the deadline date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis class extends the {@code Task} class and adds functionality for handling","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":" * tasks with deadlines.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"    private LocalDate by;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code Deadline} with the specified description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"     * The task is initialized as not completed and without a deadline.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    public Deadline(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     * Converts a string into a {@code LocalDate} object.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"     * The input string should be in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"     * If the input cannot be parsed, the method returns {@code LocalDate.EPOCH}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"     * @param potentialDate The string representing the date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"     * @return A {@code LocalDate} representing the parsed date, or {@code LocalDate.EPOCH} if parsing fails.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"    public LocalDate convertDate(String potentialDate) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"            return LocalDate.parse(potentialDate, formatter);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"            return LocalDate.EPOCH;  // Handle as needed","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code Deadline} with the specified description and deadline date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"     * The task is initialized as not completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"     * @param by The deadline date as a string in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"        this.by \u003d convertDate(by);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code Deadline} with the specified description, completion status, and deadline date.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tohhengxing"},"content":"     * @param isDone The completion status of the task; {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tohhengxing"},"content":"     * @param by The deadline date as a string in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tohhengxing"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tohhengxing"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tohhengxing"},"content":"        this.by \u003d convertDate(by);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tohhengxing"},"content":"     * Returns the deadline date of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tohhengxing"},"content":"     * @return The {@code LocalDate} representing the deadline.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tohhengxing"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tohhengxing"},"content":"        return this.by;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tohhengxing"},"content":"     * Serializes the deadline task into a string format for saving in the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tohhengxing"},"content":"     * The format is \"D|\u003cisDone\u003e|\u003cdescription\u003e|\u003cby\u003e\", where {@code isDone} is 1 if the task is completed, and 0 otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tohhengxing"},"content":"     * @return A serialized string representation of the deadline task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tohhengxing"},"content":"    public String serialize() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tohhengxing"},"content":"        return String.format(\"D|%s|%s|%s\", this.getIsDone() ? \"1\" : \"0\", this.getDescription(),","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tohhengxing"},"content":"                this.getBy());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tohhengxing"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tohhengxing"},"content":"     * The format is \"[D][\u003cstatusIcon\u003e] \u003cdescription\u003e (by: \u003cby\u003e)\", where {@code statusIcon} is \"X\" if the task is completed, or a space otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tohhengxing"},"content":"     * The deadline date is formatted as \"MMM d yyyy\".","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tohhengxing"},"content":"     * @return A string representing the deadline task for display.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tohhengxing"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tohhengxing"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.getDescription(),","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tohhengxing"},"content":"                this.getBy().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":102}},{"path":"src/main/java/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package models;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":" * Represents an event task in the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":" * An event task has a description, a start time, and an end time.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":" * It also has a completion status indicating whether the task is completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis class extends the {@code Task} class and adds specific functionality","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * for handling time-bound tasks.\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"    private String from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    private String to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     * Constructs an {@code Event} with the specified description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     * The task is initialized as not completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"    public Event(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * Constructs an {@code Event} with the specified description, start time, and end time.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * The task is initialized as not completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"     * Constructs an {@code Event} with the specified description, completion status, start time, and end time.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"     * @param isDone The completion status of the event; {@code true} if the event is completed, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"     * @return The start time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tohhengxing"},"content":"    private String getFrom() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tohhengxing"},"content":"        return this.from;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tohhengxing"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tohhengxing"},"content":"     * @return The end time of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tohhengxing"},"content":"    private String getTo() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tohhengxing"},"content":"        return this.to;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tohhengxing"},"content":"     * Serializes the event into a string format for saving in the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tohhengxing"},"content":"     * The format is \"E|\u003cisDone\u003e|\u003cdescription\u003e|\u003cfrom\u003e|\u003cto\u003e\", where {@code isDone} is 1 if the event is completed, and 0 otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tohhengxing"},"content":"     * @return A serialized string representation of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tohhengxing"},"content":"    public String serialize() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tohhengxing"},"content":"        return String.format(\"E|%s|%s|%s|%s\", this.getIsDone() ? \"1\" : \"0\", this.getDescription(),","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tohhengxing"},"content":"                this.getFrom(), this.getTo());","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tohhengxing"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tohhengxing"},"content":"     * The format is \"[E][\u003cstatusIcon\u003e] \u003cdescription\u003e (from: \u003cfrom\u003e to: \u003cto\u003e)\", where {@code statusIcon} is \"X\" if the event is completed, or a space otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tohhengxing"},"content":"     * @return A string representing the event for display.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tohhengxing"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tohhengxing"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", this.getStatusIcon(), this.getDescription(),","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tohhengxing"},"content":"                this.getFrom(), this.getTo());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":94}},{"path":"src/main/java/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package models;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":" * Represents a task in the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":" * The {@code Task} class serves as a base class for various types of tasks,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":" * such as {@code Todo}, {@code Event}, and {@code Deadline}.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" * Each task has a description and a status indicating whether it is completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"public class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":"    protected String description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code Task} with the specified description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"     * The task is initialized as not completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code Task} with the specified description and completion status.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * @param isDone The completion status of the task; {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"     * Returns whether the task is completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"     * @return {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"        return this.isDone;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"     * Returns the status icon representing whether the task is completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"     * If the task is completed, returns \"X\", otherwise returns a space.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"     * @return A string representing the status of the task (\"X\" for done, \" \" for not done).","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tohhengxing"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tohhengxing"},"content":"        return this.description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tohhengxing"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tohhengxing"},"content":"    public void mark() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tohhengxing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tohhengxing"},"content":"     * Unmarks the task, setting it as not completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tohhengxing"},"content":"    public void unmark() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tohhengxing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tohhengxing"},"content":"     * Serializes the task into a string format for saving in the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tohhengxing"},"content":"     * The default implementation returns an empty string, meant to be overridden by subclasses.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tohhengxing"},"content":"     * @return A serialized string representation of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tohhengxing"},"content":"    public String serialize() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tohhengxing"},"content":"        return \"\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tohhengxing"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tohhengxing"},"content":"     * The format is \"[\u003cstatusIcon\u003e] \u003cdescription\u003e\", where {@code statusIcon} is \"X\" if the task is completed or a space otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tohhengxing"},"content":"     * @return A string representing the task for display.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tohhengxing"},"content":"    public String toString() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tohhengxing"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":97}},{"path":"src/main/java/models/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package models;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import lib.ActiveRecord;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"import lib.DbDriverInterface;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * Represents a list of tasks in the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * The {@code TaskList} class manages tasks and handles interactions","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * with the database, including adding, removing, marking, and unmarking tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * It also handles serialization and deserialization of tasks for persistent storage.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003eThis class extends the {@code ActiveRecord} and provides core functionality for","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":" * managing tasks in the system. It uses a {@code DbDriverInterface} to interact with","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":" * the underlying database (e.g., file-based).\u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":" * @see ActiveRecord","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"public class TaskList extends ActiveRecord {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code TaskList} with the specified database driver.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"     * Initializes the task list and attempts to load tasks from the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"     * If loading fails, the database is reset.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * @param dbDriver The database driver used to interact with the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"    public TaskList(DbDriverInterface dbDriver) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"        super(dbDriver);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"        init();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"     * Initializes the task list by deserializing raw data from the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"     * If deserialization fails, it resets the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"    private void init() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"        try {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"            deserialiseRawData();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"            resetDB();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"     * Resets the database by saving an empty string to the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"    public void resetDB() {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"        this.dbDriver.save(\"\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"     * Adds a task to the task list and saves the updated list to the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tohhengxing"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tohhengxing"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tohhengxing"},"content":"        saveToDb();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tohhengxing"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tohhengxing"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tohhengxing"},"content":"    public int getSize() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tohhengxing"},"content":"        return tasks.size();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tohhengxing"},"content":"     * Marks a task as completed at the specified index and saves the updated list to the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tohhengxing"},"content":"     * @param index The index of the task to mark as completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tohhengxing"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tohhengxing"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tohhengxing"},"content":"        saveToDb();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tohhengxing"},"content":"     * Unmarks a task as not completed at the specified index and saves the updated list to the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tohhengxing"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tohhengxing"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tohhengxing"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tohhengxing"},"content":"        saveToDb();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tohhengxing"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"tohhengxing"},"content":"     * @return The {@code ArrayList} of tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"tohhengxing"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"tohhengxing"},"content":"        return tasks;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"tohhengxing"},"content":"     * Retrieves a task from the list at the specified index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"tohhengxing"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"tohhengxing"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"tohhengxing"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"tohhengxing"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"tohhengxing"},"content":"     * Removes a task from the list at the specified index and saves the updated list to the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"tohhengxing"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"tohhengxing"},"content":"     * @return The task that was removed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"tohhengxing"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"tohhengxing"},"content":"        Task returnTask \u003d this.tasks.remove(index - 1);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"tohhengxing"},"content":"        saveToDb();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"tohhengxing"},"content":"        return returnTask;","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"tohhengxing"},"content":"     * Saves the task list to the database by serializing it into a string format.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"tohhengxing"},"content":"    public void saveToDb() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"tohhengxing"},"content":"        String serializedString \u003d this.serialiseTaskList();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"tohhengxing"},"content":"        this.dbDriver.save(serializedString);","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"tohhengxing"},"content":"     * Serializes the task list into a string format for storage in the database.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"tohhengxing"},"content":"     * Each task is serialized on a new line.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"tohhengxing"},"content":"     * @return A string representing the serialized task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"tohhengxing"},"content":"    public String serialiseTaskList() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"tohhengxing"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"tohhengxing"},"content":"            return \"\";","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"tohhengxing"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"tohhengxing"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"tohhengxing"},"content":"            list.append(task.serialize()).append(\"\\n\");","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"tohhengxing"},"content":"        return list.toString();","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"tohhengxing"},"content":"     * Deserializes the raw data from the database and populates the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"tohhengxing"},"content":"     * Supports deserialization of {@code Todo}, {@code Event}, and {@code Deadline} tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"tohhengxing"},"content":"     * @throws Exception If deserialization fails.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"tohhengxing"},"content":"    public void deserialiseRawData() throws Exception {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"tohhengxing"},"content":"        String rawData \u003d this.dbDriver.read();","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"tohhengxing"},"content":"        String[] tasks \u003d rawData.split(\"\\n\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"tohhengxing"},"content":"        for (String taskLine : tasks) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"tohhengxing"},"content":"            String[] sections \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"tohhengxing"},"content":"            String taskType \u003d sections[0];","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"tohhengxing"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"tohhengxing"},"content":"                Todo task \u003d new Todo(sections[2], sections[1].equals(\"1\"));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"tohhengxing"},"content":"                this.tasks.add(task);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"tohhengxing"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"tohhengxing"},"content":"                Event event \u003d new Event(sections[2], sections[1].equals(\"1\"), sections[3], sections[4]);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"tohhengxing"},"content":"                this.tasks.add(event);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"tohhengxing"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"tohhengxing"},"content":"                Deadline deadline \u003d new Deadline(sections[2], sections[1].equals(\"1\"), sections[3]);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"tohhengxing"},"content":"                this.tasks.add(deadline);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"tohhengxing"},"content":"            }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"tohhengxing"},"content":"     * Returns a string representation of the tasks in the task list.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"tohhengxing"},"content":"     * The format is a numbered list of tasks, with each task on a new line.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"tohhengxing"},"content":"     * @return A string representing the list of tasks.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"tohhengxing"},"content":"    public String listTasks() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"tohhengxing"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"tohhengxing"},"content":"            return \"List is empty!\";","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"tohhengxing"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"tohhengxing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"tohhengxing"},"content":"            list.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"tohhengxing"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"tohhengxing"},"content":"        return list.toString();","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":194}},{"path":"src/main/java/models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package models;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"/**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":" * Represents a todo task in the task management system.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":" * A todo is a task that only has a description and a completion status,","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":" * without any associated time or deadline.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":" * This class extends the {@code Task} class and implements","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":" * the required methods for serializing and displaying a todo task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":" *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":" * @see Task","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":" */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code Todo} with the specified description.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"     * The task is initialized as not completed.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"        super(description);","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"     * Constructs a {@code Todo} with the specified description and completion status.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"     * @param isDone The completion status of the task; {@code true} if the task is completed, {@code false} otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        super(description, isDone);","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"     * Serializes the todo task to a string format.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"     * The format is \"T|\u003cisDone\u003e|\u003cdescription\u003e\", where {@code isDone} is 1 if the task is completed and 0 otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"     * @return A string representing the serialized form of the todo task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"    public String serialize() {","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"        return String.format(\"T|%s|%s\", this.getIsDone() ? \"1\" : \"0\", this.getDescription() );","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"     * The format is \"[T][\u003cstatusIcon\u003e] \u003cdescription\u003e\", where {@code statusIcon} is \"X\" if the task is completed or a space otherwise.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"     * @return A string representing the todo task for display.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":58}},{"path":"src/test/java/models/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package models;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":"class DeadlineTest {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"    void setUp() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"        // Assume Deadline takes a description and date string in the constructor","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"        deadline \u003d new Deadline(\"Submit report\", \"2024-09-15\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"    void testConvertDate_ValidDate() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"        // Arrange","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"        String validDate \u003d \"2024-09-15\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"        // Act","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"        LocalDate result \u003d deadline.convertDate(validDate);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(LocalDate.of(2024, 9, 15), result);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"    void testConvertDate_InvalidDate() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        // Arrange","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"        String invalidDate \u003d \"invalid-date\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"        // Act","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"        LocalDate result \u003d deadline.convertDate(invalidDate);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(LocalDate.EPOCH, result); // Expecting EPOCH for invalid date","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"    void testConvertDate_EmptyString() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"        // Arrange","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"        // Act","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"        LocalDate result \u003d deadline.convertDate(emptyString);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(LocalDate.EPOCH, result); // Expecting EPOCH for empty string","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"    void testConvertDate_NullString() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tohhengxing"},"content":"        assertThrows(NullPointerException.class, () -\u003e {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tohhengxing"},"content":"            deadline.convertDate(null);  // Expecting NullPointerException when passing null","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tohhengxing"},"content":"        });","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tohhengxing"},"content":"    void testGetDescription() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tohhengxing"},"content":"        // Act","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tohhengxing"},"content":"        String description \u003d deadline.getDescription();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(\"Submit report\", description);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tohhengxing"},"content":"    void testGetBy() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tohhengxing"},"content":"        // Act","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tohhengxing"},"content":"        LocalDate dueDate \u003d deadline.getBy();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(\"2024-09-15\", dueDate.toString()); // Checking if the \u0027by\u0027 date is returned correctly as a string","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tohhengxing"},"content":"    void testMarkAsDone() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tohhengxing"},"content":"        // Act","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"tohhengxing"},"content":"        deadline.mark();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"tohhengxing"},"content":"        assertTrue(deadline.getIsDone()); // Check if the deadline is marked as done","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"tohhengxing"},"content":"    void testIsNotDoneInitially() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"tohhengxing"},"content":"        assertFalse(deadline.getIsDone()); // By default, the task should not be marked as done","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"tohhengxing":96}},{"path":"src/test/java/models/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"package models;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"import lib.FileDbDriver;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"import lib.DbDriverInterface;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"import java.util.List;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"class TaskListTest {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"    private DbDriverInterface dbDriver;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"    void setUp() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"        dbDriver \u003d new FileDbDriver(); // Assuming DbDriverImplementation is the actual implementation of DbDriverInterface","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"        taskList \u003d new TaskList(dbDriver); // Assuming TaskList is the class containing the deserialiseRawData method","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"tohhengxing"},"content":"    @AfterEach","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"tohhengxing"},"content":"    void tearDown() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"tohhengxing"},"content":"        // Resetting the DB by writing an empty string","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"tohhengxing"},"content":"        dbDriver.save(\"\"); // Assuming write method is available to reset the database","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"tohhengxing"},"content":"    void testDeserialiseRawData_TodoTask() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"tohhengxing"},"content":"        // Arrange: Setting up raw data for a Todo task","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"tohhengxing"},"content":"        String rawData \u003d \"T|0|Buy milk\\n\"; // \"T\" for Todo, \"0\" for incomplete, \"Buy milk\" is the description","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"tohhengxing"},"content":"        dbDriver.save(rawData); // Writing raw data to the driver","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"tohhengxing"},"content":"        // Act: Run the method","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"tohhengxing"},"content":"        taskList.deserialiseRawData();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"tohhengxing"},"content":"        // Assert: Verify the tasks list has one Todo task and validate its properties","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"tohhengxing"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks(); // Assuming getTasks() method to retrieve tasks","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"tohhengxing"},"content":"        assertInstanceOf(Todo.class, tasks.get(0));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"tohhengxing"},"content":"        Todo todo \u003d (Todo) tasks.get(0);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(\"Buy milk\", todo.getDescription());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"tohhengxing"},"content":"        assertFalse(todo.getIsDone());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"tohhengxing"},"content":"    void testDeserialiseRawData_EventTask() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"tohhengxing"},"content":"        // Arrange: Setting up raw data for an Event task","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"tohhengxing"},"content":"        String rawData \u003d \"E|1|Meeting|2024-10-10|2024-10-11\\n\"; // \"E\" for Event, \"1\" for complete, details for description, date, and time","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"tohhengxing"},"content":"        dbDriver.save(rawData); // Writing raw data to the driver","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"tohhengxing"},"content":"        // Act","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"tohhengxing"},"content":"        taskList.deserialiseRawData();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"tohhengxing"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"tohhengxing"},"content":"        assertTrue(tasks.get(0) instanceof Event);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"tohhengxing"},"content":"        Event event \u003d (Event) tasks.get(0);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(\"Meeting\", event.getDescription());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"tohhengxing"},"content":"        assertTrue(event.getIsDone());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"tohhengxing"},"content":"    @Test","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"tohhengxing"},"content":"    void testDeserialiseRawData_DeadlineTask() {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"tohhengxing"},"content":"        // Arrange: Setting up raw data for a Deadline task","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"tohhengxing"},"content":"        String rawData \u003d \"D|0|Submit report|2024-09-15\\n\"; // \"D\" for Deadline, \"0\" for incomplete, description, and deadline date","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"tohhengxing"},"content":"        dbDriver.save(rawData); // Writing raw data to the driver","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"tohhengxing"},"content":"        // Act","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"tohhengxing"},"content":"        taskList.deserialiseRawData();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"tohhengxing"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"tohhengxing"},"content":"        // Assert","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"tohhengxing"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"tohhengxing"},"content":"        assertInstanceOf(Deadline.class, tasks.get(0));","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"tohhengxing"},"content":"        Deadline deadline \u003d (Deadline) tasks.get(0);","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(\"Submit report\", deadline.getDescription());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"tohhengxing"},"content":"        assertFalse(deadline.getIsDone());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"tohhengxing"},"content":"        assertEquals(\"2024-09-15\", deadline.getBy().toString());","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"tohhengxing"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"tohhengxing"},"content":"}","lastModifiedDate":"2024-09-07","isFullCredit":false}],"authorContributionMap":{"tohhengxing":84}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tohhengxing"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"tohhengxing"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"tohhengxing"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"tohhengxing"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"tohhengxing"},"content":"todo borrow book","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"tohhengxing"},"content":"mark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"tohhengxing"},"content":"mark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"tohhengxing"},"content":"mark 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"tohhengxing"},"content":"mark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"tohhengxing"},"content":"unmark 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"tohhengxing"},"content":"unmark 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"tohhengxing"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"tohhengxing"},"content":"unmark 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"tohhengxing"},"content":"unmark 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"tohhengxing"},"content":"blah","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"tohhengxing"},"content":"delete 4","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"tohhengxing"},"content":"delete 3","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"tohhengxing"},"content":"delete 20","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"tohhengxing"},"content":"delete 2","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"tohhengxing"},"content":"delete 1","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"tohhengxing"},"content":"list","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"tohhengxing":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"tohhengxing"},"content":"java -classpath ../bin Wojak \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"tohhengxing":1,"-":37}}]
