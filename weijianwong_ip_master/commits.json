{"authorDailyContributionsMap":{"weijianwong":[{"date":"2024-08-22","commitResults":[{"hash":"203bfc2931bef0184a633181a94e5c169ec3bb8b","isMergeCommit":false,"messageTitle":"Add Bobby.java","messageBody":"Add greet() which prints out the default greeting message.\nAdd exit() which prints out the default exit message.\nRemove DUKE from the source code\nRename the file to Bobby.java\n","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":10}}},{"hash":"99d2c85aae265947aafa7c82b3b875358737c018","isMergeCommit":false,"messageTitle":"Add feature to continuously prompt and echo user input","messageBody":"Implement a loop in the main method to prompt the user for input and echoes the input.\nAdd a condition to exit the loop when the user types \"bye\".\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}},{"hash":"f39d864a43c364c87a257fce42d51be0e076895a","isMergeCommit":false,"messageTitle":"Add list feature to the chatbot","messageBody":"Implement the ability to store user entered inputs to a fixed size array\nAdd a \u0027list\u0027 command to display all tasks in the order they were added.\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":2}}},{"hash":"625df622d3b722a472befe47f096c93966064d1e","isMergeCommit":false,"messageTitle":"Add Task class and feature to mark and unmark tasks","messageBody":"Add tasks class to encapsulate functions and fields for tasks\nAdd feature to mark and unmark tasks based on the task number in the array\n","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":11}}}]},{"date":"2024-08-23","commitResults":[{"hash":"1aca3f58442f7cdae2bd5bd2936de615bfc552d4","isMergeCommit":false,"messageTitle":"Create new Task subtypes","messageBody":"Add feature to add different tasks including Deadline, Todo and Event.\n","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":10}}},{"hash":"403cd6c1a12d98b76fb0dbbc5f3a8f9d899021d4","isMergeCommit":false,"messageTitle":"Add Automated text ui testing for Bobby","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"java":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"2818a06e15201c42d49e5716b4047e7959705f54","isMergeCommit":false,"messageTitle":"Add custom exceptions to Bobby","messageBody":"Handle invalid list number when marking and unmarking.\nHandle invalid todo, deadline and event inputs.\n","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":99,"deletions":34}}},{"hash":"409409b05a39a3dd9cb88bb300ef722e1a4c70e1","isMergeCommit":false,"messageTitle":"Add delete feature to list","messageBody":"Add exceptions for delete feature.\n","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":53,"deletions":30}}},{"hash":"d107d8f06396f86946fc8142fc410e614fffaccf","isMergeCommit":false,"messageTitle":"Add enums.","messageBody":"Add enums that include all the commands for Bobby.\nUpdate the main function.\n","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":25}}}]},{"date":"2024-08-27","commitResults":[{"hash":"39191f24f14210f7d054f324b1bd5dcc3cb3752b","isMergeCommit":false,"messageTitle":"Add feature to write inputs to a data file and read from the data file when program starts.","messageBody":"Previously, there is no feature to save inputs from users.\n\nHaving this feature makes it more user friendly as users do not have to manually input their tasks every time the program runs.\n\nSave the data from the user input as [Task type] | [IsDone] | [Task Name] to make it easier to query the data. For Event and Deadline data, they have additional columns to store the deadline date and the event from and to data respectively.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":94,"deletions":1}}},{"hash":"a3bbc1ec631a63883c27daf1926891b185d8a659","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"* branch-Level-7:\n  Add feature to write inputs to a data file and read from the data file when program starts.\n","tags":["Level-7"],"fileTypesAndContributionMap":{}}]},{"date":"2024-08-28","commitResults":[{"hash":"4baa0febb6f56457d150121152697c15f6d1eec9","isMergeCommit":false,"messageTitle":"Change dates from String to LocalDate","messageBody":"Add feature in Bobby to parse date string inputs and convert it to a LocalDate in each Task.\n","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":42,"deletions":17}}},{"hash":"a417aae6a2489216ea94608b0b1f3f6e94dd1e52","isMergeCommit":false,"messageTitle":"Add new FIND command that finds for tasks based on the user input date.","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":48,"deletions":1}}},{"hash":"4f3f06c54f587080cabc44f632dcb3e6956c8e54","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"* branch-Level-8:\n  Add new FIND command that finds for tasks based on the user input date.\n  Change dates from String to LocalDate\n","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"36320f62451698822dbbc3f2be9cfa3be6733b02","isMergeCommit":false,"messageTitle":"Create new classes to abstract out logic in Bobby class.","messageBody":"Ui class to handle all interactions with users.\nStorage class to handle loading and saving of data to the Bobby.txt file.\nParser class to handle user inputs.\nTaskList class to maintain the lists of tasks and provide method to add, remove and update tasks status.\nRemove the echo function in Bobby as it is not used.\n","fileTypesAndContributionMap":{"java":{"insertions":270,"deletions":8}}},{"hash":"7d8bd7c4f5c6808f07ff963ff51e2d5d0d96e432","isMergeCommit":false,"messageTitle":"Update Bobby class to use the other classes.","messageBody":"Abstract logic in Bobby class to other classes.\nUpdate Bobby class to use the other classes. This makes the code easier to read and change in the future.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4},"java":{"insertions":2,"deletions":0}}},{"hash":"ac0ecb9d76a565e8eec4fee101f5c9bf9c725318","isMergeCommit":false,"messageTitle":"Update Bobby class to use the other classes.","messageBody":"Added the data file to the gitignore.\n","fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":314}}},{"hash":"a1d9d4bf12a2a273be10b6f66c9d0c2e7699b259","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-MoreOOP\u0027","messageBody":"* A-MoreOOP:\n  Update Bobby class to use the other classes.\n  Create new classes to abstract out logic in Bobby class.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"a31230a78affcdc95a518b595ba2f438440b6948","isMergeCommit":false,"messageTitle":"Add packages for bobby, command, exceptions, parser, storage, tasklist and tasks.","messageBody":"Previously all the files were stored under main/java. However, this was very messy as more classes are added.\n\nAdd packages to group related classes together to make the code neater.\n","fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":45}}},{"hash":"d4f91291ab31804207cc42f601118969570c3a44","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-Packages\u0027","messageBody":"* A-Packages:\n  Add packages for bobby, command, exceptions, parser, storage, tasklist and tasks.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"029a8a1c98254720f40a29b0e18a69e1df839e4b","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"* add-gradle-support:\n  build.gradle: Prevent generating a second JAR file\n  Bump gradle and lib version\n  Add Gradle support\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-08-29","commitResults":[{"hash":"df193acd22a89741577d65d37773ee3efbe37a9c","isMergeCommit":false,"messageTitle":"Add JUnit tests.","messageBody":"Unit testing can help to ensure that each function in each class is working correctly.\n\nLets add unit testing for the storage and parser class to test the methods inside.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":192,"deletions":0}}},{"hash":"8e3cdc436afe81e4d6bf5f30919b6ac3b4d8867e","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-JUnit\u0027","messageBody":"* A-JUnit:\n  Add JUnit tests.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"b9a7d90b10b386f861e1bbd93dcea2d9839dfdef","isMergeCommit":false,"messageTitle":"Package app as a jar file.","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"79342d0b0795fe3663d589311692efbb3d0df90d","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-Jar\u0027","messageBody":"* A-Jar:\n  Package app as a jar file.\n","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"6faf427db31b1f4dc1f3a179c090c93cfb9348cb","isMergeCommit":false,"messageTitle":"Add javadoc header to all non private functions.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":123,"deletions":1}}}]},{"date":"2024-08-31","commitResults":[{"hash":"c8ae54f6326ef52f9e533a985fcf0863112d8ac2","isMergeCommit":false,"messageTitle":"Add javadoc headers to all classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":193,"deletions":0}}},{"hash":"9675569db70491424dbcded1e75d343a2c2bf4d9","isMergeCommit":false,"messageTitle":"Edit switch indentations to comply with coding standards","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":55}}},{"hash":"5912bc6d14c833410acfd8af830bd18564bb6a91","isMergeCommit":false,"messageTitle":"Add function to find a task by date and keyword","messageBody":"Previously there was a function to find task by date only. To make the search more effective, we can add a function to find by keyword as well.\n\nAdd FINDDATE and FINDKEY commands to the Command enum.\nImplement findTasksByDate and findTasksByKeyword methods in the Parser class.\nUpdate parseFindCommand in Parser to handle both finddate and findkey commands.\nModify Bobby class to integrate handling of FINDDATE and FINDKEY commands and update the run method accordingly.\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":30}}},{"hash":"85a94c75f36fa92302c04b2e307539d22c23c72b","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-JavaDoc\u0027","messageBody":"* A-JavaDoc:\n  Add javadoc headers to all classes\n  Add javadoc header to all non private functions.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"d9fd929bd51f904c7799f17e6209df007306b800","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-CodingStandard\u0027","messageBody":"* A-CodingStandard:\n  Edit switch indentations to comply with coding standards\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"116df07fce474769ef33ba4455a8e233d38391a4","isMergeCommit":true,"messageTitle":"Merge branch \u0027Level-9\u0027","messageBody":"* Level-9:\n  Add function to find a task by date and keyword\n\n# Conflicts:\n#\tsrc/main/java/bobby/Bobby.java\n#\tsrc/main/java/bobby/parser/Parser.java\n#\tsrc/main/java/bobby/tasklist/TaskList.java\n#\tsrc/main/java/bobby/ui/Ui.java\n","tags":["Level-9"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-03","commitResults":[{"hash":"dc01e100403412a516c13571af156bffa2991817","isMergeCommit":false,"messageTitle":"Add checkstyle to Bobby and modify files to comply with style checks","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":222,"deletions":56}}},{"hash":"499dd0076da527f231a2f811ef18c85ed8dc1346","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-CheckStyle\u0027","messageBody":"* A-CheckStyle:\n  Add checkstyle to Bobby and modify files to comply with style checks\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-04","commitResults":[{"hash":"70fa02e66e3e2264c6f725acd7bb94d7be12b359","isMergeCommit":false,"messageTitle":"Add GUI to Bobby using JavaFX that echoes the user\u0027s input","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":41,"deletions":0},"java":{"insertions":171,"deletions":0}}},{"hash":"dbb1b8f7eb9e0fe2088d75182e45fe21459dc1be","isMergeCommit":false,"messageTitle":"Edit Bobby class to return the correct response for each input","messageBody":"- Refactor getResponse method to integrate with the main application loop, providing actual command responses instead of echoing input.\n- Refactor Ui class to improve code cleanliness and maintainability\n","fileTypesAndContributionMap":{"java":{"insertions":115,"deletions":86}}},{"hash":"c5bb470765684c30aa93913d2934e8bcfa687114","isMergeCommit":true,"messageTitle":"Merge branch \u0027Level-10\u0027","messageBody":"* Level-10:\n  Edit Bobby class to return the correct response for each input\n  Add GUI to Bobby using JavaFX that echoes the user\u0027s input\n","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-07","commitResults":[{"hash":"c795ebe1a79ec8c915b264e118e7be6fd957773d","isMergeCommit":false,"messageTitle":"Add markMultipleTasks method to TaskList class to return processed tasks and add Javadoc","messageBody":"There is no method to mark multiple tasks at once in the TaskList class.\n\nAllowing the user to mark multiple tasks be useful as the user does not need to key mark so many times is he wants to mark or unmark multiple tasks.\n\nCreate the markMultipleTasks method to return an ArrayList\u003cTask\u003e with the tasks that are marked or unmarked. Add Javadoc comments to describe the method’s parameters, return value, and exceptions.\n\nReturning the processed tasks allows for better tracking of which tasks were affected which can be used by the UI class to display the information.\n\nError handling for NumberFormatException and IndexOutOfBoundsException is included, throwing InvalidInputException and InvalidTaskNumberException respectively. This ensures robust handling of invalid input and out-of-bounds indices.\n","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":18}}},{"hash":"466a80f310813fe90a7a18842353f5a2b8855c93","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-Varargs\u0027","messageBody":"* A-Varargs:\n  Add markMultipleTasks method to TaskList class to return processed tasks and add Javadoc\n","tags":["A-Varargs"],"fileTypesAndContributionMap":{}},{"hash":"3bf2a5864296c9b2bc2866193a732bc83004b616","isMergeCommit":false,"messageTitle":"Add assertions for input validation to Parser and TaskList classes","messageBody":"The Parser class parses user input for commands and task creation. Input validation relies on exception handling but lacks explicit checks for some assumptions. Similarly, the TaskList class also lacks explicit checks for some assumptions like whether the keyword used in searches is null.\n\nThis needs to be changed to ensure that certain assumptions about input format and content are validated explicitly and to aid in debugging during development.\n\nWhat is being done:\n- Add assertions to parseFindCommand to verify that the command is either \"searchdate\" or \"find\".\n- Add assertions to parseTask to ensure that the input format for \"todo\", \"deadline\", and \"event\" commands is correct and contains the expected number of elements.\n- Add assertions to get, remove and add in TaskList to ensure that the index is not less than 0.\n- Add assertions to findTasksByKeyword and findTasksByDate to ensure that keyword and date are not null.\n\nAssertions help document and enforce assumptions about the input format during development. They are used in conjunction with exception handling to catch and diagnose potential issues more effectively.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}}]},{"date":"2024-09-10","commitResults":[{"hash":"e99a26d298ebf255aced3e7ccefbcd8569dd2b83","isMergeCommit":false,"messageTitle":"Refactor task parsing logic to adhere to SLAP principle","messageBody":"Current situation:\nSplitting user input when marking and unmarking is currently done in the main Bobby class. This results in multiple levels of abstraction within the same method, decreasing readability and maintainability.\n\nWhy it needs to change:\nTo improve code quality and readability, it\u0027s essential to follow the Single Level of Abstraction Principle (SLAP). Keeping parsing logic separate from command execution makes the code easier to understand and maintain.\n\nWhat is being done about it:\nMoved task parsing logic to a dedicated method `extractTaskIndices` in the Parser class. This isolates the task parsing functionality, leaving the main Bobby class to focus only on command execution.\n\nWhy it is done that way:\nThis change ensures that each method operates at a single level of abstraction, enhancing code clarity and maintainability. Parsing-related logic now resides in the appropriate Parser class, improving separation of concerns.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":9}}},{"hash":"d7486dc766542fb6416de358ce88e377e537c87d","isMergeCommit":false,"messageTitle":"Refactor processCommand in Bobby to include default error handling in switch statement","messageBody":"Current situation:\nThe `processCommand` method in the Bobby application adds new tasks (Todo, Event, Deadline) in the default branch of the `switch` statement, which limits error detection for unrecognized commands.\n\nWhy it needs to be changed:\nUsing the `default` branch for task creation makes it difficult to handle unexpected commands and errors. It violates the best practice of using the `default` branch for catching unhandled cases, leading to potentially error-prone behavior.\n\nWhat is being done about it:\nRefactor the code to:\n- Move task creation (Todo, Event, Deadline) to their own specific cases.\n- Use the `default` branch to raise `InvalidInputException` for unknown commands.\n- Explicitly handle all recognized commands, improving error detection.\n\nWhy is it done this way:\nThis approach ensures that all possible command outcomes are explicitly handled, following the Single Level of Abstraction Principle (SLAP) and improving the robustness and clarity of the `switch` statement.\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}},{"hash":"370cd842206c97ff783cdb35f337ed0efd3aab7b","isMergeCommit":false,"messageTitle":"Refactor `saveTasks` Method to Use Streams for Improved Code Quality","messageBody":"Current situation:\nThe `saveTasks` method currently uses a traditional for-loop to iterate over tasks and write them to a file. This approach, while functional, results in more verbose and less readable code.\n\nWhat is being done:\nRefactor this method to use Java Streams. Specifically, a stream is created from the list of tasks, each task is converted to its string representation using `toFileString()`, and the results are collected and written to the file using `FileWriter`. This approach simplifies the code and leverages modern Java features for cleaner implementation.\n\nWhy is it done this way:\nUsing Streams improves code readability. It also aligns the code with current Java best practices, making it easier to maintain and extend in the future.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":3}}},{"hash":"f078df06aa58d594be8c4b524f603b1bf0a7fe4f","isMergeCommit":true,"messageTitle":"Merge pull request #1 from weijianwong/branch-A-Assertions","messageBody":"Add assertions for input validation to Parser and TaskList classes","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"c7e2e2ac3ceb3e62d75ce443f349769cc5d8d266","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"* master:\n  Add assertions for input validation to Parser and TaskList classes\n\n# Conflicts:\n#\tsrc/main/java/bobby/parser/Parser.java\n","fileTypesAndContributionMap":{}},{"hash":"4e1fc22252dad8c3840d31a226be93a85f6b5c76","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Streams","messageBody":"* master:\n  Add assertions for input validation to Parser and TaskList classes\n","fileTypesAndContributionMap":{}},{"hash":"c466070d8f6b6bb64dcd168dd2a66d79d8a3b360","isMergeCommit":true,"messageTitle":"Merge pull request #2 from weijianwong/branch-A-CodeQuality","messageBody":"Pull request for branch A-code-quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"093fc0611f66a06dfa959a9556fc86eabfb7ba67","isMergeCommit":true,"messageTitle":"Merge pull request #3 from weijianwong/branch-A-Streams","messageBody":"Refactor `saveTasks` Method to Use Streams for Improved Code Quality","tags":["A-Streams"],"fileTypesAndContributionMap":{}},{"hash":"d9c929581605b43b0993076f392e366ef83c526a","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 of github.com:weijianwong/ip","messageBody":"* \u0027master\u0027 of github.com:weijianwong/ip:\n  Refactor `saveTasks` Method to Use Streams for Improved Code Quality\n  Refactor processCommand in Bobby to include default error handling in switch statement\n  Refactor task parsing logic to adhere to SLAP principle\n","fileTypesAndContributionMap":{}},{"hash":"c0d8f1c3616aa1ab0110e187310b2dddcb2e855e","isMergeCommit":false,"messageTitle":"Add gradle.yml file for continuous integration","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":1,"deletions":1}}},{"hash":"ef9ce03ec3c607e65eab436597c36d1f0a537e84","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-CI\u0027","messageBody":"* A-CI:\n  Add gradle.yml file for continuous integration\n","tags":["A-CI"],"fileTypesAndContributionMap":{}},{"hash":"683b7b2c238b2a7483578a8c1e3fe6d7d2fa7120","isMergeCommit":false,"messageTitle":"Remove unused imports in TaskList class and change assertions in Parser class","messageBody":"Previously assertions in Parser class are used wrongly to catch exceptions which led to build failure as test cases in the test file were failing.\n\nThis commit will delete the assertions in the Parser class as these exceptions are handled explicitly by the try catch block in the Parser class so there is no need for assert statements here.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}},{"hash":"f446cc198996911d9e639581cca0dd02e06eb96d","isMergeCommit":false,"messageTitle":"Enhance search functionality to support partial matches","messageBody":"Current situation:\n- The search functionality only allows exact matches for task descriptions\n\nWhat is being done:\n- Implement partial matching in the `findTasksByKeyword` method to allow more flexible searches.\n\nWhy it\u0027s being done:\n- To improve the flexibility and usability of the search feature by supporting partial keyword matches.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"614fafa9cae1c3761d470afcdcbf8e2ec21213ba","isMergeCommit":false,"messageTitle":"Enhance Date Parsing and Search Functionality","messageBody":"Current Situation:\nThe parseDate method is not flexible enough to handle partial date inputs or specific keywords for dates like \"today\" and \"tomorrow\".\n\nWhat is Being Done:\nUpdate parseDate method to handle special keywords \"today\" and \"tomorrow\".\n\nWhy is it Done This Way:\nFlexibility in Date Parsing: The parseDate method now supports both relative date keywords and absolute dates, providing more flexibility for date-related queries.\n","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":6}}},{"hash":"c034d30831f9b5afc047c699b0d4416adb9b9006","isMergeCommit":false,"messageTitle":"Enhance the delete feature to remove multiple tasks at once","messageBody":"Add deleteMultipleTasks method to sort indices in descending order before deletion. This prevents issues caused by index shifting when tasks are removed from the list.\n","fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":7}}},{"hash":"d245d50550590e131fcc7a9f507cbc60468c157b","isMergeCommit":true,"messageTitle":"Merge branch \u0027C-BetterSearch\u0027","messageBody":"* C-BetterSearch:\n  Enhance the delete feature to remove multiple tasks at once\n  Enhance Date Parsing and Search Functionality\n  Enhance search functionality to support partial matches\n","tags":["C-BetterSearch"],"fileTypesAndContributionMap":{}}]},{"date":"2024-09-12","commitResults":[{"hash":"db1fdbe447889f95207e36d9509b788e93da89f2","isMergeCommit":false,"messageTitle":"Add duplicate task detection in TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"de4085ac1b896592dd79b8c98c2fef3f6896dca9","isMergeCommit":false,"messageTitle":"Add new InvalidTaskException to handle invalid tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}}]},{"date":"2024-09-13","commitResults":[{"hash":"5ff9f20223d743f2b0a821435e3c8807a2977e21","isMergeCommit":false,"messageTitle":"Modify add function in TaskList to check for duplicate tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}},{"hash":"70f0e7274eb42d378f79af2db5dcc33b7b754710","isMergeCommit":false,"messageTitle":"Add TestTaskList class to test the TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":174,"deletions":0}}},{"hash":"7597ddb7f06fe40a52981e041a28b30f4ddcb919","isMergeCommit":true,"messageTitle":"Merge branch \u0027BCD-Extension\u0027","messageBody":"* BCD-Extension:\n  Add TestTaskList class to test the TaskList class\n  Modify add function in TaskList to check for duplicate tasks\n  Add new InvalidTaskException to handle invalid tasks\n  Add duplicate task detection in TaskList class\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"weijianwong":{"java":1875,"md":0,"fxml":41,"sh":2,"bat":0,"gradle":22,"txt":22}},"authorContributionVariance":{"weijianwong":45033.863},"authorDisplayNameMap":{"weijianwong":"CS2103T-F09-4 WONG..JIAN"}}
