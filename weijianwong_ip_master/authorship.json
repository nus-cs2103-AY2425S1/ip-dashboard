[{"path":"Bobby.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"T | false | [T][ ] asdf","lastModifiedDate":"2024-08-27","isFullCredit":false}],"authorContributionMap":{"weijianwong":1}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    mainClass.set(\"bobby.Launcher\")","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"    archiveBaseName \u003d \"Bobby\"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"checkstyle {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"weijianwong":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"# Bobby User Guide","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"![Screenshot of Bobby Ui.](Ui.png)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"**Bobby** is a simple, intuitive task management chat application. It allows users to manage their tasks through commands, helping them keep track of daily activities such as deadlines, events, and to-do lists. Bobby saves all tasks locally, allowing users to resume where they left off. Its minimalistic design and responsive command interface make it easy to use and efficient for managing tasks.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"## List","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"Users can list all tasks added using the list command.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"Format: `list`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"Expected output if there are tasks added:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"1.[E][X] carebear (from: Sep 22 2024 to: Sep 23 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"2.[D][X] gummybear (by: Sep 24 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"Expected output if no task added:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"No tasks added to the list yet.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"## Adding Todos","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"With Bobby, users can add todo tasks which do not have a specific deadline.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"Format: `todo TASK_NAME\u0027","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"Examples:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"- `todo assignment`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"- `todo linear algebra quiz`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"Expected output if todo is successfully added:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"Task added successfully:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"  [T][ ] linear algebra quiz","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"Expected output if todo is missing a name:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"OOPS!!! The description of todo cannot be empty!","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"With Bobby, users can add deadlines to their task list. A deadline task requires a specific due date in the format yyyy-MM-dd, which helps users track when the task needs to be completed.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"Format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"`dealine TASK_NAME /by DUE_DATE`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"Examples:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"- `deadline carebear /by 2024-09-30`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"- `deadline math homework /by 2024-09-10`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"Expected output if deadline is successfully added:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"Task added successfully:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"  [D][ ] math homework (by: Sep 10 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"Expected output if missing date or deadline name:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"OOPS!!! The description or deadline of a deadline task cannot be empty.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"Expected output if date is in wrong format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"OOPS!!! Invalid date format. Please use yyyy-MM-dd.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"## Adding events","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"With Bobby, users can also add events that span a specific duration, from a start date to an end date. The dates should be provided in the format yyyy-MM-DD, making it easier to organize events that occur over multiple days.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"Format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"`event TASK_NAME /from START_DATE /to END_DATE`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"Examples:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"- `event capture the flag /from 2024-09-10 /to 2024-09-11`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"- `event assignment 1 /from 2024-08-11 /to 2024-08-12`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"Expected output if event is successfully added:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"Task added successfully:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"  [E][ ] assignment 1 (from: Aug 11 2024 to: Aug 12 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"Expected output if missing date or event name:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"OOPS!!! The description, start time, or end time of an event cannot be empty.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"Expected output if date is in wrong format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"OOPS!!! Invalid date format. Please use yyyy-MM-dd.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"## Mark and Unmark Tasks","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"To mark a task as completed, use the `mark` command followed by the task number. This action will update the task to show it has been completed.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"Similarly to unmark a task use the `unmark` command followed by the task number to show that it has not been done.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"These commands accept a varying number of task numbers.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"Format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"- `mark TASK_NUMBER_1 TASK_NUMEBR_2 ...`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"- `unmark TASK_NUMBER_1 TASK_NUMEBR_2 ...`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"Examples:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"-  `mark 4`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"- `mark 1 2 3`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"- `unmark 5`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"- `unmark 3 2 1`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"Expected output for mark:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weijianwong"},"content":"Nice! I\u0027ve marked these tasks as done:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weijianwong"},"content":" - [E][X] carebear (from: Sep 22 2024 to: Sep 23 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weijianwong"},"content":" - [D][X] gummybear (by: Sep 24 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weijianwong"},"content":" - [T][X] linear algebra quiz","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weijianwong"},"content":"Expected output for unmark:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"weijianwong"},"content":"OK, I\u0027ve marked these tasks as not done yet:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weijianwong"},"content":" - [T][ ] linear algebra quiz","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weijianwong"},"content":" - [D][ ] gummybear (by: Sep 24 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"weijianwong"},"content":" - [E][ ] carebear (from: Sep 22 2024 to: Sep 23 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weijianwong"},"content":"Expected output if task does not exist for mark and unmark:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"weijianwong"},"content":"OOPS!!! The task number provided is invalid.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"weijianwong"},"content":"## Delete","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"weijianwong"},"content":"To delete tasks, use the `delete` command followed by the task numbers that you want to delete.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"weijianwong"},"content":"Format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"weijianwong"},"content":"- `delete TASK_NUMBER_1 TASK_NUMBER 2 ...`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"weijianwong"},"content":"Examples:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"weijianwong"},"content":"- `delete 1`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"weijianwong"},"content":"- `delete 1 2 3`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"weijianwong"},"content":"Expected output:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"weijianwong"},"content":"Task removed successfully:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"weijianwong"},"content":" - [E][ ] carebear (from: Sep 22 2024 to: Sep 23 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"weijianwong"},"content":" - [D][ ] gummybear (by: Sep 24 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"weijianwong"},"content":" - [T][ ] linear algebra quiz","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"weijianwong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"weijianwong"},"content":"Expected output if task does not exist:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"weijianwong"},"content":"OOPS!!! The task number provided is invalid.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"weijianwong"},"content":"## Find","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"weijianwong"},"content":"Users can use the find keyword to search for a task based on a keyword provided.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"weijianwong"},"content":"This keyword does not need to be the entire name of the task. So for example if there is a task named `math homework` then `find ma` will also return the task.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"weijianwong"},"content":"Format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"weijianwong"},"content":"- `find KEYWORD`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"weijianwong"},"content":"Examples:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"weijianwong"},"content":"- `find math`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"weijianwong"},"content":"- `find math homework`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"weijianwong"},"content":"Expected output if found:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"weijianwong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"weijianwong"},"content":"1.[D][ ] math homework (by: Sep 10 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"weijianwong"},"content":"Expected ouput if no task found:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"weijianwong"},"content":"No tasks found.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"weijianwong"},"content":"## Search date","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"weijianwong"},"content":"Users can use the `searchdate` command to search for a task based on the date provided. The date","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"weijianwong"},"content":"has to be in the format yyyy-MM-DD.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"weijianwong"},"content":"Format:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"weijianwong"},"content":"- `searchdate 2024-09-10`","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"weijianwong"},"content":"Expected output if found:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"weijianwong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"weijianwong"},"content":"1.[D][ ] math homework (by: Sep 10 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"weijianwong"},"content":"2.[E][ ] assignment 2 (from: Sep 10 2024 to: Sep 11 2024)","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"weijianwong"},"content":"Expected output if no task found:","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"weijianwong"},"content":"```plaintext","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"weijianwong"},"content":"No tasks found.","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"weijianwong"},"content":"```","lastModifiedDate":"2024-09-18","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false}],"authorContributionMap":{"weijianwong":180,"-":17}},{"path":"src/main/java/bobby/Bobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import bobby.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.parser.Parser;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":" * The {@code Bobby} class represents the main application for a task management program.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":" * This class initializes the core components of the application, including the user interface (UI),","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * storage system, parser, and task list. It provides methods to run the application and handle user commands.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" * The main application loop continuously reads user input, interprets commands,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" * and executes the corresponding actions such as adding tasks, marking tasks as done, deleting tasks,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":" * and saving tasks to a file. The program runs until the user issues an exit command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":" * This class serves as the entry point to the application, encapsulating the primary functionality","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":" * and workflow of the task manager.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"public class Bobby {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"    private static final String FILE_PATH \u003d \"./src/main/data/Bobby.txt\";","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    private final Ui ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    private final Storage storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"    private final Parser parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code Bobby} object, initializing the user interface,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * storage, parser, and task list. It also loads any previously saved tasks","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * from the specified storage file.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"    public Bobby() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"        tasks \u003d storage.loadTasks();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"     * Runs the main application loop. It displays a greeting to the user,","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"     * continuously reads user input, parses it into commands, and executes","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"     * the corresponding actions until the exit command is issued.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"    public void run() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"        ui.showGreeting();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"        while (isRunning) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"            String response \u003d processCommand(userInput);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"            ui.showResponse(response);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"            if (response.equals(ui.getExitMessage())) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"                isRunning \u003d false;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"     * Processes a single command and returns the appropriate response.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"    public String processCommand(String userInput) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"            Command userCommand \u003d parser.parseUserCommand(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"            return userCommand.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"            return ui.getErrorMessage(e.getMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"     * Generates a response for the user\u0027s chat message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"        return processCommand(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"     * Serves as the entry point of the application.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"     * It creates a new instance of {@code Bobby} and runs the application.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"        new Bobby().run();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"weijianwong":95}},{"path":"src/main/java/bobby/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"public class Launcher {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     * Serves as the entry point to the program.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"     * It launches the JavaFX application by calling the launch() method.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"     * @param args Command-line arguments passed to the program.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"weijianwong":20}},{"path":"src/main/java/bobby/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"public class Main extends Application {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"    private Bobby bobby \u003d new Bobby();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"     * Starts the JavaFX application and sets up the primary stage (window) for","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"     * the GUI. Loads the FXML layout, sets the scene, and initializes the","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"     * controller for handling user interactions.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * @param stage The primary stage for this JavaFX application.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"            stage.setTitle(\"Bobby\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBobby(bobby);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"            stage.show();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"weijianwong":40}},{"path":"src/main/java/bobby/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import bobby.javafx.DialogBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * Controller for the main GUI.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"    private TextField userInput;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    private Bobby bobby;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    private Ui ui;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/homer.png\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    private Image bobbyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/ai.png\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"    public void initialize() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"    /** Injects the bobby instance */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"    public void setBobby(Bobby b) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"        bobby \u003d b;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"        String helloMessage \u003d ui.getGreetingMessage();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"        dialogContainer.getChildren().add(DialogBox.getBobbyDialog(helloMessage, bobbyImage));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Bobby\u0027s reply and then appends them to","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"        String response \u003d bobby.getResponse(input);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"                DialogBox.getBobbyDialog(response, bobbyImage)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"        );","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"        userInput.clear();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"weijianwong":57}},{"path":"src/main/java/bobby/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"public class AddTaskCommand implements Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"     * Constructs an {@code AddTaskCommand} with the specified task to be added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"    private Task task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     * Executes the add task command by adding the task to the task list, saving the updated task list to storage,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     * and displaying the task addition message through the UI.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"     * @param tasks The current task list to which the task will be added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"     * @param ui The UI used to display messages to the user.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"     * @param storage The storage system to save the updated task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"     * @return A message confirming that the task has been added.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException If there is an issue when adding tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"        tasks.add(task);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"        return ui.getTaskAddedMessage(this.task, tasks.size());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":40}},{"path":"src/main/java/bobby/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"     * Executes the bye command, which generates an exit message for the user.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"     * This method does not modify the task list or storage, as it simply signals the application\u0027s termination.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"     * @param tasks   The current task list (not used in this command).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"     * @param ui      The UI used to display the exit message.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"     * @param storage The storage system (not used in this command).","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"     * @return A farewell message indicating the end of the program.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException This command does not throw any exceptions,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"     *     but the signature is required by the interface.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"        return ui.getExitMessage();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":29}},{"path":"src/main/java/bobby/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":" * The Command interface defines a contract for all command operations","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":" * in the application. Commands interact with the task list, user interface, and storage.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":" * The interface ensures that each command can be executed consistently, while leaving","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":" * the specific execution details to the individual command classes.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"public interface Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"     * Executes the command with the provided task list, user interface, and storage.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"     * Each command is responsible for its specific behavior, which may include","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"     * modifying the task list, interacting with the user, and updating storage.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"     * @param tasks   the {@code TaskList} containing the tasks to be operated on","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"     * @param ui      the {@code Ui} instance for interacting with the user","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"     * @param storage the {@code Storage} instance responsible for saving or loading data","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * @return A String message reflecting the result of the command execution.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException if an error occurs during command execution","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":28}},{"path":"src/main/java/bobby/command/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":" * The {@code Command} enum represents the set of valid commands that the application","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":" * can interpret and execute. Each enum constant corresponds to a specific action","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":" * that the user can request, such as adding a task, marking a task as done, or exiting the application.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":" * This enum provides a method, {@code fromString}, to convert user input into the corresponding","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":" * {@code Command} enum constant. If the input string does not match any recognized command,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * the {@code UNKNOWN} constant is returned.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" * This class helps in categorizing and processing user commands in a structured way, making the","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":" * input handling process in the application more efficient and easier to manage.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"public enum CommandEnum {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, UNKNOWN, FIND, SEARCHDATE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * Returns the corresponding {@code Command} enum constant for a given input string.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     * The input string is expected to be a command word (e.g., \"bye\", \"list\", \"mark\").","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     * If the input does not match any known command, {@code UNKNOWN} is returned.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"     * @param input the input string representing a command","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"     * @return the {@code Command} enum constant corresponding to the input string,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"     *         or {@code UNKNOWN} if the input does not match any known command","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    public static CommandEnum fromString(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"        String command \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"        switch (command) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"        case \"bye\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"            return BYE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"        case \"list\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"            return LIST;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"        case \"mark\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"            return MARK;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"        case \"unmark\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"            return UNMARK;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"        case \"delete\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"            return DELETE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"        case \"todo\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"            return TODO;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"        case \"deadline\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"            return DEADLINE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        case \"event\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"            return EVENT;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"        case \"find\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"            return FIND;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"        case \"searchdate\":","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"            return SEARCHDATE;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"        default:","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"            return UNKNOWN;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":59}},{"path":"src/main/java/bobby/command/DeleteTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":" * Represents a command to delete multiple tasks from the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * The {@code DeleteTasksCommand} class encapsulates the logic for removing tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" * from the task list based on the provided indices. It interacts with the task list","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" * to remove the specified tasks and updates the storage to reflect these changes.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"public class DeleteTasksCommand implements Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    private String[] tasksIndices;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * Constructs a {@code DeleteTasksCommand} with the specified task indices.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     * @param tasksIndices an array of indices indicating which tasks to delete","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    public DeleteTasksCommand(String[] tasksIndices) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"        this.tasksIndices \u003d tasksIndices;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     * Executes the delete command by removing tasks from the task list and updating storage.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * The method retrieves the tasks based on the provided indices, deletes them from the","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     * task list, and then saves the updated task list to the storage. It also returns a message","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     * indicating which tasks were deleted and the current size of the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"     * @param tasks   the {@code TaskList} containing the tasks to be modified","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"     * @param ui      the {@code Ui} instance for interacting with the user","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"     * @param storage the {@code Storage} instance responsible for saving or loading data","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"     * @return a {@code String} message indicating the result of the deletion","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException if an error occurs when getting tasks from indices.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e tasksToDelete \u003d tasks.getTasksFromIndices(this.tasksIndices);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        tasks.deleteMultipleTasks(tasksToDelete);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"        return ui.getTaskDeletedMessage(tasksToDelete, tasks.size());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":53}},{"path":"src/main/java/bobby/command/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * Represents a command to find tasks in the task list based on a keyword.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" * The {@code FindTasksCommand} class encapsulates the logic for searching tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" * within the task list using a specified keyword. It retrieves tasks that match","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":" * the keyword and returns a message with the search results.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"public class FindTasksCommand implements Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    private final String keyword;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * Constructs a {@code FindTasksCommand} with the specified search keyword.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     * @param keyword the keyword used to search for tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    public FindTasksCommand(String keyword) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     * Executes the find command by searching for tasks that match the keyword.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * The method searches through the task list for tasks that contain the specified","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     * keyword and returns a message with the found tasks. The task list is not modified,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     * but the search results are displayed to the user.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"     * @param tasks   the {@code TaskList} containing the tasks to be searched","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"     * @param ui      the {@code Ui} instance for interacting with the user","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"     * @param storage the {@code Storage} instance responsible for saving or loading data","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"     * @return a {@code String} message with the found tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException if an error occurs during command execution","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasksByKeyword(this.keyword);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"        return ui.getFoundTasksMessage(foundTasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":52}},{"path":"src/main/java/bobby/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":" * The {@code ListCommand} class encapsulates the logic for retrieving and displaying","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":" * all tasks within the task list. It provides a way to view the complete list of tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * and interact with the user interface to present this information.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"     * Executes the list command by retrieving all tasks from the task list and","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"     * returning a message to display them.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"     * The method uses the {@code Ui} instance to generate a message that includes","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"     * the complete list of tasks. The task list is not modified, but the list is","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * presented to the user through the UI.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     * @param tasks   the {@code TaskList} containing the tasks to be listed","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"     * @param ui      the {@code Ui} instance for interacting with the user","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"     * @param storage the {@code Storage} instance responsible for saving or loading data","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"     * @return a {@code String} message with the complete list of tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException This command does not throw any exceptions,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"     *     but the signature is required by the interface.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"        return ui.getTasksList(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":38}},{"path":"src/main/java/bobby/command/MarkTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":" * Represents a command to mark multiple tasks as completed.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * The {@code MarkTasksCommand} class encapsulates the logic for marking one or more tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" * as completed based on their indices. It interacts with the task list to update the status","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" * of the specified tasks and communicates the changes to the user interface.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"public class MarkTasksCommand implements Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"     * Constructs a {@code MarkTasksCommand} with the indices of the tasks to be marked.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * @param tasksToMark an array of indices representing the tasks to be marked as completed","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"    private String[] tasksIndices;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    public MarkTasksCommand(String[] tasksToMark) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"        this.tasksIndices \u003d tasksToMark;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"     * Executes the mark tasks command by updating the status of the specified tasks to completed.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * The method retrieves the tasks from the task list using the provided indices, marks them as","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * completed, and updates the storage. A message indicating the successful marking of tasks is","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     * then generated and returned through the {@code Ui} instance.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"     * @param tasks   the {@code TaskList} containing the tasks to be operated on","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"     * @param ui      the {@code Ui} instance for interacting with the user","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"     * @param storage the {@code Storage} instance responsible for saving or loading data","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"     * @return a {@code String} message indicating the tasks that have been marked as completed","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException if an error occurs when getting tasks from indices","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e tasksToMark \u003d tasks.getTasksFromIndices(this.tasksIndices);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"        tasks.markMultipleTasks(true, tasksToMark);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"        return ui.getTaskMarkedMessage(tasksToMark);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":52}},{"path":"src/main/java/bobby/command/SearchDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * Represents a command to search for tasks on a specific date.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" * The {@code SearchDateCommand} class encapsulates the logic for finding tasks that are scheduled","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" * on a given date. It interacts with the task list to retrieve tasks matching the specified date","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":" * and communicates the results to the user interface.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"public class SearchDateCommand implements Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * Constructs a {@code SearchDateCommand} with the specified date for searching tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     * @param date the {@code LocalDate} representing the date to search for tasks","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    public SearchDateCommand(LocalDate date) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     * Executes the search date command by retrieving tasks scheduled on the specified date.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * The method searches the task list for tasks that are due on the provided date, updates","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     * the storage to ensure the tasks are current, and returns a message containing the list of","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     * tasks found on that date through the {@code Ui} instance.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"     * @param tasks   the {@code TaskList} containing the tasks to be searched","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"     * @param ui      the {@code Ui} instance for interacting with the user","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"     * @param storage the {@code Storage} instance responsible for saving or loading data","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"     * @return a {@code String} message indicating the tasks found on the specified date","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException if an error occurs during command execution","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTasksByDate(this.date);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"        return ui.getFoundTasksMessage(foundTasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":52}},{"path":"src/main/java/bobby/command/UnmarkTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.storage.Storage;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import bobby.ui.Ui;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * Represents a command to unmark specific tasks.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" * The {@code UnmarkTasksCommand} class encapsulates the logic for marking tasks as incomplete.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" * It interacts with the task list to update the status of the specified tasks and communicates","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":" * the results to the user interface.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"public class UnmarkTasksCommand implements Command {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    private String[] tasksIndices;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     * Constructs an {@code UnmarkTasksCommand} with the specified indices of tasks to unmark.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     * @param tasksIndices an array of {@code String} representing the indices of the tasks to unmark","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    public UnmarkTasksCommand(String[] tasksIndices) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"        this.tasksIndices \u003d tasksIndices;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     * Executes the unmark tasks command by updating the status of the specified tasks to incomplete.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * The method retrieves tasks based on the provided indices, updates their status to incomplete,","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     * saves the updated task list to storage, and returns a message containing the details of the","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     * tasks that were unmarked through the {@code Ui} instance.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"     * @param tasks   the {@code TaskList} containing the tasks to be operated on","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"     * @param ui      the {@code Ui} instance for interacting with the user","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"     * @param storage the {@code Storage} instance responsible for saving or loading data","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"     * @return a {@code String} message indicating the tasks that were unmarked","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException if an error occurs during command execution","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e tasksToUnmark \u003d tasks.getTasksFromIndices(tasksIndices);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        tasks.markMultipleTasks(false, tasksToUnmark);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"        return ui.getTaskUnmarkedMessage(tasksToUnmark);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-16","isFullCredit":false}],"authorContributionMap":{"weijianwong":53}},{"path":"src/main/java/bobby/exceptions/BobbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":" * The {@code BobbyException} class is a custom exception that serves as the base class","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" * for all exceptions related to the Bobby application. It extends the {@code Exception} class","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" * and provides a way to handle various error scenarios specific to the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"public class BobbyException extends Exception {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code BobbyException} with the specified detail message.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"     * @param message the detail message explaining the cause of the exception","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"    public BobbyException(String message) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"        super(message);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":19}},{"path":"src/main/java/bobby/exceptions/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":" * The {@code EmptyDeadlineException} class represents a specific type of {@code BobbyException}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" * that is thrown when a deadline task is created with an empty description or deadline.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"public class EmptyDeadlineException extends BobbyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code EmptyDeadlineException} with a default detail message","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     * indicating that the description or deadline of a deadline task cannot be empty.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"        super(\"The description or deadline of a deadline task cannot be empty.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":16}},{"path":"src/main/java/bobby/exceptions/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" * The {@code EmptyEventException} class represents a specific type of {@code BobbyException}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" * that is thrown when an event task is created with an empty description, start time, or end time.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"public class EmptyEventException extends BobbyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code EmptyEventException} with a default detail message","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     * indicating that the description, start time, or end time of an event cannot be empty.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"    public EmptyEventException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"        super(\"The description, start time, or end time of an event cannot be empty.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":17}},{"path":"src/main/java/bobby/exceptions/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":" * The {@code EmptyTodoException} class represents a specific type of {@code BobbyException}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" * that is thrown when a \"todo\" task is created with an empty description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"public class EmptyTodoException extends BobbyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code EmptyTodoException} with a default detail message","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     * indicating that the description of a \"todo\" task cannot be empty.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"        super(\"The description of todo cannot be empty!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":16}},{"path":"src/main/java/bobby/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":" * The {@code InvalidDateException} class represents a specific type of {@code BobbyException}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" * that is thrown when a date provided by the user is in an incorrect format.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"public class InvalidDateException extends BobbyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code InvalidDateException} with a default detail message","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     * indicating that the date format is invalid and should be in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"    public InvalidDateException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"        super(\"Invalid date format. Please use yyyy-MM-dd.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":16}},{"path":"src/main/java/bobby/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":" * The {@code InvalidInputException} class represents a specific type of {@code BobbyException}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" * that is thrown when the user provides an input that is not recognized as a valid command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"public class InvalidInputException extends BobbyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code InvalidInputException} with a default detail message","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     * indicating that the provided input is not recognized by the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"    public InvalidInputException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"        super(\"I am sorry, but I do not know what that means!\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":16}},{"path":"src/main/java/bobby/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.exceptions;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":" * Represents an exception thrown when an invalid task is added to the task list.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"public class InvalidTaskException extends BobbyException {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code DuplicateTaskException} with the specified detail message.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     * @param message the detail message","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"        super(message);","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-12","isFullCredit":false}],"authorContributionMap":{"weijianwong":16}},{"path":"src/main/java/bobby/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.exceptions;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":" * The {@code InvalidTaskNumberException} class represents a specific type of {@code BobbyException}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" * that is thrown when the user provides an invalid task number that is out of the valid range.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"public class InvalidTaskNumberException extends BobbyException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code InvalidTaskNumberException} with a default detail message","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     * indicating that the provided task number is invalid.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"    public InvalidTaskNumberException() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"        super(\"The task number provided is invalid.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":16}},{"path":"src/main/java/bobby/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.javafx;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import java.util.Collections;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.MainWindow;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"    private Label dialog;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    @FXML","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"     * Creates a DialogBox with the given text and image.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"     * The constructor loads the associated FXML file to set up the dialog box","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     * layout, sets the text and image for the dialog, and applies styling to","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * the ImageView.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     * @param img The image to be shown as the display picture.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"        applyImageStyle();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"    private void flip() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"     * Applies styling to the ImageView by setting its size, ensuring smooth rendering,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"     * and clipping it into a circular shape. This enhances the visual appearance of the","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"     * display picture.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"    private void applyImageStyle() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"        // Increase the size to ensure the full image is visible","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"        double size \u003d 120.0;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"        displayPicture.setFitWidth(size);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"        displayPicture.setFitHeight(size);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"        // Center the image within the ImageView","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"        displayPicture.setSmooth(true);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"        displayPicture.setCache(true);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"        // Apply circular clipping","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"        Circle clip \u003d new Circle(size / 2, size / 2, size / 2);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"        // Ensure the HBox gives enough space to the ImageView","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"        setMinHeight(size);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"        setPrefHeight(size);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"     * Creates and returns a DialogBox representing a user\u0027s message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"     * @param text The message text.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"     * @param img The user\u0027s display picture.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"     * @return A DialogBox containing the user\u0027s message and display picture.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weijianwong"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weijianwong"},"content":"        return db;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weijianwong"},"content":"     * Creates and returns a DialogBox representing Bobby\u0027s message.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"     * The dialog box is flipped so that the display picture is on the left.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"     * @param text The message text.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"     * @param img Bobby\u0027s display picture.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"     * @return A flipped DialogBox containing Bobby\u0027s message and display picture.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"    public static DialogBox getBobbyDialog(String text, Image img) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"        db.flip();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"        return db;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"weijianwong":117}},{"path":"src/main/java/bobby/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.parser;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.command.AddTaskCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import bobby.command.ByeCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"import bobby.command.Command;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"import bobby.command.CommandEnum;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"import bobby.command.DeleteTasksCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"import bobby.command.FindTasksCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"import bobby.command.ListCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"import bobby.command.MarkTasksCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"import bobby.command.SearchDateCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"import bobby.command.UnmarkTasksCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.EmptyDeadlineException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.EmptyEventException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.EmptyTodoException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidDateException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidInputException;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Todo;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":" * The {@code Parser} class is responsible for interpreting and converting","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":" * user input into actionable commands and tasks. It contains methods to parse","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":" * user input strings to determine the appropriate {@code Command} or to create","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":" * specific types of {@code Task} objects, such as {@code Todo}, {@code Deadline},","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":" * and {@code Event}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":" * The {@code Parser} class also handles input validation and throws specific exceptions","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":" * when the input is invalid, incomplete, or improperly formatted. It ensures that the input","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":" * provided by the user meets the expected format for each task type and command.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":" * This class is a key component of the application, facilitating user interaction by","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":" * interpreting input and guiding the flow of the program accordingly.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"public class Parser {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"     * Parses the user\u0027s input to determine the command.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"     * This method takes the input string provided by the user and attempts to","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"     * map it to a {@code Command} enum constant.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"     * @param userInput the input string from the user","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"     * @return the {@code Command} enum constant corresponding to the user\u0027s input","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"     * @see CommandEnum#fromString(String)","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"    public CommandEnum parseCommand(String userInput) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"        return CommandEnum.fromString(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"     * Parses the user input and returns an array containing the task indices.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"     * This method splits the input string by spaces and returns the arguments","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"     * starting from the second position onward, excluding the command keyword.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"     * For example, if the input is \"mark 1 2 3\", this method will return","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"     * an array containing [\"1\", \"2\", \"3\"].","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"     * @param userInput the raw input string from the user, where the first argument","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"     *                  is the command, and the remaining arguments are task indices.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"     * @return an array of strings containing the task indices extracted from the input.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"    public String[] parseTaskIndices(String userInput) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"        String[] args \u003d userInput.split(\" \");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"        return Arrays.copyOfRange(args, 1, args.length);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"     * Parses the provided date input and returns a {@code LocalDate} object.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"     * This method handles special keywords such as \"today\" and \"tomorrow\",","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"     * as well as absolute dates in the ISO format (yyyy-MM-dd). If the input","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"     * cannot be parsed as a valid date, an {@code InvalidDateException} is thrown.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"     * The method first checks if the input is a special keyword (\"today\" or","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"     * \"tomorrow\") and returns the corresponding date. If not, it attempts to","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"     * parse the input as an absolute date. If parsing fails, it throws an","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"     * {@code InvalidDateException}.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"     * @param input the date input as a {@code String}. This can be a special","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"     *              keyword (\"today\" or \"tomorrow\") or an absolute date in the","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"     *              format yyyy-MM-dd.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"     * @return a {@code LocalDate} object representing the parsed date.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidDateException if the input is not a valid date or special","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"     *                               keyword, and cannot be parsed into a","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"     *                               {@code LocalDate}.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"    public LocalDate parseDate(String input) throws InvalidDateException {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weijianwong"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"        if (input.equalsIgnoreCase(\"today\")) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"            return today;","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"        } else if (input.equalsIgnoreCase(\"tomorrow\")) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"            return today.plusDays(1);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weijianwong"},"content":"        } else {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"            try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"                // Try parsing as an absolute date","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"                return LocalDate.parse(input);","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"     * Creates a {@code Todo} task based on the provided user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weijianwong"},"content":"     * @param userInput The user\u0027s input in the form of \"todo {description}\".","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weijianwong"},"content":"     * @return A {@code Todo} task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weijianwong"},"content":"     * @throws EmptyTodoException If the description of the todo task is empty.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weijianwong"},"content":"    public Task createTodo(String userInput) throws EmptyTodoException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weijianwong"},"content":"        if (userInput.length() \u003c\u003d 5 || userInput.substring(5).trim().isEmpty()) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weijianwong"},"content":"            throw new EmptyTodoException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weijianwong"},"content":"        // Extract the description after \"todo \" and trim any leading or trailing spaces","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weijianwong"},"content":"        String description \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"weijianwong"},"content":"        return new Todo(description);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"weijianwong"},"content":"     * Creates a {@code Deadline} task based on the provided user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"weijianwong"},"content":"     * @param userInput The user\u0027s input in the form of \"deadline {description} /by {yyyy-MM-dd}\".","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"weijianwong"},"content":"     * @return A {@code Deadline} task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"weijianwong"},"content":"     * @throws EmptyDeadlineException If the description or deadline date is missing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidDateException If the provided deadline date format is invalid.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"weijianwong"},"content":"    public Task createDeadline(String userInput) throws EmptyDeadlineException, InvalidDateException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"weijianwong"},"content":"        if (userInput.length() \u003c\u003d 9) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"weijianwong"},"content":"            throw new EmptyDeadlineException(); // No description provided","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"weijianwong"},"content":"        String[] parts \u003d userInput.substring(9).split(\" /by \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"weijianwong"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"weijianwong"},"content":"            throw new EmptyDeadlineException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"weijianwong"},"content":"        String description \u003d parts[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"weijianwong"},"content":"        String byString \u003d parts[1];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"weijianwong"},"content":"            LocalDate by \u003d LocalDate.parse(byString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"weijianwong"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"weijianwong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"weijianwong"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"weijianwong"},"content":"     * Creates an {@code Event} task based on the provided user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"weijianwong"},"content":"     * @param userInput The user\u0027s input in the form of \"event {description} /from {yyyy-MM-dd} /to {yyyy-MM-dd}\".","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"weijianwong"},"content":"     * @return An {@code Event} task.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"weijianwong"},"content":"     * @throws EmptyEventException If the description, start date, or end date is missing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidDateException If the provided date format is invalid.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"weijianwong"},"content":"    public Task createEvent(String userInput) throws EmptyEventException, InvalidDateException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"weijianwong"},"content":"        if (userInput.length() \u003c\u003d 6) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"weijianwong"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"weijianwong"},"content":"        String[] parts \u003d userInput.substring(6).split(\" /from | /to \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"weijianwong"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"weijianwong"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"weijianwong"},"content":"        String description \u003d parts[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"weijianwong"},"content":"        String fromString \u003d parts[1];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"weijianwong"},"content":"        String toString \u003d parts[2];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"weijianwong"},"content":"            LocalDate from \u003d LocalDate.parse(fromString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"weijianwong"},"content":"            LocalDate to \u003d LocalDate.parse(toString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"weijianwong"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"weijianwong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"weijianwong"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"weijianwong"},"content":"     * Extracts the keyword for searching tasks from the user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"weijianwong"},"content":"     * @param userInput The user\u0027s input in the form of \"find {keyword}\" or \"searchdate {yyyy-MM-dd}\".","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"weijianwong"},"content":"     * @return The keyword or date string to be used in the search.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidInputException If the input is invalid or the keyword is missing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"weijianwong"},"content":"    public String findKeyword(String userInput) throws InvalidInputException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"weijianwong"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"weijianwong"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"weijianwong"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"weijianwong"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"weijianwong"},"content":"        String argument \u003d parts[1].trim(); // Extract the argument after \"searchdate \" or \"find \"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"weijianwong"},"content":"        assert command.equalsIgnoreCase(\"searchdate\")","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"weijianwong"},"content":"                || command.equalsIgnoreCase(\"find\") : \"Invalid command: \" + command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"weijianwong"},"content":"        return argument;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"weijianwong"},"content":"     * Extracts and parses a date from the user input for the search date command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"weijianwong"},"content":"     * @param userInput The user\u0027s input in the form of \"searchdate {yyyy-MM-dd}\".","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"weijianwong"},"content":"     * @return The {@code LocalDate} object representing the date.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidDateException If the provided date format is invalid.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidInputException If the date is missing in the input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"weijianwong"},"content":"    public LocalDate findDate(String userInput) throws InvalidDateException, InvalidInputException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"weijianwong"},"content":"        String arg \u003d findKeyword(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"weijianwong"},"content":"        return parseDate(arg);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"weijianwong"},"content":"     * Parses the user input and returns the corresponding {@code Command} object.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"weijianwong"},"content":"     * @param userInput The user\u0027s input string representing a command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"weijianwong"},"content":"     * @return A {@code Command} object based on the user\u0027s input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException If the user input is invalid or does not match any command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"weijianwong"},"content":"    public Command parseUserCommand(String userInput) throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"weijianwong"},"content":"        CommandEnum commandEnum \u003d CommandEnum.fromString(userInput);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"weijianwong"},"content":"        Command command \u003d switch (commandEnum) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"weijianwong"},"content":"        case BYE -\u003e new ByeCommand();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"weijianwong"},"content":"        case LIST -\u003e new ListCommand();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"weijianwong"},"content":"        case MARK -\u003e new MarkTasksCommand(parseTaskIndices(userInput));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"weijianwong"},"content":"        case UNMARK -\u003e new UnmarkTasksCommand(parseTaskIndices(userInput));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"weijianwong"},"content":"        case DELETE -\u003e new DeleteTasksCommand(parseTaskIndices(userInput));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"weijianwong"},"content":"        case TODO -\u003e new AddTaskCommand(createTodo(userInput));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"weijianwong"},"content":"        case DEADLINE -\u003e new AddTaskCommand(createDeadline(userInput));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"weijianwong"},"content":"        case EVENT -\u003e new AddTaskCommand(createEvent(userInput));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"weijianwong"},"content":"        case FIND -\u003e new FindTasksCommand(findKeyword(userInput));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"weijianwong"},"content":"        case SEARCHDATE -\u003e new SearchDateCommand(findDate(userInput));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"weijianwong"},"content":"        default -\u003e throw new InvalidInputException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"weijianwong"},"content":"        };","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"weijianwong"},"content":"        return command;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":242}},{"path":"src/main/java/bobby/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.storage;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.io.File;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidTaskException;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Event;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Todo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":" * The {@code Storage} class manages reading and writing tasks to and from a file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":" * It ensures that the tasks in a {@code TaskList} can be saved persistently and","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":" * loaded back when the program is restarted.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":" * Tasks are saved in a text format, with each line representing a task\u0027s type, status,","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":" * description, and any relevant dates (such as deadlines or event times).","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":" * If the specified file does not exist, it is created automatically.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"public class Storage {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"    private final String filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * Constructs a {@code Storage} object that reads from and writes to the specified file path.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     * @param filePath the path of the file where tasks are stored","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"     * Writes the tasks to the file using the provided FileWriter.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"     * @param writer the {@code FileWriter} object used to write the tasks","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"     * @param tasks  the {@code TaskList} containing the tasks to be written","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"    private void writeTasksToFile(FileWriter writer, TaskList tasks) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"        tasks.getTasks().forEach(task -\u003e {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"            try {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"                writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"                System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"        });","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"        System.out.println(\"Tasks successfully saved to file.\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"     * Saves the list of tasks to a file.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"     * @param tasks the {@code TaskList} containing the tasks to be saved","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"            writeTasksToFile(writer, tasks);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"            System.out.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"     * Creates a new file and its parent directories if they do not exist.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"     * @param file the file to create","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"    private void createFile(File file) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"            file.createNewFile();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"            System.out.println(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"     * Parses a line from the file into a {@code Task} object.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"     * The line is split into its components, and a task is created based on its type and details.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"     * If the task cannot be parsed, an {@code InvalidTaskException} is thrown.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"     * @param line the string representing the task in the file","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"     * @return the corresponding {@code Task} object","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if the task cannot be parsed","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"    private Task parseTask(String line) throws InvalidTaskException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weijianwong"},"content":"        boolean isDone \u003d parts[1].equals(\"true\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weijianwong"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"        Task task \u003d createTask(taskType, parts, description);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"        if (isDone) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"            task.markTask();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"        return task;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"     * Creates a {@code Task} object based on the provided type and details.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"     * If the type corresponds to a {@code Todo}, {@code Deadline}, or {@code Event}, the task is created","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"     * accordingly with the correct information.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"     * @param taskType    the type of the task (T, D, E)","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"     * @param parts       the components of the task string from the file","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"     * @return the created {@code Task} object","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if the task type is invalid","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weijianwong"},"content":"    private Task createTask(String taskType, String[] parts, String description) throws InvalidTaskException {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weijianwong"},"content":"        switch (taskType) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weijianwong"},"content":"        case \"T\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weijianwong"},"content":"            return new Todo(description);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weijianwong"},"content":"        case \"D\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weijianwong"},"content":"            LocalDate by \u003d LocalDate.parse(parts[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"weijianwong"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weijianwong"},"content":"        case \"E\":","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weijianwong"},"content":"            LocalDate from \u003d LocalDate.parse(parts[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"weijianwong"},"content":"            LocalDate to \u003d LocalDate.parse(parts[4], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"weijianwong"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"weijianwong"},"content":"        default:","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weijianwong"},"content":"            throw new InvalidTaskException(\"Unable to create task. Please check your the file structure.\");","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"weijianwong"},"content":"     * Loads tasks from the file into a {@code TaskList}.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"weijianwong"},"content":"     * If the file does not exist, it is created, and an empty task list is returned.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"weijianwong"},"content":"     * If an error occurs during loading, an error message is displayed.","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"weijianwong"},"content":"     * @return a {@code TaskList} containing the loaded tasks, or an empty list if the file does not exist","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"weijianwong"},"content":"    public TaskList loadTasks() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"weijianwong"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"weijianwong"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"weijianwong"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"weijianwong"},"content":"            createFile(file);","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"weijianwong"},"content":"            return tasks;","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"weijianwong"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"weijianwong"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"weijianwong"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"weijianwong"},"content":"                tasks.add(parseTask(line));","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"weijianwong"},"content":"        } catch (IOException | InvalidTaskException e) {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"weijianwong"},"content":"            System.out.println(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"weijianwong"},"content":"        return tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":160}},{"path":"src/main/java/bobby/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.tasklist;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidTaskException;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Deadline;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Event;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Todo;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" * The {@code TaskList} class represents a list of tasks in the Bobby application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":" * It provides methods to add, remove, and retrieve tasks, check the list\u0027s size and emptiness,","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":" * and find tasks by date. The list can contain various types of tasks such as","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":" * {@link Deadline}, {@link Event}, and {@link Todo} objects.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"public class TaskList {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    public TaskList() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if the task already exists in the list","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"    public void add(Task task) throws InvalidTaskException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"        assert task !\u003d null : \"Cannot add a null task\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"        if (isDuplicate(task)) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"            throw new InvalidTaskException(\"Task already exists: \" + task.getDescription());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"        tasks.add(task);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"     * Retrieves a task from the list by its index.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"     * @param index the index of the task to retrieve","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"     * @return the task at the specified index","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskNumberException if the index is out of bounds","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"    public Task get(int index) throws InvalidTaskNumberException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"        assert index \u003e\u003d 0 : \"Index cannot be less than 0: \" + index;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"     * Removes a task from the list by its index.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"     * @param index the index of the task to remove","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"     * @return the removed task","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskNumberException if the index is out of bounds","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"    public Task remove(int index) throws InvalidTaskNumberException {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"        assert index \u003e\u003d 0 : \"Index cannot be less than 0: \" + index;","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"            return tasks.remove(index);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"     * Checks if a task is already in the list using only the description of the task.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"     * @param task The task to check for duplicates.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"     * @return true if the task already exists, false otherwise.","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"    public boolean isDuplicate(Task task) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"            if (t.getDescription().equals(task.getDescription())) {","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"                return true;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"        return false;","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"     * @return the size of the task list","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weijianwong"},"content":"    public int size() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weijianwong"},"content":"        return tasks.size();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"     * @return {@code true} if the task list is empty, otherwise {@code false}","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"     * @return the list of tasks","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weijianwong"},"content":"        return tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weijianwong"},"content":"     * Finds tasks that are associated with a specific date.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weijianwong"},"content":"     * This includes tasks with deadlines on the date and events happening on the date.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weijianwong"},"content":"     * @param date The date to search for in tasks.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"weijianwong"},"content":"     * @return An ArrayList of tasks that match the date.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weijianwong"},"content":"    public ArrayList\u003cTask\u003e findTasksByDate(LocalDate date) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"weijianwong"},"content":"        assert date !\u003d null : \"Date must not be null\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"weijianwong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weijianwong"},"content":"            if (task instanceof Deadline \u0026\u0026 task.isOnDate(date)) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"weijianwong"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"weijianwong"},"content":"            } else if (task instanceof Event \u0026\u0026 task.isOnDate(date)) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"weijianwong"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"weijianwong"},"content":"        return matchingTasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"weijianwong"},"content":"     * Finds tasks containing the specified keyword in their description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"weijianwong"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"weijianwong"},"content":"     * @return An ArrayList of tasks that contain the keyword in their description.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"weijianwong"},"content":"    public ArrayList\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"weijianwong"},"content":"        assert keyword !\u003d null : \"Keyword must not be null\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"weijianwong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"weijianwong"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"weijianwong"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"weijianwong"},"content":"        return matchingTasks;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"weijianwong"},"content":"     * Retrieves tasks based on the provided array of string indices.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"weijianwong"},"content":"     * @param indices The array of string indices for tasks to retrieve.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"weijianwong"},"content":"     * @return An {@code ArrayList} of tasks corresponding to the provided indices.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskNumberException if any index is invalid or out of bounds.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"weijianwong"},"content":"    public ArrayList\u003cTask\u003e getTasksFromIndices(String[] indices) throws InvalidTaskNumberException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e tasksFromIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"weijianwong"},"content":"        for (String indexStr : indices) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"weijianwong"},"content":"            try {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"weijianwong"},"content":"                int index \u003d Integer.parseInt(indexStr.trim()) - 1;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"weijianwong"},"content":"                Task task \u003d get(index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"weijianwong"},"content":"                tasksFromIndices.add(task);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"weijianwong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"weijianwong"},"content":"                throw new InvalidTaskNumberException();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"weijianwong"},"content":"        return tasksFromIndices;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"weijianwong"},"content":"     * Marks or unmarks multiple tasks based on the provided indices.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"weijianwong"},"content":"     * @param isMarking a boolean indicating whether to mark (true) or unmark (false) the tasks","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"weijianwong"},"content":"     * @param tasksToHandle an ArrayList of tasks to be marked or unmarked","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"weijianwong"},"content":"    public void markMultipleTasks(boolean isMarking, ArrayList\u003cTask\u003e tasksToHandle) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"weijianwong"},"content":"        for (Task task : tasksToHandle) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"weijianwong"},"content":"            if (isMarking) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"weijianwong"},"content":"                task.markTask();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"weijianwong"},"content":"            } else {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"weijianwong"},"content":"                task.unmarkTask();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"weijianwong"},"content":"     * Deletes multiple tasks from the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"weijianwong"},"content":"     * The tasks to be deleted are provided in the form of an {@code ArrayList}.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"weijianwong"},"content":"     * If a task does not exist in the list, it will be skipped.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"weijianwong"},"content":"     * @param tasksToDelete the {@code ArrayList} of tasks to delete","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"weijianwong"},"content":"    public void deleteMultipleTasks(ArrayList\u003cTask\u003e tasksToDelete) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cInteger\u003e indicesToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"weijianwong"},"content":"        for (Task taskToDelete : tasksToDelete) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"weijianwong"},"content":"            int index \u003d tasks.indexOf(taskToDelete);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"weijianwong"},"content":"            if (index !\u003d -1) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"weijianwong"},"content":"                indicesToRemove.add(index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"weijianwong"},"content":"            }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"weijianwong"},"content":"        // Sort the indices in reverse order to avoid shifting issues while removing","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"weijianwong"},"content":"        indicesToRemove.sort((a, b) -\u003e b - a);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"weijianwong"},"content":"        // Remove tasks by their indices","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"weijianwong"},"content":"        for (int index : indicesToRemove) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"weijianwong"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":223}},{"path":"src/main/java/bobby/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":" * Represents a Deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":" * A Deadline is a type of task that needs to be completed by a specific date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"    private LocalDate by;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new Deadline task with the given description and due date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"     * @param by          The date by which the task needs to be completed.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     * The format includes the type of task, the output of the Task\u0027s toString method,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"     * and the due date formatted as \"MMM dd yyyy\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"     * @return A string in the format \"[D][statusIcon] description (by: due_date)\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of the Deadline task formatted for saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"     * The format is \"D | isDone | description | due_date\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"        return \"D\" + \" \" + super.toFileString() + \" | \" + this.by;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"     * Checks if the Deadline is due on the given date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"     * @param date The date to check.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"     * @return True if the task is due on the given date; otherwise, false.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"        return by.equals(date);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"weijianwong":59}},{"path":"src/main/java/bobby/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":" * Represents an Event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":" * An Event is a type of task that occurs over a specified period, with a start date and an end date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"    private LocalDate from;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"    private LocalDate to;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new Event task with the given description, start date, and end date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"     * @param from        The start date of the Event.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"     * @param to          The end date of the Event.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"     * The format includes the type of task, the output of the Task\u0027s toString method,","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"     * and the start and end dates formatted as \"MMM dd yyyy\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"     * @return A string in the format \"[E][statusIcon] description (from: start_date to: end_date)\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of the Event task formatted for saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"     * The format is \"E | isDone | description | start_date | end_date\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"        return \"E\" + \" \" + super.toFileString() + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"     * Checks if the Event occurs on the given date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"     * @param date The date to check.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"     * @return True if the Event starts or ends on the given date; otherwise, false.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"        return (from.equals(date) || to.equals(date));","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"weijianwong":61}},{"path":"src/main/java/bobby/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":" * The task can be marked as done or undone and can provide","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":" * formatted string representations for displaying or saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"public class Task {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"    private String description;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"    private boolean isDone;","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"     * Returns the status icon representing whether the task is done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"     * @return \"X\" if the task is done, otherwise \" \".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"    public String getDescription() {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"        return this.description;","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"    public void markTask() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"     * Unmarks the task, setting it as not done.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of the task, including its status icon","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"     * and description, formatted for display.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"     * @return A string in the format \"[statusIcon] description\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"    public String toString() {","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of the task formatted for saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"     * The format is \"| isDone | description\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"        return String.format(\"| %b | %s\", isDone, this.description);","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"     * Checks if the task is associated with the given date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"     * Default implementation returns false as a generic task does not have a date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"     * @param date The date to check.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"     * @return False, as a generic task does not have a date.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"        return false;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-22","isFullCredit":false}],"authorContributionMap":{"weijianwong":89}},{"path":"src/main/java/bobby/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.tasks;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":" * Represents a Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":" * A Todo is a type of task with a description but without any specific time constraints.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"        super(description);","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"     * The format includes the type of task and the output of the Task\u0027s toString method.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"     * @return A string in the format \"[T][statusIcon] description\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    public String toString() {","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of the Todo task formatted for saving to a file.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"     * The format is \"T | isDone | description\".","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     * @return A string formatted for file storage.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"    @Override","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"        return \"T\" + \" \" + super.toFileString();","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"weijianwong":39}},{"path":"src/main/java/bobby/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.ui;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":" * The {@code Ui} class handles all user interactions, including displaying messages","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":" * to the user and reading input from the console. It serves as the interface between","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":" * the user and the application.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"public class Ui {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"     * Constructs a new {@code Ui} object with a {@code Scanner} for reading user input.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"    public Ui() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"     * Prints out the response.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"     * @param response the response of the chatbot.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"    public void showResponse(String response) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"        System.out.println(response);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"    public void showGreeting() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"        System.out.println(getGreetingMessage());","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"     * Returns the greeting message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"     * @return the greeting message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"        return \"Hello I\u0027m Bobby\\nWhat can I do for you today?\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"     * Returns the exit message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"     * @return the exit message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"    public String getExitMessage() {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"     * Reads a command input from the user.","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"     * @return the command entered by the user","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"    public String readCommand() {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"     * Returns a message indicating that a task has been added successfully.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"     * @param task the task that was added","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"     * @param size the current number of tasks in the list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"     * @return the task added message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"    public String getTaskAddedMessage(Task task, int size) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"        return String.format(\"Task added successfully:\\n  %s\\nNow you have %d tasks in the list.\", task, size);","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"     * Returns a message indicating that the specified ArrayList of tasks have been deleted successfully.","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"     * @param tasks the ArrayList of tasks that were deleted","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"     * @param size the current number of tasks remaining in the list","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"     * @return the task deleted message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"    public String getTaskDeletedMessage(ArrayList\u003cTask\u003e tasks, int size) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"            return \"No tasks to be deleted.\";","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"        StringBuilder message \u003d new StringBuilder(\"Task removed successfully:\\n\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"            message.append(\" - \").append(task).append(\"\\n\");","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"        message.append(String.format(\"Now you have %d tasks in the list.\", size));","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weijianwong"},"content":"        return message.toString();","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"     * Returns a message indicating that multiple tasks have been marked as done.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weijianwong"},"content":"     * @param tasks the tasks that were marked as done","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"     * @return the tasks marked message","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"    public String getTaskMarkedMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"            return \"No tasks to mark as done.\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"        StringBuilder message \u003d new StringBuilder(\"Nice! I\u0027ve marked these tasks as done:\\n\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"            message.append(\" - \").append(task).append(\"\\n\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"        return message.toString();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weijianwong"},"content":"     * Returns a message indicating that multiple tasks have been marked as not done.","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weijianwong"},"content":"     * @param tasks the tasks that were marked as not done","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weijianwong"},"content":"     * @return the tasks unmarked message","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weijianwong"},"content":"    public String getTaskUnmarkedMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"weijianwong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weijianwong"},"content":"            return \"No tasks to mark as not done.\";","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"weijianwong"},"content":"        StringBuilder message \u003d new StringBuilder(\"OK, I\u0027ve marked these tasks as not done yet:\\n\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"weijianwong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"weijianwong"},"content":"            message.append(\" - \").append(task).append(\"\\n\");","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"weijianwong"},"content":"        return message.toString();","lastModifiedDate":"2024-09-07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of all tasks in the task list.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"weijianwong"},"content":"     * @param taskList the list of tasks to be displayed","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"weijianwong"},"content":"     * @return the string representation of the task list","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskNumberException if an invalid task number is accessed","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"weijianwong"},"content":"    public String getTasksList(TaskList taskList) throws InvalidTaskNumberException {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"weijianwong"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"weijianwong"},"content":"            return \"No tasks added to the list yet.\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"weijianwong"},"content":"        StringBuilder tasksDisplay \u003d new StringBuilder();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"weijianwong"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"weijianwong"},"content":"            tasksDisplay.append(String.format(\"%d.%s\\n\", i + 1, taskList.get(i)));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"weijianwong"},"content":"        return tasksDisplay.toString().trim();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"weijianwong"},"content":"     * Returns an error message.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"weijianwong"},"content":"     * @param message the error message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"weijianwong"},"content":"     * @return the formatted error message","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"weijianwong"},"content":"    public String getErrorMessage(String message) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"weijianwong"},"content":"        return \"OOPS!!! \" + message;","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"weijianwong"},"content":"     * Returns a string representation of tasks that match the search criteria.","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"weijianwong"},"content":"     * @param tasks An ArrayList of tasks that match the search criteria.","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"weijianwong"},"content":"     * @return the string representation of the found tasks","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"weijianwong"},"content":"    public String getFoundTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"weijianwong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"weijianwong"},"content":"            return \"No tasks found.\";","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-31","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"weijianwong"},"content":"        StringBuilder foundTasksDisplay \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"weijianwong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"weijianwong"},"content":"            foundTasksDisplay.append(String.format(\"\\n%d.%s\", i + 1, tasks.get(i)));","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"weijianwong"},"content":"        return foundTasksDisplay.toString();","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-28","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-28","isFullCredit":false}],"authorContributionMap":{"weijianwong":180}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/dialog-box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"            \u003cInsets left\u003d\"7.0\" right\u003d\"7.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"            \u003cInsets bottom\u003d\"6.0\" left\u003d\"6.0\" right\u003d\"6.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"120.0\" fitWidth\u003d\"120.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"weijianwong":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main.css\" xmlns\u003d\"http://javafx.com/javafx/22\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bobby.MainWindow\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-09-04","isFullCredit":false}],"authorContributionMap":{"weijianwong":19}},{"path":"src/test/java/bobby/parser/TestParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.parser;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"// Static imports","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"import bobby.command.AddTaskCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"import bobby.command.ByeCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"import bobby.command.CommandEnum;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"import bobby.command.DeleteTasksCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"import bobby.command.ListCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"import bobby.command.MarkTasksCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"import bobby.command.UnmarkTasksCommand;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.BobbyException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.EmptyDeadlineException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.EmptyEventException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.EmptyTodoException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidDateException;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidInputException;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Deadline;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Event;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Todo;","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":" * Test class for the Parser.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"public class TestParser {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"    private Parser parser;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"     * Sets up a new {@code Parser} instance before each test.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"    public void setUp() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"     * Tests parsing of a command string to a {@code CommandEnum}.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the correct enum constant is returned for a given command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidInputException if the command string cannot be parsed","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"    public void testParseCommand() throws InvalidInputException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.TODO, parser.parseCommand(\"todo\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.BYE, parser.parseCommand(\"bye\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.LIST, parser.parseCommand(\"list\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.MARK, parser.parseCommand(\"mark\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.UNMARK, parser.parseCommand(\"unmark\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.DELETE, parser.parseCommand(\"delete\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.DEADLINE, parser.parseCommand(\"deadline\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.EVENT, parser.parseCommand(\"event\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.FIND, parser.parseCommand(\"find\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"        assertEquals(CommandEnum.SEARCHDATE, parser.parseCommand(\"searchdate\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"     * Tests parsing of task indices from a command string.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the correct task indices are extracted from the input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidInputException if the command string cannot be parsed","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"    public void testParseTaskIndices() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"        String[] indices \u003d parser.parseTaskIndices(\"mark 1 2 3\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"        assertArrayEquals(new String[]{\"1\", \"2\", \"3\"}, indices);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"     * Tests parsing of a valid date input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the correct {@code LocalDate} object is returned for special keywords","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"     * and absolute dates.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidDateException if the date input is invalid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"    public void testParseDate() throws InvalidDateException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"        assertEquals(LocalDate.now(), parser.parseDate(\"today\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"        assertEquals(LocalDate.now().plusDays(1), parser.parseDate(\"tomorrow\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"        assertEquals(LocalDate.of(2024, 9, 15), parser.parseDate(\"2024-09-15\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"     * Tests parsing of an invalid date input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"     * Verifies that an {@code InvalidDateException} is thrown for an incorrect date format.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weijianwong"},"content":"    public void testParseDate_invalidDate() {","lastModifiedDate":"2024-09-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weijianwong"},"content":"        assertThrows(InvalidDateException.class, () -\u003e parser.parseDate(\"invalid-date\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"     * Tests creation of a {@code Todo} task from user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weijianwong"},"content":"     * Verifies that a {@code Todo} task is created with the correct description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"     * @throws EmptyTodoException if the description is missing","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"    public void testCreateTodo() throws EmptyTodoException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"        Task todo \u003d parser.createTodo(\"todo Read book\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"        assertEquals(new Todo(\"Read book\").toString(), todo.toString());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"     * Tests creation of a {@code Deadline} task from user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"     * Verifies that a {@code Deadline} task is created with the correct description and date.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weijianwong"},"content":"     * @throws EmptyDeadlineException if the description or deadline is missing","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidDateException if the date format is invalid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weijianwong"},"content":"    public void testCreateDeadline() throws EmptyDeadlineException, InvalidDateException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weijianwong"},"content":"        Task deadline \u003d parser.createDeadline(\"deadline Submit report /by 2024-09-15\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weijianwong"},"content":"        assertEquals(new Deadline(\"Submit report\", LocalDate.of(2024, 9, 15)).toString(),","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"weijianwong"},"content":"                deadline.toString());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"weijianwong"},"content":"     * Tests creation of an {@code Event} task from user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"weijianwong"},"content":"     * Verifies that an {@code Event} task is created with the correct description, start date, and end date.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"weijianwong"},"content":"     * @throws EmptyEventException if the description, start date, or end date is missing","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidDateException if the date format is invalid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"weijianwong"},"content":"    public void testCreateEvent() throws EmptyEventException, InvalidDateException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"weijianwong"},"content":"        Task event \u003d parser.createEvent(\"event Team meeting /from 2024-09-14 /to 2024-09-15\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"weijianwong"},"content":"        assertEquals(new Event(\"Team meeting\", LocalDate.of(2024, 9, 14),","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"weijianwong"},"content":"                LocalDate.of(2024, 9, 15)).toString(), event.toString());","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"weijianwong"},"content":"     * Tests creation of a {@code Todo} task with an empty description.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"weijianwong"},"content":"     * Verifies that an {@code EmptyTodoException} is thrown if the description is missing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"weijianwong"},"content":"    public void testCreateTodo_empty() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"weijianwong"},"content":"        assertThrows(EmptyTodoException.class, () -\u003e parser.createTodo(\"todo \"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"weijianwong"},"content":"     * Tests creation of a {@code Deadline} task with missing date.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"weijianwong"},"content":"     * Verifies that an {@code EmptyDeadlineException} is thrown if the date is missing.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"weijianwong"},"content":"     * @throws EmptyDeadlineException if the description or deadline is missing","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"weijianwong"},"content":"    public void testCreateDeadline_missingDate() throws EmptyDeadlineException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"weijianwong"},"content":"        assertThrows(EmptyDeadlineException.class, () -\u003e parser.createDeadline(\"deadline Submit report /by \"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"weijianwong"},"content":"     * Tests creation of an {@code Event} task with an invalid date format.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"weijianwong"},"content":"     * Verifies that an {@code InvalidDateException} is thrown if the date format is incorrect.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"weijianwong"},"content":"     * @throws EmptyEventException if the description, start date, or end date is missing","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"weijianwong"},"content":"    public void testCreateEvent_invalidDate() throws EmptyEventException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"weijianwong"},"content":"        assertThrows(InvalidDateException.class, () -\u003e","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"weijianwong"},"content":"                parser.createEvent(\"event Team meeting /from 2024-09-14 /to invalid-date\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"weijianwong"},"content":"     * Tests extracting a keyword for search from user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the correct keyword or date string is extracted for searching.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidInputException if the input is invalid or the keyword is missing","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"weijianwong"},"content":"    public void testFindKeyword() throws InvalidInputException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"weijianwong"},"content":"        assertEquals(\"important\", parser.findKeyword(\"find important\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"weijianwong"},"content":"        assertEquals(\"2024-09-15\", parser.findKeyword(\"searchdate 2024-09-15\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"weijianwong"},"content":"     * Tests finding a date from user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the correct {@code LocalDate} object is extracted for search date commands.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidDateException if the provided date format is invalid","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidInputException if the date is missing in the input","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"weijianwong"},"content":"    public void testFindDate() throws InvalidDateException, InvalidInputException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"weijianwong"},"content":"        assertEquals(LocalDate.of(2024, 9, 15), parser.findDate(\"searchdate 2024-09-15\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"weijianwong"},"content":"     * Tests parsing a user command string to a {@code Command} object.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the correct {@code Command} object is created based on the user input.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException if the user input is invalid or does not match any command","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"weijianwong"},"content":"    public void testParseUserCommand() throws BobbyException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"weijianwong"},"content":"        assertInstanceOf(ByeCommand.class, parser.parseUserCommand(\"bye\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"weijianwong"},"content":"        assertInstanceOf(ListCommand.class, parser.parseUserCommand(\"list\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"weijianwong"},"content":"        assertInstanceOf(MarkTasksCommand.class, parser.parseUserCommand(\"mark 0\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"weijianwong"},"content":"        assertInstanceOf(UnmarkTasksCommand.class, parser.parseUserCommand(\"unmark 0\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"weijianwong"},"content":"        assertInstanceOf(AddTaskCommand.class, parser.parseUserCommand(\"todo hello\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"weijianwong"},"content":"        assertInstanceOf(AddTaskCommand.class, parser.parseUserCommand(\"deadline hello /by 2001-12-19\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"weijianwong"},"content":"        assertInstanceOf(AddTaskCommand.class, parser.parseUserCommand(\"event hello /from 2001-02-19 /to 2001-02-20\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"weijianwong"},"content":"        assertInstanceOf(DeleteTasksCommand.class, parser.parseUserCommand(\"delete 1 2 3\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"weijianwong"},"content":"     * Tests parsing of an invalid user command.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"weijianwong"},"content":"     * Verifies that an {@code InvalidInputException} is thrown if the command is invalid.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"weijianwong"},"content":"     * @throws BobbyException if the user input is invalid or does not match any command","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"weijianwong"},"content":"    public void testParseUserCommandInvalid() {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"weijianwong"},"content":"        assertThrows(InvalidInputException.class, () -\u003e parser.parseUserCommand(\"invalid command\"));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"weijianwong":227}},{"path":"src/test/java/bobby/storage/TestStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"// Static imports","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"// Java standard library imports","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import java.io.File;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"// Special imports (JUnit library imports)","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"// Project-specific imports","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidTaskException;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":"import bobby.tasklist.TaskList;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Deadline;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Event;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Todo;","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":" * Test class for the Storage class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":" * This class contains unit tests for the methods in the Storage class.","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"public class TestStorage {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"    private static final String TEST_FILE_PATH \u003d \"./src/main/data/test_tasks.txt\";","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"    private Storage storage;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"    // Helper methods","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"    private boolean isFileEmpty(String filePath) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"        return file.exists() \u0026\u0026 file.length() \u003d\u003d 0;","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"    private void writeToFile(String filePath, String content) throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"            writer.write(content);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"    @BeforeEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"    void setUp() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"        storage \u003d new Storage(TEST_FILE_PATH);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"    @AfterEach","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"    void tearDown() throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"        Files.deleteIfExists(Paths.get(TEST_FILE_PATH));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"    void testSaveTasks_emptyTaskList() throws InvalidTaskException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"        taskList.add(new Todo(\"Test\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"        assertTrue(new File(TEST_FILE_PATH).exists(), \"File should exist after saving tasks.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"    void testSaveTasks_nonEmptyTaskList() throws IOException, InvalidTaskException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"        taskList.add(new Todo(\"Read book\"));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"        taskList.add(new Deadline(\"Submit report\", LocalDate.of(2024, 12, 12)));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"        taskList.add(new Event(\"Conference\", LocalDate.of(2024, 12, 15), LocalDate.of(2024, 12, 16)));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"        String content \u003d new String(Files.readAllBytes(Paths.get(TEST_FILE_PATH)));","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"        String expectedContent \u003d \"T | false | Read book\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"                + \"D | false | Submit report | 2024-12-12\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"                + \"E | false | Conference | 2024-12-15 | 2024-12-16\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"        content \u003d normalizeLineEndings(content);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"        expectedContent \u003d normalizeLineEndings(expectedContent);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"        assertEquals(expectedContent, content, \"File content should match the expected output.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"    private String normalizeLineEndings(String input) {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"        return input.replace(\"\\r\\n\", \"\\n\").replace(\"\\r\", \"\\n\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"    void testLoadTasks_emptyFile() {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"        TaskList loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"        assertTrue(loadedTasks.getTasks().isEmpty(), \"Loaded task list should be empty for an empty file.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"    void testLoadTasks_nonEmptyFile() throws IOException {","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weijianwong"},"content":"        String content \u003d \"T | false | Read book\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weijianwong"},"content":"                + \"D | false | Submit report | 2024-12-12\\n\"","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"                + \"E | false | Conference | 2024-12-15 | 2024-12-16\\n\";","lastModifiedDate":"2024-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"        writeToFile(TEST_FILE_PATH, content);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"        TaskList loadedTasks \u003d storage.loadTasks();","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"        assertEquals(3, loadedTasks.getTasks().size(), \"Loaded task list should contain 3 tasks.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"        Task task1 \u003d loadedTasks.getTasks().get(0);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"        assertTrue(task1 instanceof Todo, \"First task should be a Todo.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"        assertEquals(\"[T][ ] Read book\", task1.toString());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"        Task task2 \u003d loadedTasks.getTasks().get(1);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"        assertTrue(task2 instanceof Deadline, \"Second task should be a Deadline.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"        assertEquals(\"[D][ ] Submit report (by: Dec 12 2024)\", task2.toString());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"        Task task3 \u003d loadedTasks.getTasks().get(2);","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"        assertTrue(task3 instanceof Event, \"Third task should be an Event.\");","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weijianwong"},"content":"        assertEquals(\"[E][ ] Conference (from: Dec 15 2024 to: Dec 16 2024)\", task3.toString());","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-08-29","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-08-29","isFullCredit":false}],"authorContributionMap":{"weijianwong":122}},{"path":"src/test/java/bobby/tasklist/TestTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"package bobby.tasklist;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidTaskException;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"import bobby.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Deadline;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Task;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"import bobby.tasks.Todo;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"/**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"weijianwong"},"content":" * Test class for the TaskList class.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":" * This class contains unit tests for the methods in the TaskList class.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"weijianwong"},"content":" */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"weijianwong"},"content":"public class TestTaskList {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"weijianwong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"weijianwong"},"content":"    @BeforeEach","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"weijianwong"},"content":"    public void setup() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"weijianwong"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"weijianwong"},"content":"     * Tests that a task can be successfully added to the task list.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the task list size increases and the task description is correctly stored.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if there is an issue with adding the task","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskNumberException if the task number is invalid during retrieval","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"weijianwong"},"content":"    public void testAddTask_success() throws InvalidTaskException, InvalidTaskNumberException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"weijianwong"},"content":"        Task task \u003d new Todo(\"Test task\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"weijianwong"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"weijianwong"},"content":"        assertEquals(\"Test task\", taskList.get(0).getDescription());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"weijianwong"},"content":"     * Tests that adding a duplicate task to the task list throws an InvalidTaskException.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"weijianwong"},"content":"     * A duplicate task is identified by its description.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if the task already exists in the task list","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"weijianwong"},"content":"    public void testAddTask_duplicateTask() throws InvalidTaskException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"weijianwong"},"content":"        Task task \u003d new Todo(\"Test task\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"weijianwong"},"content":"        // Expect InvalidTaskException when adding the same task again","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"weijianwong"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e taskList.add(task),","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"weijianwong"},"content":"                \"Expected InvalidTaskException to be thrown, but it wasn\u0027t\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"weijianwong"},"content":"     * Tests that a task can be successfully removed from the task list.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the task list becomes empty after removing the task.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if there is an issue with adding the task","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskNumberException if the task index is invalid during removal","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"weijianwong"},"content":"    public void testRemoveTask_success() throws InvalidTaskNumberException, InvalidTaskException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"weijianwong"},"content":"        Task task \u003d new Todo(\"Test task\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"weijianwong"},"content":"        Task removedTask \u003d taskList.remove(0);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"weijianwong"},"content":"        assertEquals(task, removedTask);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"weijianwong"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"weijianwong"},"content":"     * Tests that attempting to remove a task at an invalid index throws an InvalidTaskNumberException.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the exception is thrown when trying to remove a task from an empty list.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"weijianwong"},"content":"    public void testRemoveTask_invalidIndex() {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"weijianwong"},"content":"        try {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"weijianwong"},"content":"            taskList.remove(0);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"weijianwong"},"content":"            fail(\"Expected InvalidTaskNumberException to be thrown\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"weijianwong"},"content":"        } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"weijianwong"},"content":"            // Exception expected","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"weijianwong"},"content":"        }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"weijianwong"},"content":"     * Tests that tasks with a specific date can be found in the task list.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"weijianwong"},"content":"     * Verifies that tasks with a matching deadline date are retrieved.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if there is an issue with adding the task","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"weijianwong"},"content":"    public void testFindTasksByDate() throws InvalidTaskException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"weijianwong"},"content":"        LocalDate date \u003d LocalDate.of(2023, 9, 12);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"weijianwong"},"content":"        Task deadlineTask \u003d new Deadline(\"Submit project\", date);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"weijianwong"},"content":"        taskList.add(deadlineTask);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.findTasksByDate(date);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"weijianwong"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"weijianwong"},"content":"        assertEquals(\"Submit project\", result.get(0).getDescription());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"weijianwong"},"content":"     * Tests that tasks containing a specific keyword in their description can be found.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"weijianwong"},"content":"     * Verifies that tasks matching the keyword are correctly retrieved.","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if there is an issue with adding the task","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"weijianwong"},"content":"    public void testFindTasksByKeyword() throws InvalidTaskException {","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"weijianwong"},"content":"        Task task1 \u003d new Todo(\"Finish homework\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"weijianwong"},"content":"        Task task2 \u003d new Todo(\"Buy groceries\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task1);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task2);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e result \u003d taskList.findTasksByKeyword(\"homework\");","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"weijianwong"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"weijianwong"},"content":"        assertEquals(\"Finish homework\", result.get(0).getDescription());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"weijianwong"},"content":"     * Tests marking multiple tasks as done.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the tasks are correctly marked as done.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if the task cannot be added","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"weijianwong"},"content":"    public void testMarkMultipleTasks() throws InvalidTaskException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"weijianwong"},"content":"        Task task1 \u003d new Todo(\"Read book\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"weijianwong"},"content":"        Task task2 \u003d new Deadline(\"Submit report\", LocalDate.of(2024, 9, 15));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task1);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task2);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e tasksToMark \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"weijianwong"},"content":"        tasksToMark.add(task1);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"weijianwong"},"content":"        tasksToMark.add(task2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"weijianwong"},"content":"        taskList.markMultipleTasks(true, tasksToMark);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"weijianwong"},"content":"        assertEquals(task1.getStatusIcon(), \"X\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"weijianwong"},"content":"        assertEquals(task2.getStatusIcon(), \"X\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"weijianwong"},"content":"    /**","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"weijianwong"},"content":"     * Tests deleting multiple tasks from the task list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"weijianwong"},"content":"     * Verifies that the specified tasks are removed from the list.","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"weijianwong"},"content":"     *","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"weijianwong"},"content":"     * @throws InvalidTaskException if the task cannot be added","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"weijianwong"},"content":"     */","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"weijianwong"},"content":"    @Test","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"weijianwong"},"content":"    public void testDeleteMultipleTasks() throws InvalidTaskException {","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"weijianwong"},"content":"        Task task1 \u003d new Todo(\"Read book\");","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"weijianwong"},"content":"        Task task2 \u003d new Deadline(\"Submit report\", LocalDate.of(2024, 9, 15));","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task1);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"weijianwong"},"content":"        taskList.add(task2);","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"weijianwong"},"content":"        ArrayList\u003cTask\u003e tasksToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"weijianwong"},"content":"        tasksToDelete.add(task1);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"weijianwong"},"content":"        tasksToDelete.add(task2);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"weijianwong"},"content":"        taskList.deleteMultipleTasks(tasksToDelete);","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"weijianwong"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"weijianwong"},"content":"    }","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"weijianwong"},"content":"","lastModifiedDate":"2024-09-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"weijianwong"},"content":"}","lastModifiedDate":"2024-09-13","isFullCredit":false}],"authorContributionMap":{"weijianwong":173}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weijianwong"},"content":"todo read book","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"weijianwong"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"weijianwong"},"content":"unmark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"weijianwong"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"weijianwong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"weijianwong"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"weijianwong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"weijianwong"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"weijianwong"},"content":"mark 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"mark 2","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"weijianwong"},"content":"mark 3","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"weijianwong"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"weijianwong"},"content":"todo","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"weijianwong"},"content":"mark 4","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"weijianwong"},"content":"deadline asdf","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"event asldfkjals","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"weijianwong"},"content":"delete 1","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"delete asdf","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"weijianwong"},"content":"delete 3","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"weijianwong"},"content":"list","lastModifiedDate":"2024-08-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"weijianwong"},"content":"bye","lastModifiedDate":"2024-08-23","isFullCredit":false}],"authorContributionMap":{"weijianwong":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"weijianwong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bobby\\*.java","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"weijianwong"},"content":"java -classpath ..\\bin bobby.Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"weijianwong":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"weijianwong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/bobby/*.java","lastModifiedDate":"2024-09-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"weijianwong"},"content":"java -classpath ../bin bobby.Bobby \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-09-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"weijianwong":2,"-":36}}]
